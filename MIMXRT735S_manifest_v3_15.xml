<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MIMXRT735S" name="MIMXRT735S" brief="This is SDK version 24.12.00 manifest file. It describes the content of the MIMXRT735S and additional settings for tools that support SDK version 24.12.00" format_version="3.15" api_version="2.0.0" configuration="0854dd7193e85113f10b45ef4f405716" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.15.xsd">
  <!--Timestamp (UTC): 2025-01-16 13:00:58.875981-->
  <!--This manifest is generated based on sdk repo commit: TODO-->
  <externalDefinitions>
    <definition extID="fpga_rt700"/>
    <definition extID="hifi4_MIMXRT798S"/>
    <definition extID="hifi1_MIMXRT798S"/>
    <definition extID="ezhv_MIMXRT798S"/>
    <definition extID="hifi1_MIMXRT735S"/>
    <definition extID="ezhv_MIMXRT735S"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso241200" name="MCUXpresso241200" version="24.12.00" revision="871 2025-01-14"/>
  <compilers>
    <compiler id="compiler_armclang" name="armclang" type="armclang"/>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <core_slave_roles_definitions>
    <slave_role id="M33SLAVE" name="Cortex-M33 core1 acts as slave"/>
  </core_slave_roles_definitions>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="24.12.00" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded_10-2021.10" version="13.2.1" full_name="GCC ARM Embedded 10-2021.10" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mdk" name="Keil_MDK" version="5.41" full_name="Keil MDK" compiler="compiler_armclang" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="9.60.3" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="24.12.00" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="mimxrt700evk" name="MIMXRT700-EVK" version="1.0.0" package="MIMXRT798SGFOA">
      <description>i.MX RT700 Evaluation Kit</description>
      <image path="boards/mimxrt700evk" type="image">
        <files mask="mimxrt700evk.png"/>
      </image>
      <memory>
        <memoryBlock id="OCTAL_FLASH_mimxrt700evk" name="OCTAL_FLASH" addr="28000000" size="00800000" type="ExtFlash" access="RO"/>
      </memory>
      <examples>
        <example id="mimxrt700evk_littlefs_shell_cm33_core0" name="littlefs_shell_cm33_core0" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlefs_examples" path="boards/mimxrt700evk/littlefs_examples/littlefs_shell/cm33_core0">
          <external path="boards/mimxrt700evk/littlefs_examples/littlefs_shell/cm33_core0" type="xml">
            <files mask="littlefs_shell_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_psa_crypto_examples_cm33_core0" name="psa_crypto_examples_cm33_core0" brief="PSA Crypto example to demonstrate cipher operation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls3x_examples" path="boards/mimxrt700evk/mbedtls3x_examples/psa_crypto_examples/cm33_core0">
          <external path="boards/mimxrt700evk/mbedtls3x_examples/psa_crypto_examples/cm33_core0" type="xml">
            <files mask="psa_crypto_examples_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mbedtls3x_selftest_cm33_core0" name="mbedtls3x_selftest_cm33_core0" brief="The Mbedtls Crypto SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls3x_examples" path="boards/mimxrt700evk/mbedtls3x_examples/mbedtls3x_selftest/cm33_core0">
          <external path="boards/mimxrt700evk/mbedtls3x_examples/mbedtls3x_selftest/cm33_core0" type="xml">
            <files mask="mbedtls3x_selftest_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_els_pkc_common_cm33_core0" name="els_pkc_common_cm33_core0" brief="The ELS PKC application provides examples which demonstrate usage of common features including PRNG and a crypto library lightweight testing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="els_pkc_examples" path="boards/mimxrt700evk/els_pkc_examples/els_pkc_common/cm33_core0">
          <external path="boards/mimxrt700evk/els_pkc_examples/els_pkc_common/cm33_core0" type="xml">
            <files mask="els_pkc_common_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_els_hash_cm33_core0" name="els_hash_cm33_core0" brief="The ELS PKC application provides examples which demonstrate usage of hash algorithms and a crypto library lightweight testing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="els_pkc_examples" path="boards/mimxrt700evk/els_pkc_examples/els_hash/cm33_core0">
          <external path="boards/mimxrt700evk/els_pkc_examples/els_hash/cm33_core0" type="xml">
            <files mask="els_hash_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_els_symmetric_cm33_core0" name="els_symmetric_cm33_core0" brief="The ELS PKC application provides examples which demonstrate usage of symmetric algorithms and a crypto library lightweight testing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="els_pkc_examples" path="boards/mimxrt700evk/els_pkc_examples/els_symmetric/cm33_core0">
          <external path="boards/mimxrt700evk/els_pkc_examples/els_symmetric/cm33_core0" type="xml">
            <files mask="els_symmetric_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_els_pkc_asymmetric_cm33_core0" name="els_pkc_asymmetric_cm33_core0" brief="The ELS PKC application provides examples which demonstrate usage of asymmetric algorithms and a crypto library lightweight testing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="els_pkc_examples" path="boards/mimxrt700evk/els_pkc_examples/els_pkc_asymmetric/cm33_core0">
          <external path="boards/mimxrt700evk/els_pkc_examples/els_pkc_asymmetric/cm33_core0" type="xml">
            <files mask="els_pkc_asymmetric_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_fmstr_example_usb_cdc_cm33_core0" name="fmstr_example_usb_cdc_cm33_core0" brief="FreeMASTER example using virtual serial communication at USB port and CDC VCOM class. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/mimxrt700evk/freemaster_examples/fmstr_usb_cdc/cm33_core0">
          <external path="boards/mimxrt700evk/freemaster_examples/fmstr_usb_cdc/cm33_core0" type="xml">
            <files mask="fmstr_example_usb_cdc_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_fmstr_example_uart_cm33_core0" name="fmstr_example_uart_cm33_core0" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/mimxrt700evk/freemaster_examples/fmstr_uart/cm33_core0">
          <external path="boards/mimxrt700evk/freemaster_examples/fmstr_uart/cm33_core0" type="xml">
            <files mask="fmstr_example_uart_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_fmstr_example_rtt_cm33_core0" name="fmstr_example_rtt_cm33_core0" brief="FreeMASTER example using Segger RTT communication over J-Link interface. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/mimxrt700evk/freemaster_examples/fmstr_rtt/cm33_core0">
          <external path="boards/mimxrt700evk/freemaster_examples/fmstr_rtt/cm33_core0" type="xml">
            <files mask="fmstr_example_rtt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_fmstr_example_pdbdm_cm33_core0" name="fmstr_example_pdbdm_cm33_core0" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/mimxrt700evk/freemaster_examples/fmstr_pdbdm/cm33_core0">
          <external path="boards/mimxrt700evk/freemaster_examples/fmstr_pdbdm/cm33_core0" type="xml">
            <files mask="fmstr_example_pdbdm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sdio_freertos_cm33_core0" name="sdio_freertos_cm33_core0" brief="The FREERTOS SDIO project is a demonstration program that uses the SDK software. It reads/writes the SDIO card reigister. The purpose of this example is to show how to use SDio driver with freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sdio" path="boards/mimxrt700evk/sdmmc_examples/sdio_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/sdio_freertos/cm33_core0" type="xml">
            <files mask="sdio_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sdio_cm33_core0" name="sdio_cm33_core0" brief="The SDIO project is a demonstration program that uses the SDK software. It reads/writes the SDIO card reigister. The purpose of this example is to show how to use SDio driver and this is a very simple example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples" path="boards/mimxrt700evk/sdmmc_examples/sdio/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/sdio/cm33_core0" type="xml">
            <files mask="sdio_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sdcard_polling_cm33_core0" name="sdcard_polling_cm33_core0" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_polling" path="boards/mimxrt700evk/sdmmc_examples/sdcard_polling/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/sdcard_polling/cm33_core0" type="xml">
            <files mask="sdcard_polling_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sdcard_interrupt_cm33_core0" name="sdcard_interrupt_cm33_core0" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_interrupt" path="boards/mimxrt700evk/sdmmc_examples/sdcard_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/sdcard_interrupt/cm33_core0" type="xml">
            <files mask="sdcard_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sdcard_freertos_cm33_core0" name="sdcard_freertos_cm33_core0" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_freertos" path="boards/mimxrt700evk/sdmmc_examples/sdcard_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/sdcard_freertos/cm33_core0" type="xml">
            <files mask="sdcard_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sdcard_fatfs_freertos_cm33_core0" name="sdcard_fatfs_freertos_cm33_core0" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs_freertos" path="boards/mimxrt700evk/sdmmc_examples/sdcard_fatfs_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/sdcard_fatfs_freertos/cm33_core0" type="xml">
            <files mask="sdcard_fatfs_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sdcard_fatfs_cm33_core0" name="sdcard_fatfs_cm33_core0" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs" path="boards/mimxrt700evk/sdmmc_examples/sdcard_fatfs/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/sdcard_fatfs/cm33_core0" type="xml">
            <files mask="sdcard_fatfs_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mmccard_polling_cm33_core0" name="mmccard_polling_cm33_core0" brief="The MMCCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driver andshow how to use polling based transfer API in SDK software driver to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_polling" path="boards/mimxrt700evk/sdmmc_examples/mmccard_polling/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/mmccard_polling/cm33_core0" type="xml">
            <files mask="mmccard_polling_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mmccard_interrupt_cm33_core0" name="mmccard_interrupt_cm33_core0" brief="The MMCCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driver andshow how to use interrupt based transfer API in SDK software driver to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_interrupt" path="boards/mimxrt700evk/sdmmc_examples/mmccard_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/mmccard_interrupt/cm33_core0" type="xml">
            <files mask="mmccard_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mmccard_freertos_cm33_core0" name="mmccard_freertos_cm33_core0" brief="The MMCCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driverwith FreeRTOS in SDK software to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_freertos" path="boards/mimxrt700evk/sdmmc_examples/mmccard_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/mmccard_freertos/cm33_core0" type="xml">
            <files mask="mmccard_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mmccard_fatfs_freertos_cm33_core0" name="mmccard_fatfs_freertos_cm33_core0" brief="The mmccard FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use mmccard with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_fatfs_freertos" path="boards/mimxrt700evk/sdmmc_examples/mmccard_fatfs_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/mmccard_fatfs_freertos/cm33_core0" type="xml">
            <files mask="mmccard_fatfs_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mmccard_fatfs_cm33_core0" name="mmccard_fatfs_cm33_core0" brief="The MMCCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a MMC card then does &quot;creat directory/read directory/create file/write file/read file&quot; operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to letcard driver has different performance. The purpose of this example is to show how to use MMCCARD driver based FATFS disk in SDK software.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_fatfs" path="boards/mimxrt700evk/sdmmc_examples/mmccard_fatfs/cm33_core0">
          <external path="boards/mimxrt700evk/sdmmc_examples/mmccard_fatfs/cm33_core0" type="xml">
            <files mask="mmccard_fatfs_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_rpmsg_lite_pingpong_rtos_primary_core" name="rpmsg_lite_pingpong_rtos_primary_core" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system. The primary core releases the secondary core from the reset and then the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="mimxrt700evk_rpmsg_lite_pingpong_rtos_secondary_core" path="boards/mimxrt700evk/multicore_examples/rpmsg_lite_pingpong_rtos/cm33_core0">
          <external path="boards/mimxrt700evk/multicore_examples/rpmsg_lite_pingpong_rtos/cm33_core0" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_rpmsg_lite_pingpong_primary_core" name="rpmsg_lite_pingpong_primary_core" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system. The primary core releases the secondary core from the reset and then the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100.&#10;Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="mimxrt700evk_rpmsg_lite_pingpong_secondary_core" path="boards/mimxrt700evk/multicore_examples/rpmsg_lite_pingpong/cm33_core0">
          <external path="boards/mimxrt700evk/multicore_examples/rpmsg_lite_pingpong/cm33_core0" type="xml">
            <files mask="rpmsg_lite_pingpong_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_hello_world_primary_core" name="hello_world_primary_core" brief="The Multicore Hello World demo application demonstrates how to set up projects for individual cores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondary core toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="mimxrt700evk_hello_world_secondary_core" path="boards/mimxrt700evk/multicore_examples/hello_world/cm33_core0">
          <external path="boards/mimxrt700evk/multicore_examples/hello_world/cm33_core0" type="xml">
            <files mask="hello_world_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_two_way_rpc_rpmsg_rtos_primary_core" name="erpc_two_way_rpc_rpmsg_rtos_primary_core" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server).&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="mimxrt700evk_erpc_two_way_rpc_rpmsg_rtos_secondary_core" path="boards/mimxrt700evk/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm33_core0">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm33_core0" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_matrix_multiply_rpmsg_rtos_primary_core" name="erpc_matrix_multiply_rpmsg_rtos_primary_core" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpc transport layer is used in this example application.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="mimxrt700evk_erpc_matrix_multiply_rpmsg_rtos_secondary_core" path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm33_core0">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm33_core0" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_matrix_multiply_rpmsg_primary_core" name="erpc_matrix_multiply_rpmsg_primary_core" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpc transport layer is used in this example application.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="mimxrt700evk_erpc_matrix_multiply_rpmsg_secondary_core" path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_rpmsg/cm33_core0">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_rpmsg/cm33_core0" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_matrix_multiply_mu_rtos_primary_core" name="erpc_matrix_multiply_mu_rtos_primary_core" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit) erpc transport layer is used in this example application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="mimxrt700evk_erpc_matrix_multiply_mu_rtos_secondary_core" path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_mu_rtos/cm33_core0">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_mu_rtos/cm33_core0" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_matrix_multiply_mu_primary_core" name="erpc_matrix_multiply_mu_primary_core" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit) erpc transport layer is used in this example application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="mimxrt700evk_erpc_matrix_multiply_mu_secondary_core" path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_mu/cm33_core0">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_mu/cm33_core0" type="xml">
            <files mask="erpc_matrix_multiply_mu_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_emwin_gui_demo_cm33_core0" name="emwin_gui_demo_cm33_core0" brief="The example demonstrates graphical widgets of the emWin library." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="emwin_examples" path="boards/mimxrt700evk/emwin_examples/emwin_gui_demo/cm33_core0">
          <external path="boards/mimxrt700evk/emwin_examples/emwin_gui_demo/cm33_core0" type="xml">
            <files mask="emwin_gui_demo_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_wireless_uart_cm33_core0" name="wireless_uart_cm33_core0" brief="The Edgefast Bluetooth wireless uart example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/wireless_uart/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/wireless_uart/cm33_core0" type="xml">
            <files mask="wireless_uart_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_wifi_cli_over_ble_wu_cm33_core0" name="wifi_cli_over_ble_wu_cm33_core0" brief="wifi_cli_over_ble_wu" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/wifi_cli_over_ble_wu/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/wifi_cli_over_ble_wu/cm33_core0" type="xml">
            <files mask="wifi_cli_over_ble_wu_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_unicast_media_sender_cm33_core0" name="unicast_media_sender_cm33_core0" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/unicast_media_sender/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/unicast_media_sender/cm33_core0" type="xml">
            <files mask="unicast_media_sender_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_unicast_media_receiver_cm33_core0" name="unicast_media_receiver_cm33_core0" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/unicast_media_receiver/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/unicast_media_receiver/cm33_core0" type="xml">
            <files mask="unicast_media_receiver_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tmap_peripheral_cm33_core0" name="tmap_peripheral_cm33_core0" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/tmap_peripheral/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/tmap_peripheral/cm33_core0" type="xml">
            <files mask="tmap_peripheral_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tmap_central_cm33_core0" name="tmap_central_cm33_core0" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/tmap_central/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/tmap_central/cm33_core0" type="xml">
            <files mask="tmap_central_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_spp_cm33_core0" name="spp_cm33_core0" brief="The Bluetooth BR SPP example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/spp/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/spp/cm33_core0" type="xml">
            <files mask="spp_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edgefast_bluetooth_shell_cm33_core0" name="edgefast_bluetooth_shell_cm33_core0" brief="The Edgefast Bluetooth shell example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/shell/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/shell/cm33_core0" type="xml">
            <files mask="edgefast_bluetooth_shell_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_peripheral_pxr_cm33_core0" name="peripheral_pxr_cm33_core0" brief="The Edgefast Bluetooth pxr example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_pxr/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_pxr/cm33_core0" type="xml">
            <files mask="peripheral_pxr_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_peripheral_ipsp_cm33_core0" name="peripheral_ipsp_cm33_core0" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_ipsp/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_ipsp/cm33_core0" type="xml">
            <files mask="peripheral_ipsp_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_peripheral_ht_cm33_core0" name="peripheral_ht_cm33_core0" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_ht/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_ht/cm33_core0" type="xml">
            <files mask="peripheral_ht_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_peripheral_hps_cm33_core0" name="peripheral_hps_cm33_core0" brief="The Edgefast Bluetooth hps example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_hps/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_hps/cm33_core0" type="xml">
            <files mask="peripheral_hps_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_peripheral_beacon_cm33_core0" name="peripheral_beacon_cm33_core0" brief="The Edgefast Bluetooth beacon example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_beacon/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/peripheral_beacon/cm33_core0" type="xml">
            <files mask="peripheral_beacon_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_handsfree_ag_cm33_core0" name="handsfree_ag_cm33_core0" brief="The Edgefast Bluetooth handsfree AG example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/handsfree_ag/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/handsfree_ag/cm33_core0" type="xml">
            <files mask="handsfree_ag_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_handsfree_cm33_core0" name="handsfree_cm33_core0" brief="The Edgefast Bluetooth bluetooth handsfree example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/handsfree/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/handsfree/cm33_core0" type="xml">
            <files mask="handsfree_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_central_pxm_cm33_core0" name="central_pxm_cm33_core0" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/central_pxm/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/central_pxm/cm33_core0" type="xml">
            <files mask="central_pxm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_central_ipsp_cm33_core0" name="central_ipsp_cm33_core0" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/central_ipsp/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/central_ipsp/cm33_core0" type="xml">
            <files mask="central_ipsp_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_central_ht_cm33_core0" name="central_ht_cm33_core0" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/central_ht/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/central_ht/cm33_core0" type="xml">
            <files mask="central_ht_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_central_hpc_cm33_core0" name="central_hpc_cm33_core0" brief="The Edgefast Bluetooth hpc example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/central_hpc/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/central_hpc/cm33_core0" type="xml">
            <files mask="central_hpc_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_call_terminal_cm33_core0" name="call_terminal_cm33_core0" brief="The Edgefast Bluetooth call terminal example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/call_terminal/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/call_terminal/cm33_core0" type="xml">
            <files mask="call_terminal_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_call_gateway_cm33_core0" name="call_gateway_cm33_core0" brief="The Edgefast Bluetooth call gateway example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/call_gateway/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/call_gateway/cm33_core0" type="xml">
            <files mask="call_gateway_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_broadcast_media_sender_cm33_core0" name="broadcast_media_sender_cm33_core0" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/broadcast_media_sender/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/broadcast_media_sender/cm33_core0" type="xml">
            <files mask="broadcast_media_sender_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_broadcast_media_receiver_cm33_core0" name="broadcast_media_receiver_cm33_core0" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/broadcast_media_receiver/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/broadcast_media_receiver/cm33_core0" type="xml">
            <files mask="broadcast_media_receiver_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_a2dp_source_cm33_core0" name="a2dp_source_cm33_core0" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/a2dp_source/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/a2dp_source/cm33_core0" type="xml">
            <files mask="a2dp_source_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_a2dp_sink_cm33_core0" name="a2dp_sink_cm33_core0" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/mimxrt700evk/edgefast_bluetooth_examples/a2dp_sink/cm33_core0">
          <external path="boards/mimxrt700evk/edgefast_bluetooth_examples/a2dp_sink/cm33_core0" type="xml">
            <files mask="a2dp_sink_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ota_mcuboot_basic_cm33_core0" name="ota_mcuboot_basic_cm33_core0" brief="This projects gives an example of a basic application bootable by MCUBoot" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/mimxrt700evk/ota_examples/ota_mcuboot_basic/cm33_core0">
          <external path="boards/mimxrt700evk/ota_examples/ota_mcuboot_basic/cm33_core0" type="xml">
            <files mask="ota_mcuboot_basic_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mcuboot_opensource_cm33_core0" name="mcuboot_opensource_cm33_core0" brief="MCUboot bootloader" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/mimxrt700evk/ota_examples/mcuboot_opensource/cm33_core0">
          <external path="boards/mimxrt700evk/ota_examples/mcuboot_opensource/cm33_core0" type="xml">
            <files mask="mcuboot_opensource_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_msg_send_receive_primary_core" name="ezhv_msg_send_receive_primary_core" brief="This project shows how to use EZHV message send and receive feature with event manager." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/msg_send_receive/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/msg_send_receive/cm33_core0" type="xml">
            <files mask="ezhv_msg_send_receive_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_linear2tiledYUV_primary_core" name="ezhv_linear2tiledYUV_primary_core" brief="This project shows how to enable EZH-V to convert linearYUV to tiledYUV." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/linear2tiledYUV/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/linear2tiledYUV/cm33_core0" type="xml">
            <files mask="ezhv_linear2tiledYUV_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_flexio_dvp_primary_core" name="ezhv_flexio_dvp_primary_core" brief="This project shows how to enable display video port." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/flexio_dvp/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/flexio_dvp/cm33_core0" type="xml">
            <files mask="ezhv_flexio_dvp_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_blc_detect_primary_core" name="ezhv_blc_detect_primary_core" brief="This project shows how to use EZHV Boolean Logic Combiner with event manager." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/blc_detect/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/blc_detect/cm33_core0" type="xml">
            <files mask="ezhv_blc_detect_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_m2mcopy_primary_core" name="ezhv_m2mcopy_primary_core" brief="This project shows how to use EZHV to copy memory between DTCM and SRAM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/m2mcopy/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/m2mcopy/cm33_core0" type="xml">
            <files mask="ezhv_m2mcopy_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_led_blinky_primary_core" name="ezhv_led_blinky_primary_core" brief="This project shows how to toggle GPIO to driver LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/led_blinky/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/led_blinky/cm33_core0" type="xml">
            <files mask="ezhv_led_blinky_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_heartbeat_primary_core" name="ezhv_heartbeat_primary_core" brief="This project shows how to toggle GPIO to driver LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/heartbeat/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/heartbeat/cm33_core0" type="xml">
            <files mask="ezhv_heartbeat_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_gpio_toggle_primary_core" name="ezhv_gpio_toggle_primary_core" brief="This project shows how to toggle GPIO to driver LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/gpio_toggle/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/gpio_toggle/cm33_core0" type="xml">
            <files mask="ezhv_gpio_toggle_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_arm2ezhv_int_chan_primary_core" name="ezhv_arm2ezhv_int_chan_primary_core" brief="This project shows how to use ARM send interrupt request to EZHV core, the interrupt request will wakeup EZHV core from wait state." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/arm2ezhv_int_chan/cm33_core0">
          <external path="boards/mimxrt700evk/ezhv_examples/arm2ezhv_int_chan/cm33_core0" type="xml">
            <files mask="ezhv_arm2ezhv_int_chan_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_openvg_tiger_freertos_cm33_core0" name="openvg_tiger_freertos_cm33_core0" brief="This example shows how to use the OpenVG component. This application draws a tiger on the screen." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="openvg_examples" path="boards/mimxrt700evk/openvg_examples/openvg_tiger/cm33_core0">
          <external path="boards/mimxrt700evk/openvg_examples/openvg_tiger/cm33_core0" type="xml">
            <files mask="openvg_tiger_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lvgl_demo_benchmark_cm33_core0" name="lvgl_demo_benchmark_cm33_core0" brief="A demo application runs different functions for benchmark test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/mimxrt700evk/lvgl_examples/lvgl_demo_benchmark/cm33_core0">
          <external path="boards/mimxrt700evk/lvgl_examples/lvgl_demo_benchmark/cm33_core0" type="xml">
            <files mask="lvgl_demo_benchmark_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lvgl_demo_benchmark_bm_cm33_core0" name="lvgl_demo_benchmark_bm_cm33_core0" brief="A demo application runs different functions for benchmark test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/mimxrt700evk/lvgl_examples/lvgl_demo_benchmark_bm/cm33_core0">
          <external path="boards/mimxrt700evk/lvgl_examples/lvgl_demo_benchmark_bm/cm33_core0" type="xml">
            <files mask="lvgl_demo_benchmark_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lvgl_demo_widgets_cm33_core0" name="lvgl_demo_widgets_cm33_core0" brief="A demo application to show lvgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/mimxrt700evk/lvgl_examples/lvgl_demo_widgets/cm33_core0">
          <external path="boards/mimxrt700evk/lvgl_examples/lvgl_demo_widgets/cm33_core0" type="xml">
            <files mask="lvgl_demo_widgets_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lvgl_demo_widgets_bm_cm33_core0" name="lvgl_demo_widgets_bm_cm33_core0" brief="A demo application to show lvgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/mimxrt700evk/lvgl_examples/lvgl_demo_widgets_bm/cm33_core0">
          <external path="boards/mimxrt700evk/lvgl_examples/lvgl_demo_widgets_bm/cm33_core0" type="xml">
            <files mask="lvgl_demo_widgets_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lvgl_guider_cm33_core0" name="lvgl_guider_cm33_core0" brief="LittleVGL project used with GUI Guider." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/mimxrt700evk/lvgl_examples/lvgl_guider/cm33_core0">
          <external path="boards/mimxrt700evk/lvgl_examples/lvgl_guider/cm33_core0" type="xml">
            <files mask="lvgl_guider_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lvgl_guider_bm_cm33_core0" name="lvgl_guider_bm_cm33_core0" brief="LVGL project used with GUI Guider on baremetal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/mimxrt700evk/lvgl_examples/lvgl_guider_bm/cm33_core0">
          <external path="boards/mimxrt700evk/lvgl_examples/lvgl_guider_bm/cm33_core0" type="xml">
            <files mask="lvgl_guider_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cube_freertos_cm33_core0" name="cube_freertos_cm33_core0" brief="This example shows how to use the vglite component. This application draws a cube object with each face having high render quality." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/mimxrt700evk/vglite_examples/cube_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/vglite_examples/cube_freertos/cm33_core0" type="xml">
            <files mask="cube_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_vector_freertos_cm33_core0" name="vector_freertos_cm33_core0" brief="This example shows how to use the vglite component. This application draws a polygon vector graphic with high render quality on blue buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/mimxrt700evk/vglite_examples/vector_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/vglite_examples/vector_freertos/cm33_core0" type="xml">
            <files mask="vector_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tiled_freertos_cm33_core0" name="tiled_freertos_cm33_core0" brief="This example shows how to use the vglite component. This application renders a polygon vector graphic with high render quality on a black buffer using blit." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/mimxrt700evk/vglite_examples/tiled_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/vglite_examples/tiled_freertos/cm33_core0" type="xml">
            <files mask="tiled_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tiger_freertos_cm33_core0" name="tiger_freertos_cm33_core0" brief="This example shows how to use the vglite component. This application draws a tiger on the screen." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/mimxrt700evk/vglite_examples/tiger_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/vglite_examples/tiger_freertos/cm33_core0" type="xml">
            <files mask="tiger_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_clock_freertos_cm33_core0" name="clock_freertos_cm33_core0" brief="This example shows how to use the vglite component. This application draws a clock on the screen." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/mimxrt700evk/vglite_examples/clock_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/vglite_examples/clock_freertos/cm33_core0" type="xml">
            <files mask="clock_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_server_matrix_multiply_spi_cm33_core0" name="erpc_server_matrix_multiply_spi_cm33_core0" brief="This example demonstrates usage of eRPC between two boards using SPI transport layer. One board acts like a server and the second as client. When client starts, it generates two randommatrixes and sends them to server. Server then performs matrix multiplication and sendsresult data back to client. Client then prints the result matrix.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https:/github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http:/embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multiprocessor_examples" path="boards/mimxrt700evk/multiprocessor_examples/erpc_server_matrix_multiply_spi/cm33_core0">
          <external path="boards/mimxrt700evk/multiprocessor_examples/erpc_server_matrix_multiply_spi/cm33_core0" type="xml">
            <files mask="erpc_server_matrix_multiply_spi_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_server_matrix_multiply_uart_cm33_core0" name="erpc_server_matrix_multiply_uart_cm33_core0" brief="This example demonstrates usage of eRPC between PC and board using UART transport layer.Board acts like a server and the PC as client. When client starts, it generates two randommatrixes and sends them to server. Server then performs matrix multiplication and sendsresult data back to client. Result matrix is then printed on the PC side.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https:/github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http:/embeddedrpc.github.io PC Side Setup (Python)1. Make sure you have Python installed on your PC2. Install eRPC module to Python by executing setup.py located in: middleware/multicore/erpc/erpc_python3. Install serial module by executing following command in command line: &quot;python -m pip install pyserial&quot;Usage of run_uart.pyusage: run_uart.py [-h] [-c] [-s] [-p PORT] [-b BD]eRPC Matrix Multiply exampleoptional arguments:  -h, --help            show this help message an  -c, --client          Run client  -s, --server          Run server  -p PORT, --port PORT  Serial port  -b BD, --bd BD        Baud rate (default value is 115200)Either server or client has to be selected to runExample:To run PC side as a client with a board connected as a server to COM3 execute:&quot;run_uart.py --client --port COM3&quot;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multiprocessor_examples" path="boards/mimxrt700evk/multiprocessor_examples/erpc_server_matrix_multiply_uart/cm33_core0">
          <external path="boards/mimxrt700evk/multiprocessor_examples/erpc_server_matrix_multiply_uart/cm33_core0" type="xml">
            <files mask="erpc_server_matrix_multiply_uart_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_wifi_test_mode_cm33_core0" name="wifi_test_mode_cm33_core0" brief="wifi_test_mode" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/mimxrt700evk/wifi_examples/wifi_test_mode/cm33_core0">
          <external path="boards/mimxrt700evk/wifi_examples/wifi_test_mode/cm33_core0" type="xml">
            <files mask="wifi_test_mode_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_wifi_ipv4_ipv6_echo_cm33_core0" name="wifi_ipv4_ipv6_echo_cm33_core0" brief="The wifi_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/mimxrt700evk/wifi_examples/wifi_ipv4_ipv6_echo/cm33_core0">
          <external path="boards/mimxrt700evk/wifi_examples/wifi_ipv4_ipv6_echo/cm33_core0" type="xml">
            <files mask="wifi_ipv4_ipv6_echo_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_wifi_cli_cm33_core0" name="wifi_cli_cm33_core0" brief="wifi_cli" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/mimxrt700evk/wifi_examples/wifi_cli/cm33_core0">
          <external path="boards/mimxrt700evk/wifi_examples/wifi_cli/cm33_core0" type="xml">
            <files mask="wifi_cli_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_wifi_webconfig_cm33_core0" name="wifi_webconfig_cm33_core0" brief="Simple AP to Client configuration over web." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/mimxrt700evk/wifi_examples/wifi_webconfig/cm33_core0">
          <external path="boards/mimxrt700evk/wifi_examples/wifi_webconfig/cm33_core0" type="xml">
            <files mask="wifi_webconfig_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_wifi_setup_cm33_core0" name="wifi_setup_cm33_core0" brief="The wifi_setup demo implements a simple Wi-Fi station setup. The application will automatically scan local wireless networks at startup, then the user will be able to connect to one of the available networks and setup a ping task that will test the connection." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/mimxrt700evk/wifi_examples/wifi_setup/cm33_core0">
          <external path="boards/mimxrt700evk/wifi_examples/wifi_setup/cm33_core0" type="xml">
            <files mask="wifi_setup_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_xaf_usb_demo_cm33_core0" name="dsp_xaf_usb_demo_cm33_core0" brief="The dsp_xaf_usb_demo demo application demonstrates starting DSP core with DSP image. The purpose of this example is to show how to transfer data from a USB host via M33 to a DSP and from a DSP via M33 to a USB host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/xaf_usb_demo/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/xaf_usb_demo/cm33_core0" type="xml">
            <files mask="dsp_xaf_usb_demo_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_xaf_record_cm33_core0" name="dsp_xaf_record_cm33_core0" brief="The dsp_xaf_record demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/xaf_record/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/xaf_record/cm33_core0" type="xml">
            <files mask="dsp_xaf_record_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_xaf_playback_cm33_core0" name="dsp_xaf_playback_cm33_core0" brief="The dsp_xaf_playback demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" linked_projects="mimxrt700evk_dsp_xaf_playback_cm33_core1" path="boards/mimxrt700evk/dsp_examples/xaf_playback/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/xaf_playback/cm33_core0" type="xml">
            <files mask="dsp_xaf_playback_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_sema42_cm33_core0" name="dsp_sema42_cm33_core0" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" linked_projects="mimxrt700evk_dsp_sema42_cm33_core1" path="boards/mimxrt700evk/dsp_examples/sema42/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/sema42/cm33_core0" type="xml">
            <files mask="dsp_sema42_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_naturedsp_cm33_core0" name="dsp_naturedsp_cm33_core0" brief="The dsp_naturedsp demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" linked_projects="mimxrt700evk_dsp_naturedsp_cm33_core1" path="boards/mimxrt700evk/dsp_examples/naturedsp/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/naturedsp/cm33_core0" type="xml">
            <files mask="dsp_naturedsp_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_mu_polling_cm33_core0" name="dsp_mu_polling_cm33_core0" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" linked_projects="mimxrt700evk_dsp_mu_polling_cm33_core1" path="boards/mimxrt700evk/dsp_examples/mu_polling/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/mu_polling/cm33_core0" type="xml">
            <files mask="dsp_mu_polling_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_mu_interrupt_cm33_core0" name="dsp_mu_interrupt_cm33_core0" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" linked_projects="mimxrt700evk_dsp_mu_interrupt_cm33_core1" path="boards/mimxrt700evk/dsp_examples/mu_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/mu_interrupt/cm33_core0" type="xml">
            <files mask="dsp_mu_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_hello_world_usart_cm33_core0" name="dsp_hello_world_usart_cm33_core0" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" linked_projects="mimxrt700evk_dsp_hello_world_usart_cm33_core1" path="boards/mimxrt700evk/dsp_examples/hello_world_usart/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/hello_world_usart/cm33_core0" type="xml">
            <files mask="dsp_hello_world_usart_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_audio_demo_bm_cm33_core0" name="dsp_audio_demo_bm_cm33_core0" brief="The dsp_audio_demo_bm demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/audio_demo_bm/cm33_core0">
          <external path="boards/mimxrt700evk/dsp_examples/audio_demo_bm/cm33_core0" type="xml">
            <files mask="dsp_audio_demo_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lib_jpeg_hw_accel_cm33_core0" name="lib_jpeg_hw_accel_cm33_core0" brief="The lib jpeg with hardware acceleration demo decodes the JPEG picture using the JPEG decoder hardware, and shows them in the LCD panel. Since not all JPEG formats are supported by the hardware, when macro LIB_JPEG_USE_HW_ACCEL is on, the lib jpeg will parse the header first, if the format is supported, it will use the hardware to accelerate, otherwise will use the old software way." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/mimxrt700evk/display_examples/lib_jpeg_hw_accel/cm33_core0">
          <external path="boards/mimxrt700evk/display_examples/lib_jpeg_hw_accel/cm33_core0" type="xml">
            <files mask="lib_jpeg_hw_accel_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_fbdev_freertos_cm33_core0" name="fbdev_freertos_cm33_core0" brief="This example shows how to use the fbdev component. The fbdev masks the difference of LCD controllers and provides a unified APIs for upper layers. At the same time, the frame buffers are managed by the FBDEV. When the example runs, you can see a rectangle moving in the screen, and its color changes when reached the border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/mimxrt700evk/display_examples/fbdev_freertos/cm33_core0">
          <external path="boards/mimxrt700evk/display_examples/fbdev_freertos/cm33_core0" type="xml">
            <files mask="fbdev_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sd_jpeg_cm33_core0" name="sd_jpeg_cm33_core0" brief="The SD JPEG Demo application reads the JPEG pictures from the SD card, decodesthem, and shows them in the LCD panel one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/mimxrt700evk/display_examples/sd_jpeg/cm33_core0">
          <external path="boards/mimxrt700evk/display_examples/sd_jpeg/cm33_core0" type="xml">
            <files mask="sd_jpeg_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_tickless_lpc_cm33_core0" name="freertos_tickless_lpc_cm33_core0" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using timer module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_tickless_lpc/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_tickless_lpc/cm33_core0" type="xml">
            <files mask="freertos_tickless_lpc_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_swtimer_cm33_core0" name="freertos_swtimer_cm33_core0" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_swtimer/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_swtimer/cm33_core0" type="xml">
            <files mask="freertos_swtimer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_sem_static_cm33_core0" name="freertos_sem_static_cm33_core0" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_sem_static/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_sem_static/cm33_core0" type="xml">
            <files mask="freertos_sem_static_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_sem_cm33_core0" name="freertos_sem_cm33_core0" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two different tasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_sem/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_sem/cm33_core0" type="xml">
            <files mask="freertos_sem_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_queue_cm33_core0" name="freertos_queue_cm33_core0" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_queue/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_queue/cm33_core0" type="xml">
            <files mask="freertos_queue_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_mutex_cm33_core0" name="freertos_mutex_cm33_core0" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_mutex/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_mutex/cm33_core0" type="xml">
            <files mask="freertos_mutex_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_hello_cm33_core0" name="freertos_hello_cm33_core0" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and to provide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; message via debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_hello/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_hello/cm33_core0" type="xml">
            <files mask="freertos_hello_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_generic_cm33_core0" name="freertos_generic_cm33_core0" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation from http://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of several tasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data to xQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number of received messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given from vApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_generic/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_generic/cm33_core0" type="xml">
            <files mask="freertos_generic_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_event_cm33_core0" name="freertos_event_cm33_core0" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_event/cm33_core0">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_event/cm33_core0" type="xml">
            <files mask="freertos_event_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_log_bm_cm33_core0" name="log_bm_cm33_core0" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/mimxrt700evk/component_examples/log/bm/cm33_core0">
          <external path="boards/mimxrt700evk/component_examples/log/bm/cm33_core0" type="xml">
            <files mask="log_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_log_freertos_cm33_core0" name="log_freertos_cm33_core0" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/mimxrt700evk/component_examples/log/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/component_examples/log/freertos/cm33_core0" type="xml">
            <files mask="log_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flash_component_octal_xspi_cm33_core0" name="flash_component_octal_xspi_cm33_core0" brief="octal flash demo shows the use of nor flash component to erase, program, and read an external serial nor flash device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/flash_component/xspi_nor" path="boards/mimxrt700evk/component_examples/flash_component/xspi_octal/cm33_core0">
          <external path="boards/mimxrt700evk/component_examples/flash_component/xspi_octal/cm33_core0" type="xml">
            <files mask="flash_component_octal_xspi_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpuart_interrupt_transfer_cm33_core0" name="cmsis_lpuart_interrupt_transfer_cm33_core0" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/mimxrt700evk/cmsis_driver_examples/lpuart/interrupt_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpuart/interrupt_transfer/cm33_core0" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpuart_edma_transfer_cm33_core0" name="cmsis_lpuart_edma_transfer_cm33_core0" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/mimxrt700evk/cmsis_driver_examples/lpuart/edma_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpuart/edma_transfer/cm33_core0" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpspi_int_b2b_transfer_slave_cm33_core0" name="cmsis_lpspi_int_b2b_transfer_slave_cm33_core0" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/mimxrt700evk/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpspi_int_b2b_transfer_master_cm33_core0" name="cmsis_lpspi_int_b2b_transfer_master_cm33_core0" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/mimxrt700evk/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpspi_edma_b2b_transfer_slave_cm33_core0" name="cmsis_lpspi_edma_b2b_transfer_slave_cm33_core0" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/mimxrt700evk/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpspi_edma_b2b_transfer_master_cm33_core0" name="cmsis_lpspi_edma_b2b_transfer_master_cm33_core0" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/mimxrt700evk/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpi2c_int_b2b_transfer_slave_cm33_core0" name="cmsis_lpi2c_int_b2b_transfer_slave_cm33_core0" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/mimxrt700evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpi2c_int_b2b_transfer_master_cm33_core0" name="cmsis_lpi2c_int_b2b_transfer_master_cm33_core0" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/mimxrt700evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpi2c_edma_b2b_transfer_slave_cm33_core0" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm33_core0" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/mimxrt700evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpi2c_edma_b2b_transfer_master_cm33_core0" name="cmsis_lpi2c_edma_b2b_transfer_master_cm33_core0" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/mimxrt700evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mmu_xspi" name="mmu_xspi" brief="The mmu xspi example shows how to use MMU driver to configure MMU module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/mimxrt700evk/driver_examples/mmu/xspi/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/mmu/xspi/cm33_core0" type="xml">
            <files mask="mmu_xspi_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_xspi_psram_polling_transfer_cm33_core0" name="xspi_psram_polling_transfer_cm33_core0" brief="The xspi_psram_polling_transfer example shows how to use xspi driver with polling. In this example, xspi will send data and operate the external PSRAM connected with XSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xspi" path="boards/mimxrt700evk/driver_examples/xspi/psram/polling_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/xspi/psram/polling_transfer/cm33_core0" type="xml">
            <files mask="xspi_psram_polling_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_xspi_psram_edma_transfer_cm33_core0" name="xspi_psram_edma_transfer_cm33_core0" brief="The xspi_psram_edma_transfer example shows how to use xspi driver with edma. In this example, xspi will send data and operate the external PSRAM connected with XSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xspi" path="boards/mimxrt700evk/driver_examples/xspi/psram/edma_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/xspi/psram/edma_transfer/cm33_core0" type="xml">
            <files mask="xspi_psram_edma_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_xspi_octal_polling_transfer_cm33_core0" name="xspi_octal_polling_transfer_cm33_core0" brief="The xspi_octal_polling_transfer example shows how to use xspi driver with polling. In this example, xspi will send data and operate the external Nor flash connected with XSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xspi" path="boards/mimxrt700evk/driver_examples/xspi/octal/polling_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/xspi/octal/polling_transfer/cm33_core0" type="xml">
            <files mask="xspi_octal_polling_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_xspi_octal_edma_transfer_cm33_core0" name="xspi_octal_edma_transfer_cm33_core0" brief="The xspi_octal_edma_transfer example shows how to use xspi driver with dma. In this example, xspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xspi" path="boards/mimxrt700evk/driver_examples/xspi/octal/edma_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/xspi/octal/edma_transfer/cm33_core0" type="xml">
            <files mask="xspi_octal_edma_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_wwdt_example_cm33_core0" name="wwdt_example_cm33_core0" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 5 times of refreshing the watchdog, a timeout reset is generated." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/wwdt" path="boards/mimxrt700evk/driver_examples/wwdt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/wwdt/cm33_core0" type="xml">
            <files mask="wwdt_example_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_utick_example_cm33_core0" name="utick_example_cm33_core0" brief="The utick project is a simple demonstration program of the SDK utick driver. It sets up the utick hardware block to trigger a periodic interrupt after every 1 second. When the utick interrupt is triggered a message is printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/utick" path="boards/mimxrt700evk/driver_examples/utick/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/utick/cm33_core0" type="xml">
            <files mask="utick_example_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_trng_random_cm33_core0" name="trng_random_cm33_core0" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/trng" path="boards/mimxrt700evk/driver_examples/trng/random/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/trng/random/cm33_core0" type="xml">
            <files mask="trng_random_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_syspm_cm33_core0" name="syspm_cm33_core0" brief="The System Performance Monitor (SYSPM) is a memory mapped peripheral that enables the user to monitor system and/or CPU events. This demo project obtains the event count value through the system performance monitor, and prints three values." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/syspm" path="boards/mimxrt700evk/driver_examples/syspm/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/syspm/cm33_core0" type="xml">
            <files mask="syspm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_syscon_clockout_cm33_core0" name="syscon_clockout_cm33_core0" brief="The syscon_clockout driver example shows how to output the internal clock signal. In this driver example, users can choose the clock signal to be outputted, and the divider of the output clock signal. By probe the output pin, users can observe the selected internal clock signal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/syscon" path="boards/mimxrt700evk/driver_examples/clockout/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/clockout/cm33_core0" type="xml">
            <files mask="syscon_clockout_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sema42_dualcore_primary_core" name="sema42_dualcore_primary_core" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sema42" linked_projects="mimxrt700evk_sema42_dualcore_secondary_core" path="boards/mimxrt700evk/driver_examples/sema42/dual_core/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/sema42/dual_core/cm33_core0" type="xml">
            <files mask="sema42_dualcore_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sdadc_sai_interrupt_cm33_core0" name="sdadc_sai_interrupt_cm33_core0" brief="The sdadc sai interrupt example shows how to use sdadc driver with interrupt. In this example, sdadc gathers analog data from the microphone, and uses the sai to send the digital data to the codec. The user can hear the sound from the microphone and see the log on the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sdadc" path="boards/mimxrt700evk/driver_examples/sdadc/sdadc_sai_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/sdadc/sdadc_sai_interrupt/cm33_core0" type="xml">
            <files mask="sdadc_sai_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sctimer_16bit_counter_cm33_core0" name="sctimer_16bit_counter_cm33_core0" brief="The SCTimer 16-bit counter project is a demonstration program of the SDK SCTimer driver operation when using the SCTimer counteras two 16-bit counters.The example toggles an output per counter when a match occurs." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/mimxrt700evk/driver_examples/sctimer/16bit_counter/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/sctimer/16bit_counter/cm33_core0" type="xml">
            <files mask="sctimer_16bit_counter_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sai_interrupt_transfer_cm33_core0" name="sai_interrupt_transfer_cm33_core0" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/mimxrt700evk/driver_examples/sai/interrupt_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/sai/interrupt_transfer/cm33_core0" type="xml">
            <files mask="sai_interrupt_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sai_interrupt_record_playback_cm33_core0" name="sai_interrupt_record_playback_cm33_core0" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/mimxrt700evk/driver_examples/sai/interrupt_record_playback/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/sai/interrupt_record_playback/cm33_core0" type="xml">
            <files mask="sai_interrupt_record_playback_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sai_edma_transfer_cm33_core0" name="sai_edma_transfer_cm33_core0" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/mimxrt700evk/driver_examples/sai/edma_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/sai/edma_transfer/cm33_core0" type="xml">
            <files mask="sai_edma_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sai_edma_record_playback_cm33_core0" name="sai_edma_record_playback_cm33_core0" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/mimxrt700evk/driver_examples/sai/edma_record_playback/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/sai/edma_record_playback/cm33_core0" type="xml">
            <files mask="sai_edma_record_playback_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_romapi_otp_cm33_core0" name="romapi_otp_cm33_core0" brief="Rom API driver example for OCOTP interface." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/romapi/otp" path="boards/mimxrt700evk/driver_examples/romapi/otp/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/romapi/otp/cm33_core0" type="xml">
            <files mask="romapi_otp_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_romapi_bootloader_cm33_core0" name="romapi_bootloader_cm33_core0" brief="Rom API driver example for bootloader functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/romapi/bootloader" path="boards/mimxrt700evk/driver_examples/romapi/bootloader/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/romapi/bootloader/cm33_core0" type="xml">
            <files mask="romapi_bootloader_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pngdec_cm33_core0" name="pngdec_cm33_core0" brief="The PNG decoder demo uses the PNG decoder driver to decode an PNG picture of NXP logo and shows it in the LCD panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/mimxrt700evk/driver_examples/pngdec/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pngdec/cm33_core0" type="xml">
            <files mask="pngdec_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pint_pin_interrupt_cm33_core0" name="pint_pin_interrupt_cm33_core0" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pint" path="boards/mimxrt700evk/driver_examples/pint/pin_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pint/pin_interrupt/cm33_core0" type="xml">
            <files mask="pint_pin_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pint_pattern_match_cm33_core0" name="pint_pattern_match_cm33_core0" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pint" path="boards/mimxrt700evk/driver_examples/pint/pattern_match/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pint/pattern_match/cm33_core0" type="xml">
            <files mask="pint_pattern_match_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pdm_sai_multi_channel_tdm_edma_cm33_core0" name="pdm_sai_multi_channel_tdm_edma_cm33_core0" brief="The pdm_sai_multi_channel_tdm_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_multi_channel_tdm_edma/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_multi_channel_tdm_edma/cm33_core0" type="xml">
            <files mask="pdm_sai_multi_channel_tdm_edma_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pdm_sai_multi_channel_edma_cm33_core0" name="pdm_sai_multi_channel_edma_cm33_core0" brief="The pdm_sai_multi_channel_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_multi_channel_edma/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_multi_channel_edma/cm33_core0" type="xml">
            <files mask="pdm_sai_multi_channel_edma_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pdm_sai_interrupt_transfer_cm33_core0" name="pdm_sai_interrupt_transfer_cm33_core0" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_interrupt_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_interrupt_transfer/cm33_core0" type="xml">
            <files mask="pdm_sai_interrupt_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pdm_sai_interrupt_cm33_core0" name="pdm_sai_interrupt_cm33_core0" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_interrupt/cm33_core0" type="xml">
            <files mask="pdm_sai_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pdm_sai_edma_cm33_core0" name="pdm_sai_edma_cm33_core0" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_edma/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pdm/pdm_sai_edma/cm33_core0" type="xml">
            <files mask="pdm_sai_edma_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pdm_interrupt_cm33_core0" name="pdm_interrupt_cm33_core0" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mimxrt700evk/driver_examples/pdm/pdm_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pdm/pdm_interrupt/cm33_core0" type="xml">
            <files mask="pdm_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pdm_hwvad_cm33_core0" name="pdm_hwvad_cm33_core0" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mimxrt700evk/driver_examples/pdm/pdm_hwvad/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pdm/pdm_hwvad/cm33_core0" type="xml">
            <files mask="pdm_hwvad_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pdm_edma_transfer_cm33_core0" name="pdm_edma_transfer_cm33_core0" brief="pdm_edma_transfer" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/mimxrt700evk/driver_examples/pdm/pdm_edma_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/pdm/pdm_edma_transfer/cm33_core0" type="xml">
            <files mask="pdm_edma_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ostimer_example_cm33_core0" name="ostimer_example_cm33_core0" brief="The OSTIMER project is a simple demonstration program of the SDK OSTIMER driver. It sets the OSTIMER as the wakeup source from deep-sleep mode. After wakeup from deep-sleep mode, OS timer will set match value to trigger the interrupt while the timer count tick reach the match value about every 2 seconds." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ostimer" path="boards/mimxrt700evk/driver_examples/ostimer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/ostimer/cm33_core0" type="xml">
            <files mask="ostimer_example_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mu_polling_primary_core" name="mu_polling_primary_core" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" linked_projects="mimxrt700evk_mu_polling_secondary_core" path="boards/mimxrt700evk/driver_examples/mu/polling/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/mu/polling/cm33_core0" type="xml">
            <files mask="mu_polling_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mu_interrupt_primary_core" name="mu_interrupt_primary_core" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" linked_projects="mimxrt700evk_mu_interrupt_secondary_core" path="boards/mimxrt700evk/driver_examples/mu/interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/mu/interrupt/cm33_core0" type="xml">
            <files mask="mu_interrupt_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mrt_example_cm33_core0" name="mrt_example_cm33_core0" brief="The MRT project is a simple demonstration program of the SDK MRT driver. It sets up the MRThardware block to trigger a periodic interrupt after every 250 milliseconds. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mrt" path="boards/mimxrt700evk/driver_examples/mrt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/mrt/cm33_core0" type="xml">
            <files mask="mrt_example_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_polling_seven_bits_cm33_core0" name="lpuart_polling_seven_bits_cm33_core0" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/polling_seven_bits/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/polling_seven_bits/cm33_core0" type="xml">
            <files mask="lpuart_polling_seven_bits_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_polling_cm33_core0" name="lpuart_polling_cm33_core0" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/polling/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/polling/cm33_core0" type="xml">
            <files mask="lpuart_polling_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_interrupt_transfer_seven_bits_cm33_core0" name="lpuart_interrupt_transfer_seven_bits_cm33_core0" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_transfer_seven_bits/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_transfer_seven_bits/cm33_core0" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_interrupt_transfer_cm33_core0" name="lpuart_interrupt_transfer_cm33_core0" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_transfer/cm33_core0" type="xml">
            <files mask="lpuart_interrupt_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_interrupt_rb_transfer_cm33_core0" name="lpuart_interrupt_rb_transfer_cm33_core0" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_rb_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_rb_transfer/cm33_core0" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_interrupt_cm33_core0" name="lpuart_interrupt_cm33_core0" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/interrupt/cm33_core0" type="xml">
            <files mask="lpuart_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_hardware_flow_control_cm33_core0" name="lpuart_hardware_flow_control_cm33_core0" brief="The lpuart_hardware_flow_control Example project is to demonstrate usage of the hardware flow control function.This example will send data to itself(loopback), and hardware flow control will be enabled in the example.The CTS(clear-to-send) pin is for transmiter to check if receiver is ready, if the CTS pin is assert, transmiter startto send data. The RTS(request-to-send) is a pin for receiver to inform the transmiter if receiver is ready to receivedata. So, please connect RTS to CTS pin directly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/hardware_flow_control">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/hardware_flow_control" type="xml">
            <files mask="lpuart_hardware_flow_control_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_edma_transfer_cm33_core0" name="lpuart_edma_transfer_cm33_core0" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/edma_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/edma_transfer/cm33_core0" type="xml">
            <files mask="lpuart_edma_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_edma_rb_transfer_cm33_core0" name="lpuart_edma_rb_transfer_cm33_core0" brief="The lpuart_edma Ring Buffer Example project is to demonstrate usage of the KSDK lpuart driver." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/edma_rb_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/edma_rb_transfer/cm33_core0" type="xml">
            <files mask="lpuart_edma_rb_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpspi_polling_b2b_transfer_slave_cm33_core0" name="lpspi_polling_b2b_transfer_slave_cm33_core0" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mimxrt700evk/driver_examples/lpspi/polling_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpspi/polling_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpspi_polling_b2b_transfer_master_cm33_core0" name="lpspi_polling_b2b_transfer_master_cm33_core0" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mimxrt700evk/driver_examples/lpspi/polling_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpspi/polling_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpspi_interrupt_b2b_transfer_slave_cm33_core0" name="lpspi_interrupt_b2b_transfer_slave_cm33_core0" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mimxrt700evk/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpspi_interrupt_b2b_transfer_master_cm33_core0" name="lpspi_interrupt_b2b_transfer_master_cm33_core0" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mimxrt700evk/driver_examples/lpspi/interrupt_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpspi/interrupt_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpspi_edma_b2b_transfer_slave_cm33_core0" name="lpspi_edma_b2b_transfer_slave_cm33_core0" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mimxrt700evk/driver_examples/lpspi/edma_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpspi/edma_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpspi_edma_b2b_transfer_master_cm33_core0" name="lpspi_edma_b2b_transfer_master_cm33_core0" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/mimxrt700evk/driver_examples/lpspi/edma_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpspi/edma_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpi2c_polling_b2b_slave_cm33_core0" name="lpi2c_polling_b2b_slave_cm33_core0" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mimxrt700evk/driver_examples/lpi2c/polling_b2b/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpi2c/polling_b2b/slave/cm33_core0" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpi2c_polling_b2b_master_cm33_core0" name="lpi2c_polling_b2b_master_cm33_core0" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mimxrt700evk/driver_examples/lpi2c/polling_b2b/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpi2c/polling_b2b/master/cm33_core0" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpi2c_interrupt_b2b_transfer_slave_cm33_core0" name="lpi2c_interrupt_b2b_transfer_slave_cm33_core0" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mimxrt700evk/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpi2c_interrupt_b2b_transfer_master_cm33_core0" name="lpi2c_interrupt_b2b_transfer_master_cm33_core0" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mimxrt700evk/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpi2c_edma_b2b_transfer_slave_cm33_core0" name="lpi2c_edma_b2b_transfer_slave_cm33_core0" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mimxrt700evk/driver_examples/lpi2c/edma_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpi2c/edma_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpi2c_edma_b2b_transfer_master_cm33_core0" name="lpi2c_edma_b2b_transfer_master_cm33_core0" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/mimxrt700evk/driver_examples/lpi2c/edma_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpi2c/edma_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freqme_interrupt_cm33_core0" name="freqme_interrupt_cm33_core0" brief="The freqme_interrupt is a demonstration program of the SDK LPC_FREQME driver's features. The example demostrate the usage of frequency measurement operate mode and pulse width measurement operate mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/freqme" path="boards/mimxrt700evk/driver_examples/freqme/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/freqme/cm33_core0" type="xml">
            <files mask="freqme_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpadc_polling_cm33_core0" name="lpadc_polling_cm33_core0" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/mimxrt700evk/driver_examples/lpadc/polling/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpadc/polling/cm33_core0" type="xml">
            <files mask="lpadc_polling_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpadc_interrupt_cm33_core0" name="lpadc_interrupt_cm33_core0" brief="The lpdc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/mimxrt700evk/driver_examples/lpadc/interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpadc/interrupt/cm33_core0" type="xml">
            <files mask="lpadc_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpadc_dual_single_ended_conversion_cm33_core0" name="lpadc_dual_single_ended_conversion_cm33_core0" brief="The lpadc_dual_single_ended_conversion example shows how to use two channel with LPADC driver. In this example, user should indicate two channel to provide a voltage signal (can be controlled by user) as the LPADC's sample input, Channel B does not need to be paired with Channel A, Channel B is user selectable.When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/mimxrt700evk/driver_examples/lpadc/dual_single_ended_conversion/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lpadc/dual_single_ended_conversion/cm33_core0" type="xml">
            <files mask="lpadc_dual_single_ended_conversion_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lcdif_rotate_flip_cm33_core0" name="lcdif_rotate_flip_cm33_core0" brief="This example demonstrates how to use the LCDIF rotate/flip feature. In this example, you will see a square with three color(red, green and blue). The rotate/flip mode is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/mimxrt700evk/driver_examples/lcdif/rotate_flip/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lcdif/rotate_flip/cm33_core0" type="xml">
            <files mask="lcdif_rotate_flip_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lcdif_rgb565_cm33_core0" name="lcdif_rgb565_cm33_core0" brief="This example demonstrates how to use the LCDIF driver to show the RGB565 format frame buffer. When the example runs, a rectangle is moving in the screen, and its color changes when touch border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/mimxrt700evk/driver_examples/lcdif/rgb565/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lcdif/rgb565/cm33_core0" type="xml">
            <files mask="lcdif_rgb565_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lcdif_porter_duff_cm33_core0" name="lcdif_porter_duff_cm33_core0" brief="This example demonstrates how to use the LCDIF alpha blend function to perform the Porter Duff compositing. In this example, a blue rectangle is in the top left corner of the video/graphic layer as destination surface, a red rectangle is in the bottom right of the overlay layer0 as source surface. Every Porter Duff mode result is shown for 2 seconds, then switch to the next mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/mimxrt700evk/driver_examples/lcdif/porter_duff/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lcdif/porter_duff/cm33_core0" type="xml">
            <files mask="lcdif_porter_duff_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lcdif_gamma_cm33_core0" name="lcdif_gamma_cm33_core0" brief="This example demonstrates how to use the LCDIF gamma correction feature. In this example, the gamma corretion table is set to invert the original picture. The original picture is gradual changed gray bars, the gamma correction is continuously enabled and disabled, so you can see the screen switch between the original picture and the inverted picture." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/mimxrt700evk/driver_examples/lcdif/gamma/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lcdif/gamma/cm33_core0" type="xml">
            <files mask="lcdif_gamma_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lcdif_dbi_rgb565_cm33_core0" name="lcdif_dbi_rgb565_cm33_core0" brief="This example demonstrates how to use the LCDIF driver to show the dbi_rgb565 format frame buffer. When the example runs, a rectangle is moving in the screen, and its color changes when touch border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/mimxrt700evk/driver_examples/lcdif/dbi_rgb565/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lcdif/dbi_rgb565/cm33_core0" type="xml">
            <files mask="lcdif_dbi_rgb565_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lcdif_cursor_masked_cm33_core0" name="lcdif_cursor_masked_cm33_core0" brief="This example demonstrates how to use the LCDIF cursor in masked mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/mimxrt700evk/driver_examples/lcdif/cursor_masked/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lcdif/cursor_masked/cm33_core0" type="xml">
            <files mask="lcdif_cursor_masked_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lcdif_cursor_argb_cm33_core0" name="lcdif_cursor_argb_cm33_core0" brief="This example demonstrates how to use the LCDIF cursor in ARGB8888 mode. In this exapmle, the screen is devided into two parts: red and blue. A cursor is moving in the screen, the cursor alpha value changes during moving." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/mimxrt700evk/driver_examples/lcdif/cursor_argb/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lcdif/cursor_argb/cm33_core0" type="xml">
            <files mask="lcdif_cursor_argb_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lcdif_color_key_cm33_core0" name="lcdif_color_key_cm33_core0" brief="This example demonstrates how to use the LCDIF color key feature in ARGB8888 mode. In this exapmle, background layer is use as destination layer and video layer is used as source layer. The gray rectangles in source layer fall into the color key range and are replaced by background layer which is red when the color key mode is on." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/mimxrt700evk/driver_examples/lcdif/color_key/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/lcdif/color_key/cm33_core0" type="xml">
            <files mask="lcdif_color_key_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_jpegdec_single_stream_single_frame_descriptor_cm33_core0" name="jpegdec_single_stream_single_frame_descriptor_cm33_core0" brief="The JPEG decoder example decodes one JPEG picture using slot 0 then shows it on panel. First we configure the descriptor, then enable the descriptor to let it update the decoder configuration and start decode. After decoding complete the picture will be shown on panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/mimxrt700evk/driver_examples/jpegdec/single_stream_single_frame/descriptor/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/jpegdec/single_stream_single_frame/descriptor/cm33_core0" type="xml">
            <files mask="jpegdec_single_stream_single_frame_descriptor_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_jpegdec_single_stream_single_frame_config_cm33_core0" name="jpegdec_single_stream_single_frame_config_cm33_core0" brief="The JPEG decoder example decodes one JPEG picture using slot 0 then shows it on panel. First we configure the decoder configuration then starts the decoder. After decoding complete the picture will be shown on panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/mimxrt700evk/driver_examples/jpegdec/single_stream_single_frame/config/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/jpegdec/single_stream_single_frame/config/cm33_core0" type="xml">
            <files mask="jpegdec_single_stream_single_frame_config_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_itrc_cm33_core0" name="itrc_cm33_core0" brief="The ITRC Example project is a demonstration program that uses the MCUX SDK software to show funcionality of Intrusion and Tamper Response Controller." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/itrc" path="boards/mimxrt700evk/driver_examples/itrc/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/itrc/cm33_core0" type="xml">
            <files mask="itrc_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_irtc_cm33_core0" name="irtc_cm33_core0" brief="The IRTC project is a simple demonstration program of the SDK IRTC driver.This example is a low power module that provides time keeping and calendaring functions and additionally providesprotection against tampering, protection against spurious memory/register updates and battery operation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/irtc" path="boards/mimxrt700evk/driver_examples/irtc/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/irtc/cm33_core0" type="xml">
            <files mask="irtc_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_gpio_led_output_cm33_core0" name="gpio_led_output_cm33_core0" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/mimxrt700evk/driver_examples/gpio/led_output/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/gpio/led_output/cm33_core0" type="xml">
            <files mask="gpio_led_output_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_gpio_input_interrupt_cm33_core0" name="gpio_input_interrupt_cm33_core0" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/mimxrt700evk/driver_examples/gpio/input_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/gpio/input_interrupt/cm33_core0" type="xml">
            <files mask="gpio_input_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_glikey_cm33_core0" name="glikey_cm33_core0" brief="The GLIKEY Example project is a demonstration program that uses the MCUX SDK software to show funcionality of GLIKEY IP." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/glikey" path="boards/mimxrt700evk/driver_examples/glikey/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/glikey/cm33_core0" type="xml">
            <files mask="glikey_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_gdet_cm33_core0" name="gdet_cm33_core0" brief="The GDET Example project is a demonstration program that uses the MCUX SDK software to show funcionality of Glitch Detect (GDET) module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gdet" path="boards/mimxrt700evk/driver_examples/gdet/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/gdet/cm33_core0" type="xml">
            <files mask="gdet_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_uart_polling_transfer_cm33_core0" name="flexio_uart_polling_transfer_cm33_core0" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/uart/polling_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/uart/polling_transfer/cm33_core0" type="xml">
            <files mask="flexio_uart_polling_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_uart_interrupt_transfer_cm33_core0" name="flexio_uart_interrupt_transfer_cm33_core0" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/uart/interrupt_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/uart/interrupt_transfer/cm33_core0" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_uart_int_rb_transfer_cm33_core0" name="flexio_uart_int_rb_transfer_cm33_core0" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/uart/int_rb_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/uart/int_rb_transfer/cm33_core0" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_uart_edma_transfer_cm33_core0" name="flexio_uart_edma_transfer_cm33_core0" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/uart/edma_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/uart/edma_transfer/cm33_core0" type="xml">
            <files mask="flexio_uart_edma_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_polling_lpspi_transfer_master_cm33_core0" name="flexio_spi_polling_lpspi_transfer_master_cm33_core0" brief="The flexio_spi_master_pooling_lpspi_slave example shows how to use flexio spi master driver in polling way. In this example, a flexio simulated master connect to a lpspi slave." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm33_core0" type="xml">
            <files mask="flexio_spi_polling_lpspi_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_int_lpspi_transfer_slave_cm33_core0" name="flexio_spi_int_lpspi_transfer_slave_cm33_core0" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm33_core0" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_int_lpspi_transfer_master_cm33_core0" name="flexio_spi_int_lpspi_transfer_master_cm33_core0" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/int_lpspi_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/int_lpspi_transfer/master/cm33_core0" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_int_b2b_transfer_slave_cm33_core0" name="flexio_spi_int_b2b_transfer_slave_cm33_core0" brief="The flexio_spi_slave_interrupt example shows how to use flexio spi slave  driver in interrupt way:In this example, a flexio simulated slave connect to a flexio simulated spi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/int_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/int_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="flexio_spi_int_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_int_b2b_transfer_master_cm33_core0" name="flexio_spi_int_b2b_transfer_master_cm33_core0" brief="The flexio_spi_master_interrupt example shows how to use flexio spi master  driver in interrupt way:In this example, a flexio simulated master connect to a flexio simulated spi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/int_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/int_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="flexio_spi_int_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_edma_lpspi_transfer_slave_cm33_core0" name="flexio_spi_edma_lpspi_transfer_slave_cm33_core0" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm33_core0" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_edma_lpspi_transfer_master_cm33_core0" name="flexio_spi_edma_lpspi_transfer_master_cm33_core0" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm33_core0" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_edma_b2b_transfer_slave_cm33_core0" name="flexio_spi_edma_b2b_transfer_slave_cm33_core0" brief="The flexio_spi_slave_edma example shows how to use flexio spi slave  driver in dma way:In this example, a flexio simulated slave connect to a flexio simulated spi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/edma_b2b_transfer/slave/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/edma_b2b_transfer/slave/cm33_core0" type="xml">
            <files mask="flexio_spi_edma_b2b_transfer_slave_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_spi_edma_b2b_transfer_master_cm33_core0" name="flexio_spi_edma_b2b_transfer_master_cm33_core0" brief="The flexio_spi_master_edma example shows how to use flexio spi master  driver in edma way:In this example, a flexio simulated master connect to a flexio simulated spi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/spi/edma_b2b_transfer/master/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/spi/edma_b2b_transfer/master/cm33_core0" type="xml">
            <files mask="flexio_spi_edma_b2b_transfer_master_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_pwm_cm33_core0" name="flexio_pwm_cm33_core0" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/pwm/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/pwm/cm33_core0" type="xml">
            <files mask="flexio_pwm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_flexio_i2c_interrupt_lpi2c_transfer_cm33_core0" name="flexio_i2c_interrupt_lpi2c_transfer_cm33_core0" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/mimxrt700evk/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm33_core0" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_wrap_transfer_cm33_core0" name="edma4_wrap_transfer_cm33_core0" brief="The EDMA4 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/wrap_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/edma4/wrap_transfer/cm33_core0" type="xml">
            <files mask="edma4_wrap_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_scatter_gather_cm33_core0" name="edma4_scatter_gather_cm33_core0" brief="The EDMA4 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/scatter_gather/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/edma4/scatter_gather/cm33_core0" type="xml">
            <files mask="edma4_scatter_gather_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_ping_pong_transfer_cm33_core0" name="edma4_ping_pong_transfer_cm33_core0" brief="The EDMA4 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/ping_pong_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/edma4/ping_pong_transfer/cm33_core0" type="xml">
            <files mask="edma4_ping_pong_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_memset_cm33_core0" name="edma4_memset_cm33_core0" brief="The EDMA4 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/memset/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/edma4/memset/cm33_core0" type="xml">
            <files mask="edma4_memset_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_memory_to_memory_transfer_cm33_core0" name="edma4_memory_to_memory_transfer_cm33_core0" brief="The EDMA4 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/memory_to_memory_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/edma4/memory_to_memory_transfer/cm33_core0" type="xml">
            <files mask="edma4_memory_to_memory_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_memory_to_memory_cm33_core0" name="edma4_memory_to_memory_cm33_core0" brief="The EDMA4 memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/memory_to_memory/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/edma4/memory_to_memory/cm33_core0" type="xml">
            <files mask="edma4_memory_to_memory_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_interleave_transfer_cm33_core0" name="edma4_interleave_transfer_cm33_core0" brief="The EDMA4 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/interleave_transfer/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/edma4/interleave_transfer/cm33_core0" type="xml">
            <files mask="edma4_interleave_transfer_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_channel_link_cm33_core0" name="edma4_channel_link_cm33_core0" brief="The EDMA4 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/channel_link/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/edma4/channel_link/cm33_core0" type="xml">
            <files mask="edma4_channel_link_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ctimer_pwm_interrupt_example_cm33_core0" name="ctimer_pwm_interrupt_example_cm33_core0" brief="The Simple PWM Interrupt project is to demonstrate usage of the SDK CTimer driver as a PWM with interrupt callback functionsIn this example an IO pin connected to the LED is used as a PWM output line to generate a PWM signal.With an interrupt callback the PWM duty cycle is changed frequently in such a way that the LED brightness can be varied." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/mimxrt700evk/driver_examples/ctimer/simple_pwm_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/ctimer/simple_pwm_interrupt/cm33_core0" type="xml">
            <files mask="ctimer_pwm_interrupt_example_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ctimer_pwm_example_cm33_core0" name="ctimer_pwm_example_cm33_core0" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, CTimer is used to generate a PWM signal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/mimxrt700evk/driver_examples/ctimer/simple_pwm/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/ctimer/simple_pwm/cm33_core0" type="xml">
            <files mask="ctimer_pwm_example_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ctimer_match_interrupt_example_cm33_core0" name="ctimer_match_interrupt_example_cm33_core0" brief="The Simple Match Interrupt project is to demonstrate usage of the SDK CTimer driver with interrupt callback functionsIn this example the upon match and IO pin connected to the LED is toggled and the timer is reset, so it would generate a square wave.With an interrupt callback the match value is changed frequently in such a way that the frequency of the output square wave is increased gradually." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/mimxrt700evk/driver_examples/ctimer/simple_match_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/ctimer/simple_match_interrupt/cm33_core0" type="xml">
            <files mask="ctimer_match_interrupt_example_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ctimer_match_example_cm33_core0" name="ctimer_match_example_cm33_core0" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, the match feature of the CTimer is used to toggle the output level." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/mimxrt700evk/driver_examples/ctimer/simple_match/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/ctimer/simple_match/cm33_core0" type="xml">
            <files mask="ctimer_match_example_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_crc_cm33_core0" name="crc_cm33_core0" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/crc" path="boards/mimxrt700evk/driver_examples/crc/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/crc/cm33_core0" type="xml">
            <files mask="crc_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cdog_cm33_core0" name="cdog_cm33_core0" brief="The CDOG Example project is a demonstration program that uses the KSDK software to show funcionality of Code Watchdog Timer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/cdog" path="boards/mimxrt700evk/driver_examples/cdog/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/cdog/cm33_core0" type="xml">
            <files mask="cdog_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_acmp_polling_print_cm33_core0" name="acmp_polling_print_cm33_core0" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/mimxrt700evk/driver_examples/acmp/polling/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/acmp/polling/cm33_core0" type="xml">
            <files mask="acmp_polling_print_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_acmp_interrupt_print_cm33_core0" name="acmp_interrupt_print_cm33_core0" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/mimxrt700evk/driver_examples/acmp/interrupt/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/acmp/interrupt/cm33_core0" type="xml">
            <files mask="acmp_interrupt_print_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_puf_v3_cm33_core0" name="puf_v3_cm33_core0" brief="This driver example project demonstrates how to use driver for the PUFv3 controller which provides a secure key storage." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/puf_v3" path="boards/mimxrt700evk/driver_examples/puf_v3/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/puf_v3/cm33_core0" type="xml">
            <files mask="puf_v3_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_jpegdec_single_stream_repeat_cm33_core0" name="jpegdec_single_stream_repeat_cm33_core0" brief="The SD JPEG decoder example decodes a series of JPEG pictures stored on SD card then shows them one by one on panel. Only one slot is used with two descriptors linked with each other as ping-pong descriptors. After one descriptor finishes the other will be loaded." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/mimxrt700evk/driver_examples/jpegdec/single_stream_repeat/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/jpegdec/single_stream_repeat/cm33_core0" type="xml">
            <files mask="jpegdec_single_stream_repeat_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_jpegdec_context_switch_cm33_core0" name="jpegdec_context_switch_cm33_core0" brief="The SD JPEG decoder example decodes a series of JPEG pictures stored on SD card then shows them one by one on panel. Two slots are used and each has one descriptor linked to itself. After slot 0 finishes slot 1 will be switch on in this round. After slot 1 finishes then the next round starts, slot 0 will be switched on again." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/mimxrt700evk/driver_examples/jpegdec/context_switch/cm33_core0">
          <external path="boards/mimxrt700evk/driver_examples/jpegdec/context_switch/cm33_core0" type="xml">
            <files mask="jpegdec_context_switch_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_shell_cm33_core0" name="shell_cm33_core0" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/shell/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/shell/cm33_core0" type="xml">
            <files mask="shell_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_power_mode_with_hifi_primary" name="power_mode_with_hifi_primary" brief="The power_mode_switch application shows the usage of normal power mode control APIs for entering the low power mode: Sleep mode, Deep Sleep mode, Deep Sleep Retention mode, Deep Power Down mode and Full Deep Power Down mode. When the application runs to each low powermode, the device would cut off the power for specific modules to save energy. The device can be also waken up by prepared wakeup source from external event. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - In order to meet typedef power consumption of DateSheet manual, Please configure MCU under the following conditions. 1. Configure all pins as GPIO with pull-up resistor disabled in the IOCON block. 2. Configure GPIO pins as outputs using the GPIO DIR register. 3. Write 1 to the GPIO CLR register to drive the outputs LOW. 4. All peripherals disabled." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" linked_projects="mimxrt700evk_power_mode_with_hifi_secondary" path="boards/mimxrt700evk/demo_apps/power_mode_with_hifi/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/power_mode_with_hifi/cm33_core0" type="xml">
            <files mask="power_mode_with_hifi_primary_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_power_mode_comp_only_primary" name="power_mode_comp_only_primary" brief="The power_mode_switch application shows the usage of normal power mode control APIs for entering the low power mode: Sleep mode, Deep Sleep mode, Deep Sleep Retention mode, Deep Power Down mode and Full Deep Power Down mode. When the application runs to each low powermode, the device would cut off the power for specific modules to save energy. The device can be also waken up by prepared wakeup source from external event. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - In order to meet typedef power consumption of DateSheet manual, Please configure MCU under the following conditions. 1. Configure all pins as GPIO with pull-up resistor disabled in the IOCON block. 2. Configure GPIO pins as outputs using the GPIO DIR register. 3. Write 1 to the GPIO CLR register to drive the outputs LOW. 4. All peripherals disabled." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" linked_projects="mimxrt700evk_power_mode_comp_only_secondary" path="boards/mimxrt700evk/demo_apps/power_mode_comp_only/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/power_mode_comp_only/cm33_core0" type="xml">
            <files mask="power_mode_comp_only_primary_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_power_manager_test_bm_dualcore_primary" name="power_manager_test_bm_dualcore_primary" brief="The power manager test application demonstrates the basic usage of power manager framework without RTOS. The demo tests all features of power manager framework, including notification manager, wakeup source manager and so on." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" linked_projects="mimxrt700evk_power_manager_test_bm_dualcore_secondary" path="boards/mimxrt700evk/demo_apps/power_manager_test/bm/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/power_manager_test/bm/cm33_core0" type="xml">
            <files mask="power_manager_test_bm_dualcore_primary_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pmc_temperature_sensor_cm33_core0" name="pmc_temperature_sensor_cm33_core0" brief="The demo shows how to measure the temperature within the PMC module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/pmc_temperature_sensor/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/pmc_temperature_sensor/cm33_core0" type="xml">
            <files mask="pmc_temperature_sensor_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_new_project_cm33_core0" name="new_project_cm33_core0" brief="The new project is provided as starting point for user to add with customized flow." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/new_project/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/new_project/cm33_core0" type="xml">
            <files mask="new_project_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_hello_world_virtual_com_cm33_core0" name="hello_world_virtual_com_cm33_core0" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/hello_world_virtual_com/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/hello_world_virtual_com/cm33_core0" type="xml">
            <files mask="hello_world_virtual_com_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_hello_world_cm33_core0" name="hello_world_cm33_core0" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/hello_world/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/hello_world/cm33_core0" type="xml">
            <files mask="hello_world_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_power_mode_switch_primary" name="power_mode_switch_primary" brief="This demo is used to show all the power modes. With this demo, user can navigate all the power modes that are existing in primary core. In typical use case, the primary core is running the main control logic, while the slave core is used to run the protocol or other complex mid-ware independently. Then the slave core prepares the resource (data, message, etc) into the somewhere, so that the master core would fetch when necessary. In some other cases, master core would send the some kinds of message to the slave core, and ask the slave core to enter indicated power mode. This demo download the image to both cores, also provides the reference code to enter any power mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" linked_projects="mimxrt700evk_power_mode_switch_secondary" path="boards/mimxrt700evk/demo_apps/power_mode_switch/cm33_core0">
          <external path="boards/mimxrt700evk/demo_apps/power_mode_switch/cm33_core0" type="xml">
            <files mask="power_mode_switch_primary_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_source_charger_freertos_om13790host_cm33_core0" name="usb_pd_source_charger_freertos_om13790host_cm33_core0" brief="The application simulate charger product. The demo only works as source and is external powered" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_source_charger_om13790host/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_source_charger_om13790host/freertos/cm33_core0" type="xml">
            <files mask="usb_pd_source_charger_freertos_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_source_charger_bm_om13790host_cm33_core0" name="usb_pd_source_charger_bm_om13790host_cm33_core0" brief="The application simulate charger product. The demo only works as source and is external powered" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_source_charger_om13790host/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_source_charger_om13790host/bm/cm33_core0" type="xml">
            <files mask="usb_pd_source_charger_bm_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_sink_battery_freertos_om13790host_cm33_core0" name="usb_pd_sink_battery_freertos_om13790host_cm33_core0" brief="The application simulate battery product, it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_sink_battery_om13790host/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_sink_battery_om13790host/freertos/cm33_core0" type="xml">
            <files mask="usb_pd_sink_battery_freertos_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_sink_battery_bm_om13790host_cm33_core0" name="usb_pd_sink_battery_bm_om13790host_cm33_core0" brief="The application simulate battery product , it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_sink_battery_om13790host/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_sink_battery_om13790host/bm/cm33_core0" type="xml">
            <files mask="usb_pd_sink_battery_bm_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_freertos_om13790host_cm33_core0" name="usb_pd_freertos_om13790host_cm33_core0" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the board keys and debug console to test the PD functions. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_om13790host/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_om13790host/freertos/cm33_core0" type="xml">
            <files mask="usb_pd_freertos_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_bm_om13790host_cm33_core0" name="usb_pd_bm_om13790host_cm33_core0" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the board keys and debug console to test the PD functions. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_om13790host/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_om13790host/bm/cm33_core0" type="xml">
            <files mask="usb_pd_bm_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_charger_battery_freertos_om13790host_cm33_core0" name="usb_pd_charger_battery_freertos_om13790host_cm33_core0" brief="The application simulate battery product, it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_charger_battery_om13790host/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_charger_battery_om13790host/freertos/cm33_core0" type="xml">
            <files mask="usb_pd_charger_battery_freertos_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_charger_battery_bm_om13790host_cm33_core0" name="usb_pd_charger_battery_bm_om13790host_cm33_core0" brief="the application simulate battery product , it prints the battery percent continually. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_charger_battery_om13790host/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_charger_battery_om13790host/bm/cm33_core0" type="xml">
            <files mask="usb_pd_charger_battery_bm_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_alt_mode_dp_host_freertos_om13790host_cm33_core0" name="usb_pd_alt_mode_dp_host_freertos_om13790host_cm33_core0" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the shield host board (om13790host) to implement the DisplayPort alternate mode.It recognize attached video adapters (like &quot;Type-C to DisplayPort&quot; or &quot;Type-C to HDMI&quot;), and drive the adapter to work." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_alt_mode_dp_host_om13790host/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_alt_mode_dp_host_om13790host/freertos/cm33_core0" type="xml">
            <files mask="usb_pd_alt_mode_dp_host_freertos_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_usb_pd_alt_mode_dp_host_bm_om13790host_cm33_core0" name="usb_pd_alt_mode_dp_host_bm_om13790host_cm33_core0" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the shield host board (om13790host) to implement the DisplayPort alternate mode.It recognize attached video adapters (like &quot;Type-C to DisplayPort&quot; or &quot;Type-C to HDMI&quot;), and drive the adapter to work." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_pd_alt_mode_dp_host_om13790host/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_pd_alt_mode_dp_host_om13790host/bm/cm33_core0" type="xml">
            <files mask="usb_pd_alt_mode_dp_host_bm_om13790host_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_suspend_resume_hid_mouse_freertos_cm33_core0" name="host_suspend_resume_hid_mouse_freertos_cm33_core0" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_host_hid_mouse/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_host_hid_mouse/freertos/cm33_core0" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_suspend_resume_hid_mouse_bm_cm33_core0" name="host_suspend_resume_hid_mouse_bm_cm33_core0" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_host_hid_mouse/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_host_hid_mouse/bm/cm33_core0" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_lpm_hid_mouse_freertos_cm33_core0" name="host_lpm_hid_mouse_freertos_cm33_core0" brief="This is one example demo support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_lpm_host_hid_mouse/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_lpm_host_hid_mouse/freertos/cm33_core0" type="xml">
            <files mask="host_lpm_hid_mouse_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_lpm_hid_mouse_bm_cm33_core0" name="host_lpm_hid_mouse_bm_cm33_core0" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_lpm_host_hid_mouse/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_lpm_host_hid_mouse/bm/cm33_core0" type="xml">
            <files mask="host_lpm_hid_mouse_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_video_camera_freertos_cm33_core0" name="host_video_camera_freertos_cm33_core0" brief="The application supports to get JPEG image from camera function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_video_camera/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_video_camera/freertos/cm33_core0" type="xml">
            <files mask="host_video_camera_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_printer_plain_text_freertos_cm33_core0" name="host_printer_plain_text_freertos_cm33_core0" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_printer_plain_text/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_printer_plain_text/freertos/cm33_core0" type="xml">
            <files mask="host_printer_plain_text_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_printer_plain_text_bm_cm33_core0" name="host_printer_plain_text_bm_cm33_core0" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_printer_plain_text/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_printer_plain_text/bm/cm33_core0" type="xml">
            <files mask="host_printer_plain_text_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_phdc_manager_freertos_cm33_core0" name="host_phdc_manager_freertos_cm33_core0" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_phdc_manager/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_phdc_manager/freertos/cm33_core0" type="xml">
            <files mask="host_phdc_manager_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_phdc_manager_bm_cm33_core0" name="host_phdc_manager_bm_cm33_core0" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_phdc_manager/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_phdc_manager/bm/cm33_core0" type="xml">
            <files mask="host_phdc_manager_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_msd_fatfs_freertos_cm33_core0" name="host_msd_fatfs_freertos_cm33_core0" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_msd_fatfs/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_msd_fatfs/freertos/cm33_core0" type="xml">
            <files mask="host_msd_fatfs_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_msd_fatfs_bm_cm33_core0" name="host_msd_fatfs_bm_cm33_core0" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_msd_fatfs/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_msd_fatfs/bm/cm33_core0" type="xml">
            <files mask="host_msd_fatfs_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_msd_command_freertos_cm33_core0" name="host_msd_command_freertos_cm33_core0" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_msd_command/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_msd_command/freertos/cm33_core0" type="xml">
            <files mask="host_msd_command_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_msd_command_bm_cm33_core0" name="host_msd_command_bm_cm33_core0" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_msd_command/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_msd_command/bm/cm33_core0" type="xml">
            <files mask="host_msd_command_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_hid_mouse_keyboard_freertos_cm33_core0" name="host_hid_mouse_keyboard_freertos_cm33_core0" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_hid_mouse_keyboard/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_hid_mouse_keyboard/freertos/cm33_core0" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_hid_mouse_keyboard_bm_cm33_core0" name="host_hid_mouse_keyboard_bm_cm33_core0" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_hid_mouse_keyboard/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_hid_mouse_keyboard/bm/cm33_core0" type="xml">
            <files mask="host_hid_mouse_keyboard_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_hid_mouse_freertos_cm33_core0" name="host_hid_mouse_freertos_cm33_core0" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_hid_mouse/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_hid_mouse/freertos/cm33_core0" type="xml">
            <files mask="host_hid_mouse_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_hid_mouse_bm_cm33_core0" name="host_hid_mouse_bm_cm33_core0" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_hid_mouse/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_hid_mouse/bm/cm33_core0" type="xml">
            <files mask="host_hid_mouse_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_hid_generic_freertos_cm33_core0" name="host_hid_generic_freertos_cm33_core0" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_hid_generic/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_hid_generic/freertos/cm33_core0" type="xml">
            <files mask="host_hid_generic_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_hid_generic_bm_cm33_core0" name="host_hid_generic_bm_cm33_core0" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_hid_generic/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_hid_generic/bm/cm33_core0" type="xml">
            <files mask="host_hid_generic_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_cdc_freertos_cm33_core0" name="host_cdc_freertos_cm33_core0" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_cdc/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_cdc/freertos/cm33_core0" type="xml">
            <files mask="host_cdc_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_cdc_bm_cm33_core0" name="host_cdc_bm_cm33_core0" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_cdc/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_cdc/bm/cm33_core0" type="xml">
            <files mask="host_cdc_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_audio_speaker_freertos_cm33_core0" name="host_audio_speaker_freertos_cm33_core0" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_audio_speaker/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_audio_speaker/freertos/cm33_core0" type="xml">
            <files mask="host_audio_speaker_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_audio_speaker_bm_cm33_core0" name="host_audio_speaker_bm_cm33_core0" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_audio_speaker/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_audio_speaker/bm/cm33_core0" type="xml">
            <files mask="host_audio_speaker_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_host_audio_recorder_freertos_cm33_core0" name="host_audio_recorder_freertos_cm33_core0" brief="The Host Audio example supports the audio recorder device. @n The application prints the audio recorder information when the USB recorder device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_host_audio_recorder/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_host_audio_recorder/freertos/cm33_core0" type="xml">
            <files mask="host_audio_recorder_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_suspend_resume_hid_mouse_lite_bm_cm33_core0" name="dev_suspend_resume_hid_mouse_lite_bm_cm33_core0" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm33_core0" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_suspend_resume_hid_mouse_freertos_cm33_core0" name="dev_suspend_resume_hid_mouse_freertos_cm33_core0" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm33_core0" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_suspend_resume_hid_mouse_bm_cm33_core0" name="dev_suspend_resume_hid_mouse_bm_cm33_core0" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm33_core0" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_lpm_hid_mouse_lite_bm_cm33_core0" name="dev_lpm_hid_mouse_lite_bm_cm33_core0" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_lpm_device_hid_mouse_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_lpm_device_hid_mouse_lite/bm/cm33_core0" type="xml">
            <files mask="dev_lpm_hid_mouse_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_lpm_hid_mouse_freertos_cm33_core0" name="dev_lpm_hid_mouse_freertos_cm33_core0" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_lpm_device_hid_mouse/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_lpm_device_hid_mouse/freertos/cm33_core0" type="xml">
            <files mask="dev_lpm_hid_mouse_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_lpm_hid_mouse_bm_cm33_core0" name="dev_lpm_hid_mouse_bm_cm33_core0" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_lpm_device_hid_mouse/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_lpm_device_hid_mouse/bm/cm33_core0" type="xml">
            <files mask="dev_lpm_hid_mouse_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_video_virtual_camera_lite_bm_cm33_core0" name="dev_video_virtual_camera_lite_bm_cm33_core0" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_video_virtual_camera_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_video_virtual_camera_lite/bm/cm33_core0" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_video_virtual_camera_freertos_cm33_core0" name="dev_video_virtual_camera_freertos_cm33_core0" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_video_virtual_camera/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_video_virtual_camera/freertos/cm33_core0" type="xml">
            <files mask="dev_video_virtual_camera_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_video_virtual_camera_bm_cm33_core0" name="dev_video_virtual_camera_bm_cm33_core0" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_video_virtual_camera/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_video_virtual_camera/bm/cm33_core0" type="xml">
            <files mask="dev_video_virtual_camera_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_printer_virtual_plain_text_lite_bm_cm33_core0" name="dev_printer_virtual_plain_text_lite_bm_cm33_core0" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm33_core0" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_printer_virtual_plain_text_freertos_cm33_core0" name="dev_printer_virtual_plain_text_freertos_cm33_core0" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm33_core0" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_printer_virtual_plain_text_bm_cm33_core0" name="dev_printer_virtual_plain_text_bm_cm33_core0" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_printer_virtual_plain_text/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_printer_virtual_plain_text/bm/cm33_core0" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_phdc_weighscale_lite_bm_cm33_core0" name="dev_phdc_weighscale_lite_bm_cm33_core0" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_phdc_weighscale_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_phdc_weighscale_lite/bm/cm33_core0" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_phdc_weighscale_freertos_cm33_core0" name="dev_phdc_weighscale_freertos_cm33_core0" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_phdc_weighscale/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_phdc_weighscale/freertos/cm33_core0" type="xml">
            <files mask="dev_phdc_weighscale_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_phdc_weighscale_bm_cm33_core0" name="dev_phdc_weighscale_bm_cm33_core0" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_phdc_weighscale/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_phdc_weighscale/bm/cm33_core0" type="xml">
            <files mask="dev_phdc_weighscale_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_mtp_lite_bm_cm33_core0" name="dev_mtp_lite_bm_cm33_core0" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_mtp_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_mtp_lite/bm/cm33_core0" type="xml">
            <files mask="dev_mtp_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_mtp_freertos_cm33_core0" name="dev_mtp_freertos_cm33_core0" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_mtp/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_mtp/freertos/cm33_core0" type="xml">
            <files mask="dev_mtp_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_mtp_bm_cm33_core0" name="dev_mtp_bm_cm33_core0" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_mtp/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_mtp/bm/cm33_core0" type="xml">
            <files mask="dev_mtp_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_msc_ramdisk_lite_bm_cm33_core0" name="dev_msc_ramdisk_lite_bm_cm33_core0" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_msc_ramdisk_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_msc_ramdisk_lite/bm/cm33_core0" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_msc_ramdisk_freertos_cm33_core0" name="dev_msc_ramdisk_freertos_cm33_core0" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_msc_ramdisk/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_msc_ramdisk/freertos/cm33_core0" type="xml">
            <files mask="dev_msc_ramdisk_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_msc_ramdisk_bm_cm33_core0" name="dev_msc_ramdisk_bm_cm33_core0" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_msc_ramdisk/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_msc_ramdisk/bm/cm33_core0" type="xml">
            <files mask="dev_msc_ramdisk_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_msc_disk_lite_bm_cm33_core0" name="dev_msc_disk_lite_bm_cm33_core0" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_msc_disk_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_msc_disk_lite/bm/cm33_core0" type="xml">
            <files mask="dev_msc_disk_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_msc_disk_freertos_cm33_core0" name="dev_msc_disk_freertos_cm33_core0" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_msc_disk/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_msc_disk/freertos/cm33_core0" type="xml">
            <files mask="dev_msc_disk_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_msc_disk_bm_cm33_core0" name="dev_msc_disk_bm_cm33_core0" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_msc_disk/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_msc_disk/bm/cm33_core0" type="xml">
            <files mask="dev_msc_disk_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_hid_mouse_lite_bm_cm33_core0" name="dev_hid_mouse_lite_bm_cm33_core0" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_hid_mouse_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_hid_mouse_lite/bm/cm33_core0" type="xml">
            <files mask="dev_hid_mouse_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_hid_mouse_freertos_cm33_core0" name="dev_hid_mouse_freertos_cm33_core0" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_hid_mouse/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_hid_mouse/freertos/cm33_core0" type="xml">
            <files mask="dev_hid_mouse_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_hid_mouse_bm_cm33_core0" name="dev_hid_mouse_bm_cm33_core0" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_hid_mouse/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_hid_mouse/bm/cm33_core0" type="xml">
            <files mask="dev_hid_mouse_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_hid_generic_lite_bm_cm33_core0" name="dev_hid_generic_lite_bm_cm33_core0" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_hid_generic_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_hid_generic_lite/bm/cm33_core0" type="xml">
            <files mask="dev_hid_generic_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_hid_generic_freertos_cm33_core0" name="dev_hid_generic_freertos_cm33_core0" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_hid_generic/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_hid_generic/freertos/cm33_core0" type="xml">
            <files mask="dev_hid_generic_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_hid_generic_bm_cm33_core0" name="dev_hid_generic_bm_cm33_core0" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_hid_generic/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_hid_generic/bm/cm33_core0" type="xml">
            <files mask="dev_hid_generic_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_dfu_lite_bm_cm33_core0" name="dev_dfu_lite_bm_cm33_core0" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_dfu_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_dfu_lite/bm/cm33_core0" type="xml">
            <files mask="dev_dfu_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_dfu_freertos_cm33_core0" name="dev_dfu_freertos_cm33_core0" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_dfu/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_dfu/freertos/cm33_core0" type="xml">
            <files mask="dev_dfu_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_dfu_bm_cm33_core0" name="dev_dfu_bm_cm33_core0" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_dfu/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_dfu/bm/cm33_core0" type="xml">
            <files mask="dev_dfu_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33_core0" name="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33_core0" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm33_core0" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_hid_mouse_hid_keyboard_freertos_cm33_core0" name="dev_composite_hid_mouse_hid_keyboard_freertos_cm33_core0" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm33_core0" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_hid_mouse_hid_keyboard_bm_cm33_core0" name="dev_composite_hid_mouse_hid_keyboard_bm_cm33_core0" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm33_core0" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_hid_audio_unified_lite_bm_cm33_core0" name="dev_composite_hid_audio_unified_lite_bm_cm33_core0" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_audio_unified_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_audio_unified_lite/bm/cm33_core0" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_hid_audio_unified_freertos_cm33_core0" name="dev_composite_hid_audio_unified_freertos_cm33_core0" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_audio_unified/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_audio_unified/freertos/cm33_core0" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_hid_audio_unified_bm_cm33_core0" name="dev_composite_hid_audio_unified_bm_cm33_core0" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_audio_unified/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_hid_audio_unified/bm/cm33_core0" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33_core0" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33_core0" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_vcom_cdc_vcom_freertos_cm33_core0" name="dev_composite_cdc_vcom_cdc_vcom_freertos_cm33_core0" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_vcom_cdc_vcom_bm_cm33_core0" name="dev_composite_cdc_vcom_cdc_vcom_bm_cm33_core0" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_msc_disk_lite_bm_cm33_core0" name="dev_composite_cdc_msc_disk_lite_bm_cm33_core0" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_msc_disk_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_msc_disk_freertos_cm33_core0" name="dev_composite_cdc_msc_disk_freertos_cm33_core0" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc_disk/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc_disk/freertos/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_msc_disk_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_msc_disk_bm_cm33_core0" name="dev_composite_cdc_msc_disk_bm_cm33_core0" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc_disk/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc_disk/bm/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_msc_disk_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_msc_lite_bm_cm33_core0" name="dev_composite_cdc_msc_lite_bm_cm33_core0" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_msc_freertos_cm33_core0" name="dev_composite_cdc_msc_freertos_cm33_core0" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc/freertos/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_composite_cdc_msc_bm_cm33_core0" name="dev_composite_cdc_msc_bm_cm33_core0" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_composite_cdc_msc/bm/cm33_core0" type="xml">
            <files mask="dev_composite_cdc_msc_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_cdc_vcom_lite_bm_cm33_core0" name="dev_cdc_vcom_lite_bm_cm33_core0" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_cdc_vcom_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_cdc_vcom_lite/bm/cm33_core0" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_cdc_vcom_freertos_cm33_core0" name="dev_cdc_vcom_freertos_cm33_core0" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_cdc_vcom/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_cdc_vcom/freertos/cm33_core0" type="xml">
            <files mask="dev_cdc_vcom_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_cdc_vcom_bm_cm33_core0" name="dev_cdc_vcom_bm_cm33_core0" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_cdc_vcom/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_cdc_vcom/bm/cm33_core0" type="xml">
            <files mask="dev_cdc_vcom_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_audio_speaker_lite_bm_cm33_core0" name="dev_audio_speaker_lite_bm_cm33_core0" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_audio_speaker_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_audio_speaker_lite/bm/cm33_core0" type="xml">
            <files mask="dev_audio_speaker_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_audio_speaker_freertos_cm33_core0" name="dev_audio_speaker_freertos_cm33_core0" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_audio_speaker/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_audio_speaker/freertos/cm33_core0" type="xml">
            <files mask="dev_audio_speaker_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_audio_speaker_bm_cm33_core0" name="dev_audio_speaker_bm_cm33_core0" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_audio_speaker/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_audio_speaker/bm/cm33_core0" type="xml">
            <files mask="dev_audio_speaker_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_audio_generator_lite_bm_cm33_core0" name="dev_audio_generator_lite_bm_cm33_core0" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_audio_generator_lite/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_audio_generator_lite/bm/cm33_core0" type="xml">
            <files mask="dev_audio_generator_lite_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_audio_generator_freertos_cm33_core0" name="dev_audio_generator_freertos_cm33_core0" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_audio_generator/freertos/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_audio_generator/freertos/cm33_core0" type="xml">
            <files mask="dev_audio_generator_freertos_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dev_audio_generator_bm_cm33_core0" name="dev_audio_generator_bm_cm33_core0" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/mimxrt700evk/usb_examples/usb_device_audio_generator/bm/cm33_core0">
          <external path="boards/mimxrt700evk/usb_examples/usb_device_audio_generator/bm/cm33_core0" type="xml">
            <files mask="dev_audio_generator_bm_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_static_image_ultraface_view" name="static_image_ultraface_view" brief="Vision Pipeline example using Ultraface model" toolchain="armgcc" compiler="compiler_gcc" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/mpp/static_image_ultraface_view">
          <external path="boards/mimxrt700evk/eiq_examples/mpp/static_image_ultraface_view" type="xml">
            <files mask="static_image_ultraface_view_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_static_image_persondetect_view" name="static_image_persondetect_view" brief="Vision Pipeline example using Fastestdet model" toolchain="armgcc" compiler="compiler_gcc" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/mpp/static_image_persondetect_view">
          <external path="boards/mimxrt700evk/eiq_examples/mpp/static_image_persondetect_view" type="xml">
            <files mask="static_image_persondetect_view_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_static_image_nanodet_view" name="static_image_nanodet_view" brief="Vision Pipeline example using Nanodet model" toolchain="armgcc" compiler="compiler_gcc" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/mpp/static_image_nanodet_view">
          <external path="boards/mimxrt700evk/eiq_examples/mpp/static_image_nanodet_view" type="xml">
            <files mask="static_image_nanodet_view_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_static_image_mobilenet_view" name="static_image_mobilenet_view" brief="Vision Pipeline example using MobileNetv1 model" toolchain="armgcc" compiler="compiler_gcc" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/mpp/static_image_mobilenet_view">
          <external path="boards/mimxrt700evk/eiq_examples/mpp/static_image_mobilenet_view" type="xml">
            <files mask="static_image_mobilenet_view_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_label_image_hifi4_cm33_core0" name="tflm_label_image_hifi4_cm33_core0" brief="The tflm_label_image_hifi4 demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_label_image_hifi4/cm33_core0">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_label_image_hifi4/cm33_core0" type="xml">
            <files mask="tflm_label_image_hifi4_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_cifar10_hifi4_cm33_core0" name="tflm_cifar10_hifi4_cm33_core0" brief="The tflm_cifar10_hifi4 demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_cifar10_hifi4/cm33_core0">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_cifar10_hifi4/cm33_core0" type="xml">
            <files mask="tflm_cifar10_hifi4_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_lib_cm33_core0" name="tflm_lib_cm33_core0" brief="Library build project for TensorFlow Lite Micro" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_lib/cm33_core0">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_lib/cm33_core0" type="xml">
            <files mask="tflm_lib_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_modelrunner_cm33_core0" name="tflm_modelrunner_cm33_core0" brief="ModelRunner for TFlite" toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_modelrunner/cm33_core0">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_modelrunner/cm33_core0" type="xml">
            <files mask="tflm_modelrunner_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_label_image_ext_mem_cm33_core0" name="tflm_label_image_ext_mem_cm33_core0" brief="Label image external memory example for TensorFlow Lite Micro" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_label_image_ext_mem/cm33_core0">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_label_image_ext_mem/cm33_core0" type="xml">
            <files mask="tflm_label_image_ext_mem_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_label_image_cm33_core0" name="tflm_label_image_cm33_core0" brief="Label image example for TensorFlow Lite Micro" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_label_image/cm33_core0">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_label_image/cm33_core0" type="xml">
            <files mask="tflm_label_image_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_cifar10_cm33_core0" name="tflm_cifar10_cm33_core0" brief="CIFAR-10 example for TensorFlow Lite Micro" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_cifar10/cm33_core0">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_cifar10/cm33_core0" type="xml">
            <files mask="tflm_cifar10_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_kws_cm33_core0" name="tflm_kws_cm33_core0" brief="Keyword spotting example for TensorFlow Lite Micro" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_kws/cm33_core0">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_kws/cm33_core0" type="xml">
            <files mask="tflm_kws_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_aws_shadow_wifi_nxp" name="aws_shadow_wifi_nxp" brief="Demo for showing how to use the Device Shadow library's API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/mimxrt700evk/aws_examples/shadow_wifi_nxp/cm33_core0">
          <external path="boards/mimxrt700evk/aws_examples/shadow_wifi_nxp/cm33_core0" type="xml">
            <files mask="aws_shadow_wifi_nxp_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_fmstr_example_uart_cm33_core1" name="fmstr_example_uart_cm33_core1" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/mimxrt700evk/freemaster_examples/fmstr_uart/cm33_core1">
          <external path="boards/mimxrt700evk/freemaster_examples/fmstr_uart/cm33_core1" type="xml">
            <files mask="fmstr_example_uart_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_fmstr_example_rtt_cm33_core1" name="fmstr_example_rtt_cm33_core1" brief="FreeMASTER example using Segger RTT communication over J-Link interface. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/mimxrt700evk/freemaster_examples/fmstr_rtt/cm33_core1">
          <external path="boards/mimxrt700evk/freemaster_examples/fmstr_rtt/cm33_core1" type="xml">
            <files mask="fmstr_example_rtt_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_fmstr_example_pdbdm_cm33_core1" name="fmstr_example_pdbdm_cm33_core1" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/mimxrt700evk/freemaster_examples/fmstr_pdbdm/cm33_core1">
          <external path="boards/mimxrt700evk/freemaster_examples/fmstr_pdbdm/cm33_core1" type="xml">
            <files mask="fmstr_example_pdbdm_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_rpmsg_lite_pingpong_rtos_secondary_core" name="rpmsg_lite_pingpong_rtos_secondary_core" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system. The primary core releases the secondary core from the reset and then the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/mimxrt700evk/multicore_examples/rpmsg_lite_pingpong_rtos/cm33_core1">
          <external path="boards/mimxrt700evk/multicore_examples/rpmsg_lite_pingpong_rtos/cm33_core1" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_rpmsg_lite_pingpong_secondary_core" name="rpmsg_lite_pingpong_secondary_core" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system. The primary core releases the secondary core from the reset and then the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100.&#10;Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/mimxrt700evk/multicore_examples/rpmsg_lite_pingpong/cm33_core1">
          <external path="boards/mimxrt700evk/multicore_examples/rpmsg_lite_pingpong/cm33_core1" type="xml">
            <files mask="rpmsg_lite_pingpong_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_hello_world_secondary_core" name="hello_world_secondary_core" brief="The Multicore Hello World demo application demonstrates how to set up projects for individual cores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondary core toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/mimxrt700evk/multicore_examples/hello_world/cm33_core1">
          <external path="boards/mimxrt700evk/multicore_examples/hello_world/cm33_core1" type="xml">
            <files mask="hello_world_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_two_way_rpc_rpmsg_rtos_secondary_core" name="erpc_two_way_rpc_rpmsg_rtos_secondary_core" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server).&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/mimxrt700evk/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm33_core1">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm33_core1" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_matrix_multiply_rpmsg_rtos_secondary_core" name="erpc_matrix_multiply_rpmsg_rtos_secondary_core" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpc transport layer is used in this example application.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm33_core1">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm33_core1" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_matrix_multiply_rpmsg_secondary_core" name="erpc_matrix_multiply_rpmsg_secondary_core" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpc transport layer is used in this example application.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_rpmsg/cm33_core1">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_rpmsg/cm33_core1" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_matrix_multiply_mu_rtos_secondary_core" name="erpc_matrix_multiply_mu_rtos_secondary_core" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit) erpc transport layer is used in this example application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_mu_rtos/cm33_core1">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_mu_rtos/cm33_core1" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_erpc_matrix_multiply_mu_secondary_core" name="erpc_matrix_multiply_mu_secondary_core" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit) erpc transport layer is used in this example application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_mu/cm33_core1">
          <external path="boards/mimxrt700evk/multicore_examples/erpc_matrix_multiply_mu/cm33_core1" type="xml">
            <files mask="erpc_matrix_multiply_mu_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_xaf_playback_cm33_core1" name="dsp_xaf_playback_cm33_core1" brief="The dsp_xaf_playback demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/xaf_playback/cm33_core1">
          <external path="boards/mimxrt700evk/dsp_examples/xaf_playback/cm33_core1" type="xml">
            <files mask="dsp_xaf_playback_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_sema42_cm33_core1" name="dsp_sema42_cm33_core1" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/sema42/cm33_core1">
          <external path="boards/mimxrt700evk/dsp_examples/sema42/cm33_core1" type="xml">
            <files mask="dsp_sema42_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_naturedsp_cm33_core1" name="dsp_naturedsp_cm33_core1" brief="The dsp_naturedsp demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/naturedsp/cm33_core1">
          <external path="boards/mimxrt700evk/dsp_examples/naturedsp/cm33_core1" type="xml">
            <files mask="dsp_naturedsp_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_mu_polling_cm33_core1" name="dsp_mu_polling_cm33_core1" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/mu_polling/cm33_core1">
          <external path="boards/mimxrt700evk/dsp_examples/mu_polling/cm33_core1" type="xml">
            <files mask="dsp_mu_polling_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_mu_interrupt_cm33_core1" name="dsp_mu_interrupt_cm33_core1" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/mu_interrupt/cm33_core1">
          <external path="boards/mimxrt700evk/dsp_examples/mu_interrupt/cm33_core1" type="xml">
            <files mask="dsp_mu_interrupt_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_hello_world_usart_cm33_core1" name="dsp_hello_world_usart_cm33_core1" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/hello_world_usart/cm33_core1">
          <external path="boards/mimxrt700evk/dsp_examples/hello_world_usart/cm33_core1" type="xml">
            <files mask="dsp_hello_world_usart_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_tickless_lpc_cm33_core1" name="freertos_tickless_lpc_cm33_core1" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using timer module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_tickless_lpc/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_tickless_lpc/cm33_core1" type="xml">
            <files mask="freertos_tickless_lpc_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_swtimer_cm33_core1" name="freertos_swtimer_cm33_core1" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_swtimer/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_swtimer/cm33_core1" type="xml">
            <files mask="freertos_swtimer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_sem_static_cm33_core1" name="freertos_sem_static_cm33_core1" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_sem_static/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_sem_static/cm33_core1" type="xml">
            <files mask="freertos_sem_static_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_sem_cm33_core1" name="freertos_sem_cm33_core1" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two different tasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_sem/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_sem/cm33_core1" type="xml">
            <files mask="freertos_sem_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_queue_cm33_core1" name="freertos_queue_cm33_core1" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_queue/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_queue/cm33_core1" type="xml">
            <files mask="freertos_queue_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_mutex_cm33_core1" name="freertos_mutex_cm33_core1" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_mutex/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_mutex/cm33_core1" type="xml">
            <files mask="freertos_mutex_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_hello_cm33_core1" name="freertos_hello_cm33_core1" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and to provide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; message via debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_hello/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_hello/cm33_core1" type="xml">
            <files mask="freertos_hello_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_generic_cm33_core1" name="freertos_generic_cm33_core1" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation from http://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of several tasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data to xQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number of received messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given from vApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_generic/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_generic/cm33_core1" type="xml">
            <files mask="freertos_generic_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_freertos_event_cm33_core1" name="freertos_event_cm33_core1" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/mimxrt700evk/freertos_examples/freertos_event/cm33_core1">
          <external path="boards/mimxrt700evk/freertos_examples/freertos_event/cm33_core1" type="xml">
            <files mask="freertos_event_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_bus_slave_cm33_core1" name="i3c_bus_slave_cm33_core1" brief="The i3c_bus_slave example shows how to use i3c_bus component to work as i3c bus slave." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/i3c" path="boards/mimxrt700evk/component_examples/i3c_bus/slave/cm33_core1">
          <external path="boards/mimxrt700evk/component_examples/i3c_bus/slave/cm33_core1" type="xml">
            <files mask="i3c_bus_slave_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_bus_master_cm33_core1" name="i3c_bus_master_cm33_core1" brief="The i3c_bus_master example shows how to use i3c_bus component to create I3C bus and i3c master on bus." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/i3c" path="boards/mimxrt700evk/component_examples/i3c_bus/master/cm33_core1">
          <external path="boards/mimxrt700evk/component_examples/i3c_bus/master/cm33_core1" type="xml">
            <files mask="i3c_bus_master_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpuart_interrupt_transfer_cm33_core1" name="cmsis_lpuart_interrupt_transfer_cm33_core1" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/mimxrt700evk/cmsis_driver_examples/lpuart/interrupt_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpuart/interrupt_transfer/cm33_core1" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cmsis_lpuart_edma_transfer_cm33_core1" name="cmsis_lpuart_edma_transfer_cm33_core1" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/mimxrt700evk/cmsis_driver_examples/lpuart/edma_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/cmsis_driver_examples/lpuart/edma_transfer/cm33_core1" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_sema42_dualcore_secondary_core" name="sema42_dualcore_secondary_core" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sema42" path="boards/mimxrt700evk/driver_examples/sema42/dual_core/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/sema42/dual_core/cm33_core1" type="xml">
            <files mask="sema42_dualcore_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_pint_pin_interrupt_cm33_core1" name="pint_pin_interrupt_cm33_core1" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pint" path="boards/mimxrt700evk/driver_examples/pint/pin_interrupt/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/pint/pin_interrupt/cm33_core1" type="xml">
            <files mask="pint_pin_interrupt_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ostimer_example_cm33_core1" name="ostimer_example_cm33_core1" brief="The OSTIMER project is a simple demonstration program of the SDK OSTIMER driver. It sets the OSTIMER as the wakeup source from deep-sleep mode. After wakeup from deep-sleep mode, OS timer will set match value to trigger the interrupt while the timer count tick reach the match value about every 2 seconds." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ostimer" path="boards/mimxrt700evk/driver_examples/ostimer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/ostimer/cm33_core1" type="xml">
            <files mask="ostimer_example_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mu_polling_secondary_core" name="mu_polling_secondary_core" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" path="boards/mimxrt700evk/driver_examples/mu/polling/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/mu/polling/cm33_core1" type="xml">
            <files mask="mu_polling_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_mu_interrupt_secondary_core" name="mu_interrupt_secondary_core" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" path="boards/mimxrt700evk/driver_examples/mu/interrupt/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/mu/interrupt/cm33_core1" type="xml">
            <files mask="mu_interrupt_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_polling_cm33_core1" name="lpuart_polling_cm33_core1" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/polling/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/polling/cm33_core1" type="xml">
            <files mask="lpuart_polling_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_interrupt_transfer_cm33_core1" name="lpuart_interrupt_transfer_cm33_core1" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_transfer/cm33_core1" type="xml">
            <files mask="lpuart_interrupt_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_interrupt_rb_transfer_cm33_core1" name="lpuart_interrupt_rb_transfer_cm33_core1" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_rb_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/interrupt_rb_transfer/cm33_core1" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_interrupt_cm33_core1" name="lpuart_interrupt_cm33_core1" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/interrupt/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/interrupt/cm33_core1" type="xml">
            <files mask="lpuart_interrupt_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_edma_transfer_cm33_core1" name="lpuart_edma_transfer_cm33_core1" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/edma_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/edma_transfer/cm33_core1" type="xml">
            <files mask="lpuart_edma_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_lpuart_edma_rb_transfer_cm33_core1" name="lpuart_edma_rb_transfer_cm33_core1" brief="The lpuart_edma Ring Buffer Example project is to demonstrate usage of the KSDK lpuart driver." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/mimxrt700evk/driver_examples/lpuart/edma_rb_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/lpuart/edma_rb_transfer/cm33_core1" type="xml">
            <files mask="lpuart_edma_rb_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_irtc_cm33_core1" name="irtc_cm33_core1" brief="The IRTC project is a simple demonstration program of the SDK IRTC driver.This example is a low power module that provides time keeping and calendaring functions and additionally providesprotection against tampering, protection against spurious memory/register updates and battery operation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/irtc" path="boards/mimxrt700evk/driver_examples/irtc/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/irtc/cm33_core1" type="xml">
            <files mask="irtc_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_polling_b2b_transfer_slave_cm33_core1" name="i3c_polling_b2b_transfer_slave_cm33_core1" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mimxrt700evk/driver_examples/i3c/polling_b2b_transfer/slave/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/i3c/polling_b2b_transfer/slave/cm33_core1" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_polling_b2b_transfer_master_cm33_core1" name="i3c_polling_b2b_transfer_master_cm33_core1" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mimxrt700evk/driver_examples/i3c/polling_b2b_transfer/master/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/i3c/polling_b2b_transfer/master/cm33_core1" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_master_read_sensor_p3t1755_cm33_core1" name="i3c_master_read_sensor_p3t1755_cm33_core1" brief="The i3c_master_read_sensor_p3t1755 example shows how to use i3c driver as master to communicate with sensor P3T1755." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mimxrt700evk/driver_examples/i3c/master_read_sensor_p3t1755/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/i3c/master_read_sensor_p3t1755/cm33_core1" type="xml">
            <files mask="i3c_master_read_sensor_p3t1755_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_interrupt_b2b_transfer_slave_cm33_core1" name="i3c_interrupt_b2b_transfer_slave_cm33_core1" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mimxrt700evk/driver_examples/i3c/interrupt_b2b_transfer/slave/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/i3c/interrupt_b2b_transfer/slave/cm33_core1" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_interrupt_b2b_transfer_master_cm33_core1" name="i3c_interrupt_b2b_transfer_master_cm33_core1" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mimxrt700evk/driver_examples/i3c/interrupt_b2b_transfer/master/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/i3c/interrupt_b2b_transfer/master/cm33_core1" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_edma_b2b_transfer_slave_cm33_core1" name="i3c_edma_b2b_transfer_slave_cm33_core1" brief="The i3c_edma_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as slave and another i3c instance on the other board as master. Slave sends a piece of data to master, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mimxrt700evk/driver_examples/i3c/edma_b2b_transfer/slave/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/i3c/edma_b2b_transfer/slave/cm33_core1" type="xml">
            <files mask="i3c_edma_b2b_transfer_slave_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_i3c_edma_b2b_transfer_master_cm33_core1" name="i3c_edma_b2b_transfer_master_cm33_core1" brief="The i3c_edma_b2b_transfer_master example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/mimxrt700evk/driver_examples/i3c/edma_b2b_transfer/master/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/i3c/edma_b2b_transfer/master/cm33_core1" type="xml">
            <files mask="i3c_edma_b2b_transfer_master_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_gpio_input_interrupt_cm33_core1" name="gpio_input_interrupt_cm33_core1" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/mimxrt700evk/driver_examples/gpio/input_interrupt/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/gpio/input_interrupt/cm33_core1" type="xml">
            <files mask="gpio_input_interrupt_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_glikey_cm33_core1" name="glikey_cm33_core1" brief="The GLIKEY Example project is a demonstration program that uses the MCUX SDK software to show funcionality of GLIKEY IP." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/glikey" path="boards/mimxrt700evk/driver_examples/glikey/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/glikey/cm33_core1" type="xml">
            <files mask="glikey_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_gdet_cm33_core1" name="gdet_cm33_core1" brief="The GDET Example project is a demonstration program that uses the MCUX SDK software to show funcionality of Glitch Detect (GDET) module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gdet" path="boards/mimxrt700evk/driver_examples/gdet/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/gdet/cm33_core1" type="xml">
            <files mask="gdet_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_wrap_transfer_cm33_core1" name="edma4_wrap_transfer_cm33_core1" brief="The EDMA4 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/wrap_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/edma4/wrap_transfer/cm33_core1" type="xml">
            <files mask="edma4_wrap_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_scatter_gather_cm33_core1" name="edma4_scatter_gather_cm33_core1" brief="The EDMA4 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/scatter_gather/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/edma4/scatter_gather/cm33_core1" type="xml">
            <files mask="edma4_scatter_gather_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_ping_pong_transfer_cm33_core1" name="edma4_ping_pong_transfer_cm33_core1" brief="The EDMA4 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/ping_pong_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/edma4/ping_pong_transfer/cm33_core1" type="xml">
            <files mask="edma4_ping_pong_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_memset_cm33_core1" name="edma4_memset_cm33_core1" brief="The EDMA4 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/memset/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/edma4/memset/cm33_core1" type="xml">
            <files mask="edma4_memset_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_memory_to_memory_transfer_cm33_core1" name="edma4_memory_to_memory_transfer_cm33_core1" brief="The EDMA4 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/memory_to_memory_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/edma4/memory_to_memory_transfer/cm33_core1" type="xml">
            <files mask="edma4_memory_to_memory_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_memory_to_memory_cm33_core1" name="edma4_memory_to_memory_cm33_core1" brief="The EDMA4 memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA4 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/memory_to_memory/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/edma4/memory_to_memory/cm33_core1" type="xml">
            <files mask="edma4_memory_to_memory_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_interleave_transfer_cm33_core1" name="edma4_interleave_transfer_cm33_core1" brief="The EDMA4 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/interleave_transfer/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/edma4/interleave_transfer/cm33_core1" type="xml">
            <files mask="edma4_interleave_transfer_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_edma4_channel_link_cm33_core1" name="edma4_channel_link_cm33_core1" brief="The EDMA4 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma4" path="boards/mimxrt700evk/driver_examples/edma4/channel_link/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/edma4/channel_link/cm33_core1" type="xml">
            <files mask="edma4_channel_link_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ctimer_pwm_interrupt_example_cm33_core1" name="ctimer_pwm_interrupt_example_cm33_core1" brief="The Simple PWM Interrupt project is to demonstrate usage of the SDK CTimer driver as a PWM with interrupt callback functionsIn this example an IO pin connected to the LED is used as a PWM output line to generate a PWM signal.With an interrupt callback the PWM duty cycle is changed frequently in such a way that the LED brightness can be varied." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/mimxrt700evk/driver_examples/ctimer/simple_pwm_interrupt/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/ctimer/simple_pwm_interrupt/cm33_core1" type="xml">
            <files mask="ctimer_pwm_interrupt_example_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ctimer_pwm_example_cm33_core1" name="ctimer_pwm_example_cm33_core1" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, CTimer is used to generate a PWM signal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/mimxrt700evk/driver_examples/ctimer/simple_pwm/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/ctimer/simple_pwm/cm33_core1" type="xml">
            <files mask="ctimer_pwm_example_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ctimer_match_example_cm33_core1" name="ctimer_match_example_cm33_core1" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, the match feature of the CTimer is used to toggle the output level." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/mimxrt700evk/driver_examples/ctimer/simple_match/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/ctimer/simple_match/cm33_core1" type="xml">
            <files mask="ctimer_match_example_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_cdog_cm33_core1" name="cdog_cm33_core1" brief="The CDOG Example project is a demonstration program that uses the KSDK software to show funcionality of Code Watchdog Timer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/cdog" path="boards/mimxrt700evk/driver_examples/cdog/cm33_core1">
          <external path="boards/mimxrt700evk/driver_examples/cdog/cm33_core1" type="xml">
            <files mask="cdog_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_power_mode_with_hifi_secondary" name="power_mode_with_hifi_secondary" brief="The power_mode_switch application shows the usage of normal power mode control APIs for entering the low power mode: Sleep mode, Deep Sleep mode, Deep Sleep Retention mode, Deep Power Down mode and Full Deep Power Down mode. When the application runs to each low powermode, the device would cut off the power for specific modules to save energy. The device can be also waken up by prepared wakeup source from external event. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumpt_cm33_core1ion even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - In order to meet typedef power consumption of DateSheet manual, Please configure MCU under the following conditions. 1. Configure all pins as GPIO with pull-up resistor disabled in the IOCON block. 2. Configure GPIO pins as outputs using the GPIO DIR register. 3. Write 1 to the GPIO CLR register to drive the outputs LOW. 4. All peripherals disabled." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/power_mode_with_hifi/cm33_core1">
          <external path="boards/mimxrt700evk/demo_apps/power_mode_with_hifi/cm33_core1" type="xml">
            <files mask="power_mode_with_hifi_secondary_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_power_mode_comp_only_secondary" name="power_mode_comp_only_secondary" brief="The power_mode_switch application shows the usage of normal power mode control APIs for entering the low power mode: Sleep mode, Deep Sleep mode, Deep Sleep Retention mode, Deep Power Down mode and Full Deep Power Down mode. When the application runs to each low powermode, the device would cut off the power for specific modules to save energy. The device can be also waken up by prepared wakeup source from external event. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - In order to meet typedef power consumption of DateSheet manual, Please configure MCU under the following conditions. 1. Configure all pins as GPIO with pull-up resistor disabled in the IOCON block. 2. Configure GPIO pins as outputs using the GPIO DIR register. 3. Write 1 to the GPIO CLR register to drive the outputs LOW. 4. All peripherals disabled." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/power_mode_comp_only/cm33_core1">
          <external path="boards/mimxrt700evk/demo_apps/power_mode_comp_only/cm33_core1" type="xml">
            <files mask="power_mode_comp_only_secondary_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_power_manager_test_bm_dualcore_secondary" name="power_manager_test_bm_dualcore_secondary" brief="The power manager test application demonstrates the basic usage of power manager framework without RTOS. The demo tests all features of power manager framework, including notification manager, wakeup source manager and so on." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/power_manager_test/bm/cm33_core1">
          <external path="boards/mimxrt700evk/demo_apps/power_manager_test/bm/cm33_core1" type="xml">
            <files mask="power_manager_test_bm_dualcore_secondary_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_new_project_cm33_core1" name="new_project_cm33_core1" brief="The new project is provided as starting point for user to add with customized flow." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/new_project/cm33_core1">
          <external path="boards/mimxrt700evk/demo_apps/new_project/cm33_core1" type="xml">
            <files mask="new_project_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_hello_world_virtual_com_cm33_core1" name="hello_world_virtual_com_cm33_core1" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/hello_world_virtual_com/cm33_core1">
          <external path="boards/mimxrt700evk/demo_apps/hello_world_virtual_com/cm33_core1" type="xml">
            <files mask="hello_world_virtual_com_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_hello_world_cm33_core1" name="hello_world_cm33_core1" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/hello_world/cm33_core1">
          <external path="boards/mimxrt700evk/demo_apps/hello_world/cm33_core1" type="xml">
            <files mask="hello_world_cm33_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_power_mode_switch_secondary" name="power_mode_switch_secondary" brief="This demo is used to show all the power modes. With this demo, user can navigate all the power modes that are existing in primary core. In typical use case, the primary core is running the main control logic, while the slave core is used to run the protocol or other complex mid-ware independently. Then the slave core prepares the resource (data, message, etc) into the somewhere, so that the master core would fetch when necessary. In some other cases, master core would send the some kinds of message to the slave core, and ask the slave core to enter indicated power mode. This demo download the image to both cores, also provides the reference code to enter any power mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/mimxrt700evk/demo_apps/power_mode_switch/cm33_core1">
          <external path="boards/mimxrt700evk/demo_apps/power_mode_switch/cm33_core1" type="xml">
            <files mask="power_mode_switch_secondary_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_linear2tiledYUV_ezhv" name="ezhv_linear2tiledYUV_ezhv" brief="This project shows how to enable EZH-V to conver linearYUV to tiledYUV." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/linear2tiledYUV/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/linear2tiledYUV/ezhv" type="xml">
            <files mask="ezhv_linear2tiledYUV_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_flexio_dvp_ezhv" name="ezhv_flexio_dvp_ezhv" brief="This project shows how to enable display video port." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/flexio_dvp/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/flexio_dvp/ezhv" type="xml">
            <files mask="ezhv_flexio_dvp_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_msg_send_receive_ezhv" name="ezhv_msg_send_receive_ezhv" brief="This project shows how to use EZHV message send and receive feature with event manager." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/msg_send_receive/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/msg_send_receive/ezhv" type="xml">
            <files mask="ezhv_msg_send_receive_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_blc_detect_ezhv" name="ezhv_blc_detect_ezhv" brief="This project shows how to use EZHV Boolean Logic Combiner with event manager." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/blc_detect/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/blc_detect/ezhv" type="xml">
            <files mask="ezhv_blc_detect_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_m2mcopy_ezhv" name="ezhv_m2mcopy_ezhv" brief="This project shows how to use EZHV to copy memory between DTCM and SRAM." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/m2mcopy/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/m2mcopy/ezhv" type="xml">
            <files mask="ezhv_m2mcopy_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_led_blinky_ezhv" name="ezhv_led_blinky_ezhv" brief="This project shows how to toggle GPIO to driver LED." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/led_blinky/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/led_blinky/ezhv" type="xml">
            <files mask="ezhv_led_blinky_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_heartbeat_ezhv" name="ezhv_heartbeat_ezhv" brief="This project shows how to use EZHV heartbeat." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/heartbeat/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/heartbeat/ezhv" type="xml">
            <files mask="ezhv_heartbeat_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_gpio_toggle_ezhv" name="ezhv_gpio_toggle_ezhv" brief="This project shows how to toggle gpio by sending a message way." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/gpio_toggle/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/gpio_toggle/ezhv" type="xml">
            <files mask="ezhv_gpio_toggle_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_ezhv_arm2ezhv_int_chan_ezhv" name="ezhv_arm2ezhv_int_chan_ezhv" brief="This project shows how to use ARM send interrupt request to EZHV core, the interrupt request will wakeup EZHV core from wait state." category="ezhv_examples" path="boards/mimxrt700evk/ezhv_examples/arm2ezhv_int_chan/ezhv">
          <external path="boards/mimxrt700evk/ezhv_examples/arm2ezhv_int_chan/ezhv" type="xml">
            <files mask="ezhv_arm2ezhv_int_chan_ezhv_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_xaf_playback_hifi1" name="dsp_xaf_playback_hifi1" brief="The dsp_xaf_playback demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/xaf_playback/hifi1">
          <external path="boards/mimxrt700evk/dsp_examples/xaf_playback/hifi1" type="xml">
            <files mask="dsp_xaf_playback_hifi1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_naturedsp_hifi1" name="dsp_naturedsp_hifi1" brief="The dsp_naturedsp demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/naturedsp/hifi1">
          <external path="boards/mimxrt700evk/dsp_examples/naturedsp/hifi1" type="xml">
            <files mask="dsp_naturedsp_hifi1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_sema42_hifi1" name="dsp_sema42_hifi1" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/sema42/hifi1">
          <external path="boards/mimxrt700evk/dsp_examples/sema42/hifi1" type="xml">
            <files mask="dsp_sema42_hifi1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_mu_polling_hifi1" name="dsp_mu_polling_hifi1" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/mu_polling/hifi1">
          <external path="boards/mimxrt700evk/dsp_examples/mu_polling/hifi1" type="xml">
            <files mask="dsp_mu_polling_hifi1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_mu_interrupt_hifi1" name="dsp_mu_interrupt_hifi1" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/mu_interrupt/hifi1">
          <external path="boards/mimxrt700evk/dsp_examples/mu_interrupt/hifi1" type="xml">
            <files mask="dsp_mu_interrupt_hifi1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_hello_world_usart_hifi1" name="dsp_hello_world_usart_hifi1" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/hello_world_usart/hifi1">
          <external path="boards/mimxrt700evk/dsp_examples/hello_world_usart/hifi1" type="xml">
            <files mask="dsp_hello_world_usart_hifi1_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_xaf_playback_hifi4" name="dsp_xaf_playback_hifi4" brief="The dsp_xaf_playback demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/xaf_playback/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/xaf_playback/hifi4" type="xml">
            <files mask="dsp_xaf_playback_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_xaf_record_hifi4" name="dsp_xaf_record_hifi4" brief="The dsp_xaf_record demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/xaf_record/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/xaf_record/hifi4" type="xml">
            <files mask="dsp_xaf_record_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_label_image_hifi4_hifi4" name="tflm_label_image_hifi4_hifi4" brief="Label image example for TensorFlow Lite Micro" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_label_image_hifi4/hifi4">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_label_image_hifi4/hifi4" type="xml">
            <files mask="tflm_label_image_hifi4_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_tflm_cifar10_hifi4_hifi4" name="tflm_cifar10_hifi4_hifi4" brief="CIFAR-10 example for TensorFlow Lite Micro" category="eiq_examples" path="boards/mimxrt700evk/eiq_examples/tflm_cifar10_hifi4/hifi4">
          <external path="boards/mimxrt700evk/eiq_examples/tflm_cifar10_hifi4/hifi4" type="xml">
            <files mask="tflm_cifar10_hifi4_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_xaf_usb_demo_hifi4" name="dsp_xaf_usb_demo_hifi4" brief="The dsp_xaf_usb_demo demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/xaf_usb_demo/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/xaf_usb_demo/hifi4" type="xml">
            <files mask="dsp_xaf_usb_demo_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_naturedsp_hifi4" name="dsp_naturedsp_hifi4" brief="The dsp_naturedsp demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/naturedsp/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/naturedsp/hifi4" type="xml">
            <files mask="dsp_naturedsp_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_sema42_hifi4" name="dsp_sema42_hifi4" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/sema42/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/sema42/hifi4" type="xml">
            <files mask="dsp_sema42_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_mu_polling_hifi4" name="dsp_mu_polling_hifi4" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/mu_polling/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/mu_polling/hifi4" type="xml">
            <files mask="dsp_mu_polling_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_mu_interrupt_hifi4" name="dsp_mu_interrupt_hifi4" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/mu_interrupt/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/mu_interrupt/hifi4" type="xml">
            <files mask="dsp_mu_interrupt_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_hello_world_usart_hifi4" name="dsp_hello_world_usart_hifi4" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/hello_world_usart/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/hello_world_usart/hifi4" type="xml">
            <files mask="dsp_hello_world_usart_hifi4_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_dsp_audio_demo_bm_hifi4" name="dsp_audio_demo_bm_hifi4" brief="The dsp_audio_demo_bm demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/mimxrt700evk/dsp_examples/audio_demo_bm/hifi4">
          <external path="boards/mimxrt700evk/dsp_examples/audio_demo_bm/hifi4" type="xml">
            <files mask="dsp_audio_demo_bm_hifi4_v3_15.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="OCTAL_FLASH_mimxrt700evk">
              <driverBinary path="devices/MIMXRT798S/mcuxpresso" type="binary">
                <files mask="MIMXRT700_XSPI0_Octal.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
    <board id="mimxrt700evk_a8974" name="MIMXRT700-EVK-A8974" version="1.0.0" package="MIMXRT798SGFOA" type="kit">
      <description>i.MX RT700 evaluation kit with FRDM-STBI-A8974 sensor shield board having FXLS8974CF ultra-low power motion wakeup sensor for Industrial, Medical IoT Applications.</description>
      <image path="boards/mimxrt700evk_a8974" type="image">
        <files mask="mimxrt700evk_a8974.png"/>
      </image>
      <memory>
        <memoryBlock id="OCTAL_FLASH_mimxrt700evk_a8974" name="OCTAL_FLASH" addr="28000000" size="00800000" type="ExtFlash" access="RO"/>
      </memory>
      <examples>
        <example id="mimxrt700evk_a8974_fxls8974cf_poll_cm33_core0" name="fxls8974cf_poll_cm33_core0" brief="The FXLS8974CF POLL example application demonstrates the use of the FXLS8974CF sensor in polling Mode using I2C interface.The example demonstrates configuration sensor registers reguired to put the sensor in Poll Mode and read out samples. The polls for dataready and when samples are available sensor reads samples." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/mimxrt700evk_a8974/issdk_examples/sensors/fxls8974cf/fxls8974cf_poll/cm33_core0">
          <external path="boards/mimxrt700evk_a8974/issdk_examples/sensors/fxls8974cf/fxls8974cf_poll/cm33_core0" type="xml">
            <files mask="fxls8974cf_poll_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_a8974_fxls8974cf_interrupt_cm33_core0" name="fxls8974cf_interrupt_cm33_core0" brief="The FXLS8974CF POLL example application demonstrates configuring FXLS8974CF sensor in interrupt Mode using I2C interface.The example demonstrates configuration sensor registers reguired to put the sensor in Interrupt mode, wait for data ready event and read out samples. The dataready event is routed to INT pin when samples are available sensor reads samples." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/mimxrt700evk_a8974/issdk_examples/sensors/fxls8974cf/fxls8974cf_interrupt/cm33_core0">
          <external path="boards/mimxrt700evk_a8974/issdk_examples/sensors/fxls8974cf/fxls8974cf_interrupt/cm33_core0" type="xml">
            <files mask="fxls8974cf_interrupt_cm33_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="mimxrt700evk_a8974_fxls8974cf_motion_wakeup_cm33_core0" name="fxls8974cf_motion_wakeup_cm33_core0" brief="The FXLS8974CF motion wakeup example demonstrates motion detection using SDCD block and Auto-Wake/Sleep features. This example demonstrated configuration of FXLS8974CF SDCD block to detect motion and wake up from SLEEP mode to ACTIVE mode. Also the auto-wake/sleep feature configuration demonstrates how sensor can autonomously switch back to SLEEP mode on no-motion detection for configured ASLP counter." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/mimxrt700evk_a8974/issdk_examples/sensors/fxls8974cf/fxls8974cf_motion_wakeup/cm33_core0">
          <external path="boards/mimxrt700evk_a8974/issdk_examples/sensors/fxls8974cf/fxls8974cf_motion_wakeup/cm33_core0" type="xml">
            <files mask="fxls8974cf_motion_wakeup_cm33_core0_v3_15.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="OCTAL_FLASH_mimxrt700evk_a8974">
              <driverBinary path="devices/MIMXRT798S/mcuxpresso" type="binary">
                <files mask="MIMXRT700_XSPI0_Octal.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="MIMXRT798S" name="MIMXRT798S" version="1.0.0" full_name="MIMXRT798S" family="MIMXRT700" platform="i.MX">
      <description>i.MX RT700</description>
      <metadataSet>
        <metadata key="compatible_device.pemicro" value="MIMXRT798S"/>
        <metadata key="vendor.device.multicore" value="true"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
        <define name="CPU_$|package|_$|core_name|" value=""/>
      </defines>
      <core id="cm33_core0_MIMXRT798S" name="cm33_core0" fpu="true" type="cm33" boot_role="primary" dsp="true" sau="true" mpu="true" tz="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT798S_M33_0"/>
        </metadataSet>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="misc.options.MIMXRT798S.core_cm33_core0.MIMXRT798S" name="misc.options" value="--cachelib libahb_xcache.so"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <core id="cm33_core1_MIMXRT798S" name="cm33_core1" fpu="true" type="cm33" slave_roles="M33SLAVE" boot_role="secondary" dsp="true" sau="true" mpu="true" tz="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT798S_M33_1"/>
        </metadataSet>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="internal.core.index.MIMXRT798S.core_cm33_core1.MIMXRT798S" name="internal.core.index" value="1"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <memory>
        <memoryBlock id="SRAM_CMPT_MIMXRT798S" name="SRAM_CMPT" addr="00080000" size="00280000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_SHARED_MIMXRT798S" name="SRAM_SHARED" addr="00000000" size="00080000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_HIFI4_MIMXRT798S" name="SRAM_HIFI4" addr="00300000" size="00280000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_SENSE_MIMXRT798S" name="SRAM_SENSE" addr="00580000" size="00100000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_HIFI1_MIMXRT798S" name="SRAM_HIFI1" addr="00680000" size="00100000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="7680"/>
      <package id="MIMXRT798SGAWAR" name="MIMXRT798SGAWAR"/>
      <package id="MIMXRT798SGFOA" name="MIMXRT798SGFOA"/>
      <evaluation_boards>
        <evaluation_board name="fpga_rt700"/>
        <evaluation_board name="mimxrt700evk"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT798S" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT798S" name="internal.has_swo" value="true"/>
            <params id="misc.options.MIMXRT798S" name="misc.options" value="--bootromstall 0x50002094"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT798S" name="internal.connect.script" value="RT700_connect.scp"/>
            <params id="internal.connect.reset.debug.mcuxpresso.MIMXRT798S" name="internal.reset.script" value="RT700_reset.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
    <device id="MIMXRT735S" name="MIMXRT735S" version="1.0.0" full_name="MIMXRT735S" family="MIMXRT700" platform="i.MX">
      <description>i.MX RT700</description>
      <metadataSet>
        <metadata key="compatible_device.pemicro" value="MIMXRT735S"/>
        <metadata key="vendor.device.multicore" value="true"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
        <define name="CPU_$|package|_$|core_name|" value=""/>
      </defines>
      <core id="cm33_core0_MIMXRT735S" name="cm33_core0" fpu="true" type="cm33" boot_role="primary" dsp="true" sau="true" mpu="true" tz="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT735S_M33_0"/>
        </metadataSet>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="misc.options.MIMXRT735S.core_cm33_core0.MIMXRT735S" name="misc.options" value="--cachelib libahb_xcache.so"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <core id="cm33_core1_MIMXRT735S" name="cm33_core1" fpu="true" type="cm33" slave_roles="M33SLAVE" boot_role="secondary" dsp="true" sau="true" mpu="true" tz="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT735S_M33_1"/>
        </metadataSet>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="internal.core.index.MIMXRT735S.core_cm33_core1.MIMXRT735S" name="internal.core.index" value="1"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <memory>
        <memoryBlock id="SRAM_CMPT_MIMXRT735S" name="SRAM_CMPT" addr="00080000" size="00380000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_SHARED_MIMXRT735S" name="SRAM_SHARED" addr="00000000" size="00080000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_SENSE_MIMXRT735S" name="SRAM_SENSE" addr="00580000" size="00080000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_HIFI1_MIMXRT735S" name="SRAM_HIFI1" addr="00600000" size="00080000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="5120"/>
      <package id="MIMXRT735SGAWAR" name="MIMXRT735SGAWAR"/>
      <package id="MIMXRT735SGFOA" name="MIMXRT735SGFOA"/>
      <evaluation_boards>
        <evaluation_board name="mimxrt700evk"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT735S" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT735S" name="internal.has_swo" value="true"/>
            <params id="misc.options.MIMXRT735S" name="misc.options" value="--bootromstall 0x50002094"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT735S" name="internal.connect.script" value="RT700_connect.scp"/>
            <params id="internal.connect.reset.debug.mcuxpresso.MIMXRT735S" name="internal.reset.script" value="RT700_reset.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="platform.drivers.flash_config.mimxrt700evk.MIMXRT798S" name="flash_config" brief="flash config block" version="2.0.0" full_name="Flash config" category="Device/SDK drivers" user_visible="true" type="board_component" package_base_path="boards/mimxrt700evk/flash_config" project_base_path="flash_config">
      <defines>
        <define name="BOOT_HEADER_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_config.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="flash_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flash_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template.mimxrt700evk.MIMXRT798S" name="mimxrt700evk" brief="Board_project_template mimxrt700evk" version="1.0.0" full_name="Board_project_template mimxrt700evk" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/mimxrt700evk/project_template" project_base_path="board">
      <defines>
        <define name="FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT798S"/>
              <component_dependency value="utility.debug_console_template_config.MIMXRT798S"/>
              <component_dependency value="platform.utilities.assert.MIMXRT798S"/>
              <component_dependency value="component.serial_manager.MIMXRT798S"/>
              <component_dependency value="component.serial_manager_uart.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="utility.debug_console_lite.MIMXRT798S"/>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT798S"/>
            </all>
          </any_of>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.xspi.MIMXRT798S"/>
              <component_dependency value="platform.drivers.cache_xcache.MIMXRT798S"/>
              <component_dependency value="platform.drivers.flash_config.mimxrt700evk.MIMXRT798S"/>
              <component_dependency value="platform.drivers.power.MIMXRT798S"/>
              <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="platform.drivers.power.MIMXRT798S"/>
              <device_core_dependency value="cm33_core1_MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT798S"/>
          <component_dependency value="platform.drivers.gpio.MIMXRT798S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT798S"/>
          <component_dependency value="device.MIMXRT798S_startup.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT798S"/>
          <component_dependency value="platform.drivers.glikey.MIMXRT798S"/>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
      </source>
      <source relative_path="./cm33_core0" project_relative_path="./" config="true" type="c_include" device_cores="cm33_core0_MIMXRT798S">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./cm33_core0" project_relative_path="./" config="true" type="src" device_cores="cm33_core0_MIMXRT798S">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="./cm33_core1" project_relative_path="./" config="true" type="c_include" device_cores="cm33_core1_MIMXRT798S">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./cm33_core1" project_relative_path="./" config="true" type="src" device_cores="cm33_core1_MIMXRT798S">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="board_project_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="project_template.mimxrt700evk_a8974.MIMXRT798S" name="mimxrt700evk_a8974" brief="BOARD_Project_Template mimxrt700evk_a8974" version="1.0.0" full_name="BOARD_Project_Template mimxrt700evk_a8974" category="Sensors/ISSDK project template" user_visible="true" type="project_template" package_base_path="boards/mimxrt700evk_a8974" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT798S"/>
              <component_dependency value="utility.debug_console_template_config.MIMXRT798S"/>
              <component_dependency value="platform.utilities.assert.MIMXRT798S"/>
              <component_dependency value="component.serial_manager.MIMXRT798S"/>
              <component_dependency value="component.serial_manager_uart.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="utility.debug_console_lite.MIMXRT798S"/>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT798S"/>
            </all>
          </any_of>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.xspi.MIMXRT798S"/>
              <component_dependency value="platform.drivers.cache_xcache.MIMXRT798S"/>
              <component_dependency value="platform.drivers.flash_config.mimxrt700evk.MIMXRT798S"/>
              <component_dependency value="platform.drivers.power.MIMXRT798S"/>
              <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="platform.drivers.power.MIMXRT798S"/>
              <device_core_dependency value="cm33_core1_MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT798S"/>
          <component_dependency value="platform.drivers.gpio.MIMXRT798S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT798S"/>
          <component_dependency value="device.MIMXRT798S_startup.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT798S"/>
          <component_dependency value="platform.drivers.glikey.MIMXRT798S"/>
          <board_dependency value="mimxrt700evk_a8974"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="project_template" config="true" type="c_include">
        <files mask="board.h"/>
      </source>
      <source relative_path="project_template" config="true" type="src">
        <files mask="board.c"/>
      </source>
      <source relative_path="./project_template/cm33_core0" project_relative_path="./" config="true" type="c_include" device_cores="cm33_core0_MIMXRT798S">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./project_template/cm33_core0" project_relative_path="./" config="true" type="src" device_cores="cm33_core0_MIMXRT798S">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="./project_template/cm33_core1" project_relative_path="./" config="true" type="c_include" device_cores="cm33_core1_MIMXRT798S">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./project_template/cm33_core1" project_relative_path="./" config="true" type="src" device_cores="cm33_core1_MIMXRT798S">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="kit_project_template_mimxrt700evk_a8974.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" project_relative_path="./project_template" type="c_include"/>
        <include_path relative_path="project_template/cm33_core0" project_relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT798S"/>
        <include_path relative_path="project_template/cm33_core1" project_relative_path="./" type="c_include" device_cores="cm33_core1_MIMXRT798S"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT798S_debugger.MIMXRT798S" name="Device MIMXRT798S_debugger" brief="Device MIMXRT798S_debugger" version="1.0.0" full_name="Device MIMXRT798S_debugger" category="Device/SDK Utilities" user_visible="true" type="debugger" package_base_path="devices/MIMXRT798S" project_base_path="svd">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="xml" device_cores="cm33_core0_MIMXRT798S">
        <files mask="MIMXRT798S_cm33_core0.xml"/>
      </source>
      <source relative_path="./" type="xml" device_cores="cm33_core1_MIMXRT798S">
        <files mask="MIMXRT798S_cm33_core1.xml"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT798S" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_syscall_stub.c"/>
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="./" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="fsl_memcpy.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utilities_misc_utilities.MIMXRT798S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.incbin.MIMXRT798S" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities/incbin" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source toolchain="armgcc mdk" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_incbin.MIMXRT798S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console_template_config.MIMXRT798S" name="debug_console_template_config" brief="Utility debug_console Template Config" version="1.0.0" full_name="Utility debug_console Template Config" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="debug_console/config" config="true" type="c_include">
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_template_config.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console/config" type="c_include"/>
        <include_path relative_path="debug_console/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.sdio.template.MIMXRT798S" name="EdgeFast Bluetooth configuration template of SDIO" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template of SDIO" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="examples/_boards/mimxrt700evk/edgefast_bluetooth_examples/template" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.low_power.MIMXRT798S" name="middleware.edgefast_bluetooth.low_power" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.low_power" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.host_low_power.MIMXRT798S" name="middleware.edgefast_bluetooth.host_low_power" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.host_low_power" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.storage.MIMXRT798S" name="middleware.edgefast_bluetooth.storage" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.storage" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb.MIMXRT798S" name="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt595evk.MIMXRT798S" name="middleware.edgefast_bluetooth_flash_adapter_rt595evk" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt595evk" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt685evk.MIMXRT798S" name="middleware.edgefast_bluetooth_flash_adapter_rt685evk" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt685evk" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_mflash_offchip.MIMXRT798S" name="middleware.edgefast_bluetooth_mflash_offchip" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_mflash_offchip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_mflash_onchip_fmu.MIMXRT798S" name="middleware.edgefast_bluetooth_mflash_onchip_fmu" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_mflash_onchip_fmu" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec.MIMXRT798S" name="middleware.edgefast_bluetooth.codec" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8960.MIMXRT798S" name="middleware.edgefast_bluetooth.codec_wm8960" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8960" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8962.MIMXRT798S" name="middleware.edgefast_bluetooth.codec_wm8962" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8962" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8904.MIMXRT798S" name="middleware.edgefast_bluetooth.codec_wm8904" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8904" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_cs42448.MIMXRT798S" name="middleware.edgefast_bluetooth.codec_cs42448" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_cs42448" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_dialog7212.MIMXRT798S" name="middleware.edgefast_bluetooth.codec_dialog7212" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_dialog7212" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_sai_edma.MIMXRT798S" name="middleware.edgefast_bluetooth.codec_sai_edma" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_sai_edma" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_i2s_dma.MIMXRT798S" name="middleware.edgefast_bluetooth.codec_i2s_dma" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_i2s_dma" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.MIMXRT798S" name="systick_utils" brief="ISSDK Utils" version="1.8.0" full_name="Middleware issdk drivers systick_utils" category="Sensors/utils" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="drivers/systick" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source relative_path="drivers/systick" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_drivers_systick_utils.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/systick" type="c_include"/>
        <include_path relative_path="drivers/systick" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt.MIMXRT798S" name="coremqtt" brief="Client implementation of the MQTT 3.1.1 specification for embedded devices." version="2.1.1" full_name="coreMQTT" category="FreeRTOS/coreMQTT" user_visible="true" type="middleware" package_base_path="rtos/freertos/coremqtt" project_base_path="freertos/coremqtt">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_mqtt.c"/>
        <files mask="core_mqtt_serializer.c"/>
        <files mask="core_mqtt_state.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_mqtt.h"/>
        <files mask="core_mqtt_config_defaults.h"/>
        <files mask="core_mqtt_default_logging.h"/>
        <files mask="core_mqtt_serializer.h"/>
        <files mask="core_mqtt_state.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corejson.MIMXRT798S" name="corejson" brief="A parser strictly enforcing the ECMA-404 JSON standard, suitable for microcontrollers." version="3.2.0" full_name="coreJSON" category="FreeRTOS/coreJSON" user_visible="true" type="middleware" package_base_path="rtos/freertos/corejson" project_base_path="freertos/corejson">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_json.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_json.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corejson.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.backoffalgorithm.MIMXRT798S" name="backoffalgorithm" brief="Algorithm for calculating exponential backoff with jitter for network retry attempts." version="1.3.0" full_name="backoffalgorithm" category="FreeRTOS/backoffAlgorithm" user_visible="true" type="middleware" package_base_path="rtos/freertos/backoffalgorithm" project_base_path="freertos/backoffalgorithm">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="backoff_algorithm.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="backoff_algorithm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_backoffalgorithm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cmsis_drivers.MIMXRT798S" name="CMSIS driver" brief="CMSIS driver" version="2.0.0" full_name="CMSIS driver" category="Board Support/SDK Project Template" user_visible="true" type="CMSIS_driver" package_base_path="components/cmsis_drivers" project_base_path="CMSIS_drivers">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="platform.drivers.common.MIMXRT798S" name="common" brief="common Driver" version="2.5.0" full_name="common Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="fsl_common_arm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_common.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifi_bt_config.template.MIMXRT798S" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="wifi_bt_config.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="wifi_bt_config.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifi_bt_config_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="c_include"/>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_free_rtos.MIMXRT798S" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_freertos.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_thread.MIMXRT798S" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_threadx.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.firmware_download.MIMXRT798S" name="nxp_wireless_firmware_download" brief="NXP WLAN f/w dnld base" version="1.0.0" full_name="NXP WLAN f/w dnld base" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_firmware_download.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_thread.MIMXRT798S" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net/netxduo" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net/netxduo" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld_intf_abs.MIMXRT798S" name="wifi_nxp_fwdnld_intf_abs" brief="NXP Wi-Fi Interface Abstraction Layer" version="1.3.46" full_name="NXP Firmware Download abstraction layer" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="fwdnld_intf_abs" type="src">
        <files mask="fwdnld_intf_abs.c"/>
      </source>
      <source relative_path="fwdnld_intf_abs" type="c_include">
        <files mask="fwdnld_intf_abs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld_intf_abs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wps.MIMXRT798S" name="wifi_nxp_wps" brief="Middlware Wi-Fi WPS" version="1.0.0" full_name="NXP Wi-Fi WPS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.vglite.MIMXRT798S" name="vglite" brief="vglite library" version="4.0.90" full_name="Middleware vglite" category="vglite/vglite graphics library" user_visible="false" type="middleware" package_base_path="middleware/vglite/driver" project_base_path="vglite">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="inc" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="VGLite" type="src">
        <files mask="vg_lite.c"/>
        <files mask="vg_lite_image.c"/>
        <files mask="vg_lite_matrix.c"/>
        <files mask="vg_lite_path.c"/>
        <files mask="vg_lite_stroke.c"/>
      </source>
      <source relative_path="VGLite" type="c_include">
        <files mask="vg_lite_options.h"/>
        <files mask="vg_lite_context.h"/>
      </source>
      <source relative_path="VGLite/rtos" type="src">
        <files mask="vg_lite_os.c"/>
      </source>
      <source relative_path="VGLite/Series/gc555/0x423_ECO" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLite/Series/gc355/0x0_1216" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLite/Series/gc255/0x40A" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLiteKernel" type="c_include">
        <files mask="vg_lite_hal.h"/>
        <files mask="vg_lite_hw.h"/>
        <files mask="vg_lite_kernel.h"/>
        <files mask="vg_lite_option.h"/>
        <files mask="vg_lite_type.h"/>
        <files mask="vg_lite_debug.h"/>
      </source>
      <source relative_path="VGLiteKernel" type="src">
        <files mask="vg_lite_kernel.c"/>
      </source>
      <source relative_path="VGLiteKernel/rtos" type="src">
        <files mask="vg_lite_hal.c"/>
      </source>
      <source relative_path="VGLiteKernel/rtos" type="c_include">
        <files mask="vg_lite_platform.h"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="RELEASE_NOTES.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_vglite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="VGLite" type="c_include"/>
        <include_path relative_path="VGLite/rtos" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc555/0x423_ECO" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc355/0x0_1216" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc255/0x40A" type="c_include"/>
        <include_path relative_path="VGLiteKernel" type="c_include"/>
        <include_path relative_path="VGLiteKernel/rtos" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
        <include_path relative_path="VGLite" type="asm_include"/>
        <include_path relative_path="VGLite/rtos" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc555/0x423_ECO" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc355/0x0_1216" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc255/0x40A" type="asm_include"/>
        <include_path relative_path="VGLiteKernel" type="asm_include"/>
        <include_path relative_path="VGLiteKernel/rtos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb_pd.common_header.MIMXRT798S" name="USB PD Common Header" brief="Middleware usb pd common_header" version="2.11.0" full_name="USB PD Common Header" category="USB/USB PD Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb_pd.config_header.MIMXRT798S" name="PD Config Header" brief="USB Type-C PD Stack" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.khci_config_header.MIMXRT798S" name="USB host khci config header" brief="USB host khci config header" version="2.11.0" full_name="USB host khci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ohci_config_header.MIMXRT798S" name="USB host ohci config header" brief="USB host ohci config header" version="2.11.0" full_name="USB host ohci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ip3516hs_config_header.MIMXRT798S" name="USB host ip3516hs config header" brief="USB host ip3516hs config header" version="2.11.0" full_name="USB host ip3516hs config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ehci_config_header.MIMXRT798S" name="USB host ehci config header" brief="USB host ehci config header" version="2.11.0" full_name="USB host ehci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.khci_config_header.MIMXRT798S" name="USB device khci config header" brief="USB device khci config header" version="2.11.0" full_name="USB device khci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511fs_config_header.MIMXRT798S" name="USB device ip3511fs config header" brief="USB device ip3511fs config header" version="2.11.0" full_name="USB device ip3511fs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511hs_config_header.MIMXRT798S" name="USB device ip3511hs config header" brief="USB device ip3511hs config header" version="2.11.0" full_name="USB device ip3511hs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ehci_config_header.MIMXRT798S" name="USB device ehci config header" brief="USB device ehci config header" version="2.11.0" full_name="USB device ehci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.phydcd_config_header.MIMXRT798S" name="USB device phydcd config header" brief="USB device phydcd config header" version="2.11.0" full_name="USB device phydcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.hsdcd_config_header.MIMXRT798S" name="USB device hsdcd config header" brief="USB device hsdcd config header" version="2.11.0" full_name="USB device hsdcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.tinycbor.MIMXRT798S" name="tinycbor" brief="Concise Binary Object Representation (CBOR) Library" version="0.6.0" full_name="TinyCBOR" category="TinyCBOR/TinyCBOR" user_visible="true" type="middleware" package_base_path="middleware/tinycbor" project_base_path="tinycbor">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tinycbor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.crypto.MIMXRT798S" name="PSATEST_NS_CRYPTO" brief="PSA Test Suite Crypto Non Secure" version="1.4" full_name="Middleware psatest ns crypto" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="CRYPTO" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="platform/targets/common/nspe/crypto" type="src">
        <files mask="pal_crypto_intf.c"/>
      </source>
      <source relative_path="platform/targets/common/nspe/crypto" type="c_include">
        <files mask="pal_crypto_intf.h"/>
      </source>
      <source relative_path="dev_apis/crypto/common" type="src">
        <files mask="test_crypto_common.c"/>
      </source>
      <source relative_path="dev_apis/crypto/common" type="c_include">
        <files mask="test_crypto_common.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c001" type="src">
        <files mask="test_c001.c"/>
        <files mask="test_entry_c001.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c001" type="c_include">
        <files mask="test_c001.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c002" type="src">
        <files mask="test_c002.c"/>
        <files mask="test_entry_c002.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c002" type="c_include">
        <files mask="test_c002.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c003" type="src">
        <files mask="test_c003.c"/>
        <files mask="test_entry_c003.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c003" type="c_include">
        <files mask="test_c003.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c004" type="src">
        <files mask="test_c004.c"/>
        <files mask="test_entry_c004.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c004" type="c_include">
        <files mask="test_c004.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c005" type="src">
        <files mask="test_c005.c"/>
        <files mask="test_entry_c005.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c005" type="c_include">
        <files mask="test_c005.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c006" type="src">
        <files mask="test_c006.c"/>
        <files mask="test_entry_c006.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c006" type="c_include">
        <files mask="test_c006.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c007" type="src">
        <files mask="test_c007.c"/>
        <files mask="test_entry_c007.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c007" type="c_include">
        <files mask="test_c007.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c008" type="src">
        <files mask="test_c008.c"/>
        <files mask="test_entry_c008.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c008" type="c_include">
        <files mask="test_c008.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c009" type="src">
        <files mask="test_c009.c"/>
        <files mask="test_entry_c009.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c009" type="c_include">
        <files mask="test_c009.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c010" type="src">
        <files mask="test_c010.c"/>
        <files mask="test_entry_c010.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c010" type="c_include">
        <files mask="test_c010.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c011" type="src">
        <files mask="test_c011.c"/>
        <files mask="test_entry_c011.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c011" type="c_include">
        <files mask="test_c011.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c012" type="src">
        <files mask="test_c012.c"/>
        <files mask="test_entry_c012.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c012" type="c_include">
        <files mask="test_c012.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c013" type="src">
        <files mask="test_c013.c"/>
        <files mask="test_entry_c013.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c013" type="c_include">
        <files mask="test_c013.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c014" type="src">
        <files mask="test_c014.c"/>
        <files mask="test_entry_c014.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c014" type="c_include">
        <files mask="test_c014.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c015" type="src">
        <files mask="test_c015.c"/>
        <files mask="test_entry_c015.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c015" type="c_include">
        <files mask="test_c015.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c016" type="src">
        <files mask="test_c016.c"/>
        <files mask="test_entry_c016.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c016" type="c_include">
        <files mask="test_c016.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c017" type="src">
        <files mask="test_c017.c"/>
        <files mask="test_entry_c017.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c017" type="c_include">
        <files mask="test_c017.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c018" type="src">
        <files mask="test_c018.c"/>
        <files mask="test_entry_c018.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c018" type="c_include">
        <files mask="test_c018.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c019" type="src">
        <files mask="test_c019.c"/>
        <files mask="test_entry_c019.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c019" type="c_include">
        <files mask="test_c019.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c020" type="src">
        <files mask="test_c020.c"/>
        <files mask="test_entry_c020.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c020" type="c_include">
        <files mask="test_c020.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c021" type="src">
        <files mask="test_c021.c"/>
        <files mask="test_entry_c021.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c021" type="c_include">
        <files mask="test_c021.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c022" type="src">
        <files mask="test_c022.c"/>
        <files mask="test_entry_c022.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c022" type="c_include">
        <files mask="test_c022.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c023" type="src">
        <files mask="test_c023.c"/>
        <files mask="test_entry_c023.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c023" type="c_include">
        <files mask="test_c023.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c024" type="src">
        <files mask="test_c024.c"/>
        <files mask="test_entry_c024.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c024" type="c_include">
        <files mask="test_c024.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c025" type="src">
        <files mask="test_c025.c"/>
        <files mask="test_entry_c025.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c025" type="c_include">
        <files mask="test_c025.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c026" type="src">
        <files mask="test_c026.c"/>
        <files mask="test_entry_c026.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c026" type="c_include">
        <files mask="test_c026.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c027" type="src">
        <files mask="test_c027.c"/>
        <files mask="test_entry_c027.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c027" type="c_include">
        <files mask="test_c027.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c028" type="src">
        <files mask="test_c028.c"/>
        <files mask="test_entry_c028.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c028" type="c_include">
        <files mask="test_c028.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c029" type="src">
        <files mask="test_c029.c"/>
        <files mask="test_entry_c029.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c029" type="c_include">
        <files mask="test_c029.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c030" type="src">
        <files mask="test_c030.c"/>
        <files mask="test_entry_c030.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c030" type="c_include">
        <files mask="test_c030.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c031" type="src">
        <files mask="test_c031.c"/>
        <files mask="test_entry_c031.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c031" type="c_include">
        <files mask="test_c031.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c032" type="src">
        <files mask="test_c032.c"/>
        <files mask="test_entry_c032.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c032" type="c_include">
        <files mask="test_c032.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c033" type="src">
        <files mask="test_c033.c"/>
        <files mask="test_entry_c033.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c033" type="c_include">
        <files mask="test_c033.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c034" type="src">
        <files mask="test_c034.c"/>
        <files mask="test_entry_c034.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c034" type="c_include">
        <files mask="test_c034.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c035" type="src">
        <files mask="test_c035.c"/>
        <files mask="test_entry_c035.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c035" type="c_include">
        <files mask="test_c035.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c036" type="src">
        <files mask="test_c036.c"/>
        <files mask="test_entry_c036.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c036" type="c_include">
        <files mask="test_c036.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c037" type="src">
        <files mask="test_c037.c"/>
        <files mask="test_entry_c037.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c037" type="c_include">
        <files mask="test_c037.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c038" type="src">
        <files mask="test_c038.c"/>
        <files mask="test_entry_c038.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c038" type="c_include">
        <files mask="test_c038.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c039" type="src">
        <files mask="test_c039.c"/>
        <files mask="test_entry_c039.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c039" type="c_include">
        <files mask="test_c039.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c040" type="src">
        <files mask="test_c040.c"/>
        <files mask="test_entry_c040.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c040" type="c_include">
        <files mask="test_c040.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c041" type="src">
        <files mask="test_c041.c"/>
        <files mask="test_entry_c041.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c041" type="c_include">
        <files mask="test_c041.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c042" type="src">
        <files mask="test_c042.c"/>
        <files mask="test_entry_c042.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c042" type="c_include">
        <files mask="test_c042.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c043" type="src">
        <files mask="test_c043.c"/>
        <files mask="test_entry_c043.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c043" type="c_include">
        <files mask="test_c043.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c044" type="src">
        <files mask="test_c044.c"/>
        <files mask="test_entry_c044.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c044" type="c_include">
        <files mask="test_c044.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c045" type="src">
        <files mask="test_c045.c"/>
        <files mask="test_entry_c045.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c045" type="c_include">
        <files mask="test_c045.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c046" type="src">
        <files mask="test_c046.c"/>
        <files mask="test_entry_c046.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c046" type="c_include">
        <files mask="test_c046.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c047" type="src">
        <files mask="test_c047.c"/>
        <files mask="test_entry_c047.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c047" type="c_include">
        <files mask="test_c047.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c048" type="src">
        <files mask="test_c048.c"/>
        <files mask="test_entry_c048.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c048" type="c_include">
        <files mask="test_c048.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c049" type="src">
        <files mask="test_c049.c"/>
        <files mask="test_entry_c049.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c049" type="c_include">
        <files mask="test_c049.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c050" type="src">
        <files mask="test_c050.c"/>
        <files mask="test_entry_c050.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c050" type="c_include">
        <files mask="test_c050.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c051" type="src">
        <files mask="test_c051.c"/>
        <files mask="test_entry_c051.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c051" type="c_include">
        <files mask="test_c051.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c052" type="src">
        <files mask="test_c052.c"/>
        <files mask="test_entry_c052.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c052" type="c_include">
        <files mask="test_c052.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c053" type="src">
        <files mask="test_c053.c"/>
        <files mask="test_entry_c053.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c053" type="c_include">
        <files mask="test_c053.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c054" type="src">
        <files mask="test_c054.c"/>
        <files mask="test_entry_c054.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c054" type="c_include">
        <files mask="test_c054.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c055" type="src">
        <files mask="test_c055.c"/>
        <files mask="test_entry_c055.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c055" type="c_include">
        <files mask="test_c055.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c056" type="src">
        <files mask="test_c056.c"/>
        <files mask="test_entry_c056.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c056" type="c_include">
        <files mask="test_c056.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c057" type="src">
        <files mask="test_c057.c"/>
        <files mask="test_entry_c057.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c057" type="c_include">
        <files mask="test_c057.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c058" type="src">
        <files mask="test_c058.c"/>
        <files mask="test_entry_c058.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c058" type="c_include">
        <files mask="test_c058.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c059" type="src">
        <files mask="test_c059.c"/>
        <files mask="test_entry_c059.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c059" type="c_include">
        <files mask="test_c059.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c060" type="src">
        <files mask="test_c060.c"/>
        <files mask="test_entry_c060.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c060" type="c_include">
        <files mask="test_c060.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c061" type="src">
        <files mask="test_c061.c"/>
        <files mask="test_entry_c061.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c061" type="c_include">
        <files mask="test_c061.h"/>
        <files mask="test_data.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_crypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/common/nspe/crypto" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/common" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c001" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c002" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c003" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c004" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c005" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c006" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c007" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c008" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c009" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c010" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c011" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c012" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c013" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c014" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c015" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c016" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c017" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c018" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c019" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c020" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c021" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c022" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c023" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c024" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c025" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c026" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c027" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c028" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c029" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c030" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c031" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c032" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c033" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c034" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c035" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c036" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c037" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c038" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c039" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c040" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c041" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c042" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c043" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c044" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c045" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c046" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c047" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c048" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c049" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c050" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c051" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c052" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c053" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c054" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c055" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c056" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c057" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c058" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c059" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c060" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c061" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/crypto" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/common" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c001" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c002" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c003" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c004" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c005" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c006" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c007" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c008" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c009" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c010" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c011" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c012" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c013" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c014" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c015" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c016" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c017" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c018" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c019" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c020" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c021" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c022" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c023" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c024" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c025" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c026" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c027" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c028" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c029" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c030" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c031" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c032" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c033" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c034" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c035" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c036" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c037" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c038" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c039" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c040" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c041" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c042" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c043" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c044" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c045" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c046" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c047" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c048" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c049" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c050" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c051" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c052" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c053" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c054" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c055" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c056" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c057" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c058" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c059" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c060" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c061" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.t_cose.MIMXRT798S" name="PSATEST_NS_INITIAL_ATTESTATION_1" brief="PSA Test Suite Initial Attestation Non Secure part 1" version="1.4" full_name="Middleware psatest ns initial_attestation part 1" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_sign1_sign.h"/>
        <files mask="t_cose_common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_t_cose.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.protected_storage.MIMXRT798S" name="PSATEST_NS_PROTECTED_STORAGE" brief="PSA Test Suite Protected Storage Non Secure" version="1.4" full_name="Middleware psatest ns protected_storage" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="PROTECTED_STORAGE" value=""/>
        <define name="PS_TEST" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="platform/targets/common/nspe/protected_storage" type="src">
        <files mask="pal_protected_storage_intf.c"/>
      </source>
      <source relative_path="platform/targets/common/nspe/protected_storage" type="c_include">
        <files mask="pal_protected_storage_intf.h"/>
      </source>
      <source relative_path="dev_apis/storage" type="c_include">
        <files mask="test_storage_common.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s001" type="src">
        <files mask="test_s001.c"/>
        <files mask="test_entry_s001.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s001" type="c_include">
        <files mask="test_s001.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s002" type="src">
        <files mask="test_s002.c"/>
        <files mask="test_entry_s002.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s002" type="c_include">
        <files mask="test_s002.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s003" type="src">
        <files mask="test_s003.c"/>
        <files mask="test_entry_s003.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s003" type="c_include">
        <files mask="test_s003.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s004" type="src">
        <files mask="test_s004.c"/>
        <files mask="test_entry_s004.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s004" type="c_include">
        <files mask="test_s004.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s005" type="src">
        <files mask="test_s005.c"/>
        <files mask="test_entry_s005.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s005" type="c_include">
        <files mask="test_s005.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s006" type="src">
        <files mask="test_s006.c"/>
        <files mask="test_entry_s006.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s006" type="c_include">
        <files mask="test_s006.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s007" type="src">
        <files mask="test_s007.c"/>
        <files mask="test_entry_s007.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s007" type="c_include">
        <files mask="test_s007.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s008" type="src">
        <files mask="test_s008.c"/>
        <files mask="test_entry_s008.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s008" type="c_include">
        <files mask="test_s008.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s009" type="src">
        <files mask="test_s009.c"/>
        <files mask="test_entry_s009.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s009" type="c_include">
        <files mask="test_s009.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s010" type="src">
        <files mask="test_s010.c"/>
        <files mask="test_entry_s010.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s010" type="c_include">
        <files mask="test_s010.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s011" type="src">
        <files mask="test_s011.c"/>
        <files mask="test_entry_s011.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s011" type="c_include">
        <files mask="test_s011.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s012" type="src">
        <files mask="test_s012.c"/>
        <files mask="test_entry_s012.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s012" type="c_include">
        <files mask="test_s012.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s013" type="src">
        <files mask="test_s013.c"/>
        <files mask="test_entry_s013.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s013" type="c_include">
        <files mask="test_s013.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s014" type="src">
        <files mask="test_s014.c"/>
        <files mask="test_entry_s014.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s014" type="c_include">
        <files mask="test_s014.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s015" type="src">
        <files mask="test_s015.c"/>
        <files mask="test_entry_s015.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s015" type="c_include">
        <files mask="test_s015.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s016" type="src">
        <files mask="test_s016.c"/>
        <files mask="test_entry_s016.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s016" type="c_include">
        <files mask="test_s016.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s017" type="src">
        <files mask="test_s017.c"/>
        <files mask="test_entry_s017.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s017" type="c_include">
        <files mask="test_s017.h"/>
        <files mask="test_data.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_protected_storage.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/common/nspe/protected_storage" type="c_include"/>
        <include_path relative_path="dev_apis/storage" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s001" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s002" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s003" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s004" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s005" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s006" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s007" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s008" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s009" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s010" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s011" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s012" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s013" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s014" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s015" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s016" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s017" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/protected_storage" type="asm_include"/>
        <include_path relative_path="dev_apis/storage" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s001" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s002" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s003" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s004" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s005" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s006" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s007" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s008" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s009" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s010" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s011" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s012" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s013" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s014" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s015" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s016" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s017" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.internal_trusted_storage.MIMXRT798S" name="PSATEST_NS_INTERNAL_TRUSTED_STORAGE" brief="PSA Test Suite Internal Trusted Storage Non Secure" version="1.4" full_name="Middleware psatest ns internal_trusted_storage" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="INTERNAL_TRUSTED_STORAGE" value=""/>
        <define name="ITS_TEST" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="platform/targets/common/nspe/internal_trusted_storage" type="src">
        <files mask="pal_internal_trusted_storage_intf.c"/>
      </source>
      <source relative_path="platform/targets/common/nspe/internal_trusted_storage" type="c_include">
        <files mask="pal_internal_trusted_storage_intf.h"/>
      </source>
      <source relative_path="dev_apis/storage" type="c_include">
        <files mask="test_storage_common.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s001" type="src">
        <files mask="test_s001.c"/>
        <files mask="test_entry_s001.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s001" type="c_include">
        <files mask="test_s001.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s002" type="src">
        <files mask="test_s002.c"/>
        <files mask="test_entry_s002.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s002" type="c_include">
        <files mask="test_s002.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s003" type="src">
        <files mask="test_s003.c"/>
        <files mask="test_entry_s003.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s003" type="c_include">
        <files mask="test_s003.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s004" type="src">
        <files mask="test_s004.c"/>
        <files mask="test_entry_s004.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s004" type="c_include">
        <files mask="test_s004.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s005" type="src">
        <files mask="test_s005.c"/>
        <files mask="test_entry_s005.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s005" type="c_include">
        <files mask="test_s005.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s006" type="src">
        <files mask="test_s006.c"/>
        <files mask="test_entry_s006.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s006" type="c_include">
        <files mask="test_s006.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s007" type="src">
        <files mask="test_s007.c"/>
        <files mask="test_entry_s007.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s007" type="c_include">
        <files mask="test_s007.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s008" type="src">
        <files mask="test_s008.c"/>
        <files mask="test_entry_s008.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s008" type="c_include">
        <files mask="test_s008.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s009" type="src">
        <files mask="test_s009.c"/>
        <files mask="test_entry_s009.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s009" type="c_include">
        <files mask="test_s009.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s010" type="src">
        <files mask="test_s010.c"/>
        <files mask="test_entry_s010.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s010" type="c_include">
        <files mask="test_s010.h"/>
        <files mask="test_data.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_internal_trusted_storage.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/common/nspe/internal_trusted_storage" type="c_include"/>
        <include_path relative_path="dev_apis/storage" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s001" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s002" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s003" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s004" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s005" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s006" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s007" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s008" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s009" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s010" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/internal_trusted_storage" type="asm_include"/>
        <include_path relative_path="dev_apis/storage" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s001" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s002" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s003" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s004" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s005" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s006" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s007" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s008" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s009" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s010" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT798S" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MIMXRT798S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/sdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
        <include_path relative_path="template/sdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MIMXRT798S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/sdif" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdif_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
        <include_path relative_path="template/sdif" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MIMXRT798S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/usdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_usdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
        <include_path relative_path="template/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pkcs11.MIMXRT798S" name="pkcs11" brief="Public Key Cryptography Standard #11 defines generic cryptographic token interface." version="2.40.1" full_name="pkcs11" category="AWS IoT/OASIS PKCS Standard 11" user_visible="true" type="middleware" package_base_path="middleware/pkcs11" project_base_path="pkcs11">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="pkcs11t.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.MIMXRT798S" name="mcmgr" brief="MCMgr" version="4.1.5" full_name="Multicore Manager" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <defines>
        <define name="MULTICORE_APP" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="mcmgr/src" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcmgr/src" type="c_include"/>
        <include_path relative_path="mcmgr/src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.common.MIMXRT798S" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_version.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_pre_post_action.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_codec.hpp"/>
        <files mask="erpc_basic_codec.hpp"/>
        <files mask="erpc_transport.hpp"/>
        <files mask="erpc_message_buffer.hpp"/>
        <files mask="erpc_message_loggers.hpp"/>
        <files mask="erpc_manually_constructed.hpp"/>
        <files mask="erpc_crc16.hpp"/>
        <files mask="erpc_client_server_common.hpp"/>
        <files mask="erpc_utils.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
        <files mask="erpc_crc16.cpp"/>
        <files mask="erpc_pre_post_action.cpp"/>
        <files mask="erpc_utils.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_transport_setup.h"/>
        <files mask="erpc_mbf_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_setup_extensions.h"/>
        <files mask="erpc_endianness_agnostic_example.h"/>
        <files mask="erpc_endianness_undefined.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source relative_path="erpc/erpc_c/config" type="c_include">
        <files mask="erpc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.doc.MIMXRT798S" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
        <files mask="SW-Content-Register.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="doc" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/config" project_relative_path="erpc_aux" config="true" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_threading.h" hidden="true"/>
        <files mask="erpc_serial.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_threading_pthreads.cpp" hidden="true"/>
        <files mask="erpc_serial.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp" hidden="true"/>
        <files mask="erpc_setup_serial.cpp" hidden="true"/>
        <files mask="erpc_setup_uart_zephyr.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp" hidden="true"/>
        <files mask="erpc_serial_transport.cpp" hidden="true"/>
        <files mask="erpc_tcp_transport.cpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="erpc_inter_thread_buffer_transport.hpp" hidden="true"/>
        <files mask="erpc_serial_transport.hpp" hidden="true"/>
        <files mask="erpc_tcp_transport.hpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="script">
        <files mask="setup.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="doc">
        <files mask="README_Pypi.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python/erpc" project_relative_path="erpc_aux" type="script">
        <files mask="__init__.py" hidden="true"/>
        <files mask="arbitrator.py" hidden="true"/>
        <files mask="basic_codec.py" hidden="true"/>
        <files mask="client.py" hidden="true"/>
        <files mask="codec.py" hidden="true"/>
        <files mask="crc16.py" hidden="true"/>
        <files mask="erpc_version.py" hidden="true"/>
        <files mask="server.py" hidden="true"/>
        <files mask="simple_server.py" hidden="true"/>
        <files mask="transport.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/bin" project_relative_path="erpc_aux" type="script">
        <files mask="txt_to_c.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj" project_relative_path="erpc_aux" type="other">
        <files mask="project.pbxproj" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" project_relative_path="erpc_aux" type="other">
        <files mask="contents.xcworkspacedata" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="annotations.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AstNode.hpp" hidden="true"/>
        <files mask="AstWalker.hpp" hidden="true"/>
        <files mask="CGenerator.hpp" hidden="true"/>
        <files mask="ErpcLexer.hpp" hidden="true"/>
        <files mask="Generator.hpp" hidden="true"/>
        <files mask="HexValues.hpp" hidden="true"/>
        <files mask="InterfaceDefinition.hpp" hidden="true"/>
        <files mask="JavaGenerator.hpp" hidden="true"/>
        <files mask="Logging.hpp" hidden="true"/>
        <files mask="ParseErrors.hpp" hidden="true"/>
        <files mask="PythonGenerator.hpp" hidden="true"/>
        <files mask="SearchPath.hpp" hidden="true"/>
        <files mask="SymbolScanner.hpp" hidden="true"/>
        <files mask="Token.hpp" hidden="true"/>
        <files mask="UniqueIdChecker.hpp" hidden="true"/>
        <files mask="Utils.hpp" hidden="true"/>
        <files mask="Value.hpp" hidden="true"/>
        <files mask="format_string.hpp" hidden="true"/>
        <files mask="options.hpp" hidden="true"/>
        <files mask="os_config.hpp" hidden="true"/>
        <files mask="smart_ptr.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="src">
        <files mask="AstNode.cpp" hidden="true"/>
        <files mask="AstWalker.cpp" hidden="true"/>
        <files mask="CGenerator.cpp" hidden="true"/>
        <files mask="ErpcLexer.cpp" hidden="true"/>
        <files mask="Generator.cpp" hidden="true"/>
        <files mask="HexValues.cpp" hidden="true"/>
        <files mask="InterfaceDefinition.cpp" hidden="true"/>
        <files mask="JavaGenerator.cpp" hidden="true"/>
        <files mask="Logging.cpp" hidden="true"/>
        <files mask="ParseErrors.cpp" hidden="true"/>
        <files mask="PythonGenerator.cpp" hidden="true"/>
        <files mask="SearchPath.cpp" hidden="true"/>
        <files mask="SymbolScanner.cpp" hidden="true"/>
        <files mask="Token.cpp" hidden="true"/>
        <files mask="UniqueIdChecker.cpp" hidden="true"/>
        <files mask="Utils.cpp" hidden="true"/>
        <files mask="erpcgen.cpp" hidden="true"/>
        <files mask="format_string.cpp" hidden="true"/>
        <files mask="options.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen_lexer.l" hidden="true"/>
        <files mask="erpcgen_parser.y" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="cpptempl.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="src">
        <files mask="cpptempl.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="other">
        <files mask="README.rst" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/templates" project_relative_path="erpc_aux" type="other">
        <files mask="c_client_header.template" hidden="true"/>
        <files mask="c_client_source.template" hidden="true"/>
        <files mask="c_common_header.template" hidden="true"/>
        <files mask="c_crc.template" hidden="true"/>
        <files mask="c_server_header.template" hidden="true"/>
        <files mask="c_server_source.template" hidden="true"/>
        <files mask="cpp_client_header.template" hidden="true"/>
        <files mask="cpp_client_source.template" hidden="true"/>
        <files mask="cpp_coders.template" hidden="true"/>
        <files mask="cpp_common_functions.template" hidden="true"/>
        <files mask="cpp_interface_header.template" hidden="true"/>
        <files mask="cpp_interface_source.template" hidden="true"/>
        <files mask="cpp_server_header.template" hidden="true"/>
        <files mask="cpp_server_source.template" hidden="true"/>
        <files mask="java_client.template" hidden="true"/>
        <files mask="java_coders.template" hidden="true"/>
        <files mask="java_const.template" hidden="true"/>
        <files mask="java_enum.template" hidden="true"/>
        <files mask="java_interface.template" hidden="true"/>
        <files mask="java_server.template" hidden="true"/>
        <files mask="java_struct.template" hidden="true"/>
        <files mask="py_client.template" hidden="true"/>
        <files mask="py_coders.template" hidden="true"/>
        <files mask="py_common.template" hidden="true"/>
        <files mask="py_global_init.template" hidden="true"/>
        <files mask="py_init.template" hidden="true"/>
        <files mask="py_interface.template" hidden="true"/>
        <files mask="py_server.template" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AliasType.hpp" hidden="true"/>
        <files mask="Annotation.hpp" hidden="true"/>
        <files mask="ArrayType.hpp" hidden="true"/>
        <files mask="BuiltinType.hpp" hidden="true"/>
        <files mask="ConstType.hpp" hidden="true"/>
        <files mask="DataType.hpp" hidden="true"/>
        <files mask="EnumMember.hpp" hidden="true"/>
        <files mask="EnumType.hpp" hidden="true"/>
        <files mask="Function.hpp" hidden="true"/>
        <files mask="FunctionType.hpp" hidden="true"/>
        <files mask="Group.hpp" hidden="true"/>
        <files mask="Interface.hpp" hidden="true"/>
        <files mask="ListType.hpp" hidden="true"/>
        <files mask="Program.hpp" hidden="true"/>
        <files mask="StructMember.hpp" hidden="true"/>
        <files mask="StructType.hpp" hidden="true"/>
        <files mask="Symbol.hpp" hidden="true"/>
        <files mask="SymbolScope.hpp" hidden="true"/>
        <files mask="UnionCase.hpp" hidden="true"/>
        <files mask="UnionType.hpp" hidden="true"/>
        <files mask="VoidType.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="src">
        <files mask="Type.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.sln" hidden="true"/>
        <files mask="erpcgen.vcxproj" hidden="true"/>
        <files mask="erpcgen.vcxproj.filters" hidden="true"/>
        <files mask="erpcgen.vcxproj.user" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="doc">
        <files mask="readme_erpcgen.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="src">
        <files mask="stdafx.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="c_include">
        <files mask="stdafx.h" hidden="true"/>
        <files mask="stdbool.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="Sniffer.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="src">
        <files mask="Sniffer.cpp" hidden="true"/>
        <files mask="erpcsniffer.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/mk" project_relative_path="erpc_aux" type="script">
        <files mask="common.mk" hidden="true"/>
        <files mask="erpc_common.mk" hidden="true"/>
        <files mask="flags.mk" hidden="true"/>
        <files mask="paths.mk" hidden="true"/>
        <files mask="subdirs.mk" hidden="true"/>
        <files mask="targets.mk" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/NOTEPADpp" project_relative_path="erpc_aux" type="xml">
        <files mask="IDl_deep_black.xml" hidden="true"/>
        <files mask="IDl_default.xml" hidden="true"/>
        <files mask="template_deep_black.xml" hidden="true"/>
        <files mask="template_default.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="vsc-extension-quickstart.md" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="other">
        <files mask="language-configuration.json" hidden="true"/>
        <files mask="package.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/.vscode" project_relative_path="erpc_aux" type="other">
        <files mask="launch.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/img" project_relative_path="erpc_aux" type="image">
        <files mask="erpcPic.png" hidden="true"/>
        <files mask="templatePic.png" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/syntaxes" project_relative_path="erpc_aux" type="other">
        <files mask="erpc.tmLanguage.json" hidden="true"/>
        <files mask="template.tmLanguage.json" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Mac" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Windows" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.exe" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_doc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.MIMXRT798S" name="multicore middleware" brief="Multicore SDK" version="2.16.0" full_name="Multicore Software Development Kit" category="Multicore/MulticoreSDK" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="multicore">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.mcuboot.nxp_bootutil_port.MIMXRT798S" name="mcuboot_bootutil.nxp_port" brief="NXP porting layer for MCUboot's bootutil code" version="2.0.0" full_name="NXP porting layer for MCUboot's bootutil code" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil/nxp_port">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source exclude="true" relative_path="keys" type="src">
        <files mask="enc-rsa2048-priv-minimal.c"/>
        <files mask="sign-rsa2048-pub.c"/>
        <files mask="sign-ecdsa-p256-pub.c"/>
      </source>
      <source exclude="true" relative_path="keys" type="other">
        <files mask="sign-rsa2048-pub.pem" hidden="true"/>
        <files mask="sign-rsa2048-priv.pem" hidden="true"/>
        <files mask="sign-ecdsa-p256-pub.pem" hidden="true"/>
        <files mask="sign-ecdsa-p256-priv.pem" hidden="true"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="boot.c"/>
        <files mask="bootutil_hooks.c"/>
        <files mask="keys.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="boot.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="flash_map.h"/>
      </source>
      <source relative_path="include/flash_map_backend" type="c_include">
        <files mask="flash_map_backend.h"/>
      </source>
      <source relative_path="include/mcuboot_config" type="c_include">
        <files mask="mcuboot_config.h"/>
        <files mask="mcuboot_logging.h"/>
      </source>
      <source relative_path="include/os" type="c_include">
        <files mask="os_malloc.h"/>
      </source>
      <source relative_path="include/sysflash" type="c_include">
        <files mask="sysflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_bootutil_port.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="flashapi" type="c_include"/>
        <include_path relative_path="keys" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mcuboot_config" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="flashapi" type="asm_include"/>
        <include_path relative_path="keys" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/mcuboot_config" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.stack_heap_default_mbedtls.MIMXRT798S" name="mcuboot_stack_heap_default_mbedtls" brief="MCUboot default stack/heap setup for MbedTLS" version="2.0.0" full_name="MCUboot default stack/heap setup for MbedTLS" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_stack_heap_default_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcuboot.stack_heap_default_tinycrypt.MIMXRT798S" name="mcuboot_stack_heap_default_tinycrypt" brief="MCUboot default stack/heap setup for TinyCrypt" version="2.0.0" full_name="MCUboot default stack/heap setup for TinyCrypt" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_stack_heap_default_tinycrypt.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcuboot.nxp_app_support.MIMXRT798S" name="mcuboot_app_support" brief="MCUboot application support layer" version="2.0.0" full_name="MCUboot application support layer" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil/app_support">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="app_support" type="src">
        <files mask="mcuboot_app_support.c"/>
      </source>
      <source relative_path="app_support" type="c_include">
        <files mask="mcuboot_app_support.h"/>
      </source>
      <source relative_path="include/mcuboot_config" type="c_include">
        <files mask="mcuboot_config.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="flash_map.h"/>
      </source>
      <source relative_path="include/sysflash" type="c_include">
        <files mask="sysflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_app_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="app_support" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mcuboot_config" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="app_support" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/mcuboot_config" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mcuboot.docs.MIMXRT798S" name="mcuboot_docs" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="docs" type="other">
    <files mask=".gitignore"/>
    <files mask="CNAME"/>
    <files mask="Gemfile"/>
    <files mask="Gemfile.lock"/>
    <files mask="PORTING.md"/>
    <files mask="SECURITY.md"/>
    <files mask="SubmittingPatches.md"/>
    <files mask="_config.yml"/>
    <files mask="design.md"/>
    <files mask="ecdsa.md"/>
    <files mask="encrypted_images.md"/>
    <files mask="imgtool.md"/>
    <files mask="index.md"/>
    <files mask="readme-espressif.md"/>
    <files mask="readme-mbed.md"/>
    <files mask="readme-mynewt.md"/>
    <files mask="readme-nuttx.md"/>
    <files mask="readme-riot.md"/>
    <files mask="readme-zephyr.md"/>
    <files mask="readme-nxp_mcux_sdk.md"/>
    <files mask="release-notes.md"/>
    <files mask="release.md"/>
    <files mask="serial_recovery.md"/>
    <files mask="signed_images.md"/>
    <files mask="testplan-mynewt.md"/>
    <files mask="testplan-zephyr.md"/>
  </source>
  <source relative_path="docs/release-notes.d" type="other">
    <files mask="00readme.md"/>
  </source>
</component>-->
    <!--<component id="middleware.mcuboot.scripts.MIMXRT798S" name="mcuboot_scripts" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="scripts" type="script">
    <files mask="assemble.py"/>
    <files mask="flash.sh"/>
    <files mask="gdb-boot.sh"/>
    <files mask="imgtool.py"/>
    <files mask="jgdb.sh"/>
    <files mask="jl.sh"/>
    <files mask="setup.py"/>
  </source>
  <source relative_path="scripts" type="other">
    <files mask="imgtool.nix"/>
    <files mask="mcubin.bt"/>
  </source>
  <source relative_path="scripts" type="doc">
    <files mask="requirements.txt"/>
  </source>
  <source relative_path="scripts/imgtool" type="script">
    <files mask="__init__.py"/>
    <files mask="boot_record.py"/>
    <files mask="dumpinfo.py"/>
    <files mask="image.py"/>
    <files mask="main.py"/>
    <files mask="version.py"/>
  </source>
  <source relative_path="scripts/imgtool/keys" type="script">
    <files mask="__init__.py"/>
    <files mask="ecdsa.py"/>
    <files mask="ecdsa_test.py"/>
    <files mask="ed25519.py"/>
    <files mask="ed25519_test.py"/>
    <files mask="general.py"/>
    <files mask="privatebytes.py"/>
    <files mask="rsa.py"/>
    <files mask="rsa_test.py"/>
    <files mask="x25519.py"/>
  </source>
</component>-->
    <component id="middleware.mcuboot.nxp_encrypted_xip.MIMXRT798S" name="mcuboot_encrypted_xip" brief="Encrypted XIP abstraction for MCUBoot" version="1.0.0" full_name="mcuboot_encrypted_xip" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/nxp_encrypted_xip" project_base_path="encrypted_xip">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="encrypted_xip_mcuboot_support.h"/>
        <files mask="encrypted_xip.h"/>
        <files mask="encrypted_xip_platform.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="encrypted_xip_mcuboot_support.c"/>
        <files mask="encrypted_xip.c"/>
        <files mask="encrypted_xip_platform_bee.c"/>
        <files mask="encrypted_xip_platform_iped.c"/>
        <files mask="encrypted_xip_platform_npx.c"/>
        <files mask="encrypted_xip_platform_otfad.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_encrypted_xip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.mbedtls-asn1.MIMXRT798S" name="mcuboot_mbedtls_asn1" brief="MCUBoot's subset of MbedTLS for ASN.1 parsing" version="2.0.0" full_name="mcuboot_mbedtls-asn1" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/mbedtls-asn1" project_base_path="mbedtls-asn1">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="asn1.h"/>
        <files mask="bignum.h"/>
        <files mask="build_info.h"/>
        <files mask="check_config.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecp.h"/>
        <files mask="error.h"/>
        <files mask="mbedtls_config.h"/>
        <files mask="md.h"/>
        <files mask="oid.h"/>
        <files mask="pk.h"/>
        <files mask="platform.h"/>
        <files mask="platform_util.h"/>
        <files mask="private_access.h"/>
        <files mask="rsa.h"/>
        <files mask="threading.h"/>
        <files mask="version.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="common.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="asn1parse.c"/>
        <files mask="platform_util.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_mbedtls-asn1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mcuboot.unused_files.MIMXRT798S" name="mcuboot_unused_files" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path=".github/workflows" type="other">
    <files mask="espressif.yaml"/>
    <files mask="fih_tests.yaml"/>
    <files mask="imgtool.yaml"/>
    <files mask="mynewt.yaml"/>
    <files mask="sim.yaml"/>
    <files mask="stale_issue.yml"/>
    <files mask="zephyr_build.yaml"/>
  </source>
  <source relative_path="./" type="other">
    <files mask=".gitignore"/>
    <files mask=".gitmodules"/>
    <files mask=".mbedignore"/>
    <files mask=".travis.yml-disabled"/>
    <files mask="CODE_OF_CONDUCT.md"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
    <files mask="NOTICE"/>
    <files mask="README.md"/>
    <files mask="enc-aes128kw.b64"/>
    <files mask="enc-aes256kw.b64"/>
    <files mask="enc-ec256-priv.pem"/>
    <files mask="enc-ec256-pub.pem"/>
    <files mask="enc-rsa2048-priv.pem"/>
    <files mask="enc-rsa2048-pub.pem"/>
    <files mask="enc-x25519-priv.pem"/>
    <files mask="enc-x25519-pub.pem"/>
    <files mask="go.mod"/>
    <files mask="project.yml"/>
    <files mask="repository.yml"/>
    <files mask="root-ec-p256-pkcs8.pem"/>
    <files mask="root-ec-p256.pem"/>
    <files mask="root-ec-p384-pkcs8.pem"/>
    <files mask="root-ec-p384.pem"/>
    <files mask="root-ed25519.pem"/>
    <files mask="root-rsa-2048.pem"/>
    <files mask="root-rsa-3072.pem"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="ChangeLogKSDK.txt"/>
    <files mask="SW-Content-Register.txt"/>
  </source>
  <source relative_path="boot/boot_serial/include/boot_serial" type="c_include">
    <files mask="boot_serial.h"/>
    <files mask="boot_serial_encryption.h"/>
  </source>
  <source relative_path="boot/boot_serial" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/boot_serial/src" type="src">
    <files mask="boot_serial.c"/>
    <files mask="boot_serial_encryption.c"/>
    <files mask="zcbor_bulk.c"/>
  </source>
  <source relative_path="boot/boot_serial/src" type="c_include">
    <files mask="boot_serial_priv.h"/>
    <files mask="zcbor_bulk.h"/>
  </source>
  <source relative_path="boot/boot_serial/test" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/boot_serial/test/src" type="src">
    <files mask="boot_test.c"/>
  </source>
  <source relative_path="boot/boot_serial/test/src" type="c_include">
    <files mask="boot_test.h"/>
  </source>
  <source relative_path="boot/boot_serial/test/src/testcases" type="src">
    <files mask="boot_serial_empty_img_msg.c"/>
    <files mask="boot_serial_empty_msg.c"/>
    <files mask="boot_serial_img_msg.c"/>
    <files mask="boot_serial_setup.c"/>
    <files mask="boot_serial_upload_bigger_image.c"/>
  </source>
  <source relative_path="boot/bootutil" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/bootutil" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/bootutil/zephyr" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/cypress" type="other">
    <files mask=".gitignore"/>
    <files mask="Makefile"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="script">
    <files mask="BlinkyApp.mk"/>
    <files mask="libs.mk"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="debug">
    <files mask="BlinkyApp_CM4_Debug.launch"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="other">
    <files mask="Readme.md"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp/linker" type="linker">
    <files mask="BlinkyApp_template.ld"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="c_include">
    <files mask="main.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="other">
    <files mask="ExternalMemory.md"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="linker">
    <files mask="MCUBootApp.ld"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="script">
    <files mask="MCUBootApp.mk"/>
    <files mask="libs.mk"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="debug">
    <files mask="MCUBootApp_CM0P_Debug.launch"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/config/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/config" type="c_include">
    <files mask="mcuboot_crypto_acc_config.h"/>
    <files mask="mcuboot_crypto_config.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="src">
    <files mask="cy_security_cnt.c"/>
    <files mask="cy_serial_flash_prog.c"/>
    <files mask="keys.c"/>
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/cypress" type="script">
    <files mask="common_libs.mk"/>
    <files mask="host.mk"/>
    <files mask="platforms.mk"/>
    <files mask="toolchains.mk"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal" type="src">
    <files mask="cy_flash_map.c"/>
    <files mask="cy_smif_psoc6.c"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/flash_qspi" type="src">
    <files mask="flash_qspi.c"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/flash_qspi" type="c_include">
    <files mask="flash_qspi.h"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/include" type="c_include">
    <files mask="cy_smif_psoc6.h"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/cypress/keys" type="other">
    <files mask="cypress-test-ec-p256.pem"/>
    <files mask="cypress-test-ec-p256.pub"/>
  </source>
  <source relative_path="boot/cypress/libs/retarget_io_pdl" type="src">
    <files mask="cy_retarget_io_pdl.c"/>
  </source>
  <source relative_path="boot/cypress/libs/retarget_io_pdl" type="c_include">
    <files mask="cy_retarget_io_pdl.h"/>
  </source>
  <source relative_path="boot/cypress/libs/watchdog" type="src">
    <files mask="watchdog.c"/>
  </source>
  <source relative_path="boot/cypress/libs/watchdog" type="c_include">
    <files mask="watchdog.h"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM0P/GCC_ARM" type="linker">
    <files mask="cy8c6xxa_cm0plus.ld"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM0P/GCC_ARM" type="other">
    <files mask="startup_psoc6_02_cm0plus.S"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM4/GCC_ARM" type="linker">
    <files mask="cy8c6xxa_cm4_dual.ld"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM4/GCC_ARM" type="other">
    <files mask="startup_psoc6_02_cm4.S"/>
  </source>
  <source relative_path="boot/cypress/platforms" type="src">
    <files mask="cycfg.c"/>
    <files mask="cycfg_clocks.c"/>
    <files mask="cycfg_peripherals.c"/>
    <files mask="cycfg_pins.c"/>
    <files mask="cycfg_routing.c"/>
    <files mask="cycfg_system.c"/>
  </source>
  <source relative_path="boot/cypress/platforms" type="c_include">
    <files mask="cycfg.h"/>
    <files mask="cycfg_clocks.h"/>
    <files mask="cycfg_peripherals.h"/>
    <files mask="cycfg_pins.h"/>
    <files mask="cycfg_routing.h"/>
    <files mask="cycfg_system.h"/>
  </source>
  <source relative_path="boot/cypress/platforms/retarget_io_pdl" type="src">
    <files mask="cy_retarget_io_pdl.c"/>
  </source>
  <source relative_path="boot/cypress/platforms/retarget_io_pdl" type="c_include">
    <files mask="cy_retarget_io_pdl.h"/>
  </source>
  <source relative_path="boot/espressif" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/espressif/ci_configs" type="other">
    <files mask="multi-boot.conf"/>
    <files mask="multi-image.conf"/>
    <files mask="secureboot-sign-ec256.conf"/>
    <files mask="secureboot-sign-ed25519.conf"/>
    <files mask="secureboot-sign-rsa2048.conf"/>
    <files mask="secureboot-sign-rsa3072.conf"/>
    <files mask="serialrecovery.conf"/>
  </source>
  <source relative_path="boot/espressif/hal" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/espressif/hal/include" type="c_include">
    <files mask="app_cpu_start.h"/>
    <files mask="bootloader_wdt.h"/>
    <files mask="esp_log.h"/>
    <files mask="esp_mcuboot_image.h"/>
    <files mask="soc_log.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32" type="script">
    <files mask="esp32.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c2" type="script">
    <files mask="esp32c2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c3" type="script">
    <files mask="esp32c3.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c3" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c6" type="script">
    <files mask="esp32c6.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c6" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32h2" type="script">
    <files mask="esp32h2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32h2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s2" type="script">
    <files mask="esp32s2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s3" type="script">
    <files mask="esp32s3.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s3" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/espressif/hal/src" type="src">
    <files mask="bootloader_banner.c"/>
    <files mask="bootloader_wdt.c"/>
    <files mask="flash_encrypt.c"/>
    <files mask="secure_boot.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32" type="src">
    <files mask="app_cpu_start.c"/>
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c2" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c3" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c6" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32h2" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32s3" type="src">
    <files mask="app_cpu_start.c"/>
  </source>
  <source relative_path="boot/espressif/include/crypto_config" type="script">
    <files mask="ec256.cmake"/>
    <files mask="ed25519.cmake"/>
    <files mask="rsa.cmake"/>
  </source>
  <source relative_path="boot/espressif/include/crypto_config" type="c_include">
    <files mask="mbedtls_custom_config.h"/>
  </source>
  <source relative_path="boot/espressif/include" type="c_include">
    <files mask="esp_loader.h"/>
  </source>
  <source relative_path="boot/espressif/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/espressif/include/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/espressif/include/serial_adapter" type="c_include">
    <files mask="serial_adapter.h"/>
  </source>
  <source relative_path="boot/espressif/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/espressif" type="src">
    <files mask="keys.c"/>
    <files mask="main.c"/>
    <files mask="os.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32" type="other">
    <files mask="bootloader-multi.conf"/>
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3" type="other">
    <files mask="bootloader-multi.conf"/>
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port" type="src">
    <files mask="esp_loader.c"/>
    <files mask="esp_mcuboot.c"/>
  </source>
  <source relative_path="boot/espressif/tools" type="script">
    <files mask="toolchain-esp32.cmake"/>
    <files mask="toolchain-esp32c2.cmake"/>
    <files mask="toolchain-esp32c3.cmake"/>
    <files mask="toolchain-esp32c6.cmake"/>
    <files mask="toolchain-esp32h2.cmake"/>
    <files mask="toolchain-esp32s2.cmake"/>
    <files mask="toolchain-esp32s3.cmake"/>
    <files mask="utils.cmake"/>
  </source>
  <source relative_path="boot/mbed" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/mbed" type="src">
    <files mask="app_enc_keys.c"/>
    <files mask="mcuboot_main.cpp"/>
  </source>
  <source relative_path="boot/mbed/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
    <files mask="secondary_bd.h"/>
  </source>
  <source relative_path="boot/mbed/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/mbed/include/os" type="c_include">
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/mbed/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/mbed/include/utils" type="src">
    <files mask="DataShare.cpp"/>
  </source>
  <source relative_path="boot/mbed/include/utils" type="c_include">
    <files mask="DataShare.h"/>
  </source>
  <source relative_path="boot/mbed" type="other">
    <files mask="mbed_lib.json"/>
  </source>
  <source relative_path="boot/mbed/src" type="src">
    <files mask="flash_map_backend.cpp"/>
    <files mask="secondary_bd.cpp"/>
  </source>
  <source relative_path="boot/mynewt" type="other">
    <files mask="README.md"/>
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart/include/boot_uart" type="c_include">
    <files mask="boot_uart.h"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart/src" type="src">
    <files mask="boot_uart.c"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend/src" type="src">
    <files mask="flash_map_extended.c"/>
  </source>
  <source relative_path="boot/mynewt/mcuboot_config/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/mynewt/mcuboot_config" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/nuttx/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/nuttx/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/nuttx/include/os" type="c_include">
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/nuttx/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/nuttx/include/watchdog" type="c_include">
    <files mask="watchdog.h"/>
  </source>
  <source relative_path="boot/nuttx" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/nuttx/src/flash_map_backend" type="src">
    <files mask="flash_map_backend.c"/>
  </source>
  <source relative_path="boot/nuttx/src/watchdog" type="src">
    <files mask="watchdog.c"/>
  </source>
  <source relative_path="boot/zcbor" type="script">
    <files mask="add_zcbor_copy_version.sh"/>
  </source>
  <source relative_path="boot/zcbor/include" type="c_include">
    <files mask="zcbor_common.h"/>
    <files mask="zcbor_debug.h"/>
    <files mask="zcbor_decode.h"/>
    <files mask="zcbor_encode.h"/>
  </source>
  <source relative_path="boot/zcbor" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/zcbor/src" type="src">
    <files mask="zcbor_common.c"/>
    <files mask="zcbor_decode.c"/>
    <files mask="zcbor_encode.c"/>
  </source>
  <source relative_path="boot/zephyr" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/zephyr" type="other">
    <files mask="Kconfig"/>
    <files mask="Kconfig.serial_recovery"/>
    <files mask="VERSION"/>
    <files mask="app.overlay"/>
    <files mask="nrf52840dk_nrf52840_cc310_ecdsa.conf"/>
    <files mask="prj.conf"/>
    <files mask="ram_load.conf"/>
    <files mask="sample.yaml"/>
    <files mask="serial_recovery.conf"/>
    <files mask="single_slot.conf"/>
    <files mask="usb_cdc_acm.overlay"/>
    <files mask="usb_cdc_acm_log_recovery.conf"/>
  </source>
  <source relative_path="boot/zephyr" type="src">
    <files mask="arm_cleanup.c"/>
    <files mask="boot_serial_extension_zephyr_basic.c"/>
    <files mask="boot_serial_extensions.c"/>
    <files mask="flash_map_extended.c"/>
    <files mask="flash_map_legacy.c"/>
    <files mask="hooks_sample.c"/>
    <files mask="keys.c"/>
    <files mask="main.c"/>
    <files mask="os.c"/>
    <files mask="serial_adapter.c"/>
    <files mask="shared_data.c"/>
    <files mask="single_loader.c"/>
  </source>
  <source relative_path="boot/zephyr/boards" type="other">
    <files mask="actinius_icarus.conf"/>
    <files mask="bl5340_dvk_cpuapp.conf"/>
    <files mask="circuitdojo_feather_nrf9160.conf"/>
    <files mask="conexio_stratus.conf"/>
    <files mask="disco_l475_iot1.conf"/>
    <files mask="esp32_devkitc_wroom.conf"/>
    <files mask="esp32_devkitc_wrover.conf"/>
    <files mask="esp32_ethernet_kit.conf"/>
    <files mask="esp32c3_devkitm.conf"/>
    <files mask="esp32s2_franzininho.conf"/>
    <files mask="esp32s2_saola.conf"/>
    <files mask="esp32s3_devkitm.conf"/>
    <files mask="esp_wrover_kit.conf"/>
    <files mask="flash_sim_driver.conf"/>
    <files mask="frdm_k64f.conf"/>
    <files mask="heltec_wifi_lora32_v2.conf"/>
    <files mask="icev_wireless.conf"/>
    <files mask="intel_s1000_crb.conf"/>
    <files mask="intel_s1000_crb.overlay"/>
    <files mask="lpcxpresso55s06.conf"/>
    <files mask="lpcxpresso55s16.conf"/>
    <files mask="lpcxpresso55s36.conf"/>
    <files mask="lpcxpresso55s69_cpu0.conf"/>
    <files mask="m5stickc_plus.conf"/>
    <files mask="mimxrt1020_evk.conf"/>
    <files mask="mimxrt1024_evk.conf"/>
    <files mask="mimxrt1050_evk_qspi.conf"/>
    <files mask="mimxrt1060_evk.conf"/>
    <files mask="mimxrt1060_evkb.conf"/>
    <files mask="mimxrt1064_evk.conf"/>
    <files mask="mimxrt1160_evk_cm7.conf"/>
    <files mask="mimxrt1170_evk_cm7.conf"/>
    <files mask="mimxrt595_evk_cm33.conf"/>
    <files mask="mimxrt685_evk_cm33.conf"/>
    <files mask="nrf51dk_nrf51422.conf"/>
    <files mask="nrf52840_big.overlay"/>
    <files mask="nrf52840_single_slot.overlay"/>
    <files mask="nrf52840dk_hooks_sample_overlay.conf"/>
    <files mask="nrf52840dk_nrf52840.conf"/>
    <files mask="nrf52840dk_qspi_nor.conf"/>
    <files mask="nrf52840dk_qspi_nor_secondary.overlay"/>
    <files mask="nrf52840dk_qspi_secondary_boot.conf"/>
    <files mask="nrf52840dk_ram.overlay"/>
    <files mask="nrf52840dk_ram_multi.overlay"/>
    <files mask="nrf52840dongle_nrf52840.conf"/>
    <files mask="nrf52_minimal_footprint.conf"/>
    <files mask="odroid_go.conf"/>
    <files mask="olimex_esp32_evb.conf"/>
    <files mask="pinnacle_100_dvk.conf"/>
    <files mask="sparkfun_thing_plus_nrf9160.conf"/>
    <files mask="stamp_c3.conf"/>
    <files mask="tlsr9518adk80d.conf"/>
    <files mask="xiao_esp32c3.conf"/>
  </source>
  <source relative_path="boot/zephyr/include" type="c_include">
    <files mask="arm_cleanup.h"/>
    <files mask="config-asn1.h"/>
    <files mask="config-ec.h"/>
    <files mask="config-ed25519.h"/>
    <files mask="config-kw.h"/>
    <files mask="config-rsa-kw.h"/>
    <files mask="config-rsa.h"/>
    <files mask="mcuboot-mbedtls-cfg.h"/>
    <files mask="platform-bench.h"/>
    <files mask="target.h"/>
  </source>
  <source relative_path="boot/zephyr/include/boot_serial" type="linker">
    <files mask="boot_serial.ld"/>
  </source>
  <source relative_path="boot/zephyr/include/boot_serial" type="c_include">
    <files mask="boot_serial_extensions.h"/>
  </source>
  <source relative_path="boot/zephyr/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/zephyr/include/hal" type="c_include">
    <files mask="hal_bsp.h"/>
    <files mask="hal_flash.h"/>
  </source>
  <source relative_path="boot/zephyr/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/zephyr/include/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/zephyr/include/serial_adapter" type="c_include">
    <files mask="serial_adapter.h"/>
  </source>
  <source relative_path="boot/zephyr/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/zephyr/targets" type="c_include">
    <files mask="arduino_101.h"/>
  </source>
  <source relative_path="ci" type="script">
    <files mask="check-signed-off-by.sh"/>
    <files mask="compare_versions.py"/>
    <files mask="espressif_install.sh"/>
    <files mask="espressif_run.sh"/>
    <files mask="fih-tests_install.sh"/>
    <files mask="fih-tests_run.sh"/>
    <files mask="get_features.py"/>
    <files mask="imgtool_install.sh"/>
    <files mask="imgtool_run.sh"/>
    <files mask="mynewt_install.sh"/>
    <files mask="mynewt_run.sh"/>
    <files mask="sim_install.sh"/>
    <files mask="sim_run.sh"/>
  </source>
  <source relative_path="ci/fih_test_docker" type="script">
    <files mask="damage_image.py"/>
    <files mask="execute_test.sh"/>
    <files mask="fi_make_manifest.sh"/>
    <files mask="fi_tester_gdb.sh"/>
    <files mask="generate_test_report.py"/>
    <files mask="run_fi_test.sh"/>
    <files mask="utils.py"/>
    <files mask="validate_output.py"/>
  </source>
  <source relative_path="ci/fih_test_docker/docker-build" type="other">
    <files mask="Dockerfile"/>
  </source>
  <source relative_path="ci/fih_test_docker/docker-build" type="script">
    <files mask="build.sh"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_kw" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_kw/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_rsa" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_rsa/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="ci/mynewt_targets/basic" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/bootserial" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/ecdsa" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/ecdsa_kw" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_kw" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_overwriteonly" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_rsaoaep" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_rsaoaep_bootstrap" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/swap_move" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci" type="doc">
    <files mask="requirements.txt"/>
  </source>
  <source relative_path="ext/fiat" type="other">
    <files mask="LICENSE"/>
    <files mask="METADATA"/>
    <files mask="README.chromium"/>
    <files mask="README.md"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/fiat/src" type="src">
    <files mask="curve25519.c"/>
  </source>
  <source relative_path="ext/fiat/src" type="c_include">
    <files mask="curve25519.h"/>
    <files mask="curve25519_tables.h"/>
  </source>
  <source relative_path="ext/mbedtls-asn1" type="other">
    <files mask="README"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/nrf" type="other">
    <files mask="README.md"/>
  </source>
  <source relative_path="ext/nrf" type="src">
    <files mask="cc310_glue.c"/>
  </source>
  <source relative_path="ext/nrf" type="c_include">
    <files mask="cc310_glue.h"/>
  </source>
  <source relative_path="ext/nxp_encrypted_xip/enc_xip_images" type="image">
    <files mask="three_slot_flow.jpg"/>
    <files mask="three_slot.jpg"/>
    <files mask="overwrite_only_flow.jpg"/>
    <files mask="overwrite_only.jpg"/>
    <files mask="keys_scheme.jpg"/>
    <files mask="iped_metadata.jpg"/>
    <files mask="general_metadata.jpg"/>
    <files mask="device_fleet_graph.jpg"/>
    <files mask="bee_rom_layout.jpg"/>
    <files mask="bee_metadata.jpg"/>
  </source>
  <source relative_path="ext/nxp_encrypted_xip" type="other">
    <files mask="mcuboot_encrypted_xip.md"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib/include/tinycrypt" type="c_include">
    <files mask="sha512.h"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib/source" type="src">
    <files mask="sha512.c"/>
  </source>
  <source relative_path="ext/tinycrypt" type="other">
    <files mask=".gitignore"/>
    <files mask="AUTHORS"/>
    <files mask="LICENSE"/>
    <files mask="Makefile"/>
    <files mask="README"/>
    <files mask="VERSION"/>
  </source>
  <source relative_path="ext/tinycrypt" type="script">
    <files mask="config.mk"/>
  </source>
  <source relative_path="ext/tinycrypt/documentation" type="other">
    <files mask="tinycrypt.rst"/>
  </source>
  <source relative_path="ext/tinycrypt/lib" type="other">
    <files mask="Makefile"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/tinycrypt/lib/include/tinycrypt" type="c_include">
    <files mask="ecc_dh.h"/>
  </source>
  <source relative_path="ext/tinycrypt/lib/source" type="src">
    <files mask="ecc_platform_specific.c"/>
    <files mask="ecc_dh.c"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="other">
    <files mask="Makefile"/>
  </source>
  <source relative_path="ext/tinycrypt/tests/include" type="c_include">
    <files mask="test_ecc_utils.h"/>
    <files mask="test_utils.h"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="binary">
    <files mask="pseudo-random-data.bin"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="src">
    <files mask="test_aes.c"/>
    <files mask="test_cbc_mode.c"/>
    <files mask="test_ccm_mode.c"/>
    <files mask="test_cmac_mode.c"/>
    <files mask="test_ctr_mode.c"/>
    <files mask="test_ctr_prng.c"/>
    <files mask="test_ecc_dh.c"/>
    <files mask="test_ecc_dsa.c"/>
    <files mask="test_ecc_utils.c"/>
    <files mask="test_hmac.c"/>
    <files mask="test_hmac_prng.c"/>
    <files mask="test_sha256.c"/>
  </source>
  <source relative_path="ptest" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
  </source>
  <source relative_path="ptest/src" type="other">
    <files mask="main.rs"/>
  </source>
  <source relative_path="samples/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.template.h"/>
  </source>
  <source relative_path="samples/zephyr" type="other">
    <files mask=".gitignore"/>
    <files mask="Makefile"/>
    <files mask="README.md"/>
    <files mask="overlay-ecdsa-p256.conf"/>
    <files mask="overlay-rsa.conf"/>
    <files mask="overlay-skip-primary-slot-validate.conf"/>
    <files mask="overlay-upgrade-only.conf"/>
    <files mask="run-tests.go"/>
    <files mask="test-compile.go"/>
  </source>
  <source relative_path="samples/zephyr/bad-keys" type="other">
    <files mask="README.md"/>
    <files mask="bad-ec-p256.pem"/>
    <files mask="bad-rsa-2048.pem"/>
  </source>
  <source relative_path="samples/zephyr" type="script">
    <files mask="build-boot.sh"/>
    <files mask="build-hello.sh"/>
    <files mask="run-tests.sh"/>
  </source>
  <source relative_path="samples/zephyr/hello-world" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="samples/zephyr/hello-world" type="other">
    <files mask="README.rst"/>
    <files mask="prj.conf"/>
    <files mask="sample.yaml"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/boards" type="other">
    <files mask=".gitignore"/>
    <files mask="README.rst"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/src" type="other">
    <files mask="Makefile"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="samples/zephyr/mcutests" type="other">
    <files mask="mcutests.go"/>
  </source>
  <source relative_path="sim" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
    <files mask="README.rst"/>
  </source>
  <source relative_path="sim/mcuboot-sys" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
    <files mask="build.rs"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport" type="c_include">
    <files mask="bootsim.h"/>
    <files mask="config-add-psa-crypto.h"/>
    <files mask="config-asn1.h"/>
    <files mask="config-ec-psa.h"/>
    <files mask="config-ec.h"/>
    <files mask="config-ed25519.h"/>
    <files mask="config-kw.h"/>
    <files mask="config-rsa-kw.h"/>
    <files mask="config-rsa.h"/>
    <files mask="devicetree.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport" type="src">
    <files mask="keys.c"/>
    <files mask="psa_crypto_init_stub.c"/>
    <files mask="run.c"/>
    <files mask="security_cnt.c"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/os" type="c_include">
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/storage" type="c_include">
    <files mask="flash_map.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/src" type="other">
    <files mask="api.rs"/>
    <files mask="area.rs"/>
    <files mask="c.rs"/>
    <files mask="lib.rs"/>
  </source>
  <source relative_path="sim/simflash" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
  </source>
  <source relative_path="sim/simflash/src" type="other">
    <files mask="lib.rs"/>
    <files mask="pdump.rs"/>
  </source>
  <source relative_path="sim/src" type="other">
    <files mask="caps.rs"/>
    <files mask="depends.rs"/>
    <files mask="image.rs"/>
    <files mask="lib.rs"/>
    <files mask="main.rs"/>
    <files mask="testlog.rs"/>
    <files mask="tlv.rs"/>
    <files mask="utils.rs"/>
  </source>
  <source relative_path="sim/src" type="doc">
    <files mask="ecdsa_pub_key-rs.txt"/>
    <files mask="ed25519_pub_key-rs.txt"/>
    <files mask="rsa3072_pub_key-rs.txt"/>
    <files mask="rsa_pub_key-rs.txt"/>
  </source>
  <source relative_path="sim/tests" type="other">
    <files mask="core.rs"/>
  </source>
  <source relative_path="testplan/mynewt" type="other">
    <files mask="Makefile"/>
    <files mask="key_ec.pem"/>
    <files mask="key_ec256.pem"/>
    <files mask="key_ec256_2.pem"/>
    <files mask="key_ec_2.pem"/>
    <files mask="key_rsa.pem"/>
    <files mask="key_rsa_2.pem"/>
    <files mask="project.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/blinky" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/blinky/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="testplan/mynewt/apps/slinky" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/slinky/src" type="src">
    <files mask="main.c"/>
    <files mask="random_data.c"/>
  </source>
  <source relative_path="testplan/mynewt/keys/ec256" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/ec256/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="testplan/mynewt/keys" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/rsa" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/rsa/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="zephyr" type="other">
    <files mask="module.yml"/>
  </source>
</component>-->
    <component id="middleware.mbedtls3x.template.MIMXRT798S" name="mbedtls3x_template" brief="mbedTLS Template with config files." version="3.6.0" full_name="mbedTLS Template" category="Security/MbedTLSv3 library" user_visible="false" type="project_template" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;mcux_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port" type="c_include">
        <files mask="mcux_mbedtls_config.h"/>
        <files mask="mcux_mbedtls_accelerator_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.port.config.MIMXRT798S" name="mbedtls3x_config" brief="mbedTLS port library common files for MCUX" version="3.6.0" full_name="MbedTLS MCUX SDK port config layer" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;mcux_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port" type="c_include">
        <files mask="mcux_mbedtls_config.h"/>
        <files mask="mcux_mbedtls_accelerator_config.h"/>
        <files mask="mcux_psa_defines.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_port_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.port.psa_crypto_config.MIMXRT798S" name="mbedtls3x_psa_crypto_config" brief="mbedTLS port library common files for MCUX" version="3.6.0" full_name="MbedTLS MCUX SDK port psa_crypto only config layer" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;mcux_mbedtls_psa_crypto_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port" type="c_include">
        <files mask="mcux_mbedtls_psa_crypto_config.h"/>
        <files mask="mcux_mbedtls_accelerator_config.h"/>
        <files mask="mcux_psa_defines.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_port_psa_crypto_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.port.hw_init.MIMXRT798S" name="mbedtls3x_port_mcux_hw_init" brief="mbedTLS port library for hw initialization of trng" version="3.6.0" full_name="MbedTLS 3x MCUX SDK port layer for RNG hw Init" category="Security/MbedTLSv3 library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/hw_init" type="src">
        <files mask="hw_init.c"/>
      </source>
      <source relative_path="port/hw_init" type="c_include">
        <files mask="hw_init.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_port_hw_init.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/hw_init" type="c_include"/>
        <include_path relative_path="port/hw_init" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.tests.MIMXRT798S" name="mbedtls3x_tests" brief="mbedTLS test suite" version="3.6.0" full_name="MbedTLS open source Crypto library" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="tests/src" type="src">
        <files mask="asn1_helpers.c"/>
        <files mask="bignum_helpers.c"/>
        <files mask="certs.c"/>
        <files mask="helpers.c"/>
        <files mask="psa_crypto_helpers.c"/>
        <files mask="psa_crypto_stubs.c"/>
        <files mask="psa_exercise_key.c"/>
        <files mask="psa_memory_poisoning_wrappers.c"/>
        <files mask="psa_test_wrappers.c"/>
        <files mask="random.c"/>
        <files mask="test_memory.c"/>
        <files mask="threading_helpers.c"/>
        <files mask="fake_external_rng_for_test.c"/>
      </source>
      <source relative_path="tests/src/test_helpers" type="src">
        <files mask="ssl_helpers.c"/>
      </source>
      <source relative_path="tests/include/test" type="c_include">
        <files mask="asn1_helpers.h"/>
        <files mask="bignum_helpers.h"/>
        <files mask="certs.h"/>
        <files mask="constant_flow.h"/>
        <files mask="fake_external_rng_for_test.h"/>
        <files mask="helpers.h"/>
        <files mask="macros.h"/>
        <files mask="memory.h"/>
        <files mask="psa_crypto_helpers.h"/>
        <files mask="psa_exercise_key.h"/>
        <files mask="psa_helpers.h"/>
        <files mask="psa_memory_poisoning_wrappers.h"/>
        <files mask="psa_test_wrappers.h"/>
        <files mask="random.h"/>
        <files mask="ssl_helpers.h"/>
        <files mask="threading_helpers.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_tests.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tests/include/test" type="c_include"/>
        <include_path relative_path="tests/include" type="c_include"/>
        <include_path relative_path="tests/include/test" type="asm_include"/>
        <include_path relative_path="tests/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.crypto.no_psa.MIMXRT798S" name="mbedtls3x_crypto_no_psa" brief="mbedTLS crypto library without PSA" version="3.6.0" full_name="MbedTLS open source Crypto library without PSA" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="block_cipher.h"/>
        <files mask="build_info.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-2.x.h"/>
        <files mask="config_adjust_legacy_crypto.h"/>
        <files mask="config_adjust_legacy_from_psa.h"/>
        <files mask="config_adjust_psa_from_legacy.h"/>
        <files mask="config_adjust_psa_superset_legacy.h"/>
        <files mask="config_adjust_ssl.h"/>
        <files mask="config_adjust_x509.h"/>
        <files mask="config_psa.h"/>
        <files mask="constant_time.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="entropy.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="lms.h"/>
        <files mask="mbedtls_config.h"/>
        <files mask="md.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="private_access.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="sha1.h"/>
        <files mask="sha3.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="build_info.h"/>
        <files mask="crypto.h"/>
        <files mask="crypto_adjust_auto_enabled.h"/>
        <files mask="crypto_adjust_config_key_pair_types.h"/>
        <files mask="crypto_adjust_config_synonyms.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_key_derivation.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_key_derivation.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_legacy.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="aesce.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="bignum_core.c"/>
        <files mask="bignum_mod.c"/>
        <files mask="bignum_mod_raw.c"/>
        <files mask="block_cipher.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="constant_time.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="ecp_curves_new.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="lmots.c"/>
        <files mask="lms.c"/>
        <files mask="md.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_ecc.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_util.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_alt_helpers.c"/>
        <files mask="sha1.c"/>
        <files mask="sha3.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="aesni.h"/>
        <files mask="alignment.h"/>
        <files mask="aesce.h"/>
        <files mask="base64_internal.h"/>
        <files mask="bignum_core.h"/>
        <files mask="bignum_mod.h"/>
        <files mask="bignum_mod_raw.h"/>
        <files mask="bignum_mod_raw_invasive.h"/>
        <files mask="block_cipher_internal.h"/>
        <files mask="bn_mul.h"/>
        <files mask="check_crypto_config.h"/>
        <files mask="cipher_wrap.h"/>
        <files mask="common.h"/>
        <files mask="constant_time_impl.h"/>
        <files mask="constant_time_internal.h"/>
        <files mask="ctr.h"/>
        <files mask="ecp_internal_alt.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="lmots.h"/>
        <files mask="md_psa.h"/>
        <files mask="md_wrap.h"/>
        <files mask="padlock.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pk_wrap.h"/>
        <files mask="pkwrite.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_core_common.h"/>
        <files mask="psa_crypto_driver_wrappers_no_static.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_ffdh.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_pake.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="psa_util_internal.h"/>
        <files mask="rsa_alt_helpers.h"/>
        <files mask="rsa_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_crypto_no_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.x509.MIMXRT798S" name="mbedtls3x_x509" brief="mbedTLS X.509 library" version="3.6.0" full_name="MbedTLS open source X.509 library" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="pkcs7.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="pkcs7.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="x509_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_x509.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mbedtls3x.unused_files.MIMXRT798S" name="unused_files" version="3.6.0" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
  <source exclude="true" relative_path=".github" type="other">
    <files mask="pull_request_template.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="asm_include">
    <files mask="Makefile.inc" hidden="true"/>
  </source>
  <source exclude="true" relative_path="ChangeLog.d" type="other">
    <files mask="00README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="doc">
    <files mask="README.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="c_include">
    <files mask="config-ccm-psk-dtls1_2.h" hidden="true"/>
    <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
    <files mask="config-no-entropy.h" hidden="true"/>
    <files mask="config-suite-b.h" hidden="true"/>
    <files mask="config-symmetric-only.h" hidden="true"/>
    <files mask="config-tfm.h" hidden="true"/>
    <files mask="config-thread.h" hidden="true"/>
    <files mask="crypto-config-ccm-aes-sha256.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="other">
    <files mask="3.0-migration-guide.md" hidden="true"/>
    <files mask="driver-only-builds.md" hidden="true"/>
    <files mask="index.rst" hidden="true"/>
    <files mask="psa-driver-example-and-guide.md" hidden="true"/>
    <files mask="psa-transition.md" hidden="true"/>
    <files mask="redirects.yaml" hidden="true"/>
    <files mask="requirements.in" hidden="true"/>
    <files mask="tls13-early-data.md" hidden="true"/>
    <files mask="use-psa-crypto.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="script">
    <files mask="conf.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="doc">
    <files mask="requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen" type="other">
    <files mask="mbedtls.doxyfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen/input" type="c_include">
    <files mask="doc_encdec.h" hidden="true"/>
    <files mask="doc_hashing.h" hidden="true"/>
    <files mask="doc_mainpage.h" hidden="true"/>
    <files mask="doc_rng.h" hidden="true"/>
    <files mask="doc_ssltls.h" hidden="true"/>
    <files mask="doc_tcpip.h" hidden="true"/>
    <files mask="doc_x509.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="other">
    <files mask=".gitignore" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="other">
    <files mask=".gitignore" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="src">
    <files mask="crypt_and_hash.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="other">
    <files mask="README.md" hidden="true"/>
    <files mask="fuzz_client.options" hidden="true"/>
    <files mask="fuzz_dtlsclient.options" hidden="true"/>
    <files mask="fuzz_dtlsserver.options" hidden="true"/>
    <files mask="fuzz_pkcs7.options" hidden="true"/>
    <files mask="fuzz_privkey.options" hidden="true"/>
    <files mask="fuzz_pubkey.options" hidden="true"/>
    <files mask="fuzz_server.options" hidden="true"/>
    <files mask="fuzz_x509crl.options" hidden="true"/>
    <files mask="fuzz_x509crt.options" hidden="true"/>
    <files mask="fuzz_x509csr.options" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="src">
    <files mask="common.c" hidden="true"/>
    <files mask="fuzz_client.c" hidden="true"/>
    <files mask="fuzz_dtlsclient.c" hidden="true"/>
    <files mask="fuzz_dtlsserver.c" hidden="true"/>
    <files mask="fuzz_pkcs7.c" hidden="true"/>
    <files mask="fuzz_privkey.c" hidden="true"/>
    <files mask="fuzz_pubkey.c" hidden="true"/>
    <files mask="fuzz_server.c" hidden="true"/>
    <files mask="fuzz_x509crl.c" hidden="true"/>
    <files mask="fuzz_x509crt.c" hidden="true"/>
    <files mask="fuzz_x509csr.c" hidden="true"/>
    <files mask="onefile.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="c_include">
    <files mask="common.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="src">
    <files mask="generic_sum.c" hidden="true"/>
    <files mask="hello.c" hidden="true"/>
    <files mask="md_hmac_demo.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="dh_prime.txt" hidden="true"/>
    <files mask="rsa_priv.txt" hidden="true"/>
    <files mask="rsa_pub.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="src">
    <files mask="dh_client.c" hidden="true"/>
    <files mask="dh_genprime.c" hidden="true"/>
    <files mask="dh_server.c" hidden="true"/>
    <files mask="ecdh_curve25519.c" hidden="true"/>
    <files mask="ecdsa.c" hidden="true"/>
    <files mask="gen_key.c" hidden="true"/>
    <files mask="key_app.c" hidden="true"/>
    <files mask="key_app_writer.c" hidden="true"/>
    <files mask="mpi_demo.c" hidden="true"/>
    <files mask="pk_decrypt.c" hidden="true"/>
    <files mask="pk_encrypt.c" hidden="true"/>
    <files mask="pk_sign.c" hidden="true"/>
    <files mask="pk_verify.c" hidden="true"/>
    <files mask="rsa_decrypt.c" hidden="true"/>
    <files mask="rsa_encrypt.c" hidden="true"/>
    <files mask="rsa_genkey.c" hidden="true"/>
    <files mask="rsa_sign.c" hidden="true"/>
    <files mask="rsa_sign_pss.c" hidden="true"/>
    <files mask="rsa_verify.c" hidden="true"/>
    <files mask="rsa_verify_pss.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="src">
    <files mask="gen_entropy.c" hidden="true"/>
    <files mask="gen_random_ctr_drbg.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="src">
    <files mask="dtls_client.c" hidden="true"/>
    <files mask="dtls_server.c" hidden="true"/>
    <files mask="mini_client.c" hidden="true"/>
    <files mask="ssl_client1.c" hidden="true"/>
    <files mask="ssl_client2.c" hidden="true"/>
    <files mask="ssl_context_info.c" hidden="true"/>
    <files mask="ssl_fork_server.c" hidden="true"/>
    <files mask="ssl_mail_client.c" hidden="true"/>
    <files mask="ssl_pthread_server.c" hidden="true"/>
    <files mask="ssl_server.c" hidden="true"/>
    <files mask="ssl_server2.c" hidden="true"/>
    <files mask="ssl_test_common_source.c" hidden="true"/>
    <files mask="ssl_test_lib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="c_include">
    <files mask="ssl_test_lib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="src">
    <files mask="benchmark.c" hidden="true"/>
    <files mask="dlopen.c" hidden="true"/>
    <files mask="metatest.c" hidden="true"/>
    <files mask="query_compile_time_config.c" hidden="true"/>
    <files mask="query_config.c" hidden="true"/>
    <files mask="query_included_headers.c" hidden="true"/>
    <files mask="selftest.c" hidden="true"/>
    <files mask="udp_proxy.c" hidden="true"/>
    <files mask="zeroize.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="script">
    <files mask="dlopen_demo.sh" hidden="true"/>
    <files mask="generate_cpp_dummy_build.sh" hidden="true"/>
    <files mask="udp_proxy_wrapper.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="c_include">
    <files mask="query_config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="src">
    <files mask="pem2der.c" hidden="true"/>
    <files mask="strerror.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="src">
    <files mask="cert_app.c" hidden="true"/>
    <files mask="cert_req.c" hidden="true"/>
    <files mask="cert_write.c" hidden="true"/>
    <files mask="crl_app.c" hidden="true"/>
    <files mask="load_roots.c" hidden="true"/>
    <files mask="req_app.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="script">
    <files mask="abi_check.py" hidden="true"/>
    <files mask="apidoc_full.sh" hidden="true"/>
    <files mask="assemble_changelog.py" hidden="true"/>
    <files mask="bump_version.sh" hidden="true"/>
    <files mask="code_size_compare.py" hidden="true"/>
    <files mask="code_style.py" hidden="true"/>
    <files mask="config.py" hidden="true"/>
    <files mask="ecc-heap.sh" hidden="true"/>
    <files mask="ecp_comb_table.py" hidden="true"/>
    <files mask="footprint.sh" hidden="true"/>
    <files mask="generate_driver_wrappers.py" hidden="true"/>
    <files mask="generate_psa_constants.py" hidden="true"/>
    <files mask="generate_ssl_debug_helpers.py" hidden="true"/>
    <files mask="lcov.sh" hidden="true"/>
    <files mask="make_generated_files.bat" hidden="true"/>
    <files mask="memory.sh" hidden="true"/>
    <files mask="min_requirements.py" hidden="true"/>
    <files mask="output_env.sh" hidden="true"/>
    <files mask="prepare_release.sh" hidden="true"/>
    <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
    <files mask="windows_msbuild.bat" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="doc">
    <files mask="basic.requirements.txt" hidden="true"/>
    <files mask="ci.requirements.txt" hidden="true"/>
    <files mask="driver.requirements.txt" hidden="true"/>
    <files mask="maintainer.requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="other">
    <files mask="common.make" hidden="true"/>
    <files mask="config.pl" hidden="true"/>
    <files mask="generate_errors.pl" hidden="true"/>
    <files mask="generate_features.pl" hidden="true"/>
    <files mask="generate_query_config.pl" hidden="true"/>
    <files mask="generate_visualc_files.pl" hidden="true"/>
    <files mask="massif_max.pl" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="other">
    <files mask="error.fmt" hidden="true"/>
    <files mask="query_config.fmt" hidden="true"/>
    <files mask="version_features.fmt" hidden="true"/>
    <files mask="vs2017-app-template.vcxproj" hidden="true"/>
    <files mask="vs2017-main-template.vcxproj" hidden="true"/>
    <files mask="vs2017-sln-template.sln" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/mbedtls_dev" type="script">
    <files mask="__init__.py" hidden="true"/>
    <files mask="asymmetric_key_data.py" hidden="true"/>
    <files mask="bignum_common.py" hidden="true"/>
    <files mask="bignum_core.py" hidden="true"/>
    <files mask="bignum_data.py" hidden="true"/>
    <files mask="bignum_mod.py" hidden="true"/>
    <files mask="bignum_mod_raw.py" hidden="true"/>
    <files mask="build_tree.py" hidden="true"/>
    <files mask="c_build_helper.py" hidden="true"/>
    <files mask="c_parsing_helper.py" hidden="true"/>
    <files mask="c_wrapper_generator.py" hidden="true"/>
    <files mask="crypto_data_tests.py" hidden="true"/>
    <files mask="crypto_knowledge.py" hidden="true"/>
    <files mask="ecp.py" hidden="true"/>
    <files mask="logging_util.py" hidden="true"/>
    <files mask="macro_collector.py" hidden="true"/>
    <files mask="psa_information.py" hidden="true"/>
    <files mask="psa_storage.py" hidden="true"/>
    <files mask="test_case.py" hidden="true"/>
    <files mask="test_data_generation.py" hidden="true"/>
    <files mask="typing_util.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/.jenkins" type="other">
    <files mask="Jenkinsfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="hash_file_1" hidden="true"/>
    <files mask="hash_file_2" hidden="true"/>
    <files mask="hash_file_3" hidden="true"/>
    <files mask="hash_file_4" hidden="true"/>
    <files mask="hash_file_5" hidden="true"/>
    <files mask="lms_hash-sigs_sha256_m32_h5_lmots_sha256_n32_w8_aux" hidden="true"/>
    <files mask="lms_hash-sigs_sha256_m32_h5_lmots_sha256_n32_w8_prv" hidden="true"/>
    <files mask="lms_hash-sigs_sha256_m32_h5_lmots_sha256_n32_w8_pub" hidden="true"/>
    <files mask="lms_hsslms_sha256_m32_h5_lmots_sha256_n32_w8_prv" hidden="true"/>
    <files mask="lms_pyhsslms_sha256_m32_h5_lmots_sha256_n32_w8_prv" hidden="true"/>
    <files mask="lms_pyhsslms_sha256_m32_h5_lmots_sha256_n32_w8_pub" hidden="true"/>
    <files mask="mpi_16" hidden="true"/>
    <files mask="mpi_too_big" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir3" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir4" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="script">
    <files mask="pre-push.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="script">
    <files mask="all-in-docker.sh" hidden="true"/>
    <files mask="all.sh" hidden="true"/>
    <files mask="analyze_outcomes.py" hidden="true"/>
    <files mask="audit-validity-dates.py" hidden="true"/>
    <files mask="basic-build-test.sh" hidden="true"/>
    <files mask="basic-in-docker.sh" hidden="true"/>
    <files mask="check-generated-files.sh" hidden="true"/>
    <files mask="check-python-files.sh" hidden="true"/>
    <files mask="check_files.py" hidden="true"/>
    <files mask="check_names.py" hidden="true"/>
    <files mask="check_test_cases.py" hidden="true"/>
    <files mask="depends.py" hidden="true"/>
    <files mask="docker_env.sh" hidden="true"/>
    <files mask="doxygen.sh" hidden="true"/>
    <files mask="generate-afl-tests.sh" hidden="true"/>
    <files mask="generate_bignum_tests.py" hidden="true"/>
    <files mask="generate_ecp_tests.py" hidden="true"/>
    <files mask="generate_pkcs7_tests.py" hidden="true"/>
    <files mask="generate_psa_tests.py" hidden="true"/>
    <files mask="generate_psa_wrappers.py" hidden="true"/>
    <files mask="generate_server9_bad_saltlen.py" hidden="true"/>
    <files mask="generate_test_cert_macros.py" hidden="true"/>
    <files mask="generate_test_code.py" hidden="true"/>
    <files mask="generate_tls13_compat_tests.py" hidden="true"/>
    <files mask="list-identifiers.sh" hidden="true"/>
    <files mask="list_internal_identifiers.py" hidden="true"/>
    <files mask="psa_collect_statuses.py" hidden="true"/>
    <files mask="run-metatests.sh" hidden="true"/>
    <files mask="run_demos.py" hidden="true"/>
    <files mask="scripts_path.py" hidden="true"/>
    <files mask="set_psa_test_dependencies.py" hidden="true"/>
    <files mask="test_config_script.py" hidden="true"/>
    <files mask="test_generate_test_code.py" hidden="true"/>
    <files mask="test_psa_compliance.py" hidden="true"/>
    <files mask="test_psa_constant_names.py" hidden="true"/>
    <files mask="translate_ciphers.py" hidden="true"/>
    <files mask="travis-log-failure.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="other">
    <files mask="check-doxy-blocks.pl" hidden="true"/>
    <files mask="gen_ctr_drbg.pl" hidden="true"/>
    <files mask="gen_gcm_decrypt.pl" hidden="true"/>
    <files mask="gen_gcm_encrypt.pl" hidden="true"/>
    <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
    <files mask="recursion.pl" hidden="true"/>
    <files mask="run-test-suites.pl" hidden="true"/>
    <files mask="tcp_client.pl" hidden="true"/>
    <files mask="test-ref-configs.pl" hidden="true"/>
    <files mask="test_zeroize.gdb" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/src" type="src">
    <files mask="asn1_helpers.c" hidden="true"/>
    <files mask="bignum_helpers.c" hidden="true"/>
    <files mask="certs.c" hidden="true"/>
    <files mask="fake_external_rng_for_test.c" hidden="true"/>
    <files mask="helpers.c" hidden="true"/>
    <files mask="psa_crypto_helpers.c" hidden="true"/>
    <files mask="psa_crypto_stubs.c" hidden="true"/>
    <files mask="psa_exercise_key.c" hidden="true"/>
    <files mask="psa_memory_poisoning_wrappers.c" hidden="true"/>
    <files mask="psa_test_wrappers.c" hidden="true"/>
    <files mask="random.c" hidden="true"/>
    <files mask="test_memory.c" hidden="true"/>
    <files mask="threading_helpers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/src" type="c_include">
    <files mask="test_certs.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/suites" type="other">
    <files mask="helpers.function" hidden="true"/>
    <files mask="host_test.function" hidden="true"/>
    <files mask="main_test.function" hidden="true"/>
    <files mask="test_suite_aes.cbc.data" hidden="true"/>
    <files mask="test_suite_aes.cfb.data" hidden="true"/>
    <files mask="test_suite_aes.ctr.data" hidden="true"/>
    <files mask="test_suite_aes.ecb.data" hidden="true"/>
    <files mask="test_suite_aes.function" hidden="true"/>
    <files mask="test_suite_aes.ofb.data" hidden="true"/>
    <files mask="test_suite_aes.rest.data" hidden="true"/>
    <files mask="test_suite_aes.xts.data" hidden="true"/>
    <files mask="test_suite_alignment.data" hidden="true"/>
    <files mask="test_suite_alignment.function" hidden="true"/>
    <files mask="test_suite_aria.data" hidden="true"/>
    <files mask="test_suite_aria.function" hidden="true"/>
    <files mask="test_suite_asn1parse.data" hidden="true"/>
    <files mask="test_suite_asn1parse.function" hidden="true"/>
    <files mask="test_suite_asn1write.data" hidden="true"/>
    <files mask="test_suite_asn1write.function" hidden="true"/>
    <files mask="test_suite_base64.data" hidden="true"/>
    <files mask="test_suite_base64.function" hidden="true"/>
    <files mask="test_suite_bignum.function" hidden="true"/>
    <files mask="test_suite_bignum.generated.data" hidden="true"/>
    <files mask="test_suite_bignum.misc.data" hidden="true"/>
    <files mask="test_suite_bignum_core.function" hidden="true"/>
    <files mask="test_suite_bignum_core.generated.data" hidden="true"/>
    <files mask="test_suite_bignum_core.misc.data" hidden="true"/>
    <files mask="test_suite_bignum_mod.function" hidden="true"/>
    <files mask="test_suite_bignum_mod.generated.data" hidden="true"/>
    <files mask="test_suite_bignum_mod.misc.data" hidden="true"/>
    <files mask="test_suite_bignum_mod_raw.data" hidden="true"/>
    <files mask="test_suite_bignum_mod_raw.function" hidden="true"/>
    <files mask="test_suite_bignum_mod_raw.generated.data" hidden="true"/>
    <files mask="test_suite_bignum_random.data" hidden="true"/>
    <files mask="test_suite_bignum_random.function" hidden="true"/>
    <files mask="test_suite_block_cipher.data" hidden="true"/>
    <files mask="test_suite_block_cipher.function" hidden="true"/>
    <files mask="test_suite_block_cipher.psa.data" hidden="true"/>
    <files mask="test_suite_camellia.data" hidden="true"/>
    <files mask="test_suite_camellia.function" hidden="true"/>
    <files mask="test_suite_ccm.data" hidden="true"/>
    <files mask="test_suite_ccm.function" hidden="true"/>
    <files mask="test_suite_chacha20.data" hidden="true"/>
    <files mask="test_suite_chacha20.function" hidden="true"/>
    <files mask="test_suite_chachapoly.data" hidden="true"/>
    <files mask="test_suite_chachapoly.function" hidden="true"/>
    <files mask="test_suite_cipher.aes.data" hidden="true"/>
    <files mask="test_suite_cipher.aria.data" hidden="true"/>
    <files mask="test_suite_cipher.camellia.data" hidden="true"/>
    <files mask="test_suite_cipher.ccm.data" hidden="true"/>
    <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
    <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
    <files mask="test_suite_cipher.des.data" hidden="true"/>
    <files mask="test_suite_cipher.function" hidden="true"/>
    <files mask="test_suite_cipher.gcm.data" hidden="true"/>
    <files mask="test_suite_cipher.misc.data" hidden="true"/>
    <files mask="test_suite_cipher.nist_kw.data" hidden="true"/>
    <files mask="test_suite_cipher.null.data" hidden="true"/>
    <files mask="test_suite_cipher.padding.data" hidden="true"/>
    <files mask="test_suite_cmac.data" hidden="true"/>
    <files mask="test_suite_cmac.function" hidden="true"/>
    <files mask="test_suite_common.data" hidden="true"/>
    <files mask="test_suite_common.function" hidden="true"/>
    <files mask="test_suite_constant_time.data" hidden="true"/>
    <files mask="test_suite_constant_time.function" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.data" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.function" hidden="true"/>
    <files mask="test_suite_ctr_drbg.data" hidden="true"/>
    <files mask="test_suite_ctr_drbg.function" hidden="true"/>
    <files mask="test_suite_debug.data" hidden="true"/>
    <files mask="test_suite_debug.function" hidden="true"/>
    <files mask="test_suite_des.data" hidden="true"/>
    <files mask="test_suite_des.function" hidden="true"/>
    <files mask="test_suite_dhm.data" hidden="true"/>
    <files mask="test_suite_dhm.function" hidden="true"/>
    <files mask="test_suite_ecdh.data" hidden="true"/>
    <files mask="test_suite_ecdh.function" hidden="true"/>
    <files mask="test_suite_ecdsa.data" hidden="true"/>
    <files mask="test_suite_ecdsa.function" hidden="true"/>
    <files mask="test_suite_ecjpake.data" hidden="true"/>
    <files mask="test_suite_ecjpake.function" hidden="true"/>
    <files mask="test_suite_ecp.data" hidden="true"/>
    <files mask="test_suite_ecp.function" hidden="true"/>
    <files mask="test_suite_ecp.generated.data" hidden="true"/>
    <files mask="test_suite_entropy.data" hidden="true"/>
    <files mask="test_suite_entropy.function" hidden="true"/>
    <files mask="test_suite_error.data" hidden="true"/>
    <files mask="test_suite_error.function" hidden="true"/>
    <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
    <files mask="test_suite_gcm.camellia.data" hidden="true"/>
    <files mask="test_suite_gcm.function" hidden="true"/>
    <files mask="test_suite_gcm.misc.data" hidden="true"/>
    <files mask="test_suite_hkdf.data" hidden="true"/>
    <files mask="test_suite_hkdf.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
    <files mask="test_suite_lmots.data" hidden="true"/>
    <files mask="test_suite_lmots.function" hidden="true"/>
    <files mask="test_suite_lms.data" hidden="true"/>
    <files mask="test_suite_lms.function" hidden="true"/>
    <files mask="test_suite_md.data" hidden="true"/>
    <files mask="test_suite_md.function" hidden="true"/>
    <files mask="test_suite_md.psa.data" hidden="true"/>
    <files mask="test_suite_mdx.data" hidden="true"/>
    <files mask="test_suite_mdx.function" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
    <files mask="test_suite_mps.data" hidden="true"/>
    <files mask="test_suite_mps.function" hidden="true"/>
    <files mask="test_suite_net.data" hidden="true"/>
    <files mask="test_suite_net.function" hidden="true"/>
    <files mask="test_suite_nist_kw.data" hidden="true"/>
    <files mask="test_suite_nist_kw.function" hidden="true"/>
    <files mask="test_suite_oid.data" hidden="true"/>
    <files mask="test_suite_oid.function" hidden="true"/>
    <files mask="test_suite_pem.data" hidden="true"/>
    <files mask="test_suite_pem.function" hidden="true"/>
    <files mask="test_suite_pk.data" hidden="true"/>
    <files mask="test_suite_pk.function" hidden="true"/>
    <files mask="test_suite_pkcs12.data" hidden="true"/>
    <files mask="test_suite_pkcs12.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
    <files mask="test_suite_pkcs5.data" hidden="true"/>
    <files mask="test_suite_pkcs5.function" hidden="true"/>
    <files mask="test_suite_pkcs7.data" hidden="true"/>
    <files mask="test_suite_pkcs7.function" hidden="true"/>
    <files mask="test_suite_pkparse.data" hidden="true"/>
    <files mask="test_suite_pkparse.function" hidden="true"/>
    <files mask="test_suite_pkwrite.data" hidden="true"/>
    <files mask="test_suite_pkwrite.function" hidden="true"/>
    <files mask="test_suite_platform.data" hidden="true"/>
    <files mask="test_suite_platform.function" hidden="true"/>
    <files mask="test_suite_platform_printf.data" hidden="true"/>
    <files mask="test_suite_platform_printf.function" hidden="true"/>
    <files mask="test_suite_platform_util.data" hidden="true"/>
    <files mask="test_suite_platform_util.function" hidden="true"/>
    <files mask="test_suite_poly1305.data" hidden="true"/>
    <files mask="test_suite_poly1305.function" hidden="true"/>
    <files mask="test_suite_psa_crypto.data" hidden="true"/>
    <files mask="test_suite_psa_crypto.function" hidden="true"/>
    <files mask="test_suite_psa_crypto.pbkdf2.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_pake.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_pake.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.current.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.v0.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_util.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_util.function" hidden="true"/>
    <files mask="test_suite_psa_its.data" hidden="true"/>
    <files mask="test_suite_psa_its.function" hidden="true"/>
    <files mask="test_suite_random.data" hidden="true"/>
    <files mask="test_suite_random.function" hidden="true"/>
    <files mask="test_suite_rsa.data" hidden="true"/>
    <files mask="test_suite_rsa.function" hidden="true"/>
    <files mask="test_suite_shax.data" hidden="true"/>
    <files mask="test_suite_shax.function" hidden="true"/>
    <files mask="test_suite_ssl.data" hidden="true"/>
    <files mask="test_suite_ssl.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.misc.data" hidden="true"/>
    <files mask="test_suite_test_helpers.data" hidden="true"/>
    <files mask="test_suite_test_helpers.function" hidden="true"/>
    <files mask="test_suite_timing.data" hidden="true"/>
    <files mask="test_suite_timing.function" hidden="true"/>
    <files mask="test_suite_version.data" hidden="true"/>
    <files mask="test_suite_version.function" hidden="true"/>
    <files mask="test_suite_x509parse.data" hidden="true"/>
    <files mask="test_suite_x509parse.function" hidden="true"/>
    <files mask="test_suite_x509write.data" hidden="true"/>
    <files mask="test_suite_x509write.function" hidden="true"/>
  </source>
  <source exclude="true" relative_path="visualc/VS2017" type="other">
    <files mask="aead_demo.vcxproj" hidden="true"/>
    <files mask="benchmark.vcxproj" hidden="true"/>
    <files mask="cert_app.vcxproj" hidden="true"/>
    <files mask="cert_req.vcxproj" hidden="true"/>
    <files mask="cert_write.vcxproj" hidden="true"/>
    <files mask="cipher_aead_demo.vcxproj" hidden="true"/>
    <files mask="crl_app.vcxproj" hidden="true"/>
    <files mask="crypt_and_hash.vcxproj" hidden="true"/>
    <files mask="crypto_examples.vcxproj" hidden="true"/>
    <files mask="dh_client.vcxproj" hidden="true"/>
    <files mask="dh_genprime.vcxproj" hidden="true"/>
    <files mask="dh_server.vcxproj" hidden="true"/>
    <files mask="dtls_client.vcxproj" hidden="true"/>
    <files mask="dtls_server.vcxproj" hidden="true"/>
    <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
    <files mask="ecdsa.vcxproj" hidden="true"/>
    <files mask="gen_entropy.vcxproj" hidden="true"/>
    <files mask="gen_key.vcxproj" hidden="true"/>
    <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
    <files mask="generic_sum.vcxproj" hidden="true"/>
    <files mask="hello.vcxproj" hidden="true"/>
    <files mask="hmac_demo.vcxproj" hidden="true"/>
    <files mask="key_app.vcxproj" hidden="true"/>
    <files mask="key_app_writer.vcxproj" hidden="true"/>
    <files mask="key_ladder_demo.vcxproj" hidden="true"/>
    <files mask="load_roots.vcxproj" hidden="true"/>
    <files mask="mbedTLS.sln" hidden="true"/>
    <files mask="mbedTLS.vcxproj" hidden="true"/>
    <files mask="md_hmac_demo.vcxproj" hidden="true"/>
    <files mask="metatest.vcxproj" hidden="true"/>
    <files mask="mini_client.vcxproj" hidden="true"/>
    <files mask="mpi_demo.vcxproj" hidden="true"/>
    <files mask="pem2der.vcxproj" hidden="true"/>
    <files mask="pk_decrypt.vcxproj" hidden="true"/>
    <files mask="pk_encrypt.vcxproj" hidden="true"/>
    <files mask="pk_sign.vcxproj" hidden="true"/>
    <files mask="pk_verify.vcxproj" hidden="true"/>
    <files mask="psa_constant_names.vcxproj" hidden="true"/>
    <files mask="psa_hash.vcxproj" hidden="true"/>
    <files mask="query_compile_time_config.vcxproj" hidden="true"/>
    <files mask="query_included_headers.vcxproj" hidden="true"/>
    <files mask="req_app.vcxproj" hidden="true"/>
    <files mask="rsa_decrypt.vcxproj" hidden="true"/>
    <files mask="rsa_encrypt.vcxproj" hidden="true"/>
    <files mask="rsa_genkey.vcxproj" hidden="true"/>
    <files mask="rsa_sign.vcxproj" hidden="true"/>
    <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
    <files mask="rsa_verify.vcxproj" hidden="true"/>
    <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
    <files mask="selftest.vcxproj" hidden="true"/>
    <files mask="ssl_client1.vcxproj" hidden="true"/>
    <files mask="ssl_client2.vcxproj" hidden="true"/>
    <files mask="ssl_context_info.vcxproj" hidden="true"/>
    <files mask="ssl_fork_server.vcxproj" hidden="true"/>
    <files mask="ssl_mail_client.vcxproj" hidden="true"/>
    <files mask="ssl_server.vcxproj" hidden="true"/>
    <files mask="ssl_server2.vcxproj" hidden="true"/>
    <files mask="strerror.vcxproj" hidden="true"/>
    <files mask="udp_proxy.vcxproj" hidden="true"/>
    <files mask="zeroize.vcxproj" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="other">
    <files mask="BRANCHES.md" hidden="true"/>
    <files mask="BUGS.md" hidden="true"/>
    <files mask="CONTRIBUTING.md" hidden="true"/>
    <files mask="DartConfiguration.tcl" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="SECURITY.md" hidden="true"/>
    <files mask="SUPPORT.md" hidden="true"/>
    <files mask="ChangeLog" hidden="true"/>
    <files mask="Kconfig" hidden="true"/>
    <files mask="LICENSE" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="dco.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="src">
    <files mask="code_share.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="script">
    <files mask="mcux.cmake" hidden="true"/>
  </source>
</component>-->
    <!--<component id="middleware.lwip.unused_files.MIMXRT798S" name="lwIP_unused_files" version="2.2.1" package_base_path="middleware/lwip" project_base_path="lwip">
  <source exclude="true" relative_path="src" type="other">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="c_include">
    <files mask="config.h" hidden="true"/>
    <files mask="fuzz_common.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="src">
    <files mask="fuzz.c" hidden="true"/>
    <files mask="fuzz2.c" hidden="true"/>
    <files mask="fuzz3.c" hidden="true"/>
    <files mask="fuzz_common.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
    <files mask="arp_req.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
    <files mask="icmp_ping.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
    <files mask="neighbor_solicitation.bin" hidden="true"/>
    <files mask="router_adv.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
    <files mask="tcp_syn.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
    <files mask="udp_port_5000.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="script">
    <files mask="output_to_pcap.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="src">
    <files mask="sockets_stresstest.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="c_include">
    <files mask="sockets_stresstest.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="src">
    <files mask="test_sockets.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="c_include">
    <files mask="test_sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="src">
    <files mask="test_def.c" hidden="true"/>
    <files mask="test_dns.c" hidden="true"/>
    <files mask="test_mem.c" hidden="true"/>
    <files mask="test_netif.c" hidden="true"/>
    <files mask="test_pbuf.c" hidden="true"/>
    <files mask="test_timers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="c_include">
    <files mask="test_def.h" hidden="true"/>
    <files mask="test_dns.h" hidden="true"/>
    <files mask="test_mem.h" hidden="true"/>
    <files mask="test_netif.h" hidden="true"/>
    <files mask="test_pbuf.h" hidden="true"/>
    <files mask="test_timers.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="src">
    <files mask="test_dhcp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
    <files mask="test_dhcp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="src">
    <files mask="test_dhcp6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="c_include">
    <files mask="test_dhcp6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="src">
    <files mask="test_etharp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="c_include">
    <files mask="test_etharp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="src">
    <files mask="test_ip4.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="c_include">
    <files mask="test_ip4.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="src">
    <files mask="test_ip6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="c_include">
    <files mask="test_ip6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="c_include">
    <files mask="lwip_check.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="src">
    <files mask="lwip_unittests.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="src">
    <files mask="test_mdns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="c_include">
    <files mask="test_mdns.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="src">
    <files mask="test_mqtt.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
    <files mask="test_mqtt.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="src">
    <files mask="test_pppos.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="c_include">
    <files mask="test_pppos.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="src">
    <files mask="tcp_helper.c" hidden="true"/>
    <files mask="test_tcp.c" hidden="true"/>
    <files mask="test_tcp_oos.c" hidden="true"/>
    <files mask="test_tcp_state.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="c_include">
    <files mask="tcp_helper.h" hidden="true"/>
    <files mask="test_tcp.h" hidden="true"/>
    <files mask="test_tcp_oos.h" hidden="true"/>
    <files mask="test_tcp_state.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="src">
    <files mask="test_udp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="c_include">
    <files mask="test_udp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="src">
    <files mask="dhcp_extra_opts.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="c_include">
    <files mask="dhcp_extra_opts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
    <files mask="ip6_route_table.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
    <files mask="ip6_route_table.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
    <files mask="dnssd.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
    <files mask="dnssd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
    <files mask="tcp_isn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
    <files mask="tcp_isn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
    <files mask="tcp_md5.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
    <files mask="tcp_md5.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="src">
    <files mask="chargen.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
    <files mask="chargen.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
    <files mask="httpserver-netconn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
    <files mask="httpserver-netconn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="src">
    <files mask="netio.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
    <files mask="netio.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="src">
    <files mask="rtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
    <files mask="rtp.h" hidden="true"/>
    <files mask="rtpdata.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="src">
    <files mask="shell.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
    <files mask="shell.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
    <files mask="socket_examples.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
    <files mask="socket_examples.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/Coverity" type="src">
    <files mask="coverity.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
    <files mask="ethernetif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
    <files mask="default_netif.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="lwippools.h" hidden="true"/>
    <files mask="ppp_settings.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="other">
    <files mask="lwipcfg.h.ci" hidden="true"/>
    <files mask="lwipcfg.h.example" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="src">
    <files mask="test.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
    <files mask="opt_default.h" hidden="true"/>
    <files mask="opt_dualstack.h" hidden="true"/>
    <files mask="opt_ipv4only.h" hidden="true"/>
    <files mask="opt_ipv6only.h" hidden="true"/>
    <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
    <files mask="opt_no_udp_dualstack.h" hidden="true"/>
    <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
    <files mask="opt_none.h" hidden="true"/>
    <files mask="opt_nosys_dual.h" hidden="true"/>
    <files mask="opt_nosys_ipv4.h" hidden="true"/>
    <files mask="opt_nosys_ipv6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
    <files mask="cgi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
    <files mask="cgi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
    <files mask="404.html" hidden="true"/>
    <files mask="index.html" hidden="true"/>
    <files mask="login.html" hidden="true"/>
    <files mask="loginfail.html" hidden="true"/>
    <files mask="session.html" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
    <files mask="sics.gif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
    <files mask="ssi.shtml" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd" type="src">
    <files mask="examples_fsdata.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
    <files mask="fs_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
    <files mask="fs_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
    <files mask="genfiles_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
    <files mask="genfiles_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
    <files mask="https_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
    <files mask="https_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
    <files mask="post_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
    <files mask="ssi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
    <files mask="ssi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
    <files mask="lwiperf_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
    <files mask="lwiperf_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="src">
    <files mask="mdns_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
    <files mask="mdns_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
    <files mask="mqtt_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
    <files mask="mqtt_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="src">
    <files mask="pppos_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
    <files mask="pppos_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="src">
    <files mask="snmp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
    <files mask="snmp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
    <files mask="lwip_prvmib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
    <files mask="private_mib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
    <files mask="snmpv3_dummy.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
    <files mask="snmpv3_dummy.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="src">
    <files mask="sntp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
    <files mask="sntp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="src">
    <files mask="tftp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
    <files mask="tftp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports" type="script">
    <files mask="CMakeCommon.cmake" hidden="true"/>
    <files mask="Common.allports.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="other">
    <files mask="README" hidden="true"/>
    <files mask="setup-tapif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
    <files mask="config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
    <files mask="iteropts.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
    <files mask="cc.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
    <files mask="fifo.h" hidden="true"/>
    <files mask="list.h" hidden="true"/>
    <files mask="pcapif.h" hidden="true"/>
    <files mask="sio.h" hidden="true"/>
    <files mask="tapif.h" hidden="true"/>
    <files mask="vdeif.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
    <files mask="fifo.c" hidden="true"/>
    <files mask="list.c" hidden="true"/>
    <files mask="pcapif.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="tapif.c" hidden="true"/>
    <files mask="vdeif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
    <files mask="perf.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="script">
    <files mask="Uninstall.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib/include/posix" type="c_include">
    <files mask="inet.h" hidden="true"/>
    <files mask="sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
    <files mask="check_stdint.h" hidden="true"/>
    <files mask="config.h" hidden="true"/>
    <files mask="stdbool.h" hidden="true"/>
    <files mask="unistd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
    <files mask="time.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
    <files mask="time.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
    <files mask="bpstruct.h" hidden="true"/>
    <files mask="cc.h" hidden="true"/>
    <files mask="epstruct.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
    <files mask="build_coverity.cmd" hidden="true"/>
    <files mask="libcheck.vcxproj" hidden="true"/>
    <files mask="libcheck.vcxproj.filters" hidden="true"/>
    <files mask="lwIP.vcxproj" hidden="true"/>
    <files mask="lwIP.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_Test.sln" hidden="true"/>
    <files mask="lwIP_Test.vcxproj" hidden="true"/>
    <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_fuzz.sln" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_unittests.sln" hidden="true"/>
    <files mask="lwip_fuzz.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
    <files mask="makefsdata.vcxproj" hidden="true"/>
    <files mask="makefsdata.vcxproj.filters" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="src">
    <files mask="pcapif.c" hidden="true"/>
    <files mask="pcapif_helper.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
    <files mask="pcapif.h" hidden="true"/>
    <files mask="pcapif_helper.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="doc">
    <files mask="readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
    <files mask="altcp_tls_mbedtls.c" hidden="true"/>
    <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
    <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/http" type="src">
    <files mask="altcp_proxyconnect.c" hidden="true"/>
    <files mask="http_client.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/netbiosns" type="src">
    <files mask="netbiosns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/smtp" type="src">
    <files mask="smtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="src">
    <files mask="snmp_asn1.c" hidden="true"/>
    <files mask="snmp_core.c" hidden="true"/>
    <files mask="snmp_mib2.c" hidden="true"/>
    <files mask="snmp_mib2_icmp.c" hidden="true"/>
    <files mask="snmp_mib2_interfaces.c" hidden="true"/>
    <files mask="snmp_mib2_ip.c" hidden="true"/>
    <files mask="snmp_mib2_snmp.c" hidden="true"/>
    <files mask="snmp_mib2_system.c" hidden="true"/>
    <files mask="snmp_mib2_tcp.c" hidden="true"/>
    <files mask="snmp_mib2_udp.c" hidden="true"/>
    <files mask="snmp_msg.c" hidden="true"/>
    <files mask="snmp_netconn.c" hidden="true"/>
    <files mask="snmp_pbuf_stream.c" hidden="true"/>
    <files mask="snmp_raw.c" hidden="true"/>
    <files mask="snmp_scalar.c" hidden="true"/>
    <files mask="snmp_snmpv2_framework.c" hidden="true"/>
    <files mask="snmp_snmpv2_usm.c" hidden="true"/>
    <files mask="snmp_table.c" hidden="true"/>
    <files mask="snmp_threadsync.c" hidden="true"/>
    <files mask="snmp_traps.c" hidden="true"/>
    <files mask="snmpv3.c" hidden="true"/>
    <files mask="snmpv3_mbedtls.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="c_include">
    <files mask="snmp_asn1.h" hidden="true"/>
    <files mask="snmp_core_priv.h" hidden="true"/>
    <files mask="snmp_msg.h" hidden="true"/>
    <files mask="snmp_pbuf_stream.h" hidden="true"/>
    <files mask="snmpv3_priv.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/tftp" type="src">
    <files mask="tftp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip" type="other">
    <files mask="init.h.cmake.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
    <files mask="altcp_proxyconnect.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
    <files mask="http_client.h" hidden="true"/>
    <files mask="netbiosns.h" hidden="true"/>
    <files mask="netbiosns_opts.h" hidden="true"/>
    <files mask="smtp.h" hidden="true"/>
    <files mask="smtp_opts.h" hidden="true"/>
    <files mask="snmp.h" hidden="true"/>
    <files mask="snmpv3.h" hidden="true"/>
    <files mask="snmp_core.h" hidden="true"/>
    <files mask="snmp_mib2.h" hidden="true"/>
    <files mask="snmp_opts.h" hidden="true"/>
    <files mask="snmp_scalar.h" hidden="true"/>
    <files mask="snmp_snmpv2_framework.h" hidden="true"/>
    <files mask="snmp_snmpv2_usm.h" hidden="true"/>
    <files mask="snmp_table.h" hidden="true"/>
    <files mask="snmp_threadsync.h" hidden="true"/>
    <files mask="tftp_client.h" hidden="true"/>
    <files mask="tftp_common.h" hidden="true"/>
    <files mask="tftp_opts.h" hidden="true"/>
    <files mask="tftp_server.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="other">
    <files mask="FILES" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.eiq.MIMXRT798S" name="eIQ" brief="eIQ machine learning SDK containing: - ARM CMSIS-NN library (neural network kernels optimized  for Cortex-M cores) - an inference engine for running TensorFlow Lite models" version="1.3" full_name="eIQ" category="Machine Learning/eIQ" user_visible="true" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.MIMXRT798S" name="TensorFlow Lite Micro" brief="TensorFlow Lite Micro library" version="24.08.07" full_name="TensorFlow Lite Micro library" category="Machine Learning/tensorflow_lite" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <defines>
        <define name="TF_LITE_STATIC_MEMORY" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="tensorflow/compiler/mlir/lite/kernels/internal" type="c_include">
        <files mask="compatibility_macros.h"/>
      </source>
      <source relative_path="tensorflow/compiler/mlir/lite/schema" type="c_include">
        <files mask="schema_generated.h"/>
        <files mask="schema_utils.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels" type="c_include">
        <files mask="kernel_util.h"/>
        <files mask="op_macros.h"/>
        <files mask="padding.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal" type="c_include">
        <files mask="common.h"/>
        <files mask="compatibility.h"/>
        <files mask="cppmath.h"/>
        <files mask="max.h"/>
        <files mask="min.h"/>
        <files mask="portable_tensor.h"/>
        <files mask="portable_tensor_utils.h"/>
        <files mask="quantization_util.h"/>
        <files mask="runtime_shape.h"/>
        <files mask="strided_slice_logic.h"/>
        <files mask="tensor_ctypes.h"/>
        <files mask="types.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference" type="c_include">
        <files mask="add.h"/>
        <files mask="add_n.h"/>
        <files mask="arg_min_max.h"/>
        <files mask="batch_matmul.h"/>
        <files mask="batch_to_space_nd.h"/>
        <files mask="binary_function.h"/>
        <files mask="broadcast_args.h"/>
        <files mask="broadcast_to.h"/>
        <files mask="ceil.h"/>
        <files mask="comparisons.h"/>
        <files mask="concatenation.h"/>
        <files mask="conv.h"/>
        <files mask="cumsum.h"/>
        <files mask="depth_to_space.h"/>
        <files mask="depthwiseconv_float.h"/>
        <files mask="depthwiseconv_uint8.h"/>
        <files mask="dequantize.h"/>
        <files mask="div.h"/>
        <files mask="elu.h"/>
        <files mask="exp.h"/>
        <files mask="fill.h"/>
        <files mask="floor.h"/>
        <files mask="floor_div.h"/>
        <files mask="floor_mod.h"/>
        <files mask="fully_connected.h"/>
        <files mask="hard_swish.h"/>
        <files mask="l2normalization.h"/>
        <files mask="leaky_relu.h"/>
        <files mask="log_softmax.h"/>
        <files mask="logistic.h"/>
        <files mask="lstm_cell.h"/>
        <files mask="maximum_minimum.h"/>
        <files mask="mul.h"/>
        <files mask="neg.h"/>
        <files mask="pad.h"/>
        <files mask="pooling.h"/>
        <files mask="portable_tensor_utils.h"/>
        <files mask="portable_tensor_utils_impl.h"/>
        <files mask="prelu.h"/>
        <files mask="process_broadcast_shapes.h"/>
        <files mask="quantize.h"/>
        <files mask="reduce.h"/>
        <files mask="requantize.h"/>
        <files mask="resize_bilinear.h"/>
        <files mask="resize_nearest_neighbor.h"/>
        <files mask="round.h"/>
        <files mask="select.h"/>
        <files mask="slice.h"/>
        <files mask="softmax.h"/>
        <files mask="space_to_batch_nd.h"/>
        <files mask="space_to_depth.h"/>
        <files mask="strided_slice.h"/>
        <files mask="sub.h"/>
        <files mask="tanh.h"/>
        <files mask="transpose.h"/>
        <files mask="transpose_conv.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference/integer_ops" type="c_include">
        <files mask="add.h"/>
        <files mask="conv.h"/>
        <files mask="depthwise_conv.h"/>
        <files mask="fully_connected.h"/>
        <files mask="l2normalization.h"/>
        <files mask="logistic.h"/>
        <files mask="mean.h"/>
        <files mask="mul.h"/>
        <files mask="pooling.h"/>
        <files mask="tanh.h"/>
        <files mask="transpose_conv.h"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/optimized" type="c_include">
        <files mask="neon_check.h"/>
      </source>
      <source relative_path="tensorflow/lite/experimental/microfrontend/lib" type="c_include">
        <files mask="bits.h"/>
        <files mask="fft.h"/>
        <files mask="fft_util.h"/>
        <files mask="filterbank.h"/>
        <files mask="filterbank_util.h"/>
        <files mask="frontend.h"/>
        <files mask="frontend_util.h"/>
        <files mask="kiss_fft_common.h"/>
        <files mask="kiss_fft_int16.h"/>
        <files mask="log_lut.h"/>
        <files mask="log_scale.h"/>
        <files mask="log_scale_util.h"/>
        <files mask="noise_reduction.h"/>
        <files mask="noise_reduction_util.h"/>
        <files mask="pcan_gain_control.h"/>
        <files mask="pcan_gain_control_util.h"/>
        <files mask="window.h"/>
        <files mask="window_util.h"/>
      </source>
      <source relative_path="tensorflow/lite/schema" type="c_include">
        <files mask="schema_generated.h"/>
        <files mask="schema_utils.h"/>
      </source>
      <source relative_path="tensorflow/lite" type="c_include">
        <files mask="array.h"/>
        <files mask="builtin_op_data.h"/>
        <files mask="builtin_ops.h"/>
        <files mask="context_util.h"/>
        <files mask="portable_type_to_tflitetype.h"/>
      </source>
      <source relative_path="tensorflow/lite/core/api" type="c_include">
        <files mask="error_reporter.h"/>
        <files mask="flatbuffer_conversions.h"/>
        <files mask="tensor_utils.h"/>
      </source>
      <source relative_path="tensorflow/lite/core" type="c_include">
        <files mask="macros.h"/>
      </source>
      <source relative_path="tensorflow/lite/core/c" type="c_include">
        <files mask="builtin_op_data.h"/>
        <files mask="c_api_types.h"/>
        <files mask="common.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="c_include">
        <files mask="compatibility.h"/>
        <files mask="debug_log.h"/>
        <files mask="fake_micro_context.h"/>
        <files mask="flatbuffer_utils.h"/>
        <files mask="memory_helpers.h"/>
        <files mask="micro_allocation_info.h"/>
        <files mask="micro_allocator.h"/>
        <files mask="micro_arena_constants.h"/>
        <files mask="micro_common.h"/>
        <files mask="micro_context.h"/>
        <files mask="micro_graph.h"/>
        <files mask="micro_interpreter.h"/>
        <files mask="micro_interpreter_context.h"/>
        <files mask="micro_interpreter_graph.h"/>
        <files mask="micro_log.h"/>
        <files mask="micro_mutable_op_resolver.h"/>
        <files mask="micro_op_resolver.h"/>
        <files mask="micro_profiler.h"/>
        <files mask="micro_profiler_interface.h"/>
        <files mask="micro_resource_variable.h"/>
        <files mask="micro_time.h"/>
        <files mask="micro_utils.h"/>
        <files mask="mock_micro_graph.h"/>
        <files mask="recording_micro_allocator.h"/>
        <files mask="recording_micro_interpreter.h"/>
        <files mask="system_setup.h"/>
        <files mask="test_helper_custom_ops.h"/>
        <files mask="test_helpers.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="c_include">
        <files mask="activation_utils.h"/>
        <files mask="activations.h"/>
        <files mask="add.h"/>
        <files mask="circular_buffer.h"/>
        <files mask="circular_buffer_flexbuffers_generated_data.h"/>
        <files mask="conv.h"/>
        <files mask="conv_test.h"/>
        <files mask="depthwise_conv.h"/>
        <files mask="dequantize.h"/>
        <files mask="detection_postprocess_flexbuffers_generated_data.h"/>
        <files mask="ethosu.h"/>
        <files mask="fully_connected.h"/>
        <files mask="hard_swish.h"/>
        <files mask="kernel_runner.h"/>
        <files mask="kernel_util.h"/>
        <files mask="leaky_relu.h"/>
        <files mask="logical.h"/>
        <files mask="logistic.h"/>
        <files mask="lstm_eval.h"/>
        <files mask="lstm_eval_test.h"/>
        <files mask="lstm_shared.h"/>
        <files mask="micro_ops.h"/>
        <files mask="micro_tensor_utils.h"/>
        <files mask="mul.h"/>
        <files mask="pad.h"/>
        <files mask="pooling.h"/>
        <files mask="prelu.h"/>
        <files mask="quantize.h"/>
        <files mask="reduce.h"/>
        <files mask="reshape.h"/>
        <files mask="softmax.h"/>
        <files mask="strided_slice.h"/>
        <files mask="sub.h"/>
        <files mask="svdf.h"/>
        <files mask="transpose_conv.h"/>
        <files mask="unidirectional_sequence_lstm.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels/xtensa" type="c_include">
        <files mask="lstm_eval.h"/>
        <files mask="xtensa.h"/>
        <files mask="xtensa_add.h"/>
        <files mask="xtensa_conv.h"/>
        <files mask="xtensa_depthwise_conv.h"/>
        <files mask="xtensa_fully_connected.h"/>
        <files mask="xtensa_pad.h"/>
        <files mask="xtensa_pooling.h"/>
        <files mask="xtensa_reduce.h"/>
        <files mask="xtensa_reshape.h"/>
        <files mask="xtensa_softmax.h"/>
        <files mask="xtensa_svdf.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/memory_planner" type="c_include">
        <files mask="greedy_memory_planner.h"/>
        <files mask="linear_memory_planner.h"/>
        <files mask="memory_plan_struct.h"/>
        <files mask="micro_memory_planner.h"/>
        <files mask="non_persistent_buffer_planner_shim.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/arena_allocator" type="c_include">
        <files mask="ibuffer_allocator.h"/>
        <files mask="non_persistent_arena_buffer_allocator.h"/>
        <files mask="persistent_arena_buffer_allocator.h"/>
        <files mask="recording_single_arena_buffer_allocator.h"/>
        <files mask="single_arena_buffer_allocator.h"/>
      </source>
      <source relative_path="tensorflow/lite/micro/tflite_bridge" type="c_include">
        <files mask="flatbuffer_conversions_bridge.h"/>
        <files mask="micro_error_reporter.h"/>
      </source>
      <source relative_path="tensorflow/lite/c" type="c_include">
        <files mask="builtin_op_data.h"/>
        <files mask="c_api_types.h"/>
        <files mask="common.h"/>
      </source>
      <source relative_path="signal/micro/kernels" type="c_include">
        <files mask="delay_flexbuffers_generated_data.h"/>
        <files mask="energy_flexbuffers_generated_data.h"/>
        <files mask="fft_auto_scale_kernel.h"/>
        <files mask="fft_flexbuffers_generated_data.h"/>
        <files mask="filter_bank_flexbuffers_generated_data.h"/>
        <files mask="filter_bank_log_flexbuffers_generated_data.h"/>
        <files mask="filter_bank_spectral_subtraction_flexbuffers_generated_data.h"/>
        <files mask="filter_bank_square_root.h"/>
        <files mask="framer_flexbuffers_generated_data.h"/>
        <files mask="irfft.h"/>
        <files mask="overlap_add_flexbuffers_generated_data.h"/>
        <files mask="pcan_flexbuffers_generated_data.h"/>
        <files mask="rfft.h"/>
        <files mask="stacker_flexbuffers_generated_data.h"/>
        <files mask="window_flexbuffers_generated_data.h"/>
      </source>
      <source relative_path="signal/src" type="c_include">
        <files mask="circular_buffer.h"/>
        <files mask="complex.h"/>
        <files mask="energy.h"/>
        <files mask="fft_auto_scale.h"/>
        <files mask="filter_bank.h"/>
        <files mask="filter_bank_log.h"/>
        <files mask="filter_bank_spectral_subtraction.h"/>
        <files mask="filter_bank_square_root.h"/>
        <files mask="irfft.h"/>
        <files mask="log.h"/>
        <files mask="max_abs.h"/>
        <files mask="msb.h"/>
        <files mask="overlap_add.h"/>
        <files mask="pcan_argc_fixed.h"/>
        <files mask="rfft.h"/>
        <files mask="square_root.h"/>
        <files mask="window.h"/>
      </source>
      <source relative_path="signal/src/kiss_fft_wrappers" type="c_include">
        <files mask="kiss_fft_common.h"/>
        <files mask="kiss_fft_float.h"/>
        <files mask="kiss_fft_int16.h"/>
        <files mask="kiss_fft_int32.h"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Include" type="c_include">
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="third_party/fft2d" type="c_include">
        <files mask="fft.h"/>
        <files mask="fft2d.h"/>
      </source>
      <source relative_path="third_party/flatbuffers/include/flatbuffers" type="c_include">
        <files mask="allocator.h"/>
        <files mask="array.h"/>
        <files mask="base.h"/>
        <files mask="buffer.h"/>
        <files mask="buffer_ref.h"/>
        <files mask="code_generator.h"/>
        <files mask="code_generators.h"/>
        <files mask="default_allocator.h"/>
        <files mask="detached_buffer.h"/>
        <files mask="file_manager.h"/>
        <files mask="flatbuffer_builder.h"/>
        <files mask="flatbuffers.h"/>
        <files mask="flatc.h"/>
        <files mask="flex_flat_util.h"/>
        <files mask="flexbuffers.h"/>
        <files mask="grpc.h"/>
        <files mask="hash.h"/>
        <files mask="idl.h"/>
        <files mask="minireflect.h"/>
        <files mask="reflection.h"/>
        <files mask="reflection_generated.h"/>
        <files mask="registry.h"/>
        <files mask="stl_emulation.h"/>
        <files mask="string.h"/>
        <files mask="struct.h"/>
        <files mask="table.h"/>
        <files mask="util.h"/>
        <files mask="vector.h"/>
        <files mask="vector_downward.h"/>
        <files mask="verifier.h"/>
      </source>
      <source relative_path="third_party/gemmlowp/fixedpoint" type="c_include">
        <files mask="fixedpoint.h"/>
        <files mask="fixedpoint_neon.h"/>
        <files mask="fixedpoint_sse.h"/>
      </source>
      <source relative_path="third_party/gemmlowp/internal" type="c_include">
        <files mask="detect_platform.h"/>
      </source>
      <source relative_path="third_party/ruy/ruy/profiler" type="c_include">
        <files mask="instrumentation.h"/>
      </source>
      <source relative_path="third_party/kissfft" type="c_include">
        <files mask="_kiss_fft_guts.h"/>
        <files mask="kiss_fft.h"/>
      </source>
      <source relative_path="third_party/kissfft/tools" type="c_include">
        <files mask="kfc.h"/>
        <files mask="kiss_fftnd.h"/>
        <files mask="kiss_fftndr.h"/>
        <files mask="kiss_fftr.h"/>
      </source>
      <source toolchain="iar" relative_path="../common/toolchains/iar" type="src">
        <files mask="retarget.c"/>
      </source>
      <source toolchain="mdk" relative_path="../common/toolchains/mdk" type="src">
        <files mask="retarget.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="third_party/flatbuffers/include" type="c_include"/>
        <include_path relative_path="third_party/gemmlowp" type="c_include"/>
        <include_path relative_path="third_party/kissfft" type="c_include"/>
        <include_path relative_path="third_party/ruy" type="c_include"/>
        <include_path relative_path="third_party/cmsis_nn" type="c_include"/>
        <include_path relative_path="third_party/cmsis_nn/Include" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="third_party/flatbuffers/include" type="asm_include"/>
        <include_path relative_path="third_party/gemmlowp" type="asm_include"/>
        <include_path relative_path="third_party/kissfft" type="asm_include"/>
        <include_path relative_path="third_party/ruy" type="asm_include"/>
        <include_path relative_path="third_party/cmsis_nn" type="asm_include"/>
        <include_path relative_path="third_party/cmsis_nn/Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.refenerce.MIMXRT798S" name="TensorFlow Lite Micro with core specific kernels" brief="TensorFlow Lite Micro library binary with core specific kernel implementations" version="24.08.07" full_name="TensorFlow Lite Micro library binary with core specific kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="pooling.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="add.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
        <files mask="svdf.cpp"/>
        <files mask="sub.cpp"/>
        <files mask="logistic.cpp"/>
        <files mask="reduce.cpp"/>
        <files mask="strided_slice.cpp"/>
        <files mask="quantize.cpp"/>
        <files mask="lstm_eval.cpp"/>
        <files mask="reshape.cpp"/>
        <files mask="leaky_relu.cpp"/>
        <files mask="transpose_conv.cpp"/>
        <files mask="pad.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_refenerce.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.fft2d.MIMXRT798S" name="FFT2D" brief="General Purpose FFT (Fast Fourier/Cosine/Sine Transform) Package" version="1.0.0" full_name="FFT2D library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MIMXRT798S" name="Flatbuffers" brief="Flatbuffers library" version="2.0.6" full_name="Flatbuffers library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MIMXRT798S" name="Gemmlowp" brief="Gemmlowp library" version="1.0.0" full_name="Gemmlowp library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.kissfft.MIMXRT798S" name="Kiss FFT" brief="A mixed-radix Fast Fourier Transform library" version="1.3.0" full_name="Kiss FFT library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/kissfft" project_base_path="eiq/tensorflow-lite/third_party/kissfft">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.ruy.MIMXRT798S" name="Ruy" brief="Ruy library" version="1.0.0" full_name="Ruy library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="middleware.lvgl.template.MIMXRT798S" name="lvgl_template" brief="lvgl template" version="9.2.1" full_name="lvgl template configuration" category="Graphics/lvgl graphics library" user_visible="false" type="project_template" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lv_conf.h"/>
      </source>
      <source relative_path="template" config="true" type="src">
        <files mask="lvgl_support.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.littlefs.MIMXRT798S" name="LittleFS" brief="littlefs" version="2.9.1" full_name="LittleFS File System stack" category="File System/LittleFS File System" user_visible="true" type="middleware" package_base_path="middleware/littlefs" project_base_path="littlefs">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lfs.c"/>
        <files mask="lfs_util.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lfs.h"/>
        <files mask="lfs_util.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_littlefs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.MIMXRT798S" name="libjpeg" brief="JPEG library" version="9.2.0" revision="1" full_name="Middleware libjpeg" category="Image/JPEG library" user_visible="true" type="middleware" package_base_path="middleware/libjpeg" project_base_path="libjpeg">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="change.log" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="inc" type="c_include">
        <files mask="cderror.h"/>
        <files mask="cdjpeg.h"/>
        <files mask="jdct.h"/>
        <files mask="jerror.h"/>
        <files mask="jinclude.h"/>
        <files mask="jmemsys.h"/>
        <files mask="jmorecfg.h"/>
        <files mask="jpegint.h"/>
        <files mask="jpeglib.h"/>
        <files mask="jversion.h"/>
        <files mask="transupp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="jaricom.c"/>
        <files mask="jcapimin.c"/>
        <files mask="jcapistd.c"/>
        <files mask="jcarith.c"/>
        <files mask="jccoefct.c"/>
        <files mask="jccolor.c"/>
        <files mask="jcdctmgr.c"/>
        <files mask="jchuff.c"/>
        <files mask="jcinit.c"/>
        <files mask="jcmainct.c"/>
        <files mask="jcmarker.c"/>
        <files mask="jcmaster.c"/>
        <files mask="jcomapi.c"/>
        <files mask="jcparam.c"/>
        <files mask="jcprepct.c"/>
        <files mask="jcsample.c"/>
        <files mask="jctrans.c"/>
        <files mask="jdapimin.c"/>
        <files mask="jdapistd.c"/>
        <files mask="jdarith.c"/>
        <files mask="jdatadst.c"/>
        <files mask="jdatasrc.c"/>
        <files mask="jdcoefct.c"/>
        <files mask="jdcolor.c"/>
        <files mask="jddctmgr.c"/>
        <files mask="jdhuff.c"/>
        <files mask="jdinput.c"/>
        <files mask="jdmainct.c"/>
        <files mask="jdmarker.c"/>
        <files mask="jdmaster.c"/>
        <files mask="jdmerge.c"/>
        <files mask="jdpostct.c"/>
        <files mask="jdsample.c"/>
        <files mask="jdtrans.c"/>
        <files mask="jerror.c"/>
        <files mask="jfdctflt.c"/>
        <files mask="jfdctfst.c"/>
        <files mask="jfdctint.c"/>
        <files mask="jidctflt.c"/>
        <files mask="jidctfst.c"/>
        <files mask="jidctint.c"/>
        <files mask="jmemmgr.c"/>
        <files mask="jmemnobs.c"/>
        <files mask="jquant1.c"/>
        <files mask="jquant2.c"/>
        <files mask="jutils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.template.MIMXRT798S" name="LIBJPEG configuration template" brief="Template configuration file to be edited by user. Users could map the file system functions to the file system they are using." version="9.2.0" revision="1" full_name="LIBJPEG configuration template" category="Image/JPEG library" user_visible="false" type="project_template" package_base_path="middleware/libjpeg" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="jconfig.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MIMXRT798S" name="fatfs" brief="FatFs" version="0.15.0" full_name="FAT File System stack" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MIMXRT798S" name="fatfs_mmc" brief="FatFs template MMC" version="0.15.0" full_name="FatFs template configuration for MMC disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/mmc" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/mmc" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MIMXRT798S" name="fatfs_nand" brief="FatFs template NAND" version="0.15.0" full_name="FatFs template configuration for NAND disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/nand" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/nand" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MIMXRT798S" name="fatfs_ram" brief="FatFs template RAM" version="0.15.0" full_name="FatFs template configuration for RAM disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/ram" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ram" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MIMXRT798S" name="fatfs_sd" brief="FatFs template SD" version="0.15.0" full_name="FatFs template configuration for SD disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/sd" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sd" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sd" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MIMXRT798S" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.15.0" full_name="FatFs template configuration for SDSPI disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/sdspi" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sdspi" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MIMXRT798S" name="fatfs_usb" brief="FatFs template USB" version="0.15.0" full_name="FatFs template configuration for USB disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template/usb" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/usb" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.template.MIMXRT798S" name="emwin_template" brief="emwin template" version="6.38" full_name="emWin template configuration" category="Graphics/emWin graphics library" user_visible="false" type="project_template" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template" config="true" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
        <include_path relative_path="emWin_header" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.nnlib.MIMXRT798S" name="cadence_nnlib" brief="DSP Neural Networks" version="4.1.0" full_name="Middleware nnlib" category="DSP/Middleware nnlib" user_visible="false" type="middleware" package_base_path="middleware/cadence/nnlib" project_base_path="nnlib">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="license.txt"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="include/nnlib" type="c_include">
        <files mask="xa_nnlib_api.h"/>
        <files mask="xa_nnlib_cnn_api.h"/>
        <files mask="xa_nnlib_gru_api.h"/>
        <files mask="xa_nnlib_kernels_api.h"/>
        <files mask="xa_nnlib_lstm_api.h"/>
        <files mask="xa_nnlib_standards.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_nnlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/nnlib" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/nnlib" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_defender.MIMXRT798S" name="device-defender-for-aws-iot-embedded-sdk" brief="Client library for using the AWS IoT Device Defender service on embedded devices." version="1.3.0" full_name="AWS IoT Device Defender Library" category="AWS IoT/AWS IoT Device Defender" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/device-defender" project_base_path="aws_iot/device-defender">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="defender.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="defender.h"/>
        <files mask="defender_config_defaults.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_defender.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_dsi.MIMXRT798S" name="soc_mipi_dsi" brief="SOC MIPI DSI Driver" version="2.0.0" full_name="SOC MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_soc_mipi_dsi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMXRT798S" name="clock" brief="Clock Driver" version="2.4.0" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_clock.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.edma_soc.MIMXRT798S" name="edma_soc" brief="EDMA SOC Driver" version="1.0.0" full_name="EDMA SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_edma_soc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma_soc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux_connections.MIMXRT798S" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.0" full_name="Inputmux_connections Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_inputmux_connections.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_iopctl.MIMXRT798S" name="iopctl" brief="iopctl Driver" version="2.0.2" full_name="iopctl Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iopctl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iopctl_soc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.MIMXRT798S" name="reset" brief="Reset Driver" version="2.1.0" full_name="Reset Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_reset.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.config.MIMXRT798S" name="wifi_bt_module_config" brief="Wi-Fi and BT module configs" version="1.0.0" full_name="Wi-Fi and BT module configs" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_bt_module_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wifi_bt_module_config.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.tx_pwr_limits.MIMXRT798S" name="wifi_bt_module_tx_pwr_limits" brief="Wi-Fi module Tx power limits" version="1.0.0" full_name="Wi-Fi module Tx power limits" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="AzureWave/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_WW_rw610.h"/>
      </source>
      <source relative_path="Murata/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_murata_1XK_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_1ZM_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2DS_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2EL_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_NH_FCC.h"/>
      </source>
      <source relative_path="u-blox/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_jody_w5_WW.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wifi_bt_module_tx_pwr_limits.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utilities.unity.MIMXRT798S" name="unity" brief="Simple Unit Testing for C" version="2.1.0" full_name="Utilities unity" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities/unity" project_base_path="utilities/unity">
      <defines>
        <define name="NDEBUG" value=""/>
        <define name="UNITY_DUMP_RESULT" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="unity.c"/>
        <files mask="gcov_support.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
        <files mask="gcov_support.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="linkscripts" type="src">
        <files mask="main_text.ldt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utilities_unity.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ektf2k.MIMXRT798S" name="ektf2k" brief="Driver ektf2k" version="1.0.0" full_name="Driver ektf2k" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ektf2k" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ektf2k.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ektf2k.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ektf2k.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft3267.MIMXRT798S" name="ft3267" brief="Touch panel controller FT3267 driver" version="1.0.1" full_name="Driver ft3267" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft3267" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft3267.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft3267.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft3267.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406.MIMXRT798S" name="ft5406" brief="Driver ft5406" version="1.0.0" full_name="Driver ft5406" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft5406" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft5406.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.gt911.MIMXRT798S" name="gt911" brief="Driver gt911" version="1.0.4" full_name="Driver gt911" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/gt911" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gt911.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gt911.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gt911.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tma525b.MIMXRT798S" name="tma525b" brief="Driver tma525b" version="1.0.0" full_name="Driver tma525b" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/tma525b" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tma525b.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tma525b.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tma525b.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT798S" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_swo.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT798S" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SSERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_virtual.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.rtt.template.MIMXRT798S" name="rtt_template" brief="RTT template configuration" version="7.22.0" full_name="rtt template configuration" category="Device/SDK Drivers" user_visible="false" type="project_template" package_base_path="components/rtt" project_base_path="rtt">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="SEGGER_RTT_Conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rtt_template.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMXRT798S" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_software_rng_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MIMXRT798S" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/reset" project_base_path="component/reset">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_reset_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.ele_s200.common.MIMXRT798S" name="psa_crypto_driver_ele_s200_common" brief="Common files of PSA crypto driver for ele_s200" version="1.0.0" full_name="Common files of PSA crypto driver for ele_s200" category="psa_crypto_driver/psa_crypto_dri_ele_s200_common" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="ele_s200/include/common" type="c_include">
        <files mask="mcux_psa_s2xx_common_init.h"/>
        <files mask="mcux_psa_s2xx_entropy.h"/>
      </source>
      <source relative_path="ele_s200/src/common" type="src">
        <files mask="mcux_psa_s2xx_common_init.c"/>
        <files mask="mcux_psa_s2xx_entropy.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_ele_s200_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ele_s200/include/common" type="c_include"/>
        <include_path relative_path="ele_s200/include/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.ele_s200.transparent.MIMXRT798S" name="psa_crypto_driver ele_s200_transparent" brief="Transparent part of PSA crypto driver for ele_s200" version="1.0.0" full_name="Transparent part of PSA crypto driver for ele_s200" category="psa_crypto_driver/psa_crypto_dri_ele_s200_trans" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="ele_s200/include/transparent" type="c_include">
        <files mask="mcux_psa_s2xx_aead.h"/>
        <files mask="mcux_psa_s2xx_cipher.h"/>
        <files mask="mcux_psa_s2xx_hash.h"/>
        <files mask="mcux_psa_s2xx_init.h"/>
        <files mask="mcux_psa_s2xx_mac.h"/>
      </source>
      <source relative_path="ele_s200/src/transparent" type="src">
        <files mask="mcux_psa_s2xx_aead.c"/>
        <files mask="mcux_psa_s2xx_cipher.c"/>
        <files mask="mcux_psa_s2xx_hash.c"/>
        <files mask="mcux_psa_s2xx_init.c"/>
        <files mask="mcux_psa_s2xx_mac.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_ele_s200_transparent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ele_s200/include/transparent" type="c_include"/>
        <include_path relative_path="ele_s200/include/transparent" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.common.MIMXRT798S" name="psa_crypto_driver els_pkc_common" brief="Common files of PSA crypto driver for els_pkc" version="1.0.0" full_name="Common files of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_crypto_driver_els_pkc_common" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="els_pkc/include/common" type="c_include">
        <files mask="mcux_psa_els_pkc_common_init.h"/>
        <files mask="mcux_psa_els_pkc_entropy.h"/>
      </source>
      <source relative_path="els_pkc/src/common" type="src">
        <files mask="mcux_psa_els_pkc_common_init.c"/>
        <files mask="mcux_psa_els_pkc_entropy.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/include/common" type="c_include"/>
        <include_path relative_path="els_pkc/include/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.opaque.MIMXRT798S" name="psa_crypto_driver els_pkc_opaque" brief="Opaque part of PSA crypto driver for els_pkc" version="1.0.0" full_name="Opaque part of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_crypto_dri_els_pkc_opaque" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="els_pkc/include/opaque" type="c_include">
        <files mask="mcux_psa_els_pkc_opaque_aead.h"/>
        <files mask="mcux_psa_els_pkc_opaque_asymmetric_signature.h"/>
        <files mask="mcux_psa_els_pkc_opaque_cipher.h"/>
        <files mask="mcux_psa_els_pkc_opaque_init.h"/>
        <files mask="mcux_psa_els_pkc_opaque_key_generation.h"/>
        <files mask="mcux_psa_els_pkc_opaque_mac.h"/>
      </source>
      <source relative_path="els_pkc/src/opaque" type="src">
        <files mask="mcux_psa_els_pkc_opaque_aead.c"/>
        <files mask="mcux_psa_els_pkc_opaque_asymmetric_signature.c"/>
        <files mask="mcux_psa_els_pkc_opaque_cipher.c"/>
        <files mask="mcux_psa_els_pkc_opaque_init.c"/>
        <files mask="mcux_psa_els_pkc_opaque_key_generation.c"/>
        <files mask="mcux_psa_els_pkc_opaque_mac.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_opaque.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/include/opaque" type="c_include"/>
        <include_path relative_path="els_pkc/include/opaque" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.oracle.rw61x.MIMXRT798S" name="psa_crypto_driver els_pkc_oracle_rw61x" brief="RW61x Oracle of PSA crypto driver for els_pkc" version="1.0.0" full_name="RW61x Oracle of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_driver_els_pkc_oracle_rw61x" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="els_pkc/oracle/platforms/rw61x" type="c_include">
        <files mask="mcuxClPsaDriver_Oracle_KeyRecipes.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_oracle_rw61x.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/oracle/platforms/rw61x" type="c_include"/>
        <include_path relative_path="els_pkc/oracle/platforms/rw61x" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.oracle.mimxrt.MIMXRT798S" name="psa_crypto_driver els_pkc_oracle_mimxrt" brief="MIMXRT Oracle of PSA crypto driver for els_pkc" version="1.0.0" full_name="MIMXRT Oracle of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_driver_els_pkc_oracle_mimxrt" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="els_pkc/oracle/platforms/mimxrt" type="c_include">
        <files mask="mcuxClPsaDriver_Oracle_KeyRecipes.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_oracle_mimxrt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/oracle/platforms/mimxrt" type="c_include"/>
        <include_path relative_path="els_pkc/oracle/platforms/mimxrt" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.oracle.mcxn.MIMXRT798S" name="psa_crypto_driver els_pkc_oracle_mcxn" brief="MCXN Oracle of PSA crypto driver for els_pkc" version="1.0.0" full_name="MCXN Oracle of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_driver_els_pkc_oracle_mcxn" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="els_pkc/oracle/platforms/mcxn" type="c_include">
        <files mask="mcuxClPsaDriver_Oracle_KeyRecipes.h"/>
      </source>
      <source relative_path="els_pkc/oracle/platforms/mcxn" type="src">
        <files mask="mcuxClPsaDriver_Oracle_KeyRecipes_Utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_oracle_mcxn.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/oracle/platforms/mcxn" type="c_include"/>
        <include_path relative_path="els_pkc/oracle/platforms/mcxn" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.transparent.MIMXRT798S" name="psa_crypto_driver els_pkc_transparent" brief="Transparent part of PSA crypto driver for els_pkc" version="1.0.0" full_name="Transparent part of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_crypt_dri_els_pkc_trans" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="els_pkc/include/transparent" type="c_include">
        <files mask="mcux_psa_els_pkc_aead.h"/>
        <files mask="mcux_psa_els_pkc_asymmetric_signature.h"/>
        <files mask="mcux_psa_els_pkc_cipher.h"/>
        <files mask="mcux_psa_els_pkc_hash.h"/>
        <files mask="mcux_psa_els_pkc_init.h"/>
        <files mask="mcux_psa_els_pkc_key_generation.h"/>
        <files mask="mcux_psa_els_pkc_mac.h"/>
      </source>
      <source relative_path="els_pkc/src/transparent" type="src">
        <files mask="mcux_psa_els_pkc_aead.c"/>
        <files mask="mcux_psa_els_pkc_asymmetric_signature.c"/>
        <files mask="mcux_psa_els_pkc_cipher.c"/>
        <files mask="mcux_psa_els_pkc_hash.c"/>
        <files mask="mcux_psa_els_pkc_init.c"/>
        <files mask="mcux_psa_els_pkc_key_generation.c"/>
        <files mask="mcux_psa_els_pkc_mac.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_transparent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/include/transparent" type="c_include"/>
        <include_path relative_path="els_pkc/include/transparent" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.mbedtls_thread_alt.MIMXRT798S" name="psa_crypto_driver mbedtls_threading_alt" brief="Threading Alt implementation for mbedtls layer via PSA crypto driver" version="1.0.0" full_name="PSA crypto driver threading alt layer for mbedtls threading based" category="psa_crypto_driver/psa_dri_mbed_thrd_alt" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="mbedtls_thread_alt" type="src">
        <files mask="threading_alt.c"/>
      </source>
      <source relative_path="mbedtls_thread_alt" type="c_include">
        <files mask="threading_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_mbedtls_thread_alt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mbedtls_thread_alt" type="c_include"/>
        <include_path relative_path="mbedtls_thread_alt" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.osal.MIMXRT798S" name="psa_crypto_driver osal" brief="OS Abstraction Layer for PSA crypto driver" version="1.0.0" full_name="PSA crypto driver osal layer" category="psa_crypto_driver/psa_crypto_driver_osal" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="osal" type="c_include">
        <files mask="osal_mutex.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_osal.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osal" type="c_include"/>
        <include_path relative_path="osal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.use_trng_compile_option.MIMXRT798S" name="psa_crypto_driver trng_compile_option" brief="psa_crypto_driver_trng usage compile option" version="1.0.0" full_name="PSA crypto driver trng compile options" category="psa_crypto_driver/psa_crypto_driver_trng_opt" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <defines>
        <define name="MBEDTLS_MCUX_USE_TRNG_AS_ENTROPY_SEED" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_use_trng_compile_option.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.psa_crypto_driver.mbedtls3x.MIMXRT798S" name="psa_crypto_driver mbedtls3x" brief="psa_crypto_driver_mbedtls3x component selection" version="1.0.0" full_name="PSA crypto driver mbedtls3x" category="psa_crypto_driver/psa_crypto_driver_mbedtls3x" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="component.psa_crypto_driver.mbedcrypto.MIMXRT798S" name="psa_crypto_driver mbedcrypto" brief="psa_crypto_driver_mbedcrypto component selection" version="1.0.0" full_name="PSA crypto driver mbedcrypto" category="psa_crypto_driver/psa_crypto_driver_mbedcrypto" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <!--<component id="container.component.psa_crypto_driver.unused_files.MIMXRT798S" name="unused_files" version="1.0.0" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="osal" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
</component>-->
    <component id="component.panic.MIMXRT798S" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_panic.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_template_config.MIMXRT798S" name="osa" brief="Component osa template config" version="1.0.0" full_name="Component osa template config" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="config" config="true" type="c_include">
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_template_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip_fmu.MIMXRT798S" name="mflash onchip_fmu" brief="mflash onchip_fmu" version="1.0.0" full_name="mflash onchip_fmu" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
    </component>
    <component id="component.els_pkc.core.MIMXRT798S" name="els_pkc.core" brief="Component els_pkc.core" version="1.9.0" full_name="Component els_pkc.core" category="els_pkc/els_pkc_core" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxClCore/inc" type="c_include">
        <files mask="mcuxClCore_Examples.h"/>
        <files mask="mcuxClCore_FunctionIdentifiers.h"/>
        <files mask="mcuxClCore_Macros.h"/>
        <files mask="mcuxClCore_Platform.h"/>
        <files mask="mcuxClCore_Toolchain.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_core.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCore/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCore/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.data_integrity.MIMXRT798S" name="els_pkc.data_integrity" brief="Component els_pkc.data_integrity" version="1.9.0" full_name="Component els_pkc.data_integrity" category="els_pkc/els_pkc_data_integrity" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslDataIntegrity/inc" type="c_include">
        <files mask="mcuxCsslDataIntegrity.h"/>
        <files mask="mcuxCsslDataIntegrity_Cfg.h"/>
        <files mask="mcuxCsslDataIntegrity_Impl.h"/>
        <files mask="mcuxCsslDataIntegrity_None.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_data_integrity.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslDataIntegrity/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslDataIntegrity/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.ecc_deterministic.MIMXRT798S" name="els_pkc.ecc_deterministic" brief="Component els_pkc.ecc_deterministic" version="1.9.0" full_name="Component els_pkc.ecc_deterministic" category="els_pkc/els_pkc_ecc_deterministic" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_ecc_deterministic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.els_header_only.MIMXRT798S" name="els_header_only" brief="Component els_header_only" version="1.9.0" full_name="Component els_header_only" category="els_pkc/els_pkc_els_header_only" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxClEls/inc" type="c_include">
        <files mask="mcuxClEls.h"/>
        <files mask="mcuxClEls_Aead.h"/>
        <files mask="mcuxClEls_Cipher.h"/>
        <files mask="mcuxClEls_Cmac.h"/>
        <files mask="mcuxClEls_Crc.h"/>
        <files mask="mcuxClEls_Ecc.h"/>
        <files mask="mcuxClEls_Hash.h"/>
        <files mask="mcuxClEls_Hmac.h"/>
        <files mask="mcuxClEls_Kdf.h"/>
        <files mask="mcuxClEls_mapping.h"/>
        <files mask="mcuxClEls_Rng.h"/>
        <files mask="mcuxClEls_Types.h"/>
        <files mask="mcuxClEls_KeyManagement.h"/>
      </source>
      <source relative_path="src/comps/mcuxClEls/inc/internal" type="c_include">
        <files mask="mcuxClEls_Internal.h"/>
        <files mask="mcuxClEls_Internal_mapping.h"/>
        <files mask="mcuxClEls_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_els_header_only.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.key_derivation.MIMXRT798S" name="els_pkc.key_derivation" brief="Component els_pkc.key_derivation" version="1.9.0" full_name="Component els_pkc.key_derivation" category="els_pkc/els_pkc_key_derivation" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxClKey/src" type="src">
        <files mask="mcuxClKey_agreement.c"/>
        <files mask="mcuxClKey_agreement_selftest.c"/>
        <files mask="mcuxClKey_Derivation.c"/>
        <files mask="mcuxClKey_Derivation_HKDF.c"/>
        <files mask="mcuxClKey_Derivation_NIST_SP800_108.c"/>
        <files mask="mcuxClKey_Derivation_NIST_SP800_56C.c"/>
        <files mask="mcuxClKey_Derivation_PBKDF2.c"/>
        <files mask="mcuxClKey_generate_keypair.c"/>
      </source>
      <source relative_path="src/comps/mcuxClKey/inc" type="c_include">
        <files mask="mcuxClKey_DerivationAlgorithms.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_HKDF.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_NIST_SP800_108.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_NIST_SP800_56C.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_PBKDF2.h"/>
      </source>
      <source relative_path="src/comps/mcuxClKey/inc/internal" type="c_include">
        <files mask="mcuxClKey_Derivation_Helper.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_NIST_SP800_108_Internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_key_derivation.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.pre_processor.MIMXRT798S" name="els_pkc.pre_processor" brief="Component els_pkc.pre_processor" version="1.9.0" full_name="Component els_pkc.pre_processor" category="els_pkc/els_pkc_pre_processor" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslCPreProcessor/inc" type="c_include">
        <files mask="mcuxCsslAnalysis.h"/>
        <files mask="mcuxCsslCPreProcessor.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_pre_processor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslCPreProcessor/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslCPreProcessor/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.secure_counter.MIMXRT798S" name="els_pkc.secure_counter" brief="Component els_pkc.secure_counter" version="1.9.0" full_name="Component els_pkc.secure_counter" category="els_pkc/els_pkc_secure_counter" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslSecureCounter/inc" type="c_include">
        <files mask="mcuxCsslSecureCounter.h"/>
        <files mask="mcuxCsslSecureCounter_Cfg.h"/>
        <files mask="mcuxCsslSecureCounter_Impl.h"/>
        <files mask="mcuxCsslSecureCounter_None.h"/>
        <files mask="mcuxCsslSecureCounter_SW_Local.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_secure_counter.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslSecureCounter/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslSecureCounter/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.toolchain.MIMXRT798S" name="els_pkc toolchain" brief="Component els_pkc toolchain" version="1.9.0" full_name="Component els_pkc toolchain" category="els_pkc/els_pkc_toolchain" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="src/compiler" type="c_include">
        <files mask="mcuxClToolchain.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_toolchain.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/compiler" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/compiler" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.component.els_pkc.unused_files.MIMXRT798S" name="unused_files" version="1.9.0" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="examples" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
</component>-->
    <component id="component.ak4497_adapter.MIMXRT798S" name="codec_ak4497_adapter" brief="Component ak4497 adapter for single codec" version="2.2.0" full_name="Component ak4497_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/ak4497" type="c_include">
        <files mask="fsl_codec_ak4497_adapter.h"/>
      </source>
      <source relative_path="port/ak4497" type="src">
        <files mask="fsl_codec_ak4497_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ak4497_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ak4497" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/ak4497" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMXRT798S" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <defines>
        <define name="CODEC_MULTI_ADAPTERS" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_adapters.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42448_adapter.MIMXRT798S" name="codec_cs42448_adapter" brief="Component cs42448 adapter for single codec" version="2.2.1" full_name="Component cs42448_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/cs42448" type="c_include">
        <files mask="fsl_codec_cs42448_adapter.h"/>
      </source>
      <source relative_path="port/cs42448" type="src">
        <files mask="fsl_codec_cs42448_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42448_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42448" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42448" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMXRT798S" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/cs42888" type="c_include">
        <files mask="fsl_codec_cs42888_adapter.h"/>
      </source>
      <source relative_path="port/cs42888" type="src">
        <files mask="fsl_codec_cs42888_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42888_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42888" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42888" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMXRT798S" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_da7212_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/da7212" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/da7212" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm186x_adapter.MIMXRT798S" name="codec_pcm186x_adapter" brief="Component pcm186x adapter for single codec" version="2.0.0" full_name="Component pcm186x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/pcm186x" type="c_include">
        <files mask="fsl_codec_pcm186x_adapter.h"/>
      </source>
      <source relative_path="port/pcm186x" type="src">
        <files mask="fsl_codec_pcm186x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pcm186x_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm186x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm186x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm512x_adapter.MIMXRT798S" name="codec_pcm512x_adapter" brief="Component pcm512x adapter for single codec" version="2.0.0" full_name="Component pcm512x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/pcm512x" type="c_include">
        <files mask="fsl_codec_pcm512x_adapter.h"/>
      </source>
      <source relative_path="port/pcm512x" type="src">
        <files mask="fsl_codec_pcm512x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pcm512x_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm512x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm512x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMXRT798S" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_sgtl_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sgtl5000" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sgtl5000" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9896_adapter.MIMXRT798S" name="codec_tfa9896_adapter" brief="Component tfa9896 adapter for single codec" version="2.2.0" full_name="Component tfa9896_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/tfa9896" type="c_include">
        <files mask="fsl_codec_tfa9896_adapter.h"/>
      </source>
      <source relative_path="port/tfa9896" type="src">
        <files mask="fsl_codec_tfa9896_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tfa9896_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9896" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9896" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9xxx_adapter.MIMXRT798S" name="codec_tfa9xxx_adapter" brief="Component tfa9xxx adapter for single codec" version="2.2.0" full_name="Component tfa9xxx_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/tfa9xxx" type="c_include">
        <files mask="fsl_codec_tfa9xxx_adapter.h"/>
      </source>
      <source relative_path="port/tfa9xxx" type="src">
        <files mask="fsl_codec_tfa9xxx_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tfa9xxx_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9xxx" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9xxx" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8524_adapter.MIMXRT798S" name="codec_wm8524_adapter" brief="Component wm8524 adapter for single codec" version="2.2.0" full_name="Component wm8524_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/wm8524" type="c_include">
        <files mask="fsl_codec_wm8524_adapter.h"/>
      </source>
      <source relative_path="port/wm8524" type="src">
        <files mask="fsl_codec_wm8524_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8524_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8524" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8524" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMXRT798S" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/wm8904" type="c_include">
        <files mask="fsl_codec_wm8904_adapter.h"/>
      </source>
      <source relative_path="port/wm8904" type="src">
        <files mask="fsl_codec_wm8904_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8904_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8904" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8904" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMXRT798S" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8960_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8960" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8960" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMXRT798S" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8962_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8962" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8962" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT798S" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_codec.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMXRT798S" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
        <files mask="riscvllvm.cmake"/>
      </source>
    </component>
    <component id="CMSIS_DSP_Include.MIMXRT798S" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.16.2" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMXRT798S" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.16.2" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
        <files mask="arm_fir_decimate_f64.c"/>
        <files mask="arm_fir_decimate_init_f64.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_average_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_average_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMXRT798S" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMXRT798S" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.3.0" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMXRT798S" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMXRT798S" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT798S" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT798S" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMXRT798S" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MIMXRT798S" name="CMSIS_Driver_GPIO" brief="Access to #include Driver_GPIO.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver GPIO" category="CMSIS Driver/GPIO" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include/GPIO" template="true" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="Include/GPIO" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_GPIO.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="asm_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMXRT798S" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMXRT798S" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMXRT798S" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMXRT798S" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMXRT798S" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMXRT798S" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMXRT798S" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMXRT798S" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMXRT798S" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMXRT798S" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="6.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.RTE.MIMXRT798S" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT798S/template" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_RTE.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MIMXRT798S" name="MIMXRT798S" version="1.0.0" package_base_path="CMSIS" project_base_path="./">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
  </source>
  <source relative_path="Driver/Include/GPIO" type="c_include">
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
  </source>
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Core/Include" type="c_include">
    <files mask="cmsis_clang.h"/>
  </source>
  <source relative_path="Core/Include/m-profile" type="c_include">
    <files mask="cmsis_clang_m.h"/>
  </source>
</component>-->
    <component id="middleware.psatest.ns.tgt_dev_apis_nxp.MIMXRT798S" name="PSATEST_NS_TGT_DEV_APIS_NXP" brief="PSA Test Suite Non Secure target dev_apis" version="1.4" full_name="Middleware psatest ns" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="platform/targets/tgt_dev_apis_nxp/nspe" type="c_include">
        <files mask="pal_attestation_config.h"/>
        <files mask="pal_config.h"/>
        <files mask="pal_crypto_config.h"/>
        <files mask="pal_storage_config.h"/>
        <files mask="target_database.h"/>
      </source>
      <source relative_path="platform/targets/tgt_dev_apis_nxp/nspe" type="src">
        <files mask="pal_driver_intf.c"/>
        <files mask="target_database.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_tgt_dev_apis_nxp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/tgt_dev_apis_nxp/nspe" type="c_include"/>
        <include_path relative_path="platform/targets/tgt_dev_apis_nxp/nspe" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template.MIMXRT798S.MIMXRT798S" name="MIMXRT798S" brief="Devices_project_template MIMXRT798S" version="1.0.0" full_name="Devices_project_template MIMXRT798S" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT798S/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT798S"/>
              <component_dependency value="utility.debug_console_template_config.MIMXRT798S"/>
              <component_dependency value="platform.utilities.assert.MIMXRT798S"/>
              <component_dependency value="component.serial_manager.MIMXRT798S"/>
              <component_dependency value="component.serial_manager_uart.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="utility.debug_console_lite.MIMXRT798S"/>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT798S"/>
            </all>
          </any_of>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.xspi.MIMXRT798S"/>
              <component_dependency value="platform.drivers.cache_xcache.MIMXRT798S"/>
              <component_dependency value="platform.drivers.power.MIMXRT798S"/>
              <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="platform.drivers.power.MIMXRT798S"/>
              <device_core_dependency value="cm33_core1_MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT798S"/>
          <component_dependency value="platform.drivers.gpio.MIMXRT798S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT798S"/>
          <component_dependency value="device.MIMXRT798S_startup.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT798S"/>
          <component_dependency value="platform.drivers.glikey.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
      </source>
      <source relative_path="cm33_core0" config="true" type="c_include" device_cores="cm33_core0_MIMXRT798S">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm33_core0" config="true" type="src" device_cores="cm33_core0_MIMXRT798S">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="cm33_core1" config="true" type="c_include" device_cores="cm33_core1_MIMXRT798S">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm33_core1" config="true" type="src" device_cores="cm33_core1_MIMXRT798S">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_project_template.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT798S_linker.MIMXRT798S" name="MIMXRT798S_linker" brief="Device MIMXRT798S_linker" version="1.0.0" full_name="Device MIMXRT798S_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="devices/MIMXRT798S" project_base_path="MIMXRT798S">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm33_core0_MIMXRT798S">
        <files mask="MIMXRT798Sxxxx_cm33_core0_ram.scf"/>
        <files mask="MIMXRT798Sxxxx_cm33_core0_flash.scf"/>
        <files mask="MIMXRT798Sxxxx_cm33_core0_flash1.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm33_core0_MIMXRT798S">
        <files mask="MIMXRT798Sxxxx_cm33_core0_ram.ld"/>
        <files mask="MIMXRT798Sxxxx_cm33_core0_flash.ld"/>
        <files mask="MIMXRT798Sxxxx_cm33_core0_flash1.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm33_core0_MIMXRT798S">
        <files mask="MIMXRT798Sxxxx_cm33_core0_ram.icf"/>
        <files mask="MIMXRT798Sxxxx_cm33_core0_flash.icf"/>
        <files mask="MIMXRT798Sxxxx_cm33_core0_flash1.icf"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm33_core1_MIMXRT798S">
        <files mask="MIMXRT798Sxxxx_cm33_core1_ram.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm33_core1_MIMXRT798S">
        <files mask="MIMXRT798Sxxxx_cm33_core1_ram.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm33_core1_MIMXRT798S">
        <files mask="MIMXRT798Sxxxx_cm33_core1_ram.icf"/>
      </source>
    </component>
    <component id="platform.drivers.utick.MIMXRT798S" name="utick" brief="UTICK Driver" version="2.0.5" full_name="UTICK Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_utick.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dsp.MIMXRT798S" name="dsp" brief="DSP Driver" version="2.0.0" full_name="DSP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dsp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dsp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dsp.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT798S" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console_lite" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_lite.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" type="c_include"/>
        <include_path relative_path="debug_console_lite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.str.MIMXRT798S" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="str" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="str" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_str.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" type="c_include"/>
        <include_path relative_path="str" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console.MIMXRT798S" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="utility.str.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" type="c_include"/>
        <include_path relative_path="debug_console" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MIMXRT798S" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="utility.debug_console.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT798S" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="platform.utilities.assert.MIMXRT798S"/>
          </not>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert_lite.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT798S_startup.MIMXRT798S" name="MIMXRT798S_startup" brief="Device MIMXRT798S_startup" version="1.0.0" full_name="Device MIMXRT798S_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMXRT798S" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT798S_system.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm33_core0_MIMXRT798S">
        <files mask="startup_mimxrt798s_cm33_core0.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm33_core0_MIMXRT798S">
        <files mask="startup_mimxrt798s_cm33_core0.cpp"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src">
        <files mask="boot_multicore_slave.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="c_include">
        <files mask="boot_multicore_slave.h"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm33_core0_MIMXRT798S">
        <files mask="startup_MIMXRT798S_cm33_core0.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm33_core0_MIMXRT798S">
        <files mask="startup_MIMXRT798S_cm33_core0.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm33_core0_MIMXRT798S">
        <files mask="startup_MIMXRT798S_cm33_core0.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm33_core1_MIMXRT798S">
        <files mask="startup_mimxrt798s_cm33_core1.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm33_core1_MIMXRT798S">
        <files mask="startup_mimxrt798s_cm33_core1.cpp"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm33_core1_MIMXRT798S">
        <files mask="startup_MIMXRT798S_cm33_core1.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm33_core1_MIMXRT798S">
        <files mask="startup_MIMXRT798S_cm33_core1.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm33_core1_MIMXRT798S">
        <files mask="startup_MIMXRT798S_cm33_core1.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_startup.MIMXRT798S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.MIMXRT798S" name="middleware.edgefast_bluetooth.pal" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.mbedtls3x.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.crypto.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.db_gen.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.platform.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="boards/template" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT798S" name="middleware.edgefast_bluetooth.common.ethermind.hci" brief="edgefast_bluetooth HCI" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.hci" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_hci.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT798S" name="middleware.edgefast_bluetooth.common.ethermind.hci_uart" brief="edgefast_bluetooth HCI UART" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.hci_uart" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart_edma.MIMXRT798S"/>
          <component_dependency value="component.serial_manager.MIMXRT798S"/>
          <component_dependency value="component.serial_manager_uart.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth" type="src">
        <files mask="hci_uart.c"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="c_include">
        <files mask="hci_uart.h"/>
        <files mask="hci_uart_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_hci_uart.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.common.ethermind" brief="edgefast_bluetooth bt_ble host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="LFS_NO_INTRINSICS" value="1"/>
        <define name="LFS_NO_ERROR" value="1"/>
        <define name="LFS_THREADSAFE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT798S"/>
          <component_dependency value="component.osa_free_rtos.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.config.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.extension.common.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.fatfs.MIMXRT798S"/>
          <component_dependency value="middleware.littlefs.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="port/pal/mcux/toolspec/mcuxpresso" type="src">
        <files mask="toolspec.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="port/pal/mcux/toolspec/mcuxpresso" type="c_include">
        <files mask="toolspec.h"/>
      </source>
      <source relative_path="bluetooth/export/eOSAL" type="c_include">
        <files mask="eBT_assert.h"/>
        <files mask="eBT_config.h"/>
        <files mask="eBT_debug_api.h"/>
        <files mask="eBT_fops.h"/>
        <files mask="eBT_os.h"/>
        <files mask="eBT_serial.h"/>
        <files mask="eBT_timer.h"/>
      </source>
      <source relative_path="bluetooth/export/include" type="c_include">
        <files mask="BT_a2dp_api.h"/>
        <files mask="BT_analyzer.h"/>
        <files mask="BT_api.h"/>
        <files mask="BT_assigned_numbers.h"/>
        <files mask="BT_at_parser_api.h"/>
        <files mask="BT_att_api.h"/>
        <files mask="BT_avctp_api.h"/>
        <files mask="BT_avdtp_api.h"/>
        <files mask="BT_avrcp_api.h"/>
        <files mask="BT_avrcp_ca_api.h"/>
        <files mask="BT_bip_api.h"/>
        <files mask="BT_bnep_api.h"/>
        <files mask="BT_bottom_half.h"/>
        <files mask="BT_bpp_api.h"/>
        <files mask="BT_common.h"/>
        <files mask="BT_ctn_api.h"/>
        <files mask="BT_dbase_api.h"/>
        <files mask="BT_device_queue.h"/>
        <files mask="BT_error.h"/>
        <files mask="BT_ftp_api.h"/>
        <files mask="BT_gap_api.h"/>
        <files mask="BT_gatt_db_api.h"/>
        <files mask="BT_hci_api.h"/>
        <files mask="BT_hdp_api.h"/>
        <files mask="BT_hfp_ag_api.h"/>
        <files mask="BT_hfp_unit_api.h"/>
        <files mask="BT_hid_device_api.h"/>
        <files mask="BT_hid_host_api.h"/>
        <files mask="BT_irobex_api.h"/>
        <files mask="BT_jpl_api.h"/>
        <files mask="BT_map_api.h"/>
        <files mask="BT_mcap_api.h"/>
        <files mask="BT_obex_api.h"/>
        <files mask="BT_opp_api.h"/>
        <files mask="BT_pan_api.h"/>
        <files mask="BT_pbap_api.h"/>
        <files mask="BT_racp.h"/>
        <files mask="BT_rfcomm_api.h"/>
        <files mask="BT_sap_api.h"/>
        <files mask="BT_sdp_api.h"/>
        <files mask="BT_security.h"/>
        <files mask="BT_sm_api.h"/>
        <files mask="BT_smp_api.h"/>
        <files mask="BT_snoop.h"/>
        <files mask="BT_spp_api.h"/>
        <files mask="BT_status.h"/>
        <files mask="BT_storage.h"/>
        <files mask="BT_version.h"/>
        <files mask="fsm_defines.h"/>
        <files mask="fsm_engine.h"/>
        <files mask="gatt_defines.h"/>
        <files mask="hci_transport.h"/>
        <files mask="l2cap.h"/>
        <files mask="write_task.h"/>
      </source>
      <source relative_path="bluetooth/export/vendor" type="c_include">
        <files mask="vendor_specific_commands.h"/>
        <files mask="vendor_specific_init.h"/>
      </source>
      <source relative_path="bluetooth/export/vendor" type="src">
        <files mask="vendor_specific_init.c"/>
      </source>
      <source relative_path="bluetooth/private/protocols/att" type="c_include">
        <files mask="att.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/avctp" type="c_include">
        <files mask="avctp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/avdtp" type="c_include">
        <files mask="avdtp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/bnep" type="c_include">
        <files mask="bnep.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/dbase" type="c_include">
        <files mask="database.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/hci_1.2" type="c_include">
        <files mask="hci_h.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/mcap" type="c_include">
        <files mask="mcap.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/obex" type="c_include">
        <files mask="obex.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/rfcomm" type="c_include">
        <files mask="rfcomm.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/sdp" type="c_include">
        <files mask="sdp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/sm" type="c_include">
        <files mask="sm.h"/>
        <files mask="sm_extern.h"/>
        <files mask="sm_internal.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/smp" type="c_include">
        <files mask="smp.h"/>
        <files mask="smp_extern.h"/>
        <files mask="smp_fsm.h"/>
        <files mask="smp_fsm_engine.h"/>
        <files mask="smp_internal.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/aes_cmac" type="c_include">
        <files mask="aes_cmac.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/at_parser" type="c_include">
        <files mask="at_parser_hsp_hfp.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/object_parser" type="c_include">
        <files mask="object_parser_api.h"/>
        <files mask="tokenizer.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/racp" type="c_include">
        <files mask="racp.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/storage" type="c_include">
        <files mask="storage.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/xml_parser" type="c_include">
        <files mask="xml_common_defines.h"/>
        <files mask="xml_encoder.h"/>
        <files mask="xml_parser.h"/>
      </source>
      <source relative_path="port/osal/src/freertos" type="c_include">
        <files mask="EM_assert.h"/>
        <files mask="EM_config.h"/>
        <files mask="EM_debug.h"/>
        <files mask="EM_debug_api.h"/>
        <files mask="EM_debug_internal.h"/>
        <files mask="EM_fops.h"/>
        <files mask="EM_os.h"/>
        <files mask="EM_serial.h"/>
        <files mask="EM_timer.h"/>
        <files mask="EM_timer_internal.h"/>
      </source>
      <source relative_path="port/osal/src/freertos" type="src">
        <files mask="EM_config.c"/>
        <files mask="EM_debug.c"/>
        <files mask="EM_fops.c"/>
        <files mask="EM_os.c"/>
        <files mask="EM_serial.c"/>
        <files mask="EM_timer.c"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="c_include">
        <files mask="BT_assert.h"/>
        <files mask="BT_config.h"/>
        <files mask="BT_debug.h"/>
        <files mask="BT_debug_api.h"/>
        <files mask="BT_fops.h"/>
        <files mask="BT_os.h"/>
        <files mask="BT_storage_pl.h"/>
        <files mask="BT_timer.h"/>
        <files mask="btsnoop_pl.h"/>
        <files mask="sco_audio_pl.h"/>
        <files mask="ctn_pl.h"/>
        <files mask="ftp_pl.h"/>
        <files mask="hci_uart_internal.h"/>
        <files mask="map_pl.h"/>
        <files mask="obex_pl.h"/>
        <files mask="pbap_pl.h"/>
        <files mask="write_task_extern_pl.h"/>
        <files mask="write_task_pl.h"/>
        <files mask="littlefs_pl.h"/>
        <files mask="fw_loader_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="src">
        <files mask="BT_status_pl.c"/>
        <files mask="BT_storage_pl.c"/>
        <files mask="btsnoop_pl.c"/>
        <files mask="sco_audio_pl.c"/>
        <files mask="ctn_pl.c"/>
        <files mask="ftp_pl.c"/>
        <files mask="ht_read_task_pl.c"/>
        <files mask="map_pl.c"/>
        <files mask="obex_pl.c"/>
        <files mask="pbap_pl.c"/>
        <files mask="write_task_pl.c"/>
        <files mask="littlefs_pl.c"/>
        <files mask="fw_loader_uart.c"/>
      </source>
      <source relative_path="port/pal/mcux/ethal" type="c_include">
        <files mask="ethal_assert.h"/>
        <files mask="ethal_config.h"/>
        <files mask="ethal_debug.h"/>
        <files mask="ethal_debug_api.h"/>
        <files mask="ethal_debug_internal.h"/>
        <files mask="ethal_fops.h"/>
        <files mask="ethal_os.h"/>
        <files mask="ethal_serial.h"/>
        <files mask="ethal_timer.h"/>
        <files mask="ethal_timer_internal.h"/>
      </source>
      <source relative_path="port/pal/mcux/ethal" type="src">
        <files mask="ethal_config.c"/>
        <files mask="ethal_debug.c"/>
        <files mask="ethal_fops.c"/>
        <files mask="ethal_os.c"/>
        <files mask="ethal_serial.c"/>
        <files mask="ethal_timer.c"/>
      </source>
      <source relative_path="port/pal/mcux/sbc" type="c_include">
        <files mask="sbc_os.h"/>
      </source>
      <source relative_path="port/pal/mcux" type="src">
        <files mask="EM_platform.c"/>
      </source>
      <source relative_path="port/pal/mcux" type="c_include">
        <files mask="EM_platform.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/sbc" type="c_include">
        <files mask="sbc_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/toolspec/mcuxpresso" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="bluetooth/export/eOSAL" type="c_include"/>
        <include_path relative_path="bluetooth/export/include" type="c_include"/>
        <include_path relative_path="bluetooth/export/vendor" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/att" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/avctp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/avdtp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/bnep" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/dbase" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/hci_1.2" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/mcap" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/obex" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/rfcomm" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/sdp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/sm" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/smp" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/aes_cmac" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/at_parser" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/object_parser" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/racp" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/storage" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/xml_parser" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth" type="c_include"/>
        <include_path relative_path="port/pal/mcux/ethal" type="c_include"/>
        <include_path relative_path="port/pal/mcux/sbc" type="c_include"/>
        <include_path relative_path="port/osal/src/freertos" type="c_include"/>
        <include_path relative_path="port/pal/mcux" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/sbc" type="c_include"/>
        <include_path relative_path="bluetooth/export/eOSAL" type="asm_include"/>
        <include_path relative_path="bluetooth/export/include" type="asm_include"/>
        <include_path relative_path="bluetooth/export/vendor" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/att" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/avctp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/avdtp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/bnep" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/dbase" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/hci_1.2" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/mcap" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/obex" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/rfcomm" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/sdp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/sm" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/smp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/aes_cmac" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/at_parser" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/object_parser" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/racp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/storage" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/xml_parser" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/ethal" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/sbc" type="asm_include"/>
        <include_path relative_path="port/osal/src/freertos" type="asm_include"/>
        <include_path relative_path="port/pal/mcux" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/sbc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.lc3.MIMXRT798S" name="middleware.edgefast_bluetooth.common.ethermind.lc3" brief="edgefast_bluetooth bt_ble host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.lc3" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="LC3_DSP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/lc3" type="c_include">
        <files mask="LC3_os.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/lc3/export/include" type="c_include">
        <files mask="LC3_api.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="c_include">
        <files mask="LC3_limits.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_lc3.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/lc3" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/export/include" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="c_include"/>
        <include_path relative_path="port/pal/mcux/lc3" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/export/include" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.base.MIMXRT798S" name="middleware.edgefast_bluetooth.wifi_nxp.controller.base" brief="edgefast_bluetooth wifi_nxp controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.base" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.gpio_adapter.MIMXRT798S"/>
              <component_dependency value="platform.drivers.gpio.MIMXRT798S"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.MIMXRT798S"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config.MIMXRT798S"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.wifi.MIMXRT798S"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config.MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
        <files mask="controller_hci_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_wifi_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_base.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.k32w061.controller.MIMXRT798S" name="middleware.edgefast_bluetooth.k32w061.controller" brief="edgefast_bluetooth k32w061 controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.k32w061.controller" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="doc">
        <files mask="DK6-RN-0065-Production-Flash-Programmer.pdf" hidden="true"/>
        <files mask="JN-SW-4407+DK6+Production+Flash+Programmer+v2282.exe" hidden="true"/>
        <files mask="readme.txt"/>
        <files mask="DK6-RN-0065-Production-Flash-Programmer.pdf"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="other">
        <files mask="hci_black_box_bm.bin"/>
        <files mask="ot-rcp.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_2_uart.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_single_uart.bin"/>
        <files mask="JN-SW-4407+DK6+Production+Flash+Programmer+v2282.exe"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="binary">
        <files mask="hci_black_box_bm.bin"/>
        <files mask="ot-rcp.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_2_uart.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_single_uart.bin"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
        <files mask="controller_hci_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_k32w.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_k32w061_controller.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.rw610.controller.MIMXRT798S" name="middleware.edgefast_bluetooth.rw610.controller" brief="edgefast_bluetooth rw610 controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.rw610.controller" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_rw610.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_rw610_controller.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.config.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.config.ethermind" brief="edgefast_bluetooth configuration for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.config.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="c_include">
        <files mask="BT_features.h"/>
        <files mask="BT_limits.h"/>
        <files mask="db_gen.h"/>
      </source>
      <source relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_config_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="c_include"/>
        <include_path relative_path="bluetooth/private/lib/mcux/default/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.extension.common.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.extension.common.ethermind" brief="edgefast_bluetooth extension for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.extension.common.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/export/extension" type="src">
        <files mask="aes_cmac_pl.c"/>
        <files mask="BT_common_pl.c"/>
        <files mask="device_queue_pl.c"/>
        <files mask="sm_pl.c"/>
        <files mask="sm_ssp_pl.c"/>
        <files mask="smp_pl.c"/>
        <files mask="gatt_db_pl.c"/>
      </source>
      <source relative_path="bluetooth/export/extension" type="c_include">
        <files mask="aes_cmac_pl.h"/>
        <files mask="BT_common_pl.h"/>
        <files mask="device_queue_pl.h"/>
        <files mask="sm_pl.h"/>
        <files mask="sm_ssp_pl.h"/>
        <files mask="smp_pl.h"/>
        <files mask="gatt_db_pl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_extension_common_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/export/extension" type="c_include"/>
        <include_path relative_path="bluetooth/export/extension" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.btble.ethermind.dsp" brief="edgefast_bluetooth bt_ble Host stack(including BR and BLE)" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_a2dp.c"/>
        <files mask="bt_pal_avrcp.c"/>
        <files mask="bt_pal_avrcp_al_internal.c"/>
        <files mask="bt_pal_avrcp_al_api.c"/>
        <files mask="bt_pal_att.c"/>
        <files mask="bt_pal_eatt.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_gatt.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_iso.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_keys_br.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_l2cap_br.c"/>
        <files mask="bt_pal_map_mce.c"/>
        <files mask="bt_pal_map_mse.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rfcomm.c"/>
        <files mask="bt_pal_spp.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_sdp.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_ssp.c"/>
        <files mask="bt_pal_uuid.c"/>
        <files mask="bt_pal_hfp_ag.c"/>
        <files mask="bt_pal_hfp_hf.c"/>
        <files mask="bt_pal_pbap_pce.c"/>
        <files mask="bt_pal_pbap_pse.c"/>
        <files mask="bt_pal_sco.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_a2dp_internal.h"/>
        <files mask="bt_pal_avrcp_al_api.h"/>
        <files mask="bt_pal_avrcp_al_internal.h"/>
        <files mask="bt_pal_avrcp_internal.h"/>
        <files mask="bt_pal_at.h"/>
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_avdtp_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_iso_internal.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_map_internal.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rfcomm_internal.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_sdp_internal.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
        <files mask="bt_pal_hfp_internal.h"/>
        <files mask="bt_pal_pbap_internal.h"/>
        <files mask="bt_pal_sco_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/host/a2dp_codec/sbc" type="src">
        <files mask="a2dp_codec_sbc.c"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="pbap_pce.h"/>
        <files mask="pbap_pse.h"/>
        <files mask="pbap_types.h"/>
        <files mask="a2dp.h"/>
        <files mask="avrcp.h"/>
        <files mask="a2dp_codec_sbc.h"/>
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="avdtp.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="map_mce.h"/>
        <files mask="map_mse.h"/>
        <files mask="map_types.h"/>
        <files mask="obex.h"/>
        <files mask="rfcomm.h"/>
        <files mask="spp.h"/>
        <files mask="sdp.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="hfp_hf.h"/>
        <files mask="hfp_ag.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.ble.ethermind.dsp" brief="edgefast_bluetooth bt_ble Host stack(including BLE only)" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CFG_BLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_att.c"/>
        <files mask="bt_pal_eatt.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_gatt.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_iso.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_smp_null.c"/>
        <files mask="bt_pal_uuid.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_iso_internal.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.br.ethermind.dsp" brief="edgefast_bluetooth bt_ble Host stack(including BR only)" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CFG_CLASSIC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_a2dp.c"/>
        <files mask="bt_pal_avrcp.c"/>
        <files mask="bt_pal_avrcp_al_internal.c"/>
        <files mask="bt_pal_avrcp_al_api.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_keys_br.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_l2cap_br.c"/>
        <files mask="bt_pal_map_mce.c"/>
        <files mask="bt_pal_map_mse.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rfcomm.c"/>
        <files mask="bt_pal_spp.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_sdp.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_ssp.c"/>
        <files mask="bt_pal_uuid.c"/>
        <files mask="bt_pal_hfp_ag.c"/>
        <files mask="bt_pal_hfp_hf.c"/>
        <files mask="bt_pal_pbap_pce.c"/>
        <files mask="bt_pal_pbap_pse.c"/>
        <files mask="bt_pal_sco.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_a2dp_internal.h"/>
        <files mask="bt_pal_avrcp_al_api.h"/>
        <files mask="bt_pal_avrcp_al_internal.h"/>
        <files mask="bt_pal_avrcp_internal.h"/>
        <files mask="bt_pal_at.h"/>
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_avdtp_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_map_internal.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rfcomm_internal.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_sdp_internal.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
        <files mask="bt_pal_hfp_internal.h"/>
        <files mask="bt_pal_pbap_internal.h"/>
        <files mask="bt_pal_sco_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/host/a2dp_codec/sbc" type="src">
        <files mask="a2dp_codec_sbc.c"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="pbap_pce.h"/>
        <files mask="pbap_pse.h"/>
        <files mask="pbap_types.h"/>
        <files mask="a2dp.h"/>
        <files mask="avrcp.h"/>
        <files mask="a2dp_codec_sbc.h"/>
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="avdtp.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="map_mce.h"/>
        <files mask="map_mse.h"/>
        <files mask="map_types.h"/>
        <files mask="obex.h"/>
        <files mask="rfcomm.h"/>
        <files mask="spp.h"/>
        <files mask="sdp.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="hfp_hf.h"/>
        <files mask="hfp_ag.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.config.template" brief="edgefast_bluetooth configuration template for LE audio" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.config.template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_config_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.cap.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.cap" brief="edgefast_bluetooth le_audio.cap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.cap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="cap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="cap_acceptor.c"/>
        <files mask="cap_commander.c"/>
        <files mask="cap_common.c"/>
        <files mask="cap_initiator.c"/>
        <files mask="cap_stream.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="cap_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_cap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.aics" brief="edgefast_bluetooth le_audio.aics" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.aics" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="aics.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="aics.c"/>
        <files mask="aics_client.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="aics_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_aics.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.vocs.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.vocs" brief="edgefast_bluetooth le_audio.vocs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.vocs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="vocs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="vocs.c"/>
        <files mask="vocs_client.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="vocs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_vocs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.vcp.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.vcs" brief="edgefast_bluetooth le_audio.vcs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.vcs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.vocs.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="vcp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="vcp_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="vcp_vol_ctlr.c"/>
        <files mask="vcp_vol_rend.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_vcp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.micp.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.micp" brief="edgefast_bluetooth le_audio.micp" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.micp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="micp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="micp_mic_ctlr.c"/>
        <files mask="micp_mic_dev.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="micp_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_micp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.csip.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.csip" brief="edgefast_bluetooth le_audio.csis" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.csip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="csip.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="csip_crypto.c"/>
        <files mask="csip_set_coordinator.c"/>
        <files mask="csip_set_member.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="csip_crypto.h"/>
        <files mask="csip_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_csip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.ccid" brief="edgefast_bluetooth le_audio.ccid" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.ccid" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="ccid_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="ccid.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mcs.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.mcs" brief="edgefast_bluetooth le_audio.mcs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mcs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="mcs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="mcs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="mcs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mcs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mcc.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.mcc" brief="edgefast_bluetooth le_audio.mcc" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mcc" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="mcc.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="mcc.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="mcc_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mcc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mpl.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.mpl" brief="edgefast_bluetooth le_audio.mpl" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mpl" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="media_proxy.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="media_proxy.c"/>
        <files mask="mpl.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="media_proxy_internal.h"/>
        <files mask="mpl_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mpl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.bap.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.bap" brief="edgefast_bluetooth le_audio.baps" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.bap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="audio.h"/>
        <files mask="bap_lc3_preset.h"/>
        <files mask="bap.h"/>
        <files mask="lc3.h"/>
        <files mask="pacs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="ascs_internal.h"/>
        <files mask="audio_internal.h"/>
        <files mask="bap_iso.h"/>
        <files mask="bap_endpoint.h"/>
        <files mask="pacs_internal.h"/>
        <files mask="bap_stream.h"/>
        <files mask="bap_unicast_client_internal.h"/>
        <files mask="bap_unicast_server.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="ascs.c"/>
        <files mask="bap_iso.c"/>
        <files mask="audio.c"/>
        <files mask="bap_base.c"/>
        <files mask="bap_broadcast_sink.c"/>
        <files mask="bap_broadcast_source.c"/>
        <files mask="codec.c"/>
        <files mask="pacs.c"/>
        <files mask="bap_stream.c"/>
        <files mask="bap_unicast_client.c"/>
        <files mask="bap_unicast_server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_bap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.bass.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.bass" brief="edgefast_bluetooth le_audio.bass" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.bass" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="bap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="bap_broadcast_assistant.c"/>
        <files mask="bap_scan_delegator.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="bap_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_bass.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.has.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.has" brief="edgefast_bluetooth le_audio.has" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.has" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="has.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="has_client.c"/>
        <files mask="has.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="has_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_has.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.tbs.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.tbs" brief="edgefast_bluetooth le_audio.tbs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.tbs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="tbs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="tbs_client.c"/>
        <files mask="tbs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="tbs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_tbs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.tmap.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.tmap" brief="edgefast_bluetooth le_audio.tmap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.tmap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="tmap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="tmap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_tmap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.gmap.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.gmap" brief="edgefast_bluetooth le_audio.gmap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.gmap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="gmap.h"/>
        <files mask="gmap_lc3_preset.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="gmap_client.c"/>
        <files mask="gmap_server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_gmap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.pbp.MIMXRT798S" name="middleware.edgefast_bluetooth.le_audio.pbp" brief="edgefast_bluetooth le_audio.pbp" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.pbp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="pbp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="pbp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_pbp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hrs.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.hrs" brief="edgefast_bluetooth profile hrs" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hrs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hrs.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hrs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hrs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.bas.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.bas" brief="edgefast_bluetooth profile bas" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.bas" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="bas.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="bas.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_bas.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.dis.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.dis" brief="edgefast_bluetooth profile dis" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.dis" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="dis.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="dis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_dis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hts.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.hts" brief="edgefast_bluetooth profile hts" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hts" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hts.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hts.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ias.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.ias" brief="edgefast_bluetooth profile ias" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ias" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services/ias" type="src">
        <files mask="ias.c"/>
        <files mask="ias_client.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ias.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ias.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hps.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.hps" brief="edgefast_bluetooth profile hps" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hps" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hps.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hps.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hps.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.pxr.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.pxr" brief="edgefast_bluetooth profile pxr" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.pxr" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="pxr.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="pxr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_pxr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ipsp.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.ipsp" brief="edgefast_bluetooth profile ipsp" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ipsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="ipsp.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ipsp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ipsp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ots.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.ots" brief="edgefast_bluetooth profile ots" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ots" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services/ots" type="src">
        <files mask="ots.c"/>
        <files mask="ots_client.c"/>
        <files mask="ots_dir_list.c"/>
        <files mask="ots_l2cap.c"/>
        <files mask="ots_oacp.c"/>
        <files mask="ots_obj_manager.c"/>
        <files mask="ots_olcp.c"/>
      </source>
      <source relative_path="source/services/ots" type="c_include">
        <files mask="ots_client_internal.h"/>
        <files mask="ots_dir_list_internal.h"/>
        <files mask="ots_internal.h"/>
        <files mask="ots_l2cap_internal.h"/>
        <files mask="ots_oacp_internal.h"/>
        <files mask="ots_obj_manager_internal.h"/>
        <files mask="ots_olcp_internal.h"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ots.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ots.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="source/services/ots" type="c_include"/>
        <include_path relative_path="include/bluetooth/services" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="source/services/ots" type="asm_include"/>
        <include_path relative_path="include/bluetooth/services" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.wu.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.wu" brief="edgefast_bluetooth profile wu" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.wu" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="wu.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="wu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_wu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.fmp.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.fmp" brief="edgefast_bluetooth profile fmp" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.fmp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="fmp.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="fmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_fmp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.tip.MIMXRT798S" name="middleware.edgefast_bluetooth.profile.tip" brief="edgefast_bluetooth profile tip" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.tip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="tip.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="tip.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_tip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.crypto.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.pal.crypto.ethermind" brief="edgefast_bluetooth PAL crypto support for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.crypto.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/crypto" type="src">
        <files mask="bt_crypto.c"/>
      </source>
      <source relative_path="source/impl/ethermind/crypto" type="c_include">
        <files mask="bt_crypto.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_crypto_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/crypto" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/crypto" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.platform.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.pal.platform.ethermind" brief="edgefast_bluetooth PAL platform for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.platform.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform" type="src">
        <files mask="bt_ble_platform.c"/>
        <files mask="bt_ble_settings.c"/>
      </source>
      <source relative_path="source/impl/ethermind/platform" type="c_include">
        <files mask="bt_ble_platform.h"/>
        <files mask="bt_ble_settings.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_platform_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind" brief="edgefast_bluetooth host_msd_fatfs for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config.MIMXRT798S"/>
          <component_dependency value="middleware.fatfs.usb.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform" type="src">
        <files mask="host_msd_fatfs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/platform" type="c_include">
        <files mask="host_msd_fatfs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_host_msd_fatfs_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.db_gen.ethermind.MIMXRT798S" name="middleware.edgefast_bluetooth.pal.db_gen.ethermind" brief="edgefast_bluetooth db_gen for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.db_gen.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind" type="src">
        <files mask="bt_db_gen.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_db_gen_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind" type="c_include"/>
        <include_path relative_path="source/impl/ethermind" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.atomic.MIMXRT798S" name="middleware.edgefast_bluetooth.porting.atomic" brief="edgefast_bluetooth porting.atomic" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.atomic" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/porting" project_relative_path="porting" type="src">
        <files mask="atomic_c.c"/>
      </source>
      <source relative_path="include/sys" type="c_include">
        <files mask="atomic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_atomic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.list.MIMXRT798S" name="middleware.edgefast_bluetooth.porting.list" brief="edgefast_bluetooth porting.list" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.list" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/sys" type="c_include">
        <files mask="slist.h"/>
        <files mask="dlist.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_list.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.net.MIMXRT798S" name="middleware.edgefast_bluetooth.porting.net" brief="edgefast_bluetooth porting.netbuf" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.net" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/porting/net" type="src">
        <files mask="buf.c"/>
        <files mask="buf_simple.c"/>
      </source>
      <source relative_path="include/net" type="c_include">
        <files mask="buf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.toolchain.MIMXRT798S" name="middleware.edgefast_bluetooth.porting.toolchain" brief="edgefast_bluetooth porting.toolchain" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.toolchain" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CONFIG_ARM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/toolchain" type="c_include">
        <files mask="common.h"/>
        <files mask="gcc.h"/>
        <files mask="iar.h"/>
        <files mask="armcc.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="toolchain.h"/>
      </source>
      <source relative_path="boards/template" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_toolchain.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.work_queue.MIMXRT798S" name="middleware.edgefast_bluetooth.porting.work_queue" brief="edgefast_bluetooth porting.work_queue" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.work_queue" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/porting/work" type="src">
        <files mask="work.c"/>
      </source>
      <source relative_path="source/porting/work" type="c_include">
        <files mask="work.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_work_queue.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.template.MIMXRT798S" name="EdgeFast Bluetooth configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="middleware/edgefast_bluetooth" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/mbedtls" config="true" type="c_include">
        <files mask="mbedtls_config_client.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/mbedtls" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/mbedtls" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.MIMXRT798S" name="middleware.edgefast_bluetooth.porting" brief="edgefast_bluetooth porting" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="LOG_ENABLE_ASYNC_MODE" value="1"/>
        <define name="LOG_MAX_ARGUMENT_COUNT" value="10"/>
        <define name="LOG_ENABLE_OVERWRITE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.atomic.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.list.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.net.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.toolchain.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.work_queue.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/sys" type="c_include">
        <files mask="util.h"/>
        <files mask="util_internal.h"/>
        <files mask="util_loops.h"/>
        <files mask="util_macro.h"/>
        <files mask="printk.h"/>
        <files mask="check.h"/>
        <files mask="byteorder.h"/>
        <files mask="ring_buffer.h"/>
        <files mask="ffs.h"/>
      </source>
      <source relative_path="include/zephyr" type="c_include">
        <files mask="types.h"/>
      </source>
      <source relative_path="source/porting" type="src">
        <files mask="ring_buffer.c"/>
        <files mask="porting.c"/>
        <files mask="utf8.c"/>
      </source>
      <source relative_path="source/porting" type="c_include">
        <files mask="porting.h"/>
        <files mask="system_c.h"/>
      </source>
      <source relative_path="source/porting/errno" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="source/porting/fifo" type="src">
        <files mask="fifo.c"/>
      </source>
      <source relative_path="source/porting/fifo" type="c_include">
        <files mask="fifo.h"/>
      </source>
      <source relative_path="source/porting/lifo" type="src">
        <files mask="lifo.c"/>
      </source>
      <source relative_path="source/porting/lifo" type="c_include">
        <files mask="lifo.h"/>
      </source>
      <source relative_path="source/porting/poll" type="src">
        <files mask="poll.c"/>
      </source>
      <source relative_path="source/porting/poll" type="c_include">
        <files mask="poll.h"/>
      </source>
      <source relative_path="source/porting/queue" type="src">
        <files mask="queue.c"/>
      </source>
      <source relative_path="source/porting/queue" type="c_include">
        <files mask="queue.h"/>
      </source>
      <source relative_path="source/porting/sem" type="src">
        <files mask="sem.c"/>
      </source>
      <source relative_path="source/porting/sem" type="c_include">
        <files mask="sem.h"/>
      </source>
      <source relative_path="source/porting/slab" type="src">
        <files mask="slab.c"/>
      </source>
      <source relative_path="source/porting/slab" type="c_include">
        <files mask="slab.h"/>
      </source>
      <source relative_path="source/porting/slist" type="src">
        <files mask="slist.c"/>
      </source>
      <source relative_path="source/porting/spinlock" type="c_include">
        <files mask="spinlock.h"/>
      </source>
      <source relative_path="source/porting/thread" type="src">
        <files mask="thread.c"/>
      </source>
      <source relative_path="source/porting/thread" type="c_include">
        <files mask="thread.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell.MIMXRT798S" name="middleware.edgefast_bluetooth.shell" brief="edgefast_bluetooth shell" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/shell" type="src">
        <files mask="shell_bt.c"/>
        <files mask="shell_bredr.c"/>
        <files mask="shell_gatt.c"/>
        <files mask="shell_hci.c"/>
        <files mask="shell_l2cap.c"/>
        <files mask="shell_rfcomm.c"/>
        <files mask="fsl_shell.c"/>
        <files mask="shell_a2dp.c"/>
        <files mask="shell_avrcp.c"/>
        <files mask="shell_test_mode.c"/>
        <files mask="shell_iso.c"/>
        <files mask="shell_map.c"/>
        <files mask="shell_pbap.c"/>
        <files mask="shell_hfp.c"/>
        <files mask="shell_ble_scan_filter.c"/>
      </source>
      <source relative_path="source/shell" type="c_include">
        <files mask="shell_bt.h"/>
        <files mask="shell_hci.h"/>
        <files mask="fsl_shell.h"/>
        <files mask="shell_test_mode.h"/>
        <files mask="shell_ble_scan_filter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.controller_ind_reset.MIMXRT798S" name="middleware.edgefast_bluetooth.controller_ind_reset" brief="edgefast_bluetooth ind_reset" version="1.0.0" full_name="middleware.edgefast_bluetooth.controller_ind_reset" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/ind_reset" type="src">
        <files mask="controller_ind_reset.c"/>
      </source>
      <source relative_path="source/impl/ethermind/controller/ind_reset" type="c_include">
        <files mask="controller_ind_reset.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_controller_ind_reset.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/ind_reset" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/ind_reset" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell.le_audio.MIMXRT798S" name="middleware.edgefast_bluetooth.shell" brief="edgefast_bluetooth shell" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/audio/shell" type="c_include">
        <files mask="audio.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio/shell" type="src">
        <files mask="bap_broadcast_assistant.c"/>
        <files mask="bap_scan_delegator.c"/>
        <files mask="bap.c"/>
        <files mask="cap_acceptor.c"/>
        <files mask="cap_commander.c"/>
        <files mask="cap_initiator.c"/>
        <files mask="csip_set_coordinator.c"/>
        <files mask="csip_set_member.c"/>
        <files mask="has_client.c"/>
        <files mask="has.c"/>
        <files mask="mcc.c"/>
        <files mask="media_controller.c"/>
        <files mask="micp_mic_ctlr.c"/>
        <files mask="micp_mic_dev.c"/>
        <files mask="mpl.c"/>
        <files mask="tbs_client.c"/>
        <files mask="tbs.c"/>
        <files mask="tmap.c"/>
        <files mask="gmap.c"/>
        <files mask="pbp.c"/>
        <files mask="vcp_vol_ctlr.c"/>
        <files mask="vcp_vol_rend.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell_le_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.liblc3codec.MIMXRT798S" name="middleware.edgefast_bluetooth.liblc3codec" brief="edgefast_bluetooth liblc3codec" version="1.0.0" full_name="middleware.edgefast_bluetooth.liblc3codec" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth/lib" project_base_path="edgefast/lib">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="liblc3codec/include" type="c_include">
        <files mask="lc3.h"/>
        <files mask="lc3_private.h"/>
      </source>
      <source relative_path="liblc3codec/src" type="src">
        <files mask="attdet.c"/>
        <files mask="bits.c"/>
        <files mask="bwdet.c"/>
        <files mask="energy.c"/>
        <files mask="lc3.c"/>
        <files mask="ltpf.c"/>
        <files mask="mdct.c"/>
        <files mask="plc.c"/>
        <files mask="sns.c"/>
        <files mask="spec.c"/>
        <files mask="tns.c"/>
      </source>
      <source relative_path="liblc3codec/src" type="c_include">
        <files mask="attdet.h"/>
        <files mask="bits.h"/>
        <files mask="bwdet.h"/>
        <files mask="common.h"/>
        <files mask="energy.h"/>
        <files mask="ltpf.h"/>
        <files mask="mdct.h"/>
        <files mask="plc.h"/>
        <files mask="sns.h"/>
        <files mask="spec.h"/>
        <files mask="tables.h"/>
        <files mask="tns.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_liblc3codec.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="liblc3codec/include" type="c_include"/>
        <include_path relative_path="liblc3codec" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="liblc3codec/include" type="asm_include"/>
        <include_path relative_path="liblc3codec" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.asrc_sw.MIMXRT798S" name="middleware.edgefast_bluetooth.asrc_sw" brief="edgefast_bluetooth asrc_sw" version="1.0.0" full_name="middleware.edgefast_bluetooth.asrc_sw" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth/lib" project_base_path="edgefast/lib">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="asrc_sw" type="c_include">
        <files mask="srCvtFrm.h"/>
      </source>
      <source relative_path="asrc_sw" type="src">
        <files mask="srCvtFrm.c"/>
      </source>
      <source relative_path="asrc_sw" type="other">
        <files mask="downSmplAllRates.dat"/>
        <files mask="upSmpl_32_32_rev.dat"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_asrc_sw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="asrc_sw/include" type="c_include"/>
        <include_path relative_path="asrc_sw" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="asrc_sw/include" type="asm_include"/>
        <include_path relative_path="asrc_sw" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell_ble.MIMXRT798S" name="middleware.edgefast_bluetooth.shell_ble" brief="edgefast_bluetooth shell_ble" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell_ble" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/shell" type="src">
        <files mask="shell_bt.c"/>
        <files mask="shell_gatt.c"/>
        <files mask="shell_hci.c"/>
        <files mask="shell_l2cap.c"/>
        <files mask="fsl_shell.c"/>
        <files mask="shell_test_mode.c"/>
        <files mask="shell_ble_scan_filter.c"/>
      </source>
      <source relative_path="source/shell" type="c_include">
        <files mask="shell_bt.h"/>
        <files mask="shell_hci.h"/>
        <files mask="fsl_shell.h"/>
        <files mask="shell_test_mode.h"/>
        <files mask="shell_ble_scan_filter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell_ble.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config.MIMXRT798S" name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform/configs" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_host_msd_fatfs_ethermind_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform/configs" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform/configs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1.MIMXRT798S" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT798S"/>
          <component_dependency value="platform.utilities.assert.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2.MIMXRT798S" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT798S"/>
          <component_dependency value="platform.utilities.assert_lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3.MIMXRT798S" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT798S"/>
          <component_dependency value="platform.utilities.assert.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config.MIMXRT798S" name="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/lwip" type="c_include">
        <files mask="lwipopts.h"/>
        <files mask="lwippools.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_lwip_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/lwip" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config.MIMXRT798S" name="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/wifi" type="c_include">
        <files mask="wifi_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_wifi_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/wifi" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/wifi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp.MIMXRT798S" name="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="LC3_DSP" value="0"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT798S"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT798S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="c_include">
        <files mask="LC3_os.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="c_include">
        <files mask="LC3_ndsp_api.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="c_include">
        <files mask="lc3_ndsp_defines.h"/>
        <files mask="lc3_ndsp_internal.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="c_include">
        <files mask="LC3_ndsp_features.h"/>
        <files mask="LC3_ndsp_limits.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_lc3_nodsp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT798S" name="middleware.edgefast_bluetooth.btble.ethermind.lib.dsp" brief="btble libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_a2dp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_avrcp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_gatt.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_hfp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_map.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_pbap.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_spp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_util.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT798S" name="middleware.edgefast_bluetooth.br.ethermind.lib.dsp" brief="BR libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.lib.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_ctn.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_a2dp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_avrcp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_hfp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_map.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_pbap.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_spp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_util.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT798S" name="middleware.edgefast_bluetooth.ble.ethermind.lib.dsp" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_gatt.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_util.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.MIMXRT798S" name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.dsp" brief="btble libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.MIMXRT798S" name="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.dsp" brief="BR libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.MIMXRT798S" name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.dsp" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.MIMXRT798S" name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.dsp" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib_lc3_nodsp.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.MIMXRT798S" name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.dsp" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib_lc3_nodsp.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.interface.common.MIMXRT798S" name="issdk_interfaces" brief="ISSDK Sensor Interface Common" version="1.7.0" full_name="Middleware issdk sensor interface common" category="Sensors/drivers" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT798S"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" type="src">
        <files mask="register_io_i2c.c"/>
        <files mask="register_io_spi.c"/>
        <files mask="sensor_io_spi.c"/>
        <files mask="sensor_io_i2c.c"/>
      </source>
      <source relative_path="sensors" type="c_include">
        <files mask="register_io_i2c.h"/>
        <files mask="register_io_spi.h"/>
        <files mask="sensor_io_spi.h"/>
        <files mask="sensor_io_i2c.h"/>
        <files mask="sensor_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_sensor_interface_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" type="c_include"/>
        <include_path relative_path="sensors" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.allregdefs.MIMXRT798S" name="sensor_allregdefs" brief="ISSDK Allregdefs" version="1.8.0" full_name="Middleware issdk sensor all regdefs" category="issdk/allregdefs" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT798S"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxos8700.h"/>
        <files mask="mpl3115.h"/>
        <files mask="fxlc95000.h"/>
        <files mask="fxls8471q.h"/>
        <files mask="fxls8962.h"/>
        <files mask="fxpq3115.h"/>
        <files mask="mag3110.h"/>
        <files mask="mma845x.h"/>
        <files mask="mma865x.h"/>
        <files mask="mma8491q.h"/>
        <files mask="mma9553.h"/>
        <files mask="diff_p.h"/>
        <files mask="dbap.h"/>
        <files mask="fxls896x.h"/>
        <files mask="fxls8974.h"/>
        <files mask="fxls8961.h"/>
        <files mask="fxls8971.h"/>
        <files mask="nmh1000.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_sensor_allregdefs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" type="c_include"/>
        <include_path relative_path="sensors" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_imxrt700.MIMXRT798S" name="gpio_imxrt700" brief="ISSDK GPIO Driver for MIMXRT798S" version="1.8.0" full_name="Middleware issdk drivers gpio_imxrt700" category="Sensors/drivers" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="drivers/gpio/i.mx/i.mxrt700" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx/i.mxrt700" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_drivers_gpio_imxrt700.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx/i.mxrt700" type="c_include"/>
        <include_path relative_path="drivers/gpio" type="c_include"/>
        <include_path relative_path="drivers/gpio/i.mx/i.mxrt700" type="asm_include"/>
        <include_path relative_path="drivers/gpio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxls8974cf.MIMXRT798S" name="issdk_fxls8974cf" brief="ISSDK FXLS8974CF Sensor Driver Files" version="1.8.0" full_name="Middleware issdk sensor FXLS8974CF" category="Sensors/sensors" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT798S"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" type="c_include">
        <files mask="fxls8974.h"/>
        <files mask="fxls8974_drv.h"/>
      </source>
      <source relative_path="sensors" type="src">
        <files mask="fxls8974_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_sensor_fxls8974cf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" type="c_include"/>
        <include_path relative_path="sensors" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT798S" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT798S"/>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT798S"/>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT798S"/>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT798S"/>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.config.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_non_trustzone.MIMXRT798S" name="cm33 nontrustzone port" brief="FreeRTOS cm33 non trustzone port" version="11.0.1" full_name="FreeRTOS cm33 non trustzone port" category="RTOS/cm33_non_trustzone_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            <device_core_dependency value="cm33_core1_MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.S"/>
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_non_trustzone.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.non_secure.MIMXRT798S" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="11.0.1" full_name="FreeRTOS cm33 secure port" category="RTOS/cm33_secure_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            <device_core_dependency value="cm33_core1_MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.S"/>
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="src" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_non_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.secure.MIMXRT798S" name="cm33 secure port" brief="FreeRTOS Secure Context" version="11.0.1" full_name="FreeRTOS Secure Context" category="RTOS/cm33 secure port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            <device_core_dependency value="cm33_core1_MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="src" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="src" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="secure_context.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="asm_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="asm_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT798S" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT798S" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT798S" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT798S" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT798S" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT798S" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT798S" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MIMXRT798S" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.config.MIMXRT798S" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="true" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM33_3_priority_bits" config="true" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true">
        <files mask="FreeRTOSConfig_Gen.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
        <include_path relative_path="template" type="asm_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" fpu="true"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpuart_freertos.MIMXRT798S" name="lpuart_freertos" brief="LPFLEXCOMM LPUART FreeRTOS Driver" version="2.0.0" full_name="LPFLEXCOMM LPUART FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpuart_freertos.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpspi_freertos.MIMXRT798S" name="lpspi_freertos" brief="LPFLEXCOMM LPSPI FreeRTOS Driver" version="2.0.0" full_name="LPFLEXCOMM LPSPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpspi.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpspi_freertos.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpi2c_freertos.MIMXRT798S" name="lpi2c_freertos" brief="LPFLEXCOMM LPI2C FreeRTOS Driver" version="2.0.0" full_name="LPFLEXCOMM LPI2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpi2c_freertos.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.template.MIMXRT798S" name="corepkcs11 configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="corePKCS11 configuration template" category="FreeRTOS/corePKCS11" user_visible="false" type="project_template" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="core_pkcs11_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.MIMXRT798S" name="corepkcs11" brief="Software implementation of the PKCS #11 standard." version="3.5.0" full_name="corePKCS11" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.pkcs11.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_pkcs11.c"/>
        <files mask="core_pki_utils.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_pkcs11.h"/>
        <files mask="core_pkcs11_config_defaults.h"/>
        <files mask="core_pkcs11_pal.h"/>
        <files mask="core_pki_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.mbedtls.MIMXRT798S" name="corepkcs11 mbedtls" brief="PKCS #11, mbedtls port." version="3.5.0" full_name="corePKCS11 mbedtls" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT798S"/>
          <component_dependency value="middleware.pkcs11.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/portable/mbedtls" type="src">
        <files mask="core_pkcs11_mbedtls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos.corepkcs11.mbedtls_utils.MIMXRT798S" name="corepkcs11 mbedtls_utils" brief="PKCS #11, mbedtls_utils" version="3.5.0" full_name="corePKCS11 mbedtls_utils" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <defines>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
        <define name="MBEDTLS_THREADING_C" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT798S"/>
          <component_dependency value="middleware.pkcs11.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/dependency/3rdparty/mbedtls_utils" type="src">
        <files mask="mbedtls_utils.c"/>
      </source>
      <source relative_path="source/dependency/3rdparty/mbedtls_utils" type="c_include">
        <files mask="mbedtls_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_mbedtls_utils.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/dependency/3rdparty/mbedtls_utils" type="c_include"/>
        <include_path relative_path="source/dependency/3rdparty/mbedtls_utils" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt.template.MIMXRT798S" name="coremqtt configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="coreMQTT configuration template" category="FreeRTOS/coreMQTT" user_visible="false" type="project_template" package_base_path="rtos/freertos/coremqtt" project_base_path="freertos/coremqtt">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT798S"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="template" type="c_include">
        <files mask="core_mqtt_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt-agent.MIMXRT798S" name="coremqtt-agent" brief="Agent for thread-safe use of coreMQTT." version="1.2.0" full_name="coreMQTT-Agent" category="FreeRTOS/coreMQTT Agent" user_visible="true" type="middleware" package_base_path="rtos/freertos/coremqtt-agent" project_base_path="freertos/coremqtt-agent">
      <defines>
        <define name="MQTT_AGENT_DO_NOT_USE_CUSTOM_CONFIG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT798S"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/include" type="c_include">
        <files mask="core_mqtt_agent.h"/>
        <files mask="core_mqtt_agent_command_functions.h"/>
        <files mask="core_mqtt_agent_config_defaults.h"/>
        <files mask="core_mqtt_agent_default_logging.h"/>
        <files mask="core_mqtt_agent_message_interface.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="core_mqtt_agent_command_functions.c"/>
        <files mask="core_mqtt_agent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt-agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corehttp.MIMXRT798S" name="corehttp" brief="Client implementation of the HTTP/1.1 specification for embedded devices." version="3.0.0" full_name="coreHTTP" category="FreeRTOS/coreHTTP" user_visible="false" type="middleware" package_base_path="rtos/freertos/corehttp" project_base_path="freertos/corehttp">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_http_client.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_http_client.h"/>
        <files mask="core_http_client_private.h"/>
        <files mask="core_http_config_defaults.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corehttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xspi.MIMXRT798S" name="xspi" brief="XSPI Driver" version="2.5.0" full_name="XSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_xspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xspi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xspi_edma.MIMXRT798S" name="xspi_edma" brief="XSPI EDMA Driver" version="2.0.2" full_name="XSPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.xspi.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_xspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xspi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xspi_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wwdt.MIMXRT798S" name="wwdt" brief="WWDT Driver" version="2.1.9" full_name="WWDT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wwdt.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT798S" name="sdhc" brief="USDHC Driver" version="2.8.4" full_name="USDHC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_usdhc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trng.MIMXRT798S" name="trng" brief="TRNG Driver" version="2.0.17" full_name="TRNG Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_trng.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.syspm.MIMXRT798S" name="syspm" brief="SYSPM Driver" version="2.3.0" full_name="SYSPM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_syspm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_syspm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_syspm.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMXRT798S" name="sema42" brief="SEMA42 Driver" version="2.0.4" full_name="SEMA42 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sema42.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sdadc.MIMXRT798S" name="sdadc" brief="SDADC Driver" version="2.0.1" full_name="SDADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_sdadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sdadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sdadc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sctimer.MIMXRT798S" name="sctimer" brief="SCT Driver" version="2.5.1" full_name="SCT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sctimer.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMXRT798S" name="sai" brief="SAI Driver" version="2.4.4" full_name="SAI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sai.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai_edma.MIMXRT798S" name="sai_edma" brief="SAI EDMA Driver" version="2.7.1" full_name="SAI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.sai.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sai_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.puf_v3.MIMXRT798S" name="PUFv3" brief="PUFv3 Driver" version="2.0.3" full_name="PUFv3 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_puf_v3.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_puf_v3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_puf_v3.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pngdec.MIMXRT798S" name="pngdec" brief="PNGDEC Driver" version="2.0.0" full_name="PNGDEC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pngdec.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pngdec.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pngdec.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pint.MIMXRT798S" name="pint" brief="PINT Driver" version="2.1.13" full_name="PINT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pint.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pint.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm.MIMXRT798S" name="pdm" brief="PDM Driver" version="2.9.1" full_name="PDM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pdm.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm_edma.MIMXRT798S" name="pdm_edma" brief="PDM EDMA Driver" version="2.6.3" full_name="PDM EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.pdm.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pdm_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ostimer.MIMXRT798S" name="ostimer" brief="OSTimer Driver" version="2.2.2" full_name="OSTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ostimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ostimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ostimer.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu1.MIMXRT798S" name="mu" brief="MU Driver" version="2.7.0" full_name="MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mu1.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mrt.MIMXRT798S" name="mrt" brief="MRT Driver" version="2.0.4" full_name="MRT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mrt.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mmu.MIMXRT798S" name="mmu" brief="MMU Driver" version="2.0.0" full_name="MMU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mmu.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mmu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mmu.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi.MIMXRT798S" name="mipi_dsi" brief="MIPI DSI Driver" version="2.2.1" full_name="MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.soc_mipi_dsi.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mipi_dsi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMXRT798S" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="1.0.0" full_name="LPUART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT798S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT798S"/>
          <component_dependency value="device.RTE.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart_edma.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpuart.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMXRT798S" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="1.0.0" full_name="LPSPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT798S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpspi.MIMXRT798S"/>
          <component_dependency value="device.RTE.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpspi_edma.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpspi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMXRT798S" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="1.0.0" full_name="LPI2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT798S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="device.RTE.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c_edma.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpi2c.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpuart.MIMXRT798S" name="lpuart" brief="LPUART Driver" version="2.3.2" full_name="LPUART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpuart.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpuart_edma.MIMXRT798S" name="lpuart_edma" brief="LPUART EDMA Driver" version="2.0.0" full_name="LPUART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpuart_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpspi.MIMXRT798S" name="lpspi" brief="LPSPI Driver" version="2.2.7" full_name="LPSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpspi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpspi_edma.MIMXRT798S" name="lpspi_edma" brief="LPSPI EDMA Driver" version="2.1.2" full_name="LPSPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpspi.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpspi_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S" name="lpi2c" brief="LPI2C Driver" version="2.2.5" full_name="LPI2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpi2c.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpi2c_edma.MIMXRT798S" name="lpi2c_edma" brief="LPI2C EDMA Driver" version="2.0.1" full_name="LPI2C EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm_lpi2c_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm.MIMXRT798S" name="lpflexcomm" brief="LPFLEXCOMM Driver" version="2.2.1" full_name="LPFLEXCOMM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpflexcomm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpflexcomm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpflexcomm.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_freqme.MIMXRT798S" name="lpc_freqme" brief="lpc_freqme Driver" version="2.1.2" full_name="lpc_freqme Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_freqme.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_freqme.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpc_freqme.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMXRT798S" name="lpadc" brief="LPADC Driver" version="2.9.1" full_name="LPADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpadc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdif.MIMXRT798S" name="lcdif" brief="LCDIF Driver" version="2.2.0" full_name="LCDIF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lcdif.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.jpegdec.MIMXRT798S" name="jpegdec" brief="JPEG decoder Driver" version="2.0.0" full_name="JPEG decoder Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_jpegdec.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_jpegdec.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_jpegdec.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.itrc.MIMXRT798S" name="itrc" brief="itrc Driver" version="2.4.0" full_name="itrc Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_itrc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_itrc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_itrc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.irtc.MIMXRT798S" name="rtc" brief="IRTC Driver" version="2.3.1" full_name="IRTC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_irtc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_irtc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_irtc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux.MIMXRT798S" name="inputmux" brief="INPUTMUX Driver" version="2.0.7" full_name="INPUTMUX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.inputmux_connections.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_inputmux.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMXRT798S" name="i3c" brief="I3C Driver" version="2.13.0" full_name="I3C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c_edma.MIMXRT798S" name="i3c_edma" brief="I3C EDMA Driver" version="2.2.9" full_name="I3C EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpio.MIMXRT798S" name="gpio" brief="GPIO Driver" version="2.8.0" full_name="GPIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gpio.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.glikey.MIMXRT798S" name="glikey" brief="GLIKEY Driver" version="2.0.1" full_name="GLIKEY Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_glikey.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_glikey.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_glikey.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gdet.MIMXRT798S" name="gdet" brief="GDET Driver" version="2.1.0" full_name="GDET Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gdet.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gdet.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gdet.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera.MIMXRT798S" name="flexio_camera" brief="FLEXIO Driver" version="2.1.3" full_name="FLEXIO CAMERA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_camera.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT798S" name="flexio_uart" brief="FLEXIO UART Driver" version="2.5.0" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMXRT798S" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.flexio_uart.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT798S" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.4" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMXRT798S" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.3.0" full_name="FLEXIO SPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.flexio_spi.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT798S" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.1.0" full_name="FLEXIO MCULCD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMXRT798S" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.5" full_name="FLEXIO MCULCD EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT798S" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMXRT798S" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.8" full_name="FLEXIO I2S EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT798S"/>
          <component_dependency value="platform.drivers.flexio_i2s.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT798S" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2c_master.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT798S" name="flexio" brief="FLEXIO Driver" version="2.2.3" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma4.MIMXRT798S" name="edma" brief="EDMA Driver" version="2.10.1" full_name="EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="driver.edma_soc.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
        <files mask="fsl_edma_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma4.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ctimer.MIMXRT798S" name="ctimer" brief="CTimer Driver" version="2.3.1" full_name="CTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ctimer.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.crc.MIMXRT798S" name="crc" brief="CRC Driver" version="2.0.4" full_name="CRC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_crc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cdog.MIMXRT798S" name="cdog" brief="cdog Driver" version="2.1.3" full_name="cdog Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cdog.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_xcache.MIMXRT798S" name="cache_xcache" brief="CACHE XCACHE Driver" version="2.0.2" full_name="CACHE XCACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cache_xcache.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.acmp.MIMXRT798S" name="acmp" brief="ACMP Driver" version="2.3.0" full_name="ACMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_acmp.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openvg.MIMXRT798S" name="openvg" brief="Openvg library" version="4.0.90" full_name="Middleware openvg" category="openvg/OpenVG" user_visible="false" type="middleware" package_base_path="middleware/openvg" project_base_path="openvg">
      <dependencies>
        <all>
          <component_dependency value="middleware.vglite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src" type="src">
        <files mask="vg_api.c"/>
        <files mask="vg_context.c"/>
        <files mask="vg_egl.c"/>
        <files mask="vg_image.c"/>
        <files mask="vg_vgu.c"/>
        <files mask="vg_egl_freertos.c"/>
      </source>
      <source relative_path="include/EGL" type="c_include">
        <files mask="egl.h"/>
        <files mask="eglplatform.h"/>
        <files mask="eglvivante.h"/>
      </source>
      <source relative_path="include/KHR" type="c_include">
        <files mask="khrplatform.h"/>
      </source>
      <source relative_path="include/VG" type="c_include">
        <files mask="openvg.h"/>
        <files mask="vgplatform.h"/>
        <files mask="vgu.h"/>
      </source>
      <source relative_path="include/Vivante" type="c_include">
        <files mask="vg_context.h"/>
        <files mask="vg_defs.h"/>
        <files mask="vg_image.h"/>
        <files mask="vg_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openvg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/Vivante" type="c_include"/>
        <include_path relative_path="include/EGL" type="c_include"/>
        <include_path relative_path="include/VG" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/Vivante" type="asm_include"/>
        <include_path relative_path="include/EGL" type="asm_include"/>
        <include_path relative_path="include/VG" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.template.MIMXRT798S" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.wifi_bt_module.config.MIMXRT798S"/>
              <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT798S"/>
              <component_dependency value="middleware.wifi.wifi_bt_config.template.MIMXRT798S"/>
            </all>
            <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.osa.MIMXRT798S" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/osa" type="c_include">
        <files mask="osa.h"/>
        <files mask="mem_pool.h"/>
        <files mask="mem_pool_config.h"/>
        <files mask="slist.h"/>
        <files mask="stack_simple.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa.c"/>
        <files mask="mem_pool.c"/>
        <files mask="mem_pool_config.c"/>
        <files mask="slist.c"/>
        <files mask="stack_simple.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.common_files.MIMXRT798S" name="nxp_wireless_common_files" brief="NXP WLAN common files" version="1.0.0" full_name="NXP WLAN common files" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.osa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_config_default.h"/>
        <files mask="wifi_cal_data_ext.h"/>
        <files mask="wm_utils.h"/>
        <files mask="wmerrno.h"/>
        <files mask="wmlog.h"/>
        <files mask="wmtypes.h"/>
        <files mask="wifi_cal_data_frdmrw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_2ant.h"/>
        <files mask="wifi_cal_data_rw61x_3ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_override.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi-decl.h"/>
        <files mask="wifi.h"/>
        <files mask="wifi_events.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_decl.h"/>
        <files mask="mlan_ioctl.h"/>
        <files mask="type_decls.h"/>
      </source>
      <source relative_path="wifi_bt_firmware" type="c_include">
        <files mask="wlan_bt_fw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld.MIMXRT798S" name="nxp_wireless_fwdnld" brief="NXP WLAN f/w dnld driver" version="1.0.0" full_name="NXP WLAN f/w dnld driver" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.common_files.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="asm_include">
        <files mask="sd8801_wlan.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="c_include">
        <files mask="sd8801_wlan.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="src">
        <files mask="8801_cpu1.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="asm_include">
        <files mask="sduartIW416_wlan_bt.bin.inc"/>
        <files mask="sdIW416_wlan.bin.inc"/>
        <files mask="uartIW416_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="c_include">
        <files mask="sduartIW416_wlan_bt.h"/>
        <files mask="sdIW416_wlan.h"/>
        <files mask="uartIW416_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="src">
        <files mask="IW416_cpu12.c"/>
        <files mask="IW416_cpu1.c"/>
        <files mask="IW416_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="asm_include">
        <files mask="sduart8987_wlan_bt.bin.inc"/>
        <files mask="sd8987_wlan.bin.inc"/>
        <files mask="uart8987_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="c_include">
        <files mask="sduart8987_wlan_bt.h"/>
        <files mask="sd8987_wlan.h"/>
        <files mask="uart8987_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="src">
        <files mask="8987_cpu12.c"/>
        <files mask="8987_cpu1.c"/>
        <files mask="8987_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="asm_include">
        <files mask="sduart_nw61x.bin.se.inc"/>
        <files mask="sd_nw61x.bin.se.inc"/>
        <files mask="uart_nw61x.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="c_include">
        <files mask="sduart_nw61x_se.h"/>
        <files mask="sd_nw61x_se.h"/>
        <files mask="uart_nw61x_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="src">
        <files mask="nw61x_cpu12_se.c"/>
        <files mask="nw61x_cpu1_se.c"/>
        <files mask="nw61x_cpu2_se.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="asm_include">
        <files mask="sduart_iw610.bin.se.inc"/>
        <files mask="sd_iw610.bin.se.inc"/>
        <files mask="uart_iw610_bt.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="c_include">
        <files mask="sduart_iw610_se.h"/>
        <files mask="sd_iw610_se.h"/>
        <files mask="uart_iw610_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="src">
        <files mask="iw610_cpu12_se.c"/>
        <files mask="iw610_cpu2_se.c"/>
        <files mask="iw610_cpu1_se.c"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_free_rtos.MIMXRT798S" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.apps.lwiperf.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.net.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="incl/port/net/hooks" type="c_include">
        <files mask="lwip_default_hooks.h"/>
      </source>
      <source relative_path="port/net/hooks" type="src">
        <files mask="lwip_default_hooks.c"/>
      </source>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="dhcpd" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
        <include_path relative_path="dhcpd" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net.MIMXRT798S" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.MIMXRT798S" name="nxp_wifi_driver" brief="NXP Wi-Fi driver" version="1.3.46" full_name="NXP Wi-Fi driver" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT798S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.sdio.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.net.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.osa.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="dhcp-server.h"/>
        <files mask="nxp_wifi.h"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan.h"/>
        <files mask="wlan_11d.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi_nxp.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan.h"/>
        <files mask="mlan_11ac.h"/>
        <files mask="mlan_11ax.h"/>
        <files mask="mlan_11h.h"/>
        <files mask="mlan_11n.h"/>
        <files mask="mlan_11n_aggr.h"/>
        <files mask="mlan_11n_rxreorder.h"/>
        <files mask="mlan_11v.h"/>
        <files mask="mlan_action.h"/>
        <files mask="mlan_11k.h"/>
        <files mask="mlan_mbo.h"/>
        <files mask="mlan_api.h"/>
        <files mask="mlan_fw.h"/>
        <files mask="mlan_ieee.h"/>
        <files mask="mlan_init.h"/>
        <files mask="mlan_join.h"/>
        <files mask="mlan_main.h"/>
        <files mask="mlan_meas.h"/>
        <files mask="mlan_remap_mem_operations.h"/>
        <files mask="mlan_uap.h"/>
        <files mask="mlan_util.h"/>
        <files mask="mlan_wmm.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="mlan_11ac.c"/>
        <files mask="mlan_11ax.c"/>
        <files mask="mlan_11d.c"/>
        <files mask="mlan_11h.c"/>
        <files mask="mlan_11n.c"/>
        <files mask="mlan_11n_aggr.c"/>
        <files mask="mlan_11n_rxreorder.c"/>
        <files mask="mlan_11v.c"/>
        <files mask="mlan_action.c"/>
        <files mask="mlan_11k.c"/>
        <files mask="mlan_mbo.c"/>
        <files mask="mlan_api.c"/>
        <files mask="mlan_cfp.c"/>
        <files mask="mlan_cmdevt.c"/>
        <files mask="mlan_glue.c"/>
        <files mask="mlan_init.c"/>
        <files mask="mlan_join.c"/>
        <files mask="mlan_misc.c"/>
        <files mask="mlan_scan.c"/>
        <files mask="mlan_shim.c"/>
        <files mask="mlan_sta_cmd.c"/>
        <files mask="mlan_sta_cmdresp.c"/>
        <files mask="mlan_sta_event.c"/>
        <files mask="mlan_sta_ioctl.c"/>
        <files mask="mlan_sta_rx.c"/>
        <files mask="mlan_txrx.c"/>
        <files mask="mlan_wmm.c"/>
        <files mask="wifi-debug.c"/>
        <files mask="wifi-mem.c"/>
        <files mask="wifi.c"/>
        <files mask="wifi_pwrmgr.c"/>
        <files mask="wifi-wps.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-debug.h"/>
        <files mask="wifi-internal.h"/>
        <files mask="wifi_common.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if/incl" type="c_include">
        <files mask="rtos_wpa_supp_if.h"/>
        <files mask="wifi_nxp_internal.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if" type="src">
        <files mask="wifi_nxp.c"/>
        <files mask="rtos_wpa_supp_if.c"/>
        <files mask="wifi_nxp_internal.c"/>
      </source>
      <source relative_path="certs" type="c_include">
        <files mask="ca-cert.h"/>
        <files mask="client-cert.h"/>
        <files mask="client-key.h"/>
        <files mask="server-cert.h"/>
        <files mask="server-key.h"/>
        <files mask="dh-param.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="c_include"/>
        <include_path relative_path="certs" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="asm_include"/>
        <include_path relative_path="certs" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.softap.MIMXRT798S" name="nxp_wifi_driver_softap" brief="NXP Wi-Fi driver Soft AP" version="1.3.46" full_name="NXP Wi-Fi driver Soft AP" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <defines>
        <define name="CONFIG_NXP_WIFI_SOFTAP_SUPPORT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-uap.c"/>
        <files mask="mlan_uap_ioctl.c"/>
        <files mask="mlan_uap_cmdevent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver_softap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.MIMXRT798S" name="wifi_nxp" brief="NXP Wi-Fi functionality enables customers to quickly develop applications of interest to add connectivity to different sensors and appliances" version="1.3.46" full_name="NXP Wi-Fi" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT798S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.wifi.template.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmstats.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan.c"/>
        <files mask="wlan_txpwrlimit_cfg.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="CMakeLists.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.sdio.MIMXRT798S" name="wifi_nxp_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-sdio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_sdio.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.mlan_sdio.MIMXRT798S" name="wifi_nxp_mlan_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.common_files.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="sdio_nxp_abs" type="src">
        <files mask="mlan_sdio.c"/>
        <files mask="fwdnld_sdio.c"/>
      </source>
      <source relative_path="sdio_nxp_abs/incl" type="c_include">
        <files mask="fwdnld_sdio.h"/>
        <files mask="mlan_sdio_defs.h"/>
        <files mask="mlan_sdio.h"/>
        <files mask="mlan_sdio_api.h"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_mlan_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.cli.MIMXRT798S" name="wifi_nxp_cli" brief="Middlware Wi-Fi CLI" version="1.3.46" full_name="NXP Wi-Fi CLI" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT798S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.wifi.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="cli" type="c_include">
        <files mask="cli_mem.h"/>
        <files mask="wifi_shell.h"/>
      </source>
      <source relative_path="cli" type="src">
        <files mask="cli.c"/>
        <files mask="cli_mem_simple.c"/>
        <files mask="cli_utils.c"/>
        <files mask="wifi_shell.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="cli.h"/>
        <files mask="cli_utils.h"/>
        <files mask="iperf.h"/>
        <files mask="wifi_ping.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_cli.c"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-cli.c"/>
      </source>
      <source relative_path="nw_utils" type="src">
        <files mask="wifi_ping.c"/>
        <files mask="iperf.c"/>
        <files mask="init_enet.c"/>
      </source>
      <source relative_path="nw_utils" type="c_include">
        <files mask="network_cfg.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="c_include">
        <files mask="telnet_server.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="src">
        <files mask="telnet_server.c"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan_basic_cli.c"/>
        <files mask="wlan_enhanced_tests.c"/>
        <files mask="wlan_tests.c"/>
        <files mask="wlan_test_mode_tests.c"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_cli.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="cli" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="nw_utils" type="c_include"/>
        <include_path relative_path="nw_utils/telnet" type="c_include"/>
        <include_path relative_path="cli" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="nw_utils" type="asm_include"/>
        <include_path relative_path="nw_utils/telnet" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmcrypto.MIMXRT798S" name="wifi_nxp_wmcrypto" brief="Middlware Wi-Fi WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto.c"/>
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="common.h"/>
        <files mask="crypto.h"/>
        <files mask="includes.h"/>
        <files mask="type_def.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="src">
        <files mask="aes-siv.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-wrap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmtime.MIMXRT798S" name="wifi_nxp_wmtime" brief="Middlware Wi-Fi WMTIME" version="1.0.0" full_name="NXP Wi-Fi WMTIME" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="wmtime" type="src">
        <files mask="wmtime.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmtime.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmtime.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmtime" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wmtime" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.ncp_supp_wmcrypto.MIMXRT798S" name="ncp_supp_wmcrypto" brief="Middlware Wi-Fi NCP_SUPP_WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi NCP_SUPP_WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_ncp_supp_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wls.MIMXRT798S" name="wifi_nxp_wls" brief="Middlware Wi-Fi Location Service" version="1.3.46" full_name="NXP Wi-Fi WLS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="wls" type="c_include">
        <files mask="range_kalman.h"/>
        <files mask="wls_api.h"/>
        <files mask="wls_param_defines.h"/>
        <files mask="wls_processing.h"/>
        <files mask="wls_QR_algorithm.h"/>
        <files mask="wls_radix4Fft.h"/>
        <files mask="wls_structure_defs.h"/>
        <files mask="wls_subspace_processing.h"/>
      </source>
      <source relative_path="wls" type="src">
        <files mask="range_kalman.c"/>
        <files mask="wls_api.c"/>
        <files mask="wls_processing.c"/>
        <files mask="wls_QR_algorithm.c"/>
        <files mask="wls_radix4Fft.c"/>
        <files mask="wls_subspace_processing.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wls" type="c_include"/>
        <include_path relative_path="wls" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.vit.hifi4.MIMXRT798S" name="vit" brief="Voice intelligent technology library" version="4.10.0" full_name="middleware vit" category="Voice/Voice Command" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/vit" project_base_path="vit">
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.vit.hifi4_models.MIMXRT798S"/>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi4_MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_vit_hifi4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="HIFI4/Lib" type="c_include"/>
        <include_path relative_path="HIFI4/Lib/Inc" type="c_include"/>
        <include_path relative_path="HIFI4/Lib" type="asm_include"/>
        <include_path relative_path="HIFI4/Lib/Inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.vit.hifi4_models.MIMXRT798S" name="vit hifi4 models" brief="Voice intelligent technology HiFi4 models" version="4.10.0" full_name="middleware vit hifi4 models" category="Voice/Voice Command" user_visible="false" type="middleware" package_base_path="middleware/audio_voice/components/vit" project_base_path="vit">
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="HIFI4/Lib" type="c_include">
        <files mask="VIT.h"/>
        <files mask="VIT_Model_cn.h"/>
        <files mask="VIT_Model_de.h"/>
        <files mask="VIT_Model_en.h"/>
        <files mask="VIT_Model_es.h"/>
        <files mask="VIT_Model_fr.h"/>
        <files mask="VIT_Model_it.h"/>
        <files mask="VIT_Model_ja.h"/>
        <files mask="VIT_Model_ko.h"/>
        <files mask="VIT_Model_pt.h"/>
        <files mask="VIT_Model_tr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_vit_hifi4_models.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="HIFI4/Lib" type="c_include"/>
        <include_path relative_path="HIFI4/Lib" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.MIMXRT798S" name="PD Stack" brief="Middleware usb_pd" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="pd" type="c_include">
        <files mask="usb_pd.h"/>
        <files mask="usb_pd_interface.h"/>
        <files mask="usb_pd_phy.h"/>
        <files mask="usb_pd_spec.h"/>
        <files mask="usb_pd_timer.h"/>
        <files mask="usb_pd_auto_policy.h"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_connect.c"/>
        <files mask="usb_pd_interface.c"/>
        <files mask="usb_pd_msg.c"/>
        <files mask="usb_pd_policy.c"/>
        <files mask="usb_pd_timer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.altmode.MIMXRT798S" name="PD Alternate Mode" brief="Middleware usb_pd altmode" version="2.11.0" full_name="USB Type-C PD Alternate Mode" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.pd.MIMXRT798S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="pd/alt_mode" type="src">
        <files mask="usb_pd_alt_mode.c"/>
        <files mask="usb_pd_alt_mode_dp.c"/>
      </source>
      <source relative_path="pd/alt_mode" type="c_include">
        <files mask="usb_pd_alt_mode.h"/>
        <files mask="usb_pd_alt_mode_dp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_altmode.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd/alt_mode" type="c_include"/>
        <include_path relative_path="pd/alt_mode" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.phy.ptn5110.MIMXRT798S" name="PD PTN5110 Driver" brief="Middleware usb_pd phy ptn5110" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB PD PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpio.MIMXRT798S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT798S"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT798S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="pd/ptn5110" type="c_include">
        <files mask="usb_pd_ptn5110.h"/>
        <files mask="usb_pd_ptn5110_register.h"/>
      </source>
      <source relative_path="pd/ptn5110" type="src">
        <files mask="usb_pd_ptn5110_connect.c"/>
        <files mask="usb_pd_ptn5110_hal.c"/>
        <files mask="usb_pd_ptn5110_interface.c"/>
        <files mask="usb_pd_ptn5110_msg.c"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_timer.c"/>
      </source>
      <source relative_path="pd/phy_interface" type="c_include">
        <files mask="usb_pd_i2c.h"/>
      </source>
      <source relative_path="pd/phy_interface" type="src">
        <files mask="usb_pd_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_phy_ptn5110.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd/ptn5110" type="c_include"/>
        <include_path relative_path="pd/phy_interface" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
        <include_path relative_path="pd/ptn5110" type="asm_include"/>
        <include_path relative_path="pd/phy_interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.compliance_test_report.MIMXRT798S" name="PD Compliance Test Report" brief="Middleware usb_pd compliance_test_report" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="false" type="middleware" package_base_path="middleware/usb" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="pd/compliance_test_report/ellisys/consumer_provider" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_snk" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_src" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/provider_consumer" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_dock" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_host" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_compliance_test_report.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.usb.common_header.MIMXRT798S" name="USB Common Header" brief="Middleware usb common_header" version="2.11.0" full_name="USB Common Header" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="component.osa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMXRT798S" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.11.0" full_name="USB Device Common Header" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_ehci.MIMXRT798S" name="USB Device EHCI Controller Driver(HS)" brief="Middleware usb device ehci" version="2.11.0" full_name="USB Device EHCI Controller Driver(HS)" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ehci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MIMXRT798S" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.11.0" full_name="USB Device Common Controller" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_controller_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.MIMXRT798S" name="USB Device Stack" brief="Middleware usb device stack" version="2.11.0" full_name="USB Device Stack" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.MIMXRT798S" name="USB Device Audio" brief="Middleware usb device audio" version="2.11.0" full_name="USB Device Audio" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.MIMXRT798S" name="USB Device CDC" brief="Middleware usb device cdc" version="2.11.0" full_name="USB Device CDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.ecm.MIMXRT798S" name="USB Device CDC ECM" brief="Middleware usb device cdc ecm" version="2.11.0" full_name="USB Device CDC ECM" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_ecm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.MIMXRT798S" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis" version="2.11.0" full_name="USB Device CDC RNDIS" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.MIMXRT798S" name="USB Device HID" brief="Middleware usb device hid" version="2.11.0" full_name="USB Device HID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.MIMXRT798S" name="USB Device DFU" brief="Middleware usb device dfu" version="2.11.0" full_name="USB Device DFU" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_dfu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.MIMXRT798S" name="USB Device MSD" brief="Middleware usb device msd" version="2.11.0" full_name="USB Device MSD" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.mtp.MIMXRT798S" name="USB Device MTP" brief="Middleware usb device mtp" version="2.11.0" full_name="USB Device MTP" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_mtp.c"/>
        <files mask="usb_device_mtp_operation.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_mtp.h"/>
        <files mask="usb_device_mtp_operation.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_mtp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.MIMXRT798S" name="USB Device PHDC" brief="Middleware usb device phdc" version="2.11.0" full_name="USB Device PHDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.MIMXRT798S" name="USB Device Video" brief="Middleware usb device video" version="2.11.0" full_name="USB Device Video" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.MIMXRT798S" name="USB Device CCID" brief="Middleware usb device ccid" version="2.11.0" full_name="USB Device CCID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.MIMXRT798S" name="USB Device Printer" brief="Middleware usb device printer" version="2.11.0" full_name="USB Device Printer" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.phy.MIMXRT798S" name="USB PHY" brief="Middleware usb phy" version="2.11.0" full_name="USB PHY" category="USB/USB PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source relative_path="phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_phy.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="phy" type="c_include"/>
        <include_path relative_path="phy" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.hsdcd.MIMXRT798S" name="USB HSDCD" brief="Middleware usb HSDCD (Select manually if needed)" version="2.11.0" full_name="USB HSDCD" category="USB/USB DCD" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="dcd" type="src">
        <files mask="usb_hsdcd.c"/>
      </source>
      <source relative_path="dcd" type="c_include">
        <files mask="usb_hsdcd.h"/>
        <files mask="usb_charger_detect.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_hsdcd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dcd" type="c_include"/>
        <include_path relative_path="dcd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.common_header.MIMXRT798S" name="USB Host Common Header" brief="Middleware usb host common_header" version="2.11.0" full_name="USB Host Common Header" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_controller_ehci.MIMXRT798S" name="USB Host EHCI Controller Driver(HS)" brief="Middleware usb host ehci" version="2.11.0" full_name="USB Host EHCI Controller Driver(HS)" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_ehci.c"/>
      </source>
      <source relative_path="host" type="c_include">
        <files mask="usb_host_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_ehci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.stack.MIMXRT798S" name="USB Host Stack" brief="Middleware usb host stack" version="2.11.0" full_name="USB Host Stack" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
      </source>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT798S" name="USB Host Audio" brief="Middleware usb host audio" version="2.11.0" full_name="USB Host Audio" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT798S" name="USB Host CDC" brief="Middleware usb host cdc" version="2.11.0" full_name="USB Host CDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_ecm.MIMXRT798S" name="USB Host CDC ECM" brief="Middleware usb host cdc_ecm" version="2.11.0" full_name="USB Host CDC ECM" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_ecm.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT798S" name="USB Host CDC RNDIS" brief="Middleware usb host cdc_rndis" version="2.11.0" full_name="USB Host CDC RNDIS" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT798S" name="USB Host HID" brief="Middleware usb host hid" version="2.11.0" full_name="USB Host HID" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT798S" name="USB Host MSD" brief="Middleware usb host msd" version="2.11.0" full_name="USB Host MSD" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_video.MIMXRT798S" name="USB Host Video" brief="Middleware usb host video" version="2.11.0" full_name="USB Host Video" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_video.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT798S" name="USB Host PHDC" brief="Middleware usb host phdc" version="2.11.0" full_name="USB Host PHDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT798S" name="USB Host Printer" brief="Middleware usb host printer" version="2.11.0" full_name="USB Host Printer" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.MIMXRT798S" name="PSATEST_NS" brief="PSA Test Suite Non Secure" version="1.4" full_name="Middleware psatest ns" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.psatest.ns.tgt_dev_apis_nxp.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="val" type="asm_include">
        <files mask="test_entry_list.inc"/>
        <files mask="test_entry_fn_declare_list.inc"/>
      </source>
      <source relative_path="val/nspe" type="c_include">
        <files mask="pal_interfaces_ns.h"/>
        <files mask="val_attestation.h"/>
        <files mask="val_crypto.h"/>
        <files mask="val_entry.h"/>
        <files mask="val_framework.h"/>
        <files mask="val_dispatcher.h"/>
        <files mask="val_interfaces.h"/>
        <files mask="val_peripherals.h"/>
        <files mask="val_platform.h"/>
        <files mask="val_storage.h"/>
      </source>
      <source relative_path="val/nspe" type="src">
        <files mask="val_attestation.c"/>
        <files mask="val_crypto.c"/>
        <files mask="val_entry.c"/>
        <files mask="val_framework.c"/>
        <files mask="val_dispatcher.c"/>
        <files mask="val_interfaces.c"/>
        <files mask="val_peripherals.c"/>
        <files mask="val_platform.c"/>
        <files mask="val_storage.c"/>
      </source>
      <source relative_path="val/common" type="c_include">
        <files mask="val.h"/>
        <files mask="val_client_defs.h"/>
        <files mask="val_target.h"/>
      </source>
      <source relative_path="val/common" type="src">
        <files mask="val_target.c"/>
      </source>
      <source relative_path="platform/drivers/nvmem" type="src">
        <files mask="pal_nvmem.c"/>
      </source>
      <source relative_path="platform/drivers/nvmem" type="c_include">
        <files mask="pal_nvmem.h"/>
      </source>
      <source relative_path="platform/targets/common/nspe/crypto" type="c_include">
        <files mask="pal_crypto_config_check.h"/>
      </source>
      <source relative_path="platform/targets/common/nspe" type="c_include">
        <files mask="pal_common.h"/>
      </source>
      <source relative_path="platform/targets/common/nspe" type="src">
        <files mask="pal_weak.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="val/nspe" type="c_include"/>
        <include_path relative_path="val/common" type="c_include"/>
        <include_path relative_path="platform/drivers/nvmem" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/crypto" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe" type="c_include"/>
        <include_path relative_path="val" type="c_include"/>
        <include_path relative_path="val/nspe" type="asm_include"/>
        <include_path relative_path="val/common" type="asm_include"/>
        <include_path relative_path="platform/drivers/nvmem" type="asm_include"/>
        <include_path relative_path="platform/targets/common/nspe/crypto" type="asm_include"/>
        <include_path relative_path="platform/targets/common/nspe" type="asm_include"/>
        <include_path relative_path="val" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT798S" name="sdmmc_osa" brief="Middleware sdmmc osa" version="2.3.0" full_name="SDMMC osa stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
        <include_path relative_path="osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT798S" name="sd" brief="Middleware sdmmc sd" version="2.4.1" full_name="SDMMC sd stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SD_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="sd" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" type="c_include"/>
        <include_path relative_path="sd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT798S" name="mmc" brief="Middleware sdmmc mmc" version="2.5.1" full_name="SDMMC mmc stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="MMC_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="mmc" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" type="c_include"/>
        <include_path relative_path="mmc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT798S" name="sdio" brief="Middleware sdmmc sdio" version="2.4.1" full_name="SDMMC sdio stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="sdio" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" type="c_include"/>
        <include_path relative_path="sdio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdspi.MIMXRT798S" name="sdspi" brief="Middleware sdmmc sdspi" version="2.2.1" full_name="SDMMC sdspi stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDSPI_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="sdspi" type="src">
        <files mask="fsl_sdspi.c"/>
      </source>
      <source relative_path="sdspi" type="c_include">
        <files mask="fsl_sdspi.h"/>
      </source>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdspi" type="c_include"/>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="sdspi" type="asm_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT798S" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.6.3" full_name="Middleware sdmmc host usdhc" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT798S"/>
            <component_dependency value="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT798S"/>
          </any_of>
          <component_dependency value="platform.drivers.usdhc.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.common.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT798S" name="sdmmc_host_usdhc_non_blocking" brief="Middleware sdmmc host usdhc non_blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc non_blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_non_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT798S" name="sdmmc_host_usdhc_blocking" brief="Middleware sdmmc host usdhc blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.bm.MIMXRT798S" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="5.1.2" full_name="RPMsg-Lite baremetal environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.freertos.MIMXRT798S" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="5.1.2" full_name="RPMsg-Lite FreeRTOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.xos.MIMXRT798S" name="rpmsg_lite xos" brief="RPMsg-Lite XOS environment layer sources" version="5.1.2" full_name="RPMsg-Lite XOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_xos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_xos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.qnx.MIMXRT798S" name="rpmsg_lite qnx" brief="RPMsg-Lite QNX environment layer sources" version="5.1.2" full_name="RPMsg-Lite QNX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_qnx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_qnx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.threadx.MIMXRT798S" name="rpmsg_lite threadx" brief="RPMsg-Lite ThreadX environment layer sources" version="5.1.2" full_name="RPMsg-Lite ThreadX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_threadx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.zephyr.MIMXRT798S" name="rpmsg_lite zephyr" brief="RPMsg-Lite Zephyr environment sources" version="5.1.2" full_name="RPMsg-Lite Zephyr environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_zephyr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_zephyr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.MIMXRT798S" name="rpmsg_lite" brief="RPMsg-Lite" version="5.1.2" full_name="Remote Procedure Messaging Lite library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.rpmsg-lite.bm.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.qnx.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.threadx.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.xos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.zephyr.MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="llist.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_lite.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.ns.MIMXRT798S" name="rpmsg_lite" brief="RPMsg-Lite NS" version="5.1.2" full_name="Remote Procedure Messaging Lite NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_ns.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_ns.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_ns.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.queue.MIMXRT798S" name="rpmsg_lite" brief="RPMsg-Lite Queue" version="5.1.2" full_name="Remote Procedure Messaging Queue NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_queue.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.imxrt700.MIMXRT798S" name="rpmsg_lite_imxrt700" brief="RPMsg-Lite for imxrt700 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for imxrt700 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            <device_core_dependency value="cm33_core1_MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt700_m33" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt700_m33" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_imxrt700.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_m33" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_m33" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.imxrt700_hifi1.MIMXRT798S" name="rpmsg_lite_imxrt700_hifi1" brief="RPMsg-Lite for imxrt700 hifi1 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for imxrt700 hifi1 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi1_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi1" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt700_hifi1" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_imxrt700_hifi1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi1" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi1" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.imxrt700_hifi4.MIMXRT798S" name="rpmsg_lite_imxrt700_hifi4" brief="RPMsg-Lite for imxrt700 hifi4 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for imxrt700 hifi4 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi4_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi4" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt700_hifi4" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_imxrt700_hifi4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi4" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi4" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.imxrt700.MIMXRT798S" name="mcmgr_imxrt700" brief="Multicore Manager for imxrt700 board" version="4.1.5" full_name="Multicore Manager for imxrt700 board" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mu1.MIMXRT798S"/>
          <component_dependency value="middleware.multicore.mcmgr.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr_internal_core_api_imxrt700.c"/>
        <files mask="mcmgr_mu_internal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr_imxrt700.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.client.MIMXRT798S" name="eRPC_client" brief="eRPC_client" version="1.13.0" full_name="eRPC client" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.server.MIMXRT798S" name="eRPC_server" brief="eRPC_server" version="1.13.0" full_name="eRPC server" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.arbitrator.MIMXRT798S" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.13.0" full_name="eRPC arbitrator" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_arbitrated_client_manager.hpp"/>
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
        <files mask="erpc_transport_arbitrator.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_arbitrator.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_stdlib.MIMXRT798S" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.13.0" full_name="eRPC stdlib port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_stdlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_freertos.MIMXRT798S" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.13.0" full_name="eRPC FreeRTOS port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_threading.h"/>
        <files mask="erpc_setup_extensions.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
        <files mask="erpc_threading_freertos.cpp"/>
        <files mask="erpc_setup_extensions_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.MIMXRT798S" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.13.0" full_name="eRPC MU transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_mu_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_mu.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_mu_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_master.MIMXRT798S" name="eRPC_rpmsg_lite_transport_master" brief="eRPC_rpmsg_lite_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_remote.MIMXRT798S" name="eRPC_rpmsg_lite_transport_remote" brief="eRPC_rpmsg_lite_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_master.MIMXRT798S" name="eRPC_rpmsg_lite_rtos_transport_master" brief="eRPC_rpmsg_lite_rtos_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_remote.MIMXRT798S" name="eRPC_rpmsg_lite_rtos_transport_remote" brief="eRPC_rpmsg_lite_rtos_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.MIMXRT798S" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.13.0" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_tty_rtos_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.MIMXRT798S" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.13.0" full_name="eRPC UART CMSIS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_uart_cmsis_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_uart_cmsis.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_uart_cmsis_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.MIMXRT798S" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.13.0" full_name="eRPC DSPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.MIMXRT798S" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.13.0" full_name="eRPC DSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.MIMXRT798S" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.13.0" full_name="eRPC SPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.MIMXRT798S" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.13.0" full_name="eRPC SPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpspi_slave_transport.MIMXRT798S" name="eRPC_lpspi_slave_transport" brief="eRPC_lpspi_slave_transport" version="1.13.0" full_name="eRPC LPSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_i2c_slave_transport.MIMXRT798S" name="eRPC_i2c_slave_transport" brief="eRPC_i2c_slave_transport" version="1.13.0" full_name="eRPC I2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_i2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_i2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_i2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_i2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpi2c_slave_transport.MIMXRT798S" name="eRPC_lpi2c_slave_transport" brief="eRPC_lpi2c_slave_transport" version="1.13.0" full_name="eRPC LPI2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT798S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpi2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpi2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpi2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpi2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_common_multicore.MIMXRT798S" name="eRPC_common" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include">
        <files mask="erpc_error_handler.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="src">
        <files mask="erpc_error_handler.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_common_multicore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_client.MIMXRT798S" name="eRPC_examples Matrix Multiply Client" brief="erpc_examples Matrix Multiply Client" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_client.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_client.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_client.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_client.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_server.MIMXRT798S" name="eRPC_examples Matrix Multiply Server" brief="erpc_examples Matrix Multiply Server" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_server.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_server.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_server.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core0.MIMXRT798S" name="eRPC_examples Two Way RPC core0" brief="erpc_examples Two Way RPC core0" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core0.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core1.MIMXRT798S" name="eRPC_examples Two Way RPC core1" brief="erpc_examples Two Way RPC core1" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.MIMXRT798S" name="mcuboot_bootutil" brief="mcuboot" version="2.0.0" full_name="MCUboot bootloader" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/bootutil" project_base_path="bootutil">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.nxp_bootutil_port.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/bootutil" type="c_include">
        <files mask="bench.h"/>
        <files mask="boot_hooks.h"/>
        <files mask="boot_public_hooks.h"/>
        <files mask="boot_record.h"/>
        <files mask="boot_status.h"/>
        <files mask="bootutil.h"/>
        <files mask="bootutil_log.h"/>
        <files mask="bootutil_public.h"/>
        <files mask="bootutil_test.h"/>
        <files mask="caps.h"/>
        <files mask="enc_key.h"/>
        <files mask="enc_key_public.h"/>
        <files mask="fault_injection_hardening.h"/>
        <files mask="fault_injection_hardening_delay_rng.h"/>
        <files mask="ignore.h"/>
        <files mask="image.h"/>
        <files mask="mcuboot_status.h"/>
        <files mask="ramload.h"/>
        <files mask="security_cnt.h"/>
        <files mask="sign_key.h"/>
      </source>
      <source relative_path="include/bootutil/crypto" type="c_include">
        <files mask="aes_ctr.h"/>
        <files mask="aes_kw.h"/>
        <files mask="common.h"/>
        <files mask="ecdh_p256.h"/>
        <files mask="ecdh_x25519.h"/>
        <files mask="ecdsa.h"/>
        <files mask="hmac_sha256.h"/>
        <files mask="rsa.h"/>
        <files mask="sha.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="boot_record.c"/>
        <files mask="bootutil_misc.c"/>
        <files mask="bootutil_public.c"/>
        <files mask="caps.c"/>
        <files mask="encrypted.c"/>
        <files mask="fault_injection_hardening.c"/>
        <files mask="fault_injection_hardening_delay_rng_mbedtls.c"/>
        <files mask="image_ecdsa.c"/>
        <files mask="image_ed25519.c"/>
        <files mask="image_rsa.c"/>
        <files mask="image_validate.c"/>
        <files mask="loader.c"/>
        <files mask="swap_misc.c"/>
        <files mask="swap_move.c"/>
        <files mask="swap_scratch.c"/>
        <files mask="tlv.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="bootutil_misc.h"/>
        <files mask="bootutil_priv.h"/>
        <files mask="swap_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.flashapi_rt.MIMXRT798S" name="mcuboot_bootutil.flashapi_rt" brief="MCUboot device flash porting layer" version="2.0.0" full_name="MCUboot device flash porting layer RT" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk/flashapi" project_base_path="bootutil/flashapi">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.mcuboot.bootutil.flashapi_mcx.MIMXRT798S"/>
          </not>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_api.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil_flashapi_rt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.flashapi_mcx.MIMXRT798S" name="mcuboot_bootutil.flashapi_mcx" brief="MCUboot device flash porting layer" version="2.0.0" full_name="MCUboot device flash porting layer MCX" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk/flashapi" project_base_path="bootutil/flashapi">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_api_mcxn10.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil_flashapi_mcx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.tinycrypt.MIMXRT798S" name="mcuboot_tinycrypt" brief="TinyCrypt fork in MCUBoot repository" version="0.2.8" full_name="mcuboot_tinycrypt_fork" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/tinycrypt/lib" project_base_path="tinycrypt">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT798S"/>
          <component_dependency value="middleware.mcuboot.mbedtls-asn1.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
        <files mask="ecc_platform_specific.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_tinycrypt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.crypto_storage_default.MIMXRT798S" name="mbedtls3x_crypto_storage_simulator" brief="PSA ITS simulator over stdio files." version="3.6.0" full_name="MbedTLS open source Crypto library" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls3x.crypto.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="library" type="src">
        <files mask="psa_its_file.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="psa_crypto_its.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_crypto_storage_default.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.crypto_storage_ram.MIMXRT798S" name="mbedtls3x_crypto_storage_ram" brief="PSA ITS simulator over objects in RAM." version="3.6.0" full_name="MbedTLS open source Crypto library" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <defines>
        <define name="MBEDTLS_PSA_ITS_RAM" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls3x.crypto.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/psa_its" type="src">
        <files mask="psa_its_ram.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="psa_crypto_its.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_crypto_storage_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.crypto.MIMXRT798S" name="mbedtls3x_crypto" brief="mbedTLS crypto library" version="3.6.0" full_name="MbedTLS open source Crypto library" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls3x.crypto.no_psa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="library" type="src">
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers_no_static.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_ffdh.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_pake.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_crypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.ssl.no_psa.MIMXRT798S" name="mbedtls3x_ssl_no_psa" brief="mbedTLS SSL library without PSA" version="3.6.0" full_name="MbedTLS open source SSL library without PSA" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls3x.crypto.no_psa.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.x509.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="net_sockets.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="debug.c"/>
        <files mask="mps_reader.c"/>
        <files mask="mps_trace.c"/>
        <files mask="net_sockets.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_client.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_debug_helpers_generated.c"/>
        <files mask="ssl_msg.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="ssl_tls12_client.c"/>
        <files mask="ssl_tls12_server.c"/>
        <files mask="ssl_tls13_client.c"/>
        <files mask="ssl_tls13_generic.c"/>
        <files mask="ssl_tls13_keys.c"/>
        <files mask="ssl_tls13_server.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="debug_internal.h"/>
        <files mask="mps_common.h"/>
        <files mask="mps_error.h"/>
        <files mask="mps_reader.h"/>
        <files mask="mps_trace.h"/>
        <files mask="ssl_ciphersuites_internal.h"/>
        <files mask="ssl_client.h"/>
        <files mask="ssl_debug_helpers.h"/>
        <files mask="ssl_misc.h"/>
        <files mask="ssl_tls13_invasive.h"/>
        <files mask="ssl_tls13_keys.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_ssl_no_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.ssl.MIMXRT798S" name="mbedtls3x_ssl" brief="mbedTLS SSL library" version="3.6.0" full_name="MbedTLS open source SSL library" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls3x.crypto.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.ssl.no_psa.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.x509.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_ssl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.no_psa.MIMXRT798S" name="mbedtls3x_no_psa" brief="mbedTLS library v3.x without PSA" version="3.6.0" full_name="MbedTLS open source SSL library without PSA" category="Security/MbedTLSv3 library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls3x.crypto.no_psa.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.ssl.no_psa.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.template.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.x509.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x_no_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls3x.MIMXRT798S" name="mbedtls3x" brief="mbedTLS library v3.x" version="3.6.0" full_name="MbedTLS open source SSL library (Crypto, SSL/TLS, X.509)" category="Security/MbedTLSv3 library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls3x" project_base_path="mbedtls3x">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls3x.crypto.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.ssl.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.template.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.x509.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls3x.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.MIMXRT798S" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.1" revision="2" full_name="lwIP" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT798S"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT798S"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT798S"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT798S"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT798S"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT798S"/>
            </all>
          </any_of>
          <any_of>
            <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT798S"/>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMXRT798S"/>
            <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT798S"/>
            <component_dependency value="middleware.wifi.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.lwip.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="BUILDING" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists_upstream.txt" hidden="true"/>
        <files mask="codespell_changed_files.sh" hidden="true"/>
        <files mask="codespell_check.sh" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="port" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="FILES" hidden="true"/>
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
        <files mask="ZeroCopyRx.c" hidden="true"/>
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen" type="doc">
        <files mask="generate.bat" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="main_page.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="acd.c"/>
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="acd.h"/>
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="mem_priv.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="tcp_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="acd.h"/>
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="ecp.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c"/>
        <files mask="des.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="sha1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
        <include_path relative_path="src/include/lwip" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/include" type="asm_include"/>
        <include_path relative_path="src/include/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMXRT798S" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMXRT798S" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon Implementation Support Files" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/http" type="other">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs" type="other">
        <files mask="404.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
        <files mask="makefsdata.c" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/apps/http" type="asm_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMXRT798S" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTP Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpsrv.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
        <include_path relative_path="src/apps/httpsrv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMXRT798S" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.1" revision="2" full_name="lwIP IPERF" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="SO_REUSE" value="1"/>
        <define name="PRINTF_FLOAT_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_lwiperf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMXRT798S" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.1" revision="2" full_name="lwIP mDNS" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
        <files mask="mdns.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mdns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMXRT798S" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.1" revision="2" full_name="lwIP MQTT Client" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMXRT798S" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.1" revision="2" full_name="lwIP SNTP" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_sntp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMXRT798S" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.1" revision="2" full_name="lwIP Ping Sender" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_ping.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
        <include_path relative_path="contrib/apps/ping" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMXRT798S" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMXRT798S" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMXRT798S" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMXRT798S" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMXRT798S" name="Empty ethernet interface" brief="Empty ethernet interface" version="2.2.1" revision="2" full_name="Empty ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="README"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_empty_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.eoe_ethernetif.MIMXRT798S" name="EtherCAT EOE ethernet interface" brief="EtherCAT EOE ethernet interface" version="2.2.1" revision="2" full_name="EtherCAT EOE ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="CHECKSUM_GEN_IP" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.template.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="eoe_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="eoe_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_eoe_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.dynamic.MIMXRT798S" name="Sys Arch Dynamic interface" brief="lwIP System Abstraction Layer using either FreeRTOS dynamic memory allocation APIs or bare-metal" version="2.2.1" revision="2" full_name="Sys Arch Dynamic interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/dynamic/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/dynamic" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_dynamic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/dynamic" type="c_include"/>
        <include_path relative_path="port/sys_arch/dynamic" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.static.MIMXRT798S" name="Sys Arch Static interface" brief="Experimental lwIP System Abstraction Layer using FreeRTOS static memory allocation APIs - it is not supported and not guaranteed to work, also might be removed in future" version="2.2.1" revision="2" full_name="Sys Arch Static interface - experimental" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/static/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/static" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_static.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/static" type="c_include"/>
        <include_path relative_path="port/sys_arch/static" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMXRT798S" name="lwIP_template" brief="lwIP Template" version="2.2.1" revision="2" full_name="lwIP Template Application" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.usb_ethernetif.MIMXRT798S" name="lwIP_usb_ethernetif" brief="USB network layer" version="2.2.1" revision="2" full_name="lwIP Adaptation for USB Network Layer" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.usb.host_cdc_ecm.MIMXRT798S"/>
            <component_dependency value="middleware.usb.host_cdc_rndis.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host_controller_ehci.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port" type="c_include">
        <files mask="usb_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.usb_ethernetif.bm.MIMXRT798S" name="lwip usb_ethernetif bm" brief="Baremetal port layer for USB ethernet" version="2.2.1" revision="2" full_name="lwip usb_ethernetif bm" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          </not>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="usb_ethernetif_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif_bm.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.usb_ethernetif.freertos.MIMXRT798S" name="lwip usb_ethernetif freertos" brief="FreeRTOS port layer for USB ethernet" version="2.2.1" revision="2" full_name="lwip usb_ethernetif freertos" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="usb_ethernetif_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif_freertos.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.mpp.MIMXRT798S" name="MPP library" brief="Multimedia Processing Pipelines Library" version="3.2.0" full_name="Multimedia Processing Pipelines Library" category="Machine Learning/mpp" user_visible="false" type="middleware" package_base_path="middleware/eiq/mpp" project_base_path="eiq/mpp">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src" type="src">
        <files mask="mpp_api.c"/>
        <files mask="mpp_debug.c"/>
        <files mask="mpp_elements.c"/>
        <files mask="mpp_element_camera.c"/>
        <files mask="mpp_element_display.c"/>
        <files mask="mpp_element_img_convert.c"/>
        <files mask="mpp_element_labeled_rectangle.c"/>
        <files mask="mpp_element_static_img.c"/>
        <files mask="mpp_element_inference.c"/>
        <files mask="mpp_element_nullsink.c"/>
        <files mask="mpp_heap.c"/>
        <files mask="mpp_memory.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="mpp_api_types_internal.h"/>
        <files mask="mpp_debug.h"/>
        <files mask="mpp_heap.h"/>
        <files mask="mpp_version.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="mpp_api_types.h"/>
        <files mask="mpp_api.h"/>
      </source>
      <source relative_path="hal" type="src">
        <files mask="hal_camera_mipi_ov5640.c"/>
        <files mask="hal_draw.c"/>
        <files mask="hal_display_lcdifv2_rk055.c"/>
        <files mask="hal_graphics_pxp.c"/>
        <files mask="hal_graphics_cpu.c"/>
        <files mask="hal_static_image.c"/>
        <files mask="hal_utils.c"/>
        <files mask="hal_freertos.c"/>
        <files mask="hal_vision_algo_tflite.c"/>
        <files mask="hal_display_lcdif_rk043fn.c"/>
        <files mask="hal_camera_csi_mt9m114.c"/>
        <files mask="hal_display_spi_ili9341.c"/>
        <files mask="hal_camera_ezh_ov7670.c"/>
        <files mask="hal_display_mculcd_ssd1963.c"/>
        <files mask="hal_display_mculcd_st7796s.c"/>
        <files mask="hal_graphics_vglite.c"/>
      </source>
      <source relative_path="hal/tflite" type="src">
        <files mask="model.cpp"/>
        <files mask="model_all_ops_micro.cpp"/>
      </source>
      <source relative_path="hal/include" type="c_include">
        <files mask="font.h"/>
        <files mask="hal.h"/>
        <files mask="hal_camera_dev.h"/>
        <files mask="hal_chgui.h"/>
        <files mask="hal_debug.h"/>
        <files mask="hal_display_dev.h"/>
        <files mask="hal_draw.h"/>
        <files mask="hal_freertos.h"/>
        <files mask="hal_graphics_dev.h"/>
        <files mask="hal_os.h"/>
        <files mask="hal_static_image.h"/>
        <files mask="hal_types.h"/>
        <files mask="hal_utils.h"/>
        <files mask="hal_valgo_dev.h"/>
      </source>
      <source relative_path="hal/tflite" type="c_include">
        <files mask="model.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_mpp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="hal/include" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="hal/include" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.binary.MIMXRT798S" name="TensorFlow Lite Micro with core specific kernels" brief="TensorFlow Lite Micro library binary with core specific kernel implementations" version="24.08.07" full_name="TensorFlow Lite Micro library binary with core specific kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.eiq.tensorflow_lite_micro.source.MIMXRT798S"/>
          </not>
          <not>
            <component_dependency value="middleware.eiq.tensorflow_lite_micro.library.MIMXRT798S"/>
          </not>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="mdk" relative_path="lib/cm33/mdk" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="tflm.lib"/>
      </source>
      <source toolchain="iar" relative_path="lib/cm33/iar" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="tflm.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="lib/cm33/armgcc" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="libtflm.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_binary.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.source.MIMXRT798S" name="TensorFlow Lite Micro with core specific kernels" brief="TensorFlow Lite Micro library binary with core specific kernel implementations" version="24.08.07" full_name="TensorFlow Lite Micro library binary with core specific kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/kernels" type="src">
        <files mask="kernel_util.cpp"/>
      </source>
      <source relative_path="tensorflow/compiler/mlir/lite/schema" type="src">
        <files mask="schema_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="ethosu.cpp"/>
        <files mask="if.cpp"/>
        <files mask="logical_common.cpp"/>
        <files mask="squeeze.cpp"/>
        <files mask="assign_variable.cpp"/>
        <files mask="read_variable.cpp"/>
        <files mask="unpack.cpp"/>
        <files mask="reshape_common.cpp"/>
        <files mask="logistic_common.cpp"/>
        <files mask="quantize_common.cpp"/>
        <files mask="dequantize.cpp"/>
        <files mask="zeros_like.cpp"/>
        <files mask="batch_matmul.cpp"/>
        <files mask="depth_to_space.cpp"/>
        <files mask="concatenation.cpp"/>
        <files mask="slice.cpp"/>
        <files mask="shape.cpp"/>
        <files mask="space_to_batch_nd.cpp"/>
        <files mask="strided_slice_common.cpp"/>
        <files mask="batch_to_space_nd.cpp"/>
        <files mask="round.cpp"/>
        <files mask="micro_tensor_utils.cpp"/>
        <files mask="squared_difference.cpp"/>
        <files mask="split_v.cpp"/>
        <files mask="transpose.cpp"/>
        <files mask="split.cpp"/>
        <files mask="ceil.cpp"/>
        <files mask="mul_common.cpp"/>
        <files mask="select.cpp"/>
        <files mask="log_softmax.cpp"/>
        <files mask="maximum_minimum.cpp"/>
        <files mask="add_n.cpp"/>
        <files mask="arg_min_max.cpp"/>
        <files mask="activations.cpp"/>
        <files mask="broadcast_to.cpp"/>
        <files mask="pack.cpp"/>
        <files mask="while.cpp"/>
        <files mask="fully_connected_common.cpp"/>
        <files mask="resize_nearest_neighbor.cpp"/>
        <files mask="floor_mod.cpp"/>
        <files mask="gather_nd.cpp"/>
        <files mask="embedding_lookup.cpp"/>
        <files mask="expand_dims.cpp"/>
        <files mask="pooling_common.cpp"/>
        <files mask="fill.cpp"/>
        <files mask="conv_common.cpp"/>
        <files mask="l2_pool_2d.cpp"/>
        <files mask="space_to_depth.cpp"/>
        <files mask="elu.cpp"/>
        <files mask="depthwise_conv_common.cpp"/>
        <files mask="logical.cpp"/>
        <files mask="kernel_util.cpp"/>
        <files mask="dequantize_common.cpp"/>
        <files mask="gather.cpp"/>
        <files mask="tanh.cpp"/>
        <files mask="softmax_common.cpp"/>
        <files mask="call_once.cpp"/>
        <files mask="hard_swish.cpp"/>
        <files mask="comparisons.cpp"/>
        <files mask="svdf_common.cpp"/>
        <files mask="hard_swish_common.cpp"/>
        <files mask="var_handle.cpp"/>
        <files mask="circular_buffer.cpp"/>
        <files mask="circular_buffer_common.cpp"/>
        <files mask="broadcast_args.cpp"/>
        <files mask="floor_div.cpp"/>
        <files mask="elementwise.cpp"/>
        <files mask="prelu.cpp"/>
        <files mask="detection_postprocess.cpp"/>
        <files mask="kernel_runner.cpp"/>
        <files mask="add_common.cpp"/>
        <files mask="mirror_pad.cpp"/>
        <files mask="reduce_common.cpp"/>
        <files mask="prelu_common.cpp"/>
        <files mask="lstm_eval_common.cpp"/>
        <files mask="floor.cpp"/>
        <files mask="cumsum.cpp"/>
        <files mask="leaky_relu_common.cpp"/>
        <files mask="div.cpp"/>
        <files mask="activations_common.cpp"/>
        <files mask="sub_common.cpp"/>
        <files mask="exp.cpp"/>
        <files mask="neg.cpp"/>
        <files mask="cast.cpp"/>
        <files mask="resize_bilinear.cpp"/>
        <files mask="l2norm.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal" type="src">
        <files mask="portable_tensor_utils.cpp"/>
        <files mask="quantization_util.cpp"/>
        <files mask="common.cpp"/>
        <files mask="tensor_utils.cpp"/>
        <files mask="tensor_ctypes.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/kernels/internal/reference" type="src">
        <files mask="portable_tensor_utils.cpp"/>
        <files mask="comparisons.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/core/api" type="src">
        <files mask="tensor_utils.cpp"/>
        <files mask="flatbuffer_conversions.cpp"/>
        <files mask="error_reporter.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/core/c" type="src">
        <files mask="common.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro" type="src">
        <files mask="micro_context.cpp"/>
        <files mask="micro_resource_variable.cpp"/>
        <files mask="mock_micro_graph.cpp"/>
        <files mask="micro_profiler.cpp"/>
        <files mask="memory_helpers.cpp"/>
        <files mask="micro_log.cpp"/>
        <files mask="micro_interpreter_context.cpp"/>
        <files mask="micro_interpreter_graph.cpp"/>
        <files mask="system_setup.cpp"/>
        <files mask="test_helper_custom_ops.cpp"/>
        <files mask="micro_time.cpp"/>
        <files mask="test_helpers.cpp"/>
        <files mask="recording_micro_allocator.cpp"/>
        <files mask="micro_interpreter.cpp"/>
        <files mask="micro_allocator.cpp"/>
        <files mask="micro_allocation_info.cpp"/>
        <files mask="flatbuffer_utils.cpp"/>
        <files mask="micro_op_resolver.cpp"/>
        <files mask="fake_micro_context.cpp"/>
        <files mask="micro_utils.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/memory_planner" type="src">
        <files mask="linear_memory_planner.cpp"/>
        <files mask="greedy_memory_planner.cpp"/>
        <files mask="non_persistent_buffer_planner_shim.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/arena_allocator" type="src">
        <files mask="single_arena_buffer_allocator.cpp"/>
        <files mask="non_persistent_arena_buffer_allocator.cpp"/>
        <files mask="persistent_arena_buffer_allocator.cpp"/>
        <files mask="recording_single_arena_buffer_allocator.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/tflite_bridge" type="src">
        <files mask="flatbuffer_conversions_bridge.cpp"/>
        <files mask="micro_error_reporter.cpp"/>
      </source>
      <source relative_path="signal/micro/kernels" type="src">
        <files mask="delay.cpp"/>
        <files mask="energy.cpp"/>
        <files mask="fft_auto_scale_kernel.cpp"/>
        <files mask="fft_auto_scale_common.cpp"/>
        <files mask="filter_bank.cpp"/>
        <files mask="filter_bank_log.cpp"/>
        <files mask="filter_bank_square_root.cpp"/>
        <files mask="filter_bank_square_root_common.cpp"/>
        <files mask="filter_bank_spectral_subtraction.cpp"/>
        <files mask="stacker.cpp"/>
        <files mask="pcan.cpp"/>
        <files mask="framer.cpp"/>
        <files mask="irfft.cpp"/>
        <files mask="overlap_add.cpp"/>
        <files mask="rfft.cpp"/>
        <files mask="window.cpp"/>
      </source>
      <source relative_path="signal/src" type="src">
        <files mask="circular_buffer.cpp"/>
        <files mask="energy.cpp"/>
        <files mask="fft_auto_scale.cpp"/>
        <files mask="filter_bank.cpp"/>
        <files mask="filter_bank_log.cpp"/>
        <files mask="filter_bank_spectral_subtraction.cpp"/>
        <files mask="filter_bank_square_root.cpp"/>
        <files mask="irfft_float.cpp"/>
        <files mask="irfft_int16.cpp"/>
        <files mask="irfft_int32.cpp"/>
        <files mask="log.cpp"/>
        <files mask="max_abs.cpp"/>
        <files mask="msb_32.cpp"/>
        <files mask="msb_64.cpp"/>
        <files mask="overlap_add.cpp"/>
        <files mask="pcan_argc_fixed.cpp"/>
        <files mask="rfft_float.cpp"/>
        <files mask="rfft_int16.cpp"/>
        <files mask="rfft_int32.cpp"/>
        <files mask="square_root_32.cpp"/>
        <files mask="square_root_64.cpp"/>
        <files mask="window.cpp"/>
      </source>
      <source relative_path="signal/src/kiss_fft_wrappers" type="src">
        <files mask="kiss_fft_float.cpp"/>
        <files mask="kiss_fft_int16.cpp"/>
        <files mask="kiss_fft_int32.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_source.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.debug_log.MIMXRT798S" name="TensorFlow Lite Micro with core specific kernels" brief="TensorFlow Lite Micro library binary with core specific kernel implementations" version="24.08.07" full_name="TensorFlow Lite Micro library binary with core specific kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.eiq.tensorflow_lite_micro.library.MIMXRT798S"/>
          </not>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/micro" type="src">
        <files mask="debug_log.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_debug_log.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.library.MIMXRT798S" name="TensorFlow Lite Micro with core specific kernels" brief="TensorFlow Lite Micro library binary with core specific kernel implementations" version="24.08.07" full_name="TensorFlow Lite Micro library binary with core specific kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT798S"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.source.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="third_party/kissfft/tools" type="src">
        <files mask="kfc.c"/>
        <files mask="kiss_fastfir.c"/>
        <files mask="kiss_fftnd.c"/>
        <files mask="kiss_fftndr.c"/>
        <files mask="kiss_fftr.c"/>
      </source>
      <source relative_path="third_party/kissfft" type="src">
        <files mask="kiss_fft.c"/>
      </source>
      <source relative_path="third_party/fft2d" type="src">
        <files mask="fftsg.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_library.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.cmsis_nn.MIMXRT798S" name="TensorFlow Lite Micro with CMSIS-NN kernels" brief="TensorFlow Lite Micro library with CMSIS-NN kernel implementations" version="24.08.07" full_name="TensorFlow Lite Micro library with CMSIS-NN kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <defines>
        <define name="CMSIS_NN" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            <device_core_dependency value="cm33_core1_MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT798S"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.cmsis_nn.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/kernels/cmsis_nn" type="src">
        <files mask="depthwise_conv.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="add.cpp"/>
        <files mask="mul.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
        <files mask="svdf.cpp"/>
      </source>
      <source relative_path="tensorflow/lite/micro/kernels" type="src">
        <files mask="sub.cpp"/>
        <files mask="logistic.cpp"/>
        <files mask="reduce.cpp"/>
        <files mask="strided_slice.cpp"/>
        <files mask="quantize.cpp"/>
        <files mask="lstm_eval.cpp"/>
        <files mask="reshape.cpp"/>
        <files mask="leaky_relu.cpp"/>
        <files mask="transpose_conv.cpp"/>
        <files mask="pad.cpp"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_z.c"/>
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/ConvolutionFunctions" type="src">
        <files mask="arm_transpose_conv_s8.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s8.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/ActivationFunctions" type="src">
        <files mask="arm_relu_q7.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/NNSupportFunctions" type="src">
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/SoftmaxFunctions" type="src">
        <files mask="arm_softmax_u8.c"/>
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
      </source>
      <source relative_path="third_party/cmsis_nn/Source/PoolingFunctions" type="src">
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_cmsis_nn.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.examples.microspeech.MIMXRT798S" name="TensorFlow Lite Micro word detection" brief="TensorFlow Lite Micro word detection library" version="24.08.07" full_name="TensorFlow Lite Micro word detection library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.kissfft.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_examples_microspeech.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.headers.MIMXRT798S" name="TensorFlow Lite Micro" brief="TensorFlow Lite Micro library header files" version="24.08.07" full_name="TensorFlow Lite Micro library header files" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MIMXRT798S"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MIMXRT798S"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.ruy.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_headers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.neutron.MIMXRT798S" name="Neutron kernels for TensorFlow Lite Micro" brief="Neutron kernel implementations for TensorFlow Lite Micro" version="24.08.07" full_name="Neutron kernel implementations for TensorFlow Lite Micro" category="Machine Learning/tensorflow_lite" user_visible="true" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/tensorflow/lite/micro/kernels/neutron" project_base_path="eiq/tensorflow-lite/tensorflow/lite/micro/kernels/neutron">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.neutron_lib.binary.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="neutron.cpp"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="neutron.h"/>
      </source>
      <source relative_path="../../../../../third_party/neutron/common/include" type="c_include">
        <files mask="NeutronErrors.h"/>
      </source>
      <source relative_path="../../../../../third_party/neutron/driver/include" type="c_include">
        <files mask="NeutronDriver.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk iar" relative_path="../../../../../third_party/neutron/rt700" type="lib">
        <files mask="libNeutronDriver.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk iar" relative_path="../../../../../third_party/neutron/rt700" type="lib">
        <files mask="libNeutronFirmware.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_neutron.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="../../../../../third_party/neutron/common/include" type="c_include"/>
        <include_path relative_path="../../../../../third_party/neutron/driver/include" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="../../../../../third_party/neutron/common/include" type="asm_include"/>
        <include_path relative_path="../../../../../third_party/neutron/driver/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.reference.MIMXRT798S" name="TensorFlow Lite Micro with reference kernels" brief="TensorFlow Lite Micro library with reference kernel implementations" version="24.08.07" full_name="TensorFlow Lite Micro library with reference kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_reference.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.cmsis_nn.MIMXRT798S" name="CMSIS-NN" brief="CMSIS-NN library" version="23.08" full_name="CMSIS-NN library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/cmsis_nn" project_base_path="eiq/tensorflow-lite/third_party/cmsis_nn">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_cmsis_nn.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.neutron_lib.binary.MIMXRT798S" name="Neutron library binary" brief="Neutron library binary" version="1.0.0" full_name="Neutron library binary" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/neutron" project_base_path="eiq/tensorflow-lite/third_party/neutron">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_neutron_lib_binary.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.xa_nnlib_hifi4.MIMXRT798S" name="Xtensa HiFi4 NN" brief="Xtensa HiFi4 NN library" version="2.9.0" full_name="Xtensa HiFi4 NN library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/xa_nnlib_hifi4" project_base_path="eiq/tensorflow-lite/third_party/xa_nnlib_hifi4">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="hifi1_MIMXRT798S"/>
            <device_core_dependency value="hifi4_MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_xa_nnlib_hifi4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.third_party.xa_nnlib_hifi4.binary.MIMXRT798S" name="Xtensa HiFi4 NN" brief="Xtensa HiFi4 NN library binary" version="2.9.0" full_name="Xtensa HiFi4 NN library" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite/third_party/xa_nnlib_hifi4" project_base_path="eiq/tensorflow-lite/third_party/xa_nnlib_hifi4">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="hifi1_MIMXRT798S"/>
            <device_core_dependency value="hifi4_MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_third_party_xa_nnlib_hifi4_binary.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eiq.tensorflow_lite_micro.xtensa.MIMXRT798S" name="TensorFlow Lite Micro with Xtensa HiFi4 DSP kernels" brief="TensorFlow Lite Micro library with Xtensa HiFi4 DSP kernel implementations" version="24.08.07" full_name="TensorFlow Lite Micro library with Xtensa HiFi4 DSP kernel implementations" category="Machine Learning/tensorflow_lite" user_visible="false" type="middleware" package_base_path="middleware/eiq/tensorflow-lite" project_base_path="eiq/tensorflow-lite">
      <defines>
        <define name="XTENSA" value=""/>
        <define name="NNLIB_V2" value=""/>
        <define name="HIFI4" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="hifi1_MIMXRT798S"/>
            <device_core_dependency value="hifi4_MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.MIMXRT798S"/>
          <component_dependency value="middleware.eiq.tensorflow_lite_micro.third_party.xa_nnlib_hifi4.binary.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="tensorflow/lite/micro/kernels/xtensa" type="src">
        <files mask="fully_connected_vision.cpp"/>
        <files mask="pooling_int8.cpp"/>
        <files mask="depthwise_conv.cpp"/>
        <files mask="sub.cpp"/>
        <files mask="conv_hifi.cpp"/>
        <files mask="conv_int16_reference.cpp"/>
        <files mask="softmax_vision.cpp"/>
        <files mask="pooling.cpp"/>
        <files mask="logistic.cpp"/>
        <files mask="reduce.cpp"/>
        <files mask="fully_connected.cpp"/>
        <files mask="pad_vision.cpp"/>
        <files mask="pooling_vision.cpp"/>
        <files mask="add.cpp"/>
        <files mask="conv_int8_int16.cpp"/>
        <files mask="conv.cpp"/>
        <files mask="fully_connected_common_xtensa.cpp"/>
        <files mask="strided_slice.cpp"/>
        <files mask="add_vision.cpp"/>
        <files mask="softmax.cpp"/>
        <files mask="unidirectional_sequence_lstm.cpp"/>
        <files mask="conv_int8_reference.cpp"/>
        <files mask="depthwise_conv_vision.cpp"/>
        <files mask="quantize.cpp"/>
        <files mask="lstm_eval.cpp"/>
        <files mask="depthwise_conv_hifi.cpp"/>
        <files mask="svdf.cpp"/>
        <files mask="conv_vision.cpp"/>
        <files mask="fully_connected_int8.cpp"/>
        <files mask="softmax_int8_int16.cpp"/>
        <files mask="conv_common_xtensa.cpp"/>
        <files mask="reduce_vision.cpp"/>
        <files mask="reshape.cpp"/>
        <files mask="reshape_vision.cpp"/>
        <files mask="leaky_relu.cpp"/>
        <files mask="transpose_conv.cpp"/>
        <files mask="pad.cpp"/>
        <files mask="lstm_eval_hifi.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_eiq_tensorflow_lite_micro_xtensa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lvgl.MIMXRT798S" name="lvgl" brief="lvgl library" version="9.2.1" full_name="Middleware lvgl" category="Graphics/lvgl graphics library" user_visible="true" type="middleware" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENCE.txt" hidden="true"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="lv_init.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="lv_group.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_obj_class.c"/>
        <files mask="lv_obj_draw.c"/>
        <files mask="lv_obj_event.c"/>
        <files mask="lv_obj_id_builtin.c"/>
        <files mask="lv_obj_pos.c"/>
        <files mask="lv_obj_property.c"/>
        <files mask="lv_obj_scroll.c"/>
        <files mask="lv_obj_style.c"/>
        <files mask="lv_obj_style_gen.c"/>
        <files mask="lv_obj_tree.c"/>
        <files mask="lv_refr.c"/>
      </source>
      <source relative_path="src/display" type="src">
        <files mask="lv_display.c"/>
      </source>
      <source relative_path="src/draw" type="src">
        <files mask="lv_draw.c"/>
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_buf.c"/>
        <files mask="lv_draw_image.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_mask.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_draw_vector.c"/>
        <files mask="lv_image_decoder.c"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="src">
        <files mask="lv_draw_buf_pxp.c"/>
        <files mask="lv_draw_pxp.c"/>
        <files mask="lv_draw_pxp_fill.c"/>
        <files mask="lv_draw_pxp_img.c"/>
        <files mask="lv_draw_pxp_layer.c"/>
        <files mask="lv_pxp_cfg.c"/>
        <files mask="lv_pxp_osa.c"/>
        <files mask="lv_pxp_utils.c"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="src">
        <files mask="lv_draw_buf_vglite.c"/>
        <files mask="lv_draw_vglite.c"/>
        <files mask="lv_draw_vglite_arc.c"/>
        <files mask="lv_draw_vglite_border.c"/>
        <files mask="lv_draw_vglite_fill.c"/>
        <files mask="lv_draw_vglite_img.c"/>
        <files mask="lv_draw_vglite_label.c"/>
        <files mask="lv_draw_vglite_layer.c"/>
        <files mask="lv_draw_vglite_line.c"/>
        <files mask="lv_draw_vglite_triangle.c"/>
        <files mask="lv_vglite_buf.c"/>
        <files mask="lv_vglite_matrix.c"/>
        <files mask="lv_vglite_path.c"/>
        <files mask="lv_vglite_utils.c"/>
      </source>
      <source relative_path="src/draw/sdl" type="src">
        <files mask="lv_draw_sdl.c"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="src">
        <files mask="lv_draw_sw_blend.c"/>
        <files mask="lv_draw_sw_blend_to_al88.c"/>
        <files mask="lv_draw_sw_blend_to_argb8888.c"/>
        <files mask="lv_draw_sw_blend_to_i1.c"/>
        <files mask="lv_draw_sw_blend_to_l8.c"/>
        <files mask="lv_draw_sw_blend_to_rgb565.c"/>
        <files mask="lv_draw_sw_blend_to_rgb888.c"/>
      </source>
      <source relative_path="src/draw/sw" type="src">
        <files mask="lv_draw_sw.c"/>
        <files mask="lv_draw_sw_arc.c"/>
        <files mask="lv_draw_sw_border.c"/>
        <files mask="lv_draw_sw_box_shadow.c"/>
        <files mask="lv_draw_sw_fill.c"/>
        <files mask="lv_draw_sw_gradient.c"/>
        <files mask="lv_draw_sw_img.c"/>
        <files mask="lv_draw_sw_letter.c"/>
        <files mask="lv_draw_sw_line.c"/>
        <files mask="lv_draw_sw_mask.c"/>
        <files mask="lv_draw_sw_mask_rect.c"/>
        <files mask="lv_draw_sw_transform.c"/>
        <files mask="lv_draw_sw_triangle.c"/>
        <files mask="lv_draw_sw_vector.c"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="src">
        <files mask="lv_linux_drm.c"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="src">
        <files mask="lv_linux_fbdev.c"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="src">
        <files mask="lv_ili9341.c"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="src">
        <files mask="lv_lcd_generic_mipi.c"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="src">
        <files mask="lv_st7735.c"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="src">
        <files mask="lv_st7789.c"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="src">
        <files mask="lv_st7796.c"/>
      </source>
      <source relative_path="src/drivers/evdev" type="src">
        <files mask="lv_evdev.c"/>
      </source>
      <source relative_path="src/drivers/libinput" type="src">
        <files mask="lv_libinput.c"/>
        <files mask="lv_xkb.c"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="src">
        <files mask="lv_nuttx_cache.c"/>
        <files mask="lv_nuttx_entry.c"/>
        <files mask="lv_nuttx_fbdev.c"/>
        <files mask="lv_nuttx_image_cache.c"/>
        <files mask="lv_nuttx_lcd.c"/>
        <files mask="lv_nuttx_libuv.c"/>
        <files mask="lv_nuttx_profiler.c"/>
        <files mask="lv_nuttx_touchscreen.c"/>
      </source>
      <source relative_path="src/drivers/sdl" type="src">
        <files mask="lv_sdl_keyboard.c"/>
        <files mask="lv_sdl_mouse.c"/>
        <files mask="lv_sdl_mousewheel.c"/>
        <files mask="lv_sdl_window.c"/>
      </source>
      <source relative_path="src/drivers/windows" type="src">
        <files mask="lv_windows_context.c"/>
        <files mask="lv_windows_display.c"/>
        <files mask="lv_windows_input.c"/>
      </source>
      <source relative_path="src/drivers/x11" type="src">
        <files mask="lv_x11_display.c"/>
        <files mask="lv_x11_input.c"/>
      </source>
      <source relative_path="src/drivers/glfw" type="src">
        <files mask="lv_glfw_window.c"/>
        <files mask="lv_opengles_debug.c"/>
        <files mask="lv_opengles_driver.c"/>
        <files mask="lv_opengles_texture.c"/>
      </source>
      <source relative_path="src/drivers/qnx" type="src">
        <files mask="lv_qnx.c"/>
      </source>
      <source relative_path="src/drivers/wayland" type="src">
        <files mask="lv_wayland.c"/>
        <files mask="lv_wayland_smm.c"/>
      </source>
      <source relative_path="src/font" type="src">
        <files mask="lv_binfont_loader.c"/>
        <files mask="lv_font.c"/>
        <files mask="lv_font_dejavu_16_persian_hebrew.c"/>
        <files mask="lv_font_fmt_txt.c"/>
        <files mask="lv_font_montserrat_10.c"/>
        <files mask="lv_font_montserrat_12.c"/>
        <files mask="lv_font_montserrat_14.c"/>
        <files mask="lv_font_montserrat_16.c"/>
        <files mask="lv_font_montserrat_18.c"/>
        <files mask="lv_font_montserrat_20.c"/>
        <files mask="lv_font_montserrat_22.c"/>
        <files mask="lv_font_montserrat_24.c"/>
        <files mask="lv_font_montserrat_26.c"/>
        <files mask="lv_font_montserrat_28.c"/>
        <files mask="lv_font_montserrat_28_compressed.c"/>
        <files mask="lv_font_montserrat_30.c"/>
        <files mask="lv_font_montserrat_32.c"/>
        <files mask="lv_font_montserrat_34.c"/>
        <files mask="lv_font_montserrat_36.c"/>
        <files mask="lv_font_montserrat_38.c"/>
        <files mask="lv_font_montserrat_40.c"/>
        <files mask="lv_font_montserrat_42.c"/>
        <files mask="lv_font_montserrat_44.c"/>
        <files mask="lv_font_montserrat_46.c"/>
        <files mask="lv_font_montserrat_48.c"/>
        <files mask="lv_font_montserrat_8.c"/>
        <files mask="lv_font_simsun_14_cjk.c"/>
        <files mask="lv_font_simsun_16_cjk.c"/>
        <files mask="lv_font_unscii_16.c"/>
        <files mask="lv_font_unscii_8.c"/>
      </source>
      <source relative_path="src/indev" type="src">
        <files mask="lv_indev.c"/>
        <files mask="lv_indev_scroll.c"/>
      </source>
      <source relative_path="src/layouts/flex" type="src">
        <files mask="lv_flex.c"/>
      </source>
      <source relative_path="src/layouts/grid" type="src">
        <files mask="lv_grid.c"/>
      </source>
      <source relative_path="src/layouts" type="src">
        <files mask="lv_layout.c"/>
      </source>
      <source relative_path="src/libs/barcode" type="src">
        <files mask="code128.c"/>
        <files mask="lv_barcode.c"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="src">
        <files mask="lv_bin_decoder.c"/>
      </source>
      <source relative_path="src/libs/bmp" type="src">
        <files mask="lv_bmp.c"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="src">
        <files mask="lv_ffmpeg.c"/>
      </source>
      <source relative_path="src/libs/freetype" type="src">
        <files mask="lv_freetype.c"/>
        <files mask="lv_freetype_glyph.c"/>
        <files mask="lv_freetype_image.c"/>
        <files mask="lv_freetype_outline.c"/>
        <files mask="lv_ftsystem.c"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="src">
        <files mask="lv_fs_cbfs.c"/>
        <files mask="lv_fs_fatfs.c"/>
        <files mask="lv_fs_littlefs.c"/>
        <files mask="lv_fs_memfs.c"/>
        <files mask="lv_fs_posix.c"/>
        <files mask="lv_fs_rawfs.c"/>
        <files mask="lv_fs_stdio.c"/>
        <files mask="lv_fs_win32.c"/>
      </source>
      <source relative_path="src/libs/gif" type="src">
        <files mask="gifdec.c"/>
        <files mask="lv_gif.c"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="src">
        <files mask="lv_libjpeg_turbo.c"/>
      </source>
      <source relative_path="src/libs/libpng" type="src">
        <files mask="lv_libpng.c"/>
      </source>
      <source relative_path="src/libs/lodepng" type="src">
        <files mask="lodepng.c"/>
        <files mask="lv_lodepng.c"/>
      </source>
      <source relative_path="src/libs/lz4" type="src">
        <files mask="lz4.c"/>
      </source>
      <source relative_path="src/libs/qrcode" type="src">
        <files mask="lv_qrcode.c"/>
        <files mask="qrcodegen.c"/>
      </source>
      <source relative_path="src/libs/rle" type="src">
        <files mask="lv_rle.c"/>
      </source>
      <source relative_path="src/libs/rlottie" type="src">
        <files mask="lv_rlottie.c"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="src">
        <files mask="lv_tiny_ttf.c"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="src">
        <files mask="lv_tjpgd.c"/>
        <files mask="tjpgd.c"/>
      </source>
      <source relative_path="src/misc/cache" type="src">
        <files mask="lv_cache.c"/>
        <files mask="lv_cache_entry.c"/>
        <files mask="lv_cache_lru_rb.c"/>
        <files mask="lv_image_cache.c"/>
        <files mask="lv_image_header_cache.c"/>
      </source>
      <source relative_path="src/misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_anim_timeline.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_array.c"/>
        <files mask="lv_async.c"/>
        <files mask="lv_bidi.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_color_op.c"/>
        <files mask="lv_event.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_lru.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_matrix.c"/>
        <files mask="lv_palette.c"/>
        <files mask="lv_profiler_builtin.c"/>
        <files mask="lv_rb.c"/>
        <files mask="lv_style.c"/>
        <files mask="lv_style_gen.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_text.c"/>
        <files mask="lv_text_ap.c"/>
        <files mask="lv_timer.c"/>
        <files mask="lv_utils.c"/>
      </source>
      <source relative_path="src/osal" type="src">
        <files mask="lv_cmsis_rtos2.c"/>
        <files mask="lv_freertos.c"/>
        <files mask="lv_mqx.c"/>
        <files mask="lv_os.c"/>
        <files mask="lv_os_none.c"/>
        <files mask="lv_pthread.c"/>
        <files mask="lv_rtthread.c"/>
        <files mask="lv_windows.c"/>
      </source>
      <source relative_path="src/others/file_explorer" type="src">
        <files mask="lv_file_explorer.c"/>
      </source>
      <source relative_path="src/others/fragment" type="src">
        <files mask="lv_fragment.c"/>
        <files mask="lv_fragment_manager.c"/>
      </source>
      <source relative_path="src/others/gridnav" type="src">
        <files mask="lv_gridnav.c"/>
      </source>
      <source relative_path="src/others/ime" type="src">
        <files mask="lv_ime_pinyin.c"/>
      </source>
      <source relative_path="src/others/imgfont" type="src">
        <files mask="lv_imgfont.c"/>
      </source>
      <source relative_path="src/others/monkey" type="src">
        <files mask="lv_monkey.c"/>
      </source>
      <source relative_path="src/others/observer" type="src">
        <files mask="lv_observer.c"/>
      </source>
      <source relative_path="src/others/snapshot" type="src">
        <files mask="lv_snapshot.c"/>
      </source>
      <source relative_path="src/others/sysmon" type="src">
        <files mask="lv_sysmon.c"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="src">
        <files mask="vg_lite_matrix.c"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="src">
        <files mask="lv_mem_core_builtin.c"/>
        <files mask="lv_sprintf_builtin.c"/>
        <files mask="lv_string_builtin.c"/>
        <files mask="lv_tlsf.c"/>
      </source>
      <source relative_path="src/stdlib/clib" type="src">
        <files mask="lv_mem_core_clib.c"/>
        <files mask="lv_sprintf_clib.c"/>
        <files mask="lv_string_clib.c"/>
      </source>
      <source relative_path="src/stdlib" type="src">
        <files mask="lv_mem.c"/>
      </source>
      <source relative_path="src/stdlib/micropython" type="src">
        <files mask="lv_mem_core_micropython.c"/>
      </source>
      <source relative_path="src/stdlib/rtthread" type="src">
        <files mask="lv_mem_core_rtthread.c"/>
        <files mask="lv_sprintf_rtthread.c"/>
        <files mask="lv_string_rtthread.c"/>
      </source>
      <source relative_path="src/themes/default" type="src">
        <files mask="lv_theme_default.c"/>
      </source>
      <source relative_path="src/themes" type="src">
        <files mask="lv_theme.c"/>
      </source>
      <source relative_path="src/themes/mono" type="src">
        <files mask="lv_theme_mono.c"/>
      </source>
      <source relative_path="src/themes/simple" type="src">
        <files mask="lv_theme_simple.c"/>
      </source>
      <source relative_path="src/tick" type="src">
        <files mask="lv_tick.c"/>
      </source>
      <source relative_path="src/widgets/animimage" type="src">
        <files mask="lv_animimage.c"/>
      </source>
      <source relative_path="src/widgets/arc" type="src">
        <files mask="lv_arc.c"/>
      </source>
      <source relative_path="src/widgets/bar" type="src">
        <files mask="lv_bar.c"/>
      </source>
      <source relative_path="src/widgets/button" type="src">
        <files mask="lv_button.c"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="src">
        <files mask="lv_buttonmatrix.c"/>
      </source>
      <source relative_path="src/widgets/calendar" type="src">
        <files mask="lv_calendar.c"/>
        <files mask="lv_calendar_chinese.c"/>
        <files mask="lv_calendar_header_arrow.c"/>
        <files mask="lv_calendar_header_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/carousel" type="src">
        <files mask="lv_carousel.c"/>
      </source>
      <source relative_path="src/widgets/canvas" type="src">
        <files mask="lv_canvas.c"/>
      </source>
      <source relative_path="src/widgets/chart" type="src">
        <files mask="lv_chart.c"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="src">
        <files mask="lv_checkbox.c"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="src">
        <files mask="lv_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/image" type="src">
        <files mask="lv_image.c"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="src">
        <files mask="lv_imagebutton.c"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="src">
        <files mask="lv_keyboard.c"/>
      </source>
      <source relative_path="src/widgets/label" type="src">
        <files mask="lv_label.c"/>
      </source>
      <source relative_path="src/widgets/led" type="src">
        <files mask="lv_led.c"/>
      </source>
      <source relative_path="src/widgets/line" type="src">
        <files mask="lv_line.c"/>
      </source>
      <source relative_path="src/widgets/list" type="src">
        <files mask="lv_list.c"/>
      </source>
      <source relative_path="src/widgets/lottie" type="src">
        <files mask="lv_lottie.c"/>
      </source>
      <source relative_path="src/widgets/menu" type="src">
        <files mask="lv_menu.c"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="src">
        <files mask="lv_msgbox.c"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="src">
        <files mask="lv_objx_templ.c"/>
      </source>
      <source relative_path="src/widgets/roller" type="src">
        <files mask="lv_roller.c"/>
      </source>
      <source relative_path="src/widgets/scale" type="src">
        <files mask="lv_scale.c"/>
      </source>
      <source relative_path="src/widgets/slider" type="src">
        <files mask="lv_slider.c"/>
      </source>
      <source relative_path="src/widgets/span" type="src">
        <files mask="lv_span.c"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="src">
        <files mask="lv_spinbox.c"/>
      </source>
      <source relative_path="src/widgets/spinner" type="src">
        <files mask="lv_spinner.c"/>
      </source>
      <source relative_path="src/widgets/switch" type="src">
        <files mask="lv_switch.c"/>
      </source>
      <source relative_path="src/widgets/table" type="src">
        <files mask="lv_table.c"/>
      </source>
      <source relative_path="src/widgets/tabview" type="src">
        <files mask="lv_tabview.c"/>
      </source>
      <source relative_path="src/widgets/textarea" type="src">
        <files mask="lv_textarea.c"/>
      </source>
      <source relative_path="src/widgets/tileview" type="src">
        <files mask="lv_tileview.c"/>
      </source>
      <source relative_path="src/widgets/win" type="src">
        <files mask="lv_win.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="lv_api_map_v8.h"/>
        <files mask="lv_api_map_v9_0.h"/>
        <files mask="lv_api_map_v9_1.h"/>
        <files mask="lv_conf_internal.h"/>
        <files mask="lv_conf_kconfig.h"/>
        <files mask="lv_init.h"/>
        <files mask="lvgl.h"/>
        <files mask="lvgl_private.h"/>
      </source>
      <source relative_path="src/core" type="c_include">
        <files mask="lv_global.h"/>
        <files mask="lv_group.h"/>
        <files mask="lv_group_private.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_obj_class.h"/>
        <files mask="lv_obj_class_private.h"/>
        <files mask="lv_obj_draw.h"/>
        <files mask="lv_obj_draw_private.h"/>
        <files mask="lv_obj_event.h"/>
        <files mask="lv_obj_event_private.h"/>
        <files mask="lv_obj_pos.h"/>
        <files mask="lv_obj_private.h"/>
        <files mask="lv_obj_property.h"/>
        <files mask="lv_obj_scroll.h"/>
        <files mask="lv_obj_scroll_private.h"/>
        <files mask="lv_obj_style.h"/>
        <files mask="lv_obj_style_gen.h"/>
        <files mask="lv_obj_style_private.h"/>
        <files mask="lv_obj_tree.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_refr_private.h"/>
      </source>
      <source relative_path="src/display" type="c_include">
        <files mask="lv_display.h"/>
        <files mask="lv_display_private.h"/>
      </source>
      <source relative_path="src/draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_buf.h"/>
        <files mask="lv_draw_buf_private.h"/>
        <files mask="lv_draw_image.h"/>
        <files mask="lv_draw_image_private.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_label_private.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_mask.h"/>
        <files mask="lv_draw_mask_private.h"/>
        <files mask="lv_draw_private.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_rect_private.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_draw_triangle_private.h"/>
        <files mask="lv_draw_vector.h"/>
        <files mask="lv_draw_vector_private.h"/>
        <files mask="lv_image_decoder.h"/>
        <files mask="lv_image_decoder_private.h"/>
        <files mask="lv_image_dsc.h"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="c_include">
        <files mask="lv_draw_pxp.h"/>
        <files mask="lv_pxp_cfg.h"/>
        <files mask="lv_pxp_osa.h"/>
        <files mask="lv_pxp_utils.h"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="c_include">
        <files mask="lv_draw_vglite.h"/>
        <files mask="lv_vglite_buf.h"/>
        <files mask="lv_vglite_matrix.h"/>
        <files mask="lv_vglite_path.h"/>
        <files mask="lv_vglite_utils.h"/>
      </source>
      <source relative_path="src/draw/sdl" type="c_include">
        <files mask="lv_draw_sdl.h"/>
      </source>
      <source relative_path="src/draw/sw/arm2d" type="c_include">
        <files mask="lv_draw_sw_arm2d.h"/>
        <files mask="lv_draw_sw_helium.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/arm2d" type="c_include">
        <files mask="lv_blend_arm2d.h"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="c_include">
        <files mask="lv_draw_sw_blend.h"/>
        <files mask="lv_draw_sw_blend_private.h"/>
        <files mask="lv_draw_sw_blend_to_al88.h"/>
        <files mask="lv_draw_sw_blend_to_argb8888.h"/>
        <files mask="lv_draw_sw_blend_to_i1.h"/>
        <files mask="lv_draw_sw_blend_to_l8.h"/>
        <files mask="lv_draw_sw_blend_to_rgb565.h"/>
        <files mask="lv_draw_sw_blend_to_rgb888.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/neon" type="c_include">
        <files mask="lv_blend_neon.h"/>
      </source>
      <source relative_path="src/draw/sw" type="c_include">
        <files mask="lv_draw_sw.h"/>
        <files mask="lv_draw_sw_gradient.h"/>
        <files mask="lv_draw_sw_gradient_private.h"/>
        <files mask="lv_draw_sw_mask.h"/>
        <files mask="lv_draw_sw_mask_private.h"/>
        <files mask="lv_draw_sw_private.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="lv_drivers.h"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="c_include">
        <files mask="lv_linux_drm.h"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="c_include">
        <files mask="lv_linux_fbdev.h"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="c_include">
        <files mask="lv_ili9341.h"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="c_include">
        <files mask="lv_lcd_generic_mipi.h"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="c_include">
        <files mask="lv_st7735.h"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="c_include">
        <files mask="lv_st7789.h"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="c_include">
        <files mask="lv_st7796.h"/>
      </source>
      <source relative_path="src/drivers/display/tft_espi" type="c_include">
        <files mask="lv_tft_espi.h"/>
      </source>
      <source relative_path="src/drivers/evdev" type="c_include">
        <files mask="lv_evdev.h"/>
      </source>
      <source relative_path="src/drivers/libinput" type="c_include">
        <files mask="lv_libinput.h"/>
        <files mask="lv_libinput_private.h"/>
        <files mask="lv_xkb.h"/>
        <files mask="lv_xkb_private.h"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="c_include">
        <files mask="lv_nuttx_cache.h"/>
        <files mask="lv_nuttx_entry.h"/>
        <files mask="lv_nuttx_fbdev.h"/>
        <files mask="lv_nuttx_image_cache.h"/>
        <files mask="lv_nuttx_lcd.h"/>
        <files mask="lv_nuttx_libuv.h"/>
        <files mask="lv_nuttx_profiler.h"/>
        <files mask="lv_nuttx_touchscreen.h"/>
      </source>
      <source relative_path="src/drivers/sdl" type="c_include">
        <files mask="lv_sdl_keyboard.h"/>
        <files mask="lv_sdl_mouse.h"/>
        <files mask="lv_sdl_mousewheel.h"/>
        <files mask="lv_sdl_private.h"/>
        <files mask="lv_sdl_window.h"/>
      </source>
      <source relative_path="src/drivers/windows" type="c_include">
        <files mask="lv_windows_context.h"/>
        <files mask="lv_windows_display.h"/>
        <files mask="lv_windows_input.h"/>
        <files mask="lv_windows_input_private.h"/>
      </source>
      <source relative_path="src/drivers/x11" type="c_include">
        <files mask="lv_x11.h"/>
      </source>
      <source relative_path="src/drivers/glfw" type="c_include">
        <files mask="lv_glfw_window.h"/>
        <files mask="lv_glfw_window_private.h"/>
        <files mask="lv_opengles_debug.h"/>
        <files mask="lv_opengles_driver.h"/>
        <files mask="lv_opengles_texture.h"/>
      </source>
      <source relative_path="src/drivers/qnx" type="c_include">
        <files mask="lv_qnx.h"/>
      </source>
      <source relative_path="src/drivers/wayland" type="c_include">
        <files mask="lv_wayland.h"/>
        <files mask="lv_wayland_smm.h"/>
      </source>
      <source relative_path="src/font" type="c_include">
        <files mask="lv_binfont_loader.h"/>
        <files mask="lv_font.h"/>
        <files mask="lv_font_fmt_txt.h"/>
        <files mask="lv_font_fmt_txt_private.h"/>
        <files mask="lv_symbol_def.h"/>
      </source>
      <source relative_path="src/indev" type="c_include">
        <files mask="lv_indev.h"/>
        <files mask="lv_indev_private.h"/>
        <files mask="lv_indev_scroll.h"/>
      </source>
      <source relative_path="src/layouts/flex" type="c_include">
        <files mask="lv_flex.h"/>
      </source>
      <source relative_path="src/layouts/grid" type="c_include">
        <files mask="lv_grid.h"/>
      </source>
      <source relative_path="src/layouts" type="c_include">
        <files mask="lv_layout.h"/>
        <files mask="lv_layout_private.h"/>
      </source>
      <source relative_path="src/libs/barcode" type="c_include">
        <files mask="code128.h"/>
        <files mask="lv_barcode.h"/>
        <files mask="lv_barcode_private.h"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="c_include">
        <files mask="lv_bin_decoder.h"/>
      </source>
      <source relative_path="src/libs/bmp" type="c_include">
        <files mask="lv_bmp.h"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="c_include">
        <files mask="lv_ffmpeg.h"/>
        <files mask="lv_ffmpeg_private.h"/>
      </source>
      <source relative_path="src/libs/freetype" type="c_include">
        <files mask="ftmodule.h"/>
        <files mask="ftoption.h"/>
        <files mask="lv_freetype.h"/>
        <files mask="lv_freetype_private.h"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="c_include">
        <files mask="lv_fsdrv.h"/>
      </source>
      <source relative_path="src/libs/gif" type="c_include">
        <files mask="gifdec.h"/>
        <files mask="gifdec_mve.h"/>
        <files mask="lv_gif.h"/>
        <files mask="lv_gif_private.h"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="c_include">
        <files mask="lv_libjpeg_turbo.h"/>
      </source>
      <source relative_path="src/libs/libpng" type="c_include">
        <files mask="lv_libpng.h"/>
      </source>
      <source relative_path="src/libs/lodepng" type="c_include">
        <files mask="lodepng.h"/>
        <files mask="lv_lodepng.h"/>
      </source>
      <source relative_path="src/libs/lz4" type="c_include">
        <files mask="lz4.h"/>
      </source>
      <source relative_path="src/libs/qrcode" type="c_include">
        <files mask="lv_qrcode.h"/>
        <files mask="lv_qrcode_private.h"/>
        <files mask="qrcodegen.h"/>
      </source>
      <source relative_path="src/libs/rle" type="c_include">
        <files mask="lv_rle.h"/>
      </source>
      <source relative_path="src/libs/rlottie" type="c_include">
        <files mask="lv_rlottie.h"/>
        <files mask="lv_rlottie_private.h"/>
      </source>
      <source relative_path="src/libs/thorvg" type="c_include">
        <files mask="config.h"/>
        <files mask="thorvg.h"/>
        <files mask="thorvg_capi.h"/>
        <files mask="thorvg_lottie.h"/>
        <files mask="tvgAnimation.h"/>
        <files mask="tvgArray.h"/>
        <files mask="tvgBinaryDesc.h"/>
        <files mask="tvgCanvas.h"/>
        <files mask="tvgCommon.h"/>
        <files mask="tvgCompressor.h"/>
        <files mask="tvgFill.h"/>
        <files mask="tvgFrameModule.h"/>
        <files mask="tvgInlist.h"/>
        <files mask="tvgIteratorAccessor.h"/>
        <files mask="tvgLines.h"/>
        <files mask="tvgLoadModule.h"/>
        <files mask="tvgLoader.h"/>
        <files mask="tvgLock.h"/>
        <files mask="tvgLottieBuilder.h"/>
        <files mask="tvgLottieExpressions.h"/>
        <files mask="tvgLottieInterpolator.h"/>
        <files mask="tvgLottieLoader.h"/>
        <files mask="tvgLottieModel.h"/>
        <files mask="tvgLottieParser.h"/>
        <files mask="tvgLottieParserHandler.h"/>
        <files mask="tvgLottieProperty.h"/>
        <files mask="tvgMath.h"/>
        <files mask="tvgPaint.h"/>
        <files mask="tvgPicture.h"/>
        <files mask="tvgRawLoader.h"/>
        <files mask="tvgRender.h"/>
        <files mask="tvgSaveModule.h"/>
        <files mask="tvgScene.h"/>
        <files mask="tvgShape.h"/>
        <files mask="tvgStr.h"/>
        <files mask="tvgSvgCssStyle.h"/>
        <files mask="tvgSvgLoader.h"/>
        <files mask="tvgSvgLoaderCommon.h"/>
        <files mask="tvgSvgPath.h"/>
        <files mask="tvgSvgSceneBuilder.h"/>
        <files mask="tvgSvgUtil.h"/>
        <files mask="tvgSwCommon.h"/>
        <files mask="tvgSwRasterAvx.h"/>
        <files mask="tvgSwRasterC.h"/>
        <files mask="tvgSwRasterNeon.h"/>
        <files mask="tvgSwRasterTexmap.h"/>
        <files mask="tvgSwRenderer.h"/>
        <files mask="tvgTaskScheduler.h"/>
        <files mask="tvgText.h"/>
        <files mask="tvgXmlParser.h"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="c_include">
        <files mask="lv_tiny_ttf.h"/>
        <files mask="stb_rect_pack.h"/>
        <files mask="stb_truetype_htcw.h"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="c_include">
        <files mask="lv_tjpgd.h"/>
        <files mask="tjpgd.h"/>
        <files mask="tjpgdcnf.h"/>
      </source>
      <source relative_path="src/misc/cache" type="c_include">
        <files mask="lv_cache.h"/>
        <files mask="lv_cache_entry.h"/>
        <files mask="lv_cache_entry_private.h"/>
        <files mask="lv_cache_lru_rb.h"/>
        <files mask="lv_cache_private.h"/>
        <files mask="lv_image_cache.h"/>
        <files mask="lv_image_header_cache.h"/>
      </source>
      <source relative_path="src/misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_anim_private.h"/>
        <files mask="lv_anim_timeline.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_area_private.h"/>
        <files mask="lv_array.h"/>
        <files mask="lv_assert.h"/>
        <files mask="lv_async.h"/>
        <files mask="lv_bidi.h"/>
        <files mask="lv_bidi_private.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_color_op.h"/>
        <files mask="lv_color_op_private.h"/>
        <files mask="lv_event.h"/>
        <files mask="lv_event_private.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_fs_private.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_lru.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_matrix.h"/>
        <files mask="lv_palette.h"/>
        <files mask="lv_profiler.h"/>
        <files mask="lv_profiler_builtin.h"/>
        <files mask="lv_profiler_builtin_private.h"/>
        <files mask="lv_rb.h"/>
        <files mask="lv_rb_private.h"/>
        <files mask="lv_style.h"/>
        <files mask="lv_style_gen.h"/>
        <files mask="lv_style_private.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_text.h"/>
        <files mask="lv_text_ap.h"/>
        <files mask="lv_text_private.h"/>
        <files mask="lv_timer.h"/>
        <files mask="lv_timer_private.h"/>
        <files mask="lv_types.h"/>
        <files mask="lv_utils.h"/>
      </source>
      <source relative_path="src/osal" type="c_include">
        <files mask="lv_cmsis_rtos2.h"/>
        <files mask="lv_freertos.h"/>
        <files mask="lv_mqx.h"/>
        <files mask="lv_os.h"/>
        <files mask="lv_os_none.h"/>
        <files mask="lv_os_private.h"/>
        <files mask="lv_pthread.h"/>
        <files mask="lv_rtthread.h"/>
        <files mask="lv_windows.h"/>
      </source>
      <source relative_path="src/others/file_explorer" type="c_include">
        <files mask="lv_file_explorer.h"/>
        <files mask="lv_file_explorer_private.h"/>
      </source>
      <source relative_path="src/others/fragment" type="c_include">
        <files mask="lv_fragment.h"/>
        <files mask="lv_fragment_private.h"/>
      </source>
      <source relative_path="src/others/gridnav" type="c_include">
        <files mask="lv_gridnav.h"/>
      </source>
      <source relative_path="src/others/ime" type="c_include">
        <files mask="lv_ime_pinyin.h"/>
        <files mask="lv_ime_pinyin_private.h"/>
      </source>
      <source relative_path="src/others/imgfont" type="c_include">
        <files mask="lv_imgfont.h"/>
      </source>
      <source relative_path="src/others/monkey" type="c_include">
        <files mask="lv_monkey.h"/>
        <files mask="lv_monkey_private.h"/>
      </source>
      <source relative_path="src/others/observer" type="c_include">
        <files mask="lv_observer.h"/>
        <files mask="lv_observer_private.h"/>
      </source>
      <source relative_path="src/others/snapshot" type="c_include">
        <files mask="lv_snapshot.h"/>
      </source>
      <source relative_path="src/others/sysmon" type="c_include">
        <files mask="lv_sysmon.h"/>
        <files mask="lv_sysmon_private.h"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="c_include">
        <files mask="lv_tlsf.h"/>
        <files mask="lv_tlsf_private.h"/>
      </source>
      <source relative_path="src/stdlib" type="c_include">
        <files mask="lv_mem.h"/>
        <files mask="lv_mem_private.h"/>
        <files mask="lv_sprintf.h"/>
        <files mask="lv_string.h"/>
      </source>
      <source relative_path="src/themes/default" type="c_include">
        <files mask="lv_theme_default.h"/>
      </source>
      <source relative_path="src/themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_private.h"/>
      </source>
      <source relative_path="src/themes/mono" type="c_include">
        <files mask="lv_theme_mono.h"/>
      </source>
      <source relative_path="src/themes/simple" type="c_include">
        <files mask="lv_theme_simple.h"/>
      </source>
      <source relative_path="src/tick" type="c_include">
        <files mask="lv_tick.h"/>
        <files mask="lv_tick_private.h"/>
      </source>
      <source relative_path="src/widgets/animimage" type="c_include">
        <files mask="lv_animimage.h"/>
        <files mask="lv_animimage_private.h"/>
      </source>
      <source relative_path="src/widgets/arc" type="c_include">
        <files mask="lv_arc.h"/>
        <files mask="lv_arc_private.h"/>
      </source>
      <source relative_path="src/widgets/bar" type="c_include">
        <files mask="lv_bar.h"/>
        <files mask="lv_bar_private.h"/>
      </source>
      <source relative_path="src/widgets/button" type="c_include">
        <files mask="lv_button.h"/>
        <files mask="lv_button_private.h"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="c_include">
        <files mask="lv_buttonmatrix.h"/>
        <files mask="lv_buttonmatrix_private.h"/>
      </source>
      <source relative_path="src/widgets/calendar" type="c_include">
        <files mask="lv_calendar.h"/>
        <files mask="lv_calendar_chinese.h"/>
        <files mask="lv_calendar_chinese_private.h"/>
        <files mask="lv_calendar_header_arrow.h"/>
        <files mask="lv_calendar_header_dropdown.h"/>
        <files mask="lv_calendar_private.h"/>
      </source>
      <source relative_path="src/widgets/canvas" type="c_include">
        <files mask="lv_canvas.h"/>
        <files mask="lv_canvas_private.h"/>
      </source>
      <source relative_path="src/widgets/carousel" type="c_include">
        <files mask="lv_carousel.h"/>
        <files mask="lv_carousel_private.h"/>
      </source>
      <source relative_path="src/widgets/chart" type="c_include">
        <files mask="lv_chart.h"/>
        <files mask="lv_chart_private.h"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="c_include">
        <files mask="lv_checkbox.h"/>
        <files mask="lv_checkbox_private.h"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="c_include">
        <files mask="lv_dropdown.h"/>
        <files mask="lv_dropdown_private.h"/>
      </source>
      <source relative_path="src/widgets/image" type="c_include">
        <files mask="lv_image.h"/>
        <files mask="lv_image_private.h"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="c_include">
        <files mask="lv_imagebutton.h"/>
        <files mask="lv_imagebutton_private.h"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="c_include">
        <files mask="lv_keyboard.h"/>
        <files mask="lv_keyboard_private.h"/>
      </source>
      <source relative_path="src/widgets/label" type="c_include">
        <files mask="lv_label.h"/>
        <files mask="lv_label_private.h"/>
      </source>
      <source relative_path="src/widgets/led" type="c_include">
        <files mask="lv_led.h"/>
        <files mask="lv_led_private.h"/>
      </source>
      <source relative_path="src/widgets/line" type="c_include">
        <files mask="lv_line.h"/>
        <files mask="lv_line_private.h"/>
      </source>
      <source relative_path="src/widgets/list" type="c_include">
        <files mask="lv_list.h"/>
      </source>
      <source relative_path="src/widgets/lottie" type="c_include">
        <files mask="lv_lottie.h"/>
        <files mask="lv_lottie_private.h"/>
      </source>
      <source relative_path="src/widgets/menu" type="c_include">
        <files mask="lv_menu.h"/>
        <files mask="lv_menu_private.h"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="c_include">
        <files mask="lv_msgbox.h"/>
        <files mask="lv_msgbox_private.h"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="c_include">
        <files mask="lv_objx_templ.h"/>
      </source>
      <source relative_path="src/widgets/roller" type="c_include">
        <files mask="lv_roller.h"/>
        <files mask="lv_roller_private.h"/>
      </source>
      <source relative_path="src/widgets/scale" type="c_include">
        <files mask="lv_scale.h"/>
        <files mask="lv_scale_private.h"/>
      </source>
      <source relative_path="src/widgets/slider" type="c_include">
        <files mask="lv_slider.h"/>
        <files mask="lv_slider_private.h"/>
      </source>
      <source relative_path="src/widgets/span" type="c_include">
        <files mask="lv_span.h"/>
        <files mask="lv_span_private.h"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="c_include">
        <files mask="lv_spinbox.h"/>
        <files mask="lv_spinbox_private.h"/>
      </source>
      <source relative_path="src/widgets/spinner" type="c_include">
        <files mask="lv_spinner.h"/>
      </source>
      <source relative_path="src/widgets/switch" type="c_include">
        <files mask="lv_switch.h"/>
        <files mask="lv_switch_private.h"/>
      </source>
      <source relative_path="src/widgets/table" type="c_include">
        <files mask="lv_table.h"/>
        <files mask="lv_table_private.h"/>
      </source>
      <source relative_path="src/widgets/tabview" type="c_include">
        <files mask="lv_tabview.h"/>
        <files mask="lv_tabview_private.h"/>
      </source>
      <source relative_path="src/widgets/textarea" type="c_include">
        <files mask="lv_textarea.h"/>
        <files mask="lv_textarea_private.h"/>
      </source>
      <source relative_path="src/widgets/tileview" type="c_include">
        <files mask="lv_tileview.h"/>
        <files mask="lv_tileview_private.h"/>
      </source>
      <source relative_path="src/widgets/win" type="c_include">
        <files mask="lv_win.h"/>
        <files mask="lv_win_private.h"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_conf_template.h"/>
        <files mask="lv_version.h"/>
        <files mask="lvgl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.benchmark.MIMXRT798S" name="LVGL benchamrk demo" brief="LVGL benchmark demo" version="9.2.1" full_name="LVGL benchark demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/benchmark" project_base_path="lvgl/demos/benchmark">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_benchmark.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_benchmark.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_benchmark_avatar.c"/>
        <files mask="img_benchmark_cogwheel_alpha256.c"/>
        <files mask="img_benchmark_cogwheel_argb.c"/>
        <files mask="img_benchmark_cogwheel_indexed16.c"/>
        <files mask="img_benchmark_cogwheel_rgb.c"/>
        <files mask="lv_font_benchmark_montserrat_12_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_16_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_28_compr_az.c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_benchmark.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.common.MIMXRT798S" name="LVGL demo common" brief="LVGL demo common" version="9.2.1" full_name="LVGL demo common" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos" project_base_path="lvgl/demos">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demos.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.transform.MIMXRT798S" name="LVGL demo transform" brief="LVGL demo transform" version="9.2.1" full_name="LVGL demo transform" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/transform" project_base_path="lvgl/demos/transform">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_transform.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_transform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_transform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.multilang.MIMXRT798S" name="LVGL demo multilang" brief="LVGL demo multilang" version="9.2.1" full_name="LVGL demo multilang" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/multilang" project_base_path="lvgl/demos/multilang">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_multilang.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_multilang.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_multilang.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.flex_layout.MIMXRT798S" name="LVGL demo flex_layout" brief="LVGL demo flex_layout" version="9.2.1" full_name="LVGL demo flex_layout" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/flex_layout" project_base_path="lvgl/demos/flex_layout">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_flex_layout_ctrl_pad.c"/>
        <files mask="lv_demo_flex_layout_flex_loader.c"/>
        <files mask="lv_demo_flex_layout_main.c"/>
        <files mask="lv_demo_flex_layout_view.c"/>
        <files mask="lv_demo_flex_layout_view_child_node.c"/>
        <files mask="lv_demo_flex_layout_view_ctrl_pad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_flex_layout.h"/>
        <files mask="lv_demo_flex_layout_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_flex_layout.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.scroll.MIMXRT798S" name="LVGL demo scroll" brief="LVGL demo scroll" version="9.2.1" full_name="LVGL demo scroll" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/scroll" project_base_path="lvgl/demos/scroll">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_scroll.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_scroll.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_scroll.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.music.MIMXRT798S" name="LVGL demo music" brief="LVGL demo music" version="9.2.1" full_name="LVGL demo music" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/music" project_base_path="lvgl/demos/music">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_music.c"/>
        <files mask="lv_demo_music_list.c"/>
        <files mask="lv_demo_music_main.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_music.h"/>
        <files mask="lv_demo_music_list.h"/>
        <files mask="lv_demo_music_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_music.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.keypad_encoder.MIMXRT798S" name="LVGL demo keypad_encoder" brief="LVGL demo keypad_encoder" version="9.2.1" full_name="LVGL demo keypad_encoder" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/keypad_encoder" project_base_path="lvgl/demos/keypad_encoder">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_keypad_encoder.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_keypad_encoder.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_keypad_encoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.stress.MIMXRT798S" name="LVGL stress demo" brief="LVGL stress demo" version="9.2.1" full_name="LVGL stress demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/stress" project_base_path="lvgl/demos/stress">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_stress.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_stress.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_stress.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.widgets.MIMXRT798S" name="LVGL widgets demo" brief="LVGL widgets demo" version="9.2.1" full_name="LVGL  demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/widgets" project_base_path="lvgl/demos/widgets">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT798S"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_widgets.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_widgets.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_clothes.c"/>
        <files mask="img_demo_widgets_avatar.c"/>
        <files mask="img_demo_widgets_needle.c"/>
        <files mask="img_lvgl_logo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_widgets.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.llhttp.MIMXRT798S" name="llhttp" brief="HTTP parser in LLVM IR" version="6.0.5" full_name="llhttp" category="AWS IoT/llhttp" user_visible="true" type="middleware" package_base_path="middleware/llhttp" project_base_path="llhttp">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="llhttp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="api.c"/>
        <files mask="http.c"/>
        <files mask="llhttp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_llhttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.MIMXRT798S" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.7" full_name="FreeMASTER communication driver common code" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.fmstr.platform_56f800e.MIMXRT798S"/>
            <component_dependency value="middleware.fmstr.platform_gen32le.MIMXRT798S"/>
            <component_dependency value="middleware.fmstr.platform_pa32.MIMXRT798S"/>
            <component_dependency value="middleware.fmstr.platform_s12z.MIMXRT798S"/>
            <component_dependency value="middleware.fmstr.platform_s32.MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MIMXRT798S" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for 32bit platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="src">
        <files mask="freemaster_net_segger_rtt.c"/>
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="c_include">
        <files mask="freemaster_net_segger_rtt.h"/>
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <source relative_path="src/template/gen32le" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_gen32le.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.MIMXRT798S" name="FreeMASTER DSC driver" brief="FreeMASTER driver code for DSC platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for DSC platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan_dsc.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan_dsc.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/template/56f800e" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_56f800e.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/56f800e" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.fmstr.all_files.MIMXRT798S" name="FreeMASTER driver all files" version="3.0.7" package_base_path="middleware/freemaster" project_base_path="freemaster">
  <source relative_path="src/common" type="c_include">
    <files mask="freemaster.h"/>
    <files mask="freemaster_can.h"/>
    <files mask="freemaster_defcfg.h"/>
    <files mask="freemaster_net.h"/>
    <files mask="freemaster_private.h"/>
    <files mask="freemaster_protocol.h"/>
    <files mask="freemaster_rec.h"/>
    <files mask="freemaster_serial.h"/>
    <files mask="freemaster_tsa.h"/>
    <files mask="freemaster_ures.h"/>
    <files mask="freemaster_utils.h"/>
  </source>
  <source relative_path="src/common" type="src">
    <files mask="freemaster_appcmd.c"/>
    <files mask="freemaster_can.c"/>
    <files mask="freemaster_net.c"/>
    <files mask="freemaster_pdbdm.c"/>
    <files mask="freemaster_pipes.c"/>
    <files mask="freemaster_protocol.c"/>
    <files mask="freemaster_rec.c"/>
    <files mask="freemaster_scope.c"/>
    <files mask="freemaster_serial.c"/>
    <files mask="freemaster_sha.c"/>
    <files mask="freemaster_tsa.c"/>
    <files mask="freemaster_ures.c"/>
    <files mask="freemaster_utils.c"/>
  </source>
  <source relative_path="src/common" type="other">
    <files mask="freemaster_cfg.h.example"/>
  </source>
  <source relative_path="src/platforms/56f800e" type="c_include">
    <files mask="freemaster_56f800e.h"/>
  </source>
  <source relative_path="src/platforms/gen32be" type="c_include">
    <files mask="freemaster_gen32be.h"/>
  </source>
  <source relative_path="src/platforms/gen32le" type="c_include">
    <files mask="freemaster_gen32le.h"/>
  </source>
  <source relative_path="src/platforms/s12z" type="c_include">
    <files mask="freemaster_s12z.h"/>
  </source>
  <source relative_path="src/drivers" type="doc">
    <files mask="readme.txt"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_56f800e_flexcan.c"/>
    <files mask="freemaster_56f800e_qsci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_56f800e_flexcan.h"/>
    <files mask="freemaster_56f800e_qsci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="src">
    <files mask="freemaster_kxx_uart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="c_include">
    <files mask="freemaster_kxx_uart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="src">
    <files mask="freemaster_mpc574xp_linflex.c"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="c_include">
    <files mask="freemaster_mpc574xp_linflex.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="src">
    <files mask="freemaster_s12z_mscan.c"/>
    <files mask="freemaster_s12z_sci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="c_include">
    <files mask="freemaster_s12z_mscan.h"/>
    <files mask="freemaster_s12z_sci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="src">
    <files mask="freemaster_s32g274a_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="c_include">
    <files mask="freemaster_s32g274a_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="src">
    <files mask="freemaster_s32k144_lpuart.c"/>
    <files mask="freemaster_s32k3xx_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="c_include">
    <files mask="freemaster_s32k144_lpuart.h"/>
    <files mask="freemaster_s32k3xx_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="src">
    <files mask="freemaster_s32r45_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="c_include">
    <files mask="freemaster_s32r45_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="src">
    <files mask="freemaster_s32s247tv_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="c_include">
    <files mask="freemaster_s32s247tv_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="src">
    <files mask="freemaster_flexcan.c"/>
    <files mask="freemaster_flexcan_dsc.c"/>
    <files mask="freemaster_mcan.c"/>
    <files mask="freemaster_mscan.c"/>
    <files mask="freemaster_mscan_dsc.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
    <files mask="freemaster_flexcan.h"/>
    <files mask="freemaster_flexcan_dsc.h"/>
    <files mask="freemaster_mcan.h"/>
    <files mask="freemaster_mscan.h"/>
    <files mask="freemaster_mscan_dsc.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_serial_lpsci.c"/>
    <files mask="freemaster_serial_lpuart.c"/>
    <files mask="freemaster_serial_miniusart.c"/>
    <files mask="freemaster_serial_qsci.c"/>
    <files mask="freemaster_serial_uart.c"/>
    <files mask="freemaster_serial_usart.c"/>
    <files mask="freemaster_serial_usb.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_serial_lpsci.h"/>
    <files mask="freemaster_serial_lpuart.h"/>
    <files mask="freemaster_serial_miniusart.h"/>
    <files mask="freemaster_serial_qsci.h"/>
    <files mask="freemaster_serial_uart.h"/>
    <files mask="freemaster_serial_usart.h"/>
    <files mask="freemaster_serial_usb.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
    <files mask="freemaster_serial_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
    <files mask="freemaster_serial_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
    <files mask="freemaster_flexcan.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
    <files mask="freemaster_flexcan.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="src">
    <files mask="freemaster_usb.c"/>
    <files mask="freemaster_usb_device_descriptor.c"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="c_include">
    <files mask="freemaster_usb.h"/>
    <files mask="freemaster_usb_device_descriptor.h"/>
    <files mask="usb_device_descriptor.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="doc">
    <files mask="readme.txt"/>
  </source>
</component>-->
    <component id="middleware.fmstr.platform_s32.MIMXRT798S" name="FreeMASTER S32 driver" brief="FreeMASTER driver code for S32 platform." version="3.0.7" full_name="FreeMASTER communication driver for S32 platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_pa32.MIMXRT798S" name="FreeMASTER Power Architecture driver" brief="FreeMASTER driver code for Power Architecture 32bit platform." version="3.0.7" full_name="FreeMASTER communication driver for Power Architecture 32bit platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_pa32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_s12z.MIMXRT798S" name="FreeMASTER S12Z driver" brief="FreeMASTER driver code for S12Z platform." version="3.0.7" full_name="FreeMASTER communication driver for S12Z platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s12z.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT798S" name="mmc" brief="FatFs_MMC" version="0.15.0" full_name="Fatfs MMC layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT798S"/>
          <component_dependency value="middleware.fatfs.template_mmc.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
        <include_path relative_path="source/fsl_mmc_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT798S" name="ram" brief="FatFs_RAM" version="0.15.0" full_name="Fatfs RAM layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT798S"/>
          <component_dependency value="middleware.fatfs.template_ram.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
        <include_path relative_path="source/fsl_ram_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT798S" name="sd" brief="FatFs_SD" version="0.15.0" full_name="Fatfs SD layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT798S"/>
          <component_dependency value="middleware.fatfs.template_sd.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sd_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sdspi.MIMXRT798S" name="sdspi" brief="FatFs_SDSPI" version="0.15.0" full_name="Fatfs SDSPI layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT798S"/>
          <component_dependency value="middleware.fatfs.template_sdspi.MIMXRT798S"/>
          <component_dependency value="middleware.sdmmc.sdspi.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sdspi_disk" type="src">
        <files mask="fsl_sdspi_disk.c"/>
      </source>
      <source relative_path="source/fsl_sdspi_disk" type="c_include">
        <files mask="fsl_sdspi_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sdspi_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sdspi_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.usb.MIMXRT798S" name="usb" brief="FatFs_USB" version="0.15.0" full_name="Fatfs USB layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT798S"/>
          <component_dependency value="middleware.fatfs.template_usb.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host_msd.MIMXRT798S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_usb_disk" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source condition="component.osa_bm.MIMXRT798S" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
      <source condition="component.osa_free_rtos.MIMXRT798S" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_usb_disk" type="c_include"/>
        <include_path relative_path="source/fsl_usb_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.MIMXRT798S" name="emwin" brief="emWin library" version="6.38" full_name="middleware emWin" category="Graphics/emWin graphics library" user_visible="true" type="middleware" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <all>
          <component_dependency value="middleware.emwin.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="emWin_header" type="c_include">
        <files mask="AppWizard.h"/>
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Type.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GAUGE.h"/>
        <files mask="GAUGE_Private.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_Null.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SH_MEM.h"/>
        <files mask="GUIDRV_SH_MEM_Private.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUIDRV_Template.h"/>
        <files mask="GUIDRV_TemplateI.h"/>
        <files mask="GUIDRV_TemplateI_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_HOOK.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_Resource.h"/>
        <files mask="GUI_SIM_Win32.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_SPY_Private.h"/>
        <files mask="GUI_SVG_Global.h"/>
        <files mask="GUI_SVG_NanoVG.h"/>
        <files mask="GUI_SVG_NemaVG.h"/>
        <files mask="GUI_SVG_OpenVG.h"/>
        <files mask="GUI_SVG_Private.h"/>
        <files mask="GUI_SVG_VGLite.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI__BiDi2_Brackets_800.h"/>
        <files mask="GUI__BiDi2_Types_800.h"/>
        <files mask="Global.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="JPEGConf.h"/>
        <files mask="KEYBOARD.h"/>
        <files mask="KEYBOARD_Private.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LCD_X_8080_16.h"/>
        <files mask="LCD_X_8080_8.h"/>
        <files mask="LCD_X_I2C.h"/>
        <files mask="LCD_X_Serial_3Pin.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MOVIE.h"/>
        <files mask="MOVIE_Private.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIEDIT_Private.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="QRCODE.h"/>
        <files mask="QRCODE_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="ROTARY.h"/>
        <files mask="ROTARY_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SCROLLER.h"/>
        <files mask="SCROLLER_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="SWITCH.h"/>
        <files mask="SWITCH_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TICKER.h"/>
        <files mask="TICKER_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WHEEL.h"/>
        <files mask="WHEEL_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WIDGET_ID.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
      </source>
      <source relative_path="emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="libemWin_M33.a"/>
      </source>
      <source toolchain="iar" relative_path="emWin_library/IAR" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="emWin_M33.a"/>
      </source>
      <source toolchain="mdk" relative_path="emWin_library/Keil" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true">
        <files mask="emWin_M33.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="emWin_header" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.nnlib_rt700_hifi4.MIMXRT798S" name="nnlib_hifi4_rt700" brief="DSP Neural Networks" version="4.1.0" full_name="Middleware nnlib hifi4 rt700" category="DSP/Middleware nnlib" user_visible="false" type="middleware" package_base_path="middleware/cadence/nnlib" project_base_path="nnlib">
      <dependencies>
        <all>
          <component_dependency value="middleware.cadence.nnlib.MIMXRT798S"/>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi4_MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_nnlib_rt700_hifi4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.cadence.nnlib_rt700_hifi1.MIMXRT798S" name="nnlib_hifi1_rt700" brief="DSP Neural Networks" version="4.1.0" full_name="Middleware nnlib hifi1 rt700" category="DSP/Middleware nnlib" user_visible="false" type="middleware" package_base_path="middleware/cadence/nnlib" project_base_path="nnlib">
      <dependencies>
        <all>
          <component_dependency value="middleware.cadence.nnlib.MIMXRT798S"/>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi1_MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_nnlib_rt700_hifi1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.cadence.naturedsp_hifi4_rt700.MIMXRT798S" name="naturedsp_hifi4_rt700" brief="NatureDSP" version="5.0.0" full_name="NatureDSP hifi4_rt700 library" category="Audio/NatureDSP" user_visible="false" type="middleware" package_base_path="middleware/cadence/naturedsp/hifi4_rt700" project_base_path="naturedsp">
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi4_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="../hifi4/include" type="c_include">
        <files mask="NatureDSP_Signal.h"/>
        <files mask="NatureDSP_Signal_audio.h"/>
        <files mask="NatureDSP_Signal_complex.h"/>
        <files mask="NatureDSP_Signal_diag.h"/>
        <files mask="NatureDSP_Signal_fft.h"/>
        <files mask="NatureDSP_Signal_fir.h"/>
        <files mask="NatureDSP_Signal_fit.h"/>
        <files mask="NatureDSP_Signal_id.h"/>
        <files mask="NatureDSP_Signal_iir.h"/>
        <files mask="NatureDSP_Signal_img.h"/>
        <files mask="NatureDSP_Signal_math.h"/>
        <files mask="NatureDSP_Signal_matinv.h"/>
        <files mask="NatureDSP_Signal_matop.h"/>
        <files mask="NatureDSP_Signal_vector.h"/>
        <files mask="NatureDSP_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_naturedsp_hifi4_rt700.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../hifi4/include" type="c_include"/>
        <include_path relative_path="../hifi4/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.naturedsp_hifi1.MIMXRT798S" name="naturedsp_hifi1" brief="NatureDSP" version="1.1.0" full_name="NatureDSP hifi1 library" category="Audio/NatureDSP" user_visible="false" type="middleware" package_base_path="middleware/cadence/naturedsp/hifi1" project_base_path="naturedsp">
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi1_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="NatureDSP_Signal.h"/>
        <files mask="NatureDSP_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_naturedsp_hifi1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.multicore_xaf.MIMXRT798S" name="multicore-xaf" brief="DSP Audio Streamer" version="3.6.0" full_name="Middleware multicore-xaf libxa_af_hostless" category="Audio/DSP Audio Streamer" user_visible="false" type="middleware" package_base_path="middleware/cadence/multicore-xaf" project_base_path="multicore-xaf">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="hifi4_MIMXRT798S"/>
            <device_core_dependency value="hifi1_MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/src" type="src">
        <files mask="rbtree.c"/>
        <files mask="xa-class-audio-codec.c"/>
        <files mask="xa-class-base.c"/>
        <files mask="xa-class-capturer.c"/>
        <files mask="xa-class-mimo-proc.c"/>
        <files mask="xa-class-mixer.c"/>
        <files mask="xa-class-renderer.c"/>
        <files mask="xf-core.c"/>
        <files mask="xf-io.c"/>
        <files mask="xf-ipc-if.c"/>
        <files mask="xf-ipi.c"/>
        <files mask="xf-isr.c"/>
        <files mask="xf-main.c"/>
        <files mask="xf-mem-ipc.c"/>
        <files mask="xf-mem.c"/>
        <files mask="xf-msg.c"/>
        <files mask="xf-msgq.c"/>
        <files mask="xf-sched.c"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include" type="c_include">
        <files mask="xf-component.h"/>
        <files mask="xf-core.h"/>
        <files mask="xf-dp.h"/>
        <files mask="xf-dp_opcode.h"/>
        <files mask="xf-dp_proxy.h"/>
        <files mask="xf-flx-lock-if.h"/>
        <files mask="xf-io.h"/>
        <files mask="xf-mm.h"/>
        <files mask="xf-msg.h"/>
        <files mask="xf-plugin.h"/>
        <files mask="xf-probe.h"/>
        <files mask="xf-sched.h"/>
        <files mask="xf-timebase.h"/>
        <files mask="xf-trace.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="c_include">
        <files mask="xa-class-base.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="c_include">
        <files mask="rbtree.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="c_include">
        <files mask="xf-dp_config.h"/>
        <files mask="xf-dp_hal.h"/>
        <files mask="xf-dp_ipc.h"/>
        <files mask="xf-dp_runtime.h"/>
        <files mask="xf-dp_types.h"/>
        <files mask="xf-ipc-if.h"/>
        <files mask="xf-mem-ipc.h"/>
        <files mask="xf-mem.h"/>
        <files mask="xf-shmem.h"/>
        <files mask="xf-sys.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="c_include">
        <files mask="xf-board.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/src" type="src">
        <files mask="xaf-api.c"/>
        <files mask="xf-msgq1.c"/>
        <files mask="xf-proxy.c"/>
        <files mask="xf-trace.c"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/include" type="c_include">
        <files mask="xaf-structs.h"/>
        <files mask="xaf-threads-priority.h"/>
        <files mask="xaf-version.h"/>
        <files mask="xf-opcode.h"/>
        <files mask="xf-proto.h"/>
        <files mask="xf-proxy.h"/>
        <files mask="xf.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="c_include">
        <files mask="xf-config.h"/>
        <files mask="xf-hal.h"/>
        <files mask="xf-ipc.h"/>
        <files mask="xf-runtime.h"/>
        <files mask="xf-types.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="c_include">
        <files mask="xa_af_hostless_definitions.h"/>
        <files mask="xa_api_defs.h"/>
        <files mask="xf-ap-dp-common.h"/>
        <files mask="xf-msgq-if.h"/>
      </source>
      <source relative_path="xa_af_hostless/include" type="c_include">
        <files mask="xaf-api.h"/>
        <files mask="xaf-config-user.h"/>
        <files mask="xf-debug.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/audio" type="c_include">
        <files mask="xa-audio-decoder-api.h"/>
        <files mask="xa-capturer-api.h"/>
        <files mask="xa-mimo-proc-api.h"/>
        <files mask="xa-mixer-api.h"/>
        <files mask="xa-renderer-api.h"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/freertos/include" type="c_include">
        <files mask="osal-isr.h"/>
        <files mask="osal-msgq.h"/>
        <files mask="osal-thread.h"/>
        <files mask="osal-timer.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="c_include">
        <files mask="xf-mc-ipc.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/xos/include" type="c_include">
        <files mask="osal-isr.h"/>
        <files mask="osal-msgq.h"/>
        <files mask="osal-thread.h"/>
        <files mask="osal-timer.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/include" type="c_include">
        <files mask="host_fio.h"/>
        <files mask="xaf-app-threads-priority.h"/>
        <files mask="xaf-clk-test.h"/>
        <files mask="xaf-fio-test.h"/>
        <files mask="xaf-mem.h"/>
        <files mask="xaf-test.h"/>
        <files mask="xaf-utils-test.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/include/audio" type="c_include">
        <files mask="xa-aec22-api.h"/>
        <files mask="xa-aec23-api.h"/>
        <files mask="xa-microspeech-frontend-api.h"/>
        <files mask="xa-microspeech-inference-api.h"/>
        <files mask="xa-mimo-mix-api.h"/>
        <files mask="xa-opus-decoder-api.h"/>
        <files mask="xa-opus-encoder-api.h"/>
        <files mask="xa-pcm-gain-api.h"/>
        <files mask="xa-pcm-split-api.h"/>
        <files mask="xa-pcm-stereo-api.h"/>
        <files mask="xa-person-detect-inference-api.h"/>
        <files mask="xa_amr_wb_dec_definitions.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins" type="c_include">
        <files mask="xa-gain-factor-event.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins" type="src">
        <files mask="xa-factory.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aac_dec" type="src">
        <files mask="xa-aac-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aec22" type="src">
        <files mask="xa-aec22.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aec23" type="src">
        <files mask="xa-aec23.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mixer" type="src">
        <files mask="xa-mixer.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mp3_dec" type="src">
        <files mask="xa-mp3-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mp3_enc" type="src">
        <files mask="xa-mp3-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_dec" type="src">
        <files mask="opus_header.c"/>
        <files mask="xa-opus-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_dec" type="c_include">
        <files mask="opus_header.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_enc" type="src">
        <files mask="xa-opus-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/pcm_gain" type="src">
        <files mask="xa-pcm-gain.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/pcm_split" type="src">
        <files mask="xa-pcm-split.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/src-pp" type="src">
        <files mask="xa-src-pp.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/vorbis_dec" type="src">
        <files mask="xa-vorbis-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/capturer" type="src">
        <files mask="xa-capturer-dmic.c"/>
        <files mask="xa-capturer-i2s.c"/>
        <files mask="xa-capturer-pdm.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/pcm_stereo" type="src">
        <files mask="xa-pcm-stereo.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/renderer" type="src">
        <files mask="xa-renderer-sai.c"/>
        <files mask="xa-renderer.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/sbc_dec" type="src">
        <files mask="xa-sbc-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/sbc_enc" type="src">
        <files mask="xa-sbc-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="src">
        <files mask="vit_pre_proc.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="c_include">
        <files mask="vit_pre_proc.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="src">
        <files mask="voice_seeker.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="c_include">
        <files mask="voice_seeker.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/src" type="src">
        <files mask="xaf-fio-test.c"/>
        <files mask="xaf-mem-test.c"/>
      </source>
      <source relative_path="xa_af_hostless/xf_shared/include" type="c_include">
        <files mask="xf-shared.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_multicore_xaf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/xos/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="c_include"/>
        <include_path relative_path="xa_af_hostless/xf_shared/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/xos/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/xf_shared/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.codecs_hifi4.MIMXRT798S" name="cadence_codecs_hifi4" brief="DSP Audio Streamer HiFi4 codecs" version="1.0.0" full_name="DSP Audio Streamer HiFi4 codecs" category="Audio/Codecs" user_visible="false" type="middleware" package_base_path="middleware/cadence/codecs" project_base_path="codecs">
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi4_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="aacplus_dec/hifi4/lib" type="lib">
        <files mask="xa_aacplus_v2_dec.a" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/doc" type="doc">
        <files mask="HiFi-AAC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/include/aac_dec" type="c_include">
        <files mask="xa_aac_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
        <files mask="paramfilesimple_loas.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/test/src" type="src">
        <files mask="xa_aac_dec_error_handler.c" hidden="true"/>
        <files mask="xa_aac_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/test/test_inp" type="binary">
        <files mask="sample_loas.bin" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/test/test_inp" type="other">
        <files mask="thetest.adts" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi4/test/test_ref" type="other">
        <files mask="sample_loas.wav" hidden="true"/>
        <files mask="thetest.wav" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/doc" type="doc">
        <files mask="HiFi-ASRC-SRC-PP-ProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/include" type="c_include">
        <files mask="xa_api_defs.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/include/src_pp" type="c_include">
        <files mask="xa_src_pp_api.h" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/test/build" type="doc">
        <files mask="paramfile_src_pp.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/test/build" type="script">
        <files mask="test_common.mk" hidden="true"/>
        <files mask="test_common_win.mk" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/test/src" type="src">
        <files mask="xa_src_pp_error_handler.c" hidden="true"/>
        <files mask="xa_src_pp_sample_testbench_hifi3.c" hidden="true"/>
        <files mask="xa_src_pp_waveio.c" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/test/src" type="c_include">
        <files mask="xa_src_pp_waveio.h" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/test/test_inp" type="other">
        <files mask="sinusoid_8960Hz_32kHz.wav" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi4/test/test_ref" type="other">
        <files mask="out_src_sinusoid_8960Hz_48kHz.wav" hidden="true"/>
        <files mask="out_src_sinusoid_8960Hz_48kHz_asrc.wav" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
        <files mask="license.txt" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/doc" type="doc">
        <files mask="HiFi-BSAC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/include/aac_dec" type="c_include">
        <files mask="xa_aac_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/test/include" type="c_include">
        <files mask="xa_bsac_dec_common.h" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/test/src" type="src">
        <files mask="xa_aac_dec_error_handler.c" hidden="true"/>
        <files mask="xa_aac_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/test/test_inp" type="other">
        <files mask="sample.bsac" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="bsac/hifi4/test/test_ref" type="other">
        <files mask="sample.wav" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
        <files mask="license.txt" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/doc" type="doc">
        <files mask="HiFi-DABPlus-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/include/aac_dec" type="c_include">
        <files mask="xa_aac_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/test/src" type="src">
        <files mask="xa_aac_dec_error_handler.c" hidden="true"/>
        <files mask="xa_aac_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/test/test_inp" type="other">
        <files mask="thetest_48000ps_chbr32.nac" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="dabplus/hifi4/test/test_ref" type="other">
        <files mask="thetest_48000ps_chbr32.wav" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
        <files mask="license.txt" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/doc" type="doc">
        <files mask="HiFi-DRM-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/include/drm_dec" type="c_include">
        <files mask="xa_drm_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/test/include" type="c_include">
        <files mask="xa_drm_dec_drm_utils.h" hidden="true"/>
        <files mask="xa_drm_dec_sample_testbench.h" hidden="true"/>
        <files mask="xa_drm_dec_usage.h" hidden="true"/>
        <files mask="xa_profiler.h" hidden="true"/>
        <files mask="xa_waveio.h" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/test/src" type="src">
        <files mask="xa_drm_dec_drm_utils.cpp" hidden="true"/>
        <files mask="xa_drm_dec_error_handler.cpp" hidden="true"/>
        <files mask="xa_drm_dec_sample_testbench.cpp" hidden="true"/>
        <files mask="xa_drm_dec_utils.cpp" hidden="true"/>
        <files mask="xa_waveio.cpp" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/test/test_inp" type="other">
        <files mask="thetest_aac.drm" hidden="true"/>
        <files mask="thetest_xheaac.drm" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="drm/hifi4/test/test_ref" type="other">
        <files mask="thetest_aac.wav" hidden="true"/>
        <files mask="thetest_xheaac.wav" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
        <files mask="license.txt" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/doc" type="doc">
        <files mask="HiFi-G711-CodecProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/include/g711_codec" type="c_include">
        <files mask="xa_g711_codec_api.h" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/test/src" type="src">
        <files mask="xa_g711_codec_error_handler.c" hidden="true"/>
        <files mask="xa_g711_dec_sample_testbench.c" hidden="true"/>
        <files mask="xa_g711_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/test/test_inp" type="other">
        <files mask="f2_le.aa" hidden="true"/>
        <files mask="fe10_le.g192" hidden="true"/>
        <files mask="sweep-le.aa" hidden="true"/>
        <files mask="sweep_le.src" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="g711/hifi4/test/test_ref" type="other">
        <files mask="plc_decoded_f2_10_a.raw" hidden="true"/>
        <files mask="sweep-decoded.aa" hidden="true"/>
        <files mask="sweep-encoded.aa" hidden="true"/>
        <files mask="sweep-encoded.uu" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/doc" type="doc">
        <files mask="HiFi-G722-CodecProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/include/g722_codec" type="c_include">
        <files mask="xa_g722_codec_api.h" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/test/src" type="src">
        <files mask="xa_g722_codec_error_handler.c" hidden="true"/>
        <files mask="xa_g722_dec_sample_testbench.c" hidden="true"/>
        <files mask="xa_g722_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/test/test_inp" type="other">
        <files mask="codspw_le.cod" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="g722/hifi4/test/test_ref" type="other">
        <files mask="codspw_le.cod" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
        <files mask="license.txt" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/doc" type="doc">
        <files mask="HiFi-MP3-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/include/mp3_dec" type="c_include">
        <files mask="xa_mp3_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
        <files mask="readme_ec_build.txt" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/test/include" type="c_include">
        <files mask="id3_tag_decode.h" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/test/src" type="src">
        <files mask="id3_tag_decode.c" hidden="true"/>
        <files mask="xa_mp3_dec_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/test/test_inp" type="other">
        <files mask="DAB.eti_subch11_50frames.mpg" hidden="true"/>
        <files mask="DAB.eti_subch11_corrScF_20th_frame.mpg" hidden="true"/>
        <files mask="l2-fl11.mp2" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp2/hifi4/test/test_ref" type="other">
        <files mask="l2-fl11.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/doc" type="doc">
        <files mask="HiFi-MP3-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/include/mp3_dec" type="c_include">
        <files mask="xa_mp3_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/test/build" type="doc">
        <files mask="ldscript_stream_data.txt" hidden="true"/>
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/test/include" type="c_include">
        <files mask="id3_tag_decode.h" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/test/src" type="src">
        <files mask="id3_tag_decode.c" hidden="true"/>
        <files mask="stream_data.c" hidden="true"/>
        <files mask="xa_mp3_dec_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/test/test_inp" type="other">
        <files mask="compl.mp3" hidden="true"/>
        <files mask="hihat.mp3" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi4/test/test_ref" type="other">
        <files mask="hihat_16bit.wav" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/doc" type="doc">
        <files mask="HiFi-OPUS-CodecProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/include/opus_codec" type="c_include">
        <files mask="xa_opus_codec_api.h" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/include/ogg_lib" type="c_include">
        <files mask="xa_ogg_lib_api.h" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_decode_celt.txt" hidden="true"/>
        <files mask="paramfilesimple_decode_silk.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode_celt.txt" hidden="true"/>
        <files mask="paramfilesimple_encode_silk.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/test/include" type="c_include">
        <files mask="opus_header.h" hidden="true"/>
        <files mask="xa_profiler.h" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/test/src" type="src">
        <files mask="opus_header.c" hidden="true"/>
        <files mask="xa_common_error_handler.c" hidden="true"/>
        <files mask="xa_ogg_lib_error_handler.c" hidden="true"/>
        <files mask="xa_opus_codec_error_handler.c" hidden="true"/>
        <files mask="xa_opus_decoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_opus_encoder_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/test/test_inp" type="other">
        <files mask="opus51_trim.webm.ogg" hidden="true"/>
        <files mask="testvector04.bit" hidden="true"/>
        <files mask="testvector04.bit.opus" hidden="true"/>
        <files mask="testvector04_trim.bit" hidden="true"/>
        <files mask="testvector11-16000-1ch.out" hidden="true"/>
        <files mask="testvector11-16000-1ch_trim.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-48000-2ch.out" hidden="true"/>
        <files mask="testvector11-48000-2ch_trim.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.bit" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi4/test/test_ref" type="other">
        <files mask="opus51_trim-48000-6ch.out" hidden="true"/>
        <files mask="opus51_trim-48000-6ch_celt.out" hidden="true"/>
        <files mask="testvector04-48000-2ch-ogg-opus.out" hidden="true"/>
        <files mask="testvector04-48000-2ch.out" hidden="true"/>
        <files mask="testvector04-48000-2ch_trim.out" hidden="true"/>
        <files mask="testvector11-16000-1ch_trim.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps.bit" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim_silk.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim_celt.bit" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/doc" type="doc">
        <files mask="HiFi-SBC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/include/sbc_dec" type="c_include">
        <files mask="xa_sbc_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/test/build" type="doc">
        <files mask="paramfilesimple_sbc_dec.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/test/src" type="src">
        <files mask="xa_sbc_dec_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/test/test_inp" type="other">
        <files mask="sbc_test_02.sbc" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi4/test/test_ref" type="other">
        <files mask="sbc_test_02.wav" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/doc" type="doc">
        <files mask="HiFi-SBC-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/include/sbc_enc" type="c_include">
        <files mask="xa_sbc_enc_api.h" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/test/build" type="doc">
        <files mask="paramfilesimple_sbc_enc.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/test/src" type="src">
        <files mask="xa_sbc_enc_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi4/test/test_ref" type="other">
        <files mask="hihat.sbc" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/doc" type="doc">
        <files mask="HiFi-Vorbis-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/doc" type="other">
        <files mask="COPYING" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/include/vorbis_dec" type="c_include">
        <files mask="xa_vorbis_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/test/build" type="doc">
        <files mask="parameter.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/test/src" type="src">
        <files mask="xa_vorbis_dec_error_handler.c" hidden="true"/>
        <files mask="xa_vorbis_dec_test.c" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/test/test_inp" type="other">
        <files mask="hihat.ogg" hidden="true"/>
        <files mask="i9.vor" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi4/test/test_ref" type="other">
        <files mask="hihat.pcm" hidden="true"/>
        <files mask="i9.pcm" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_codecs_hifi4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="aacplus_dec/hifi4/include/aac_dec" type="c_include"/>
        <include_path relative_path="asrc_src_pp/hifi4/include/src_pp" type="c_include"/>
        <include_path relative_path="bsac/hifi4/include/aac_dec" type="c_include"/>
        <include_path relative_path="dabplus/hifi4/include/aac_dec" type="c_include"/>
        <include_path relative_path="drm/hifi4/include/drm_dec" type="c_include"/>
        <include_path relative_path="g711/hifi4/include/g711_codec" type="c_include"/>
        <include_path relative_path="g722/hifi4/include/g722_codec" type="c_include"/>
        <include_path relative_path="mp3_dec/hifi4/include/mp3_dec" type="c_include"/>
        <include_path relative_path="opus/hifi4/include/opus_codec" type="c_include"/>
        <include_path relative_path="opus/hifi4/include/ogg_lib" type="c_include"/>
        <include_path relative_path="sbc_dec/hifi4/include/sbc_dec" type="c_include"/>
        <include_path relative_path="sbc_enc/hifi4/include/sbc_enc" type="c_include"/>
        <include_path relative_path="vorbis_dec/hifi4/include/vorbis_dec" type="c_include"/>
        <include_path relative_path="aacplus_dec/hifi4/include/aac_dec" type="asm_include"/>
        <include_path relative_path="asrc_src_pp/hifi4/include/src_pp" type="asm_include"/>
        <include_path relative_path="bsac/hifi4/include/aac_dec" type="asm_include"/>
        <include_path relative_path="dabplus/hifi4/include/aac_dec" type="asm_include"/>
        <include_path relative_path="drm/hifi4/include/drm_dec" type="asm_include"/>
        <include_path relative_path="g711/hifi4/include/g711_codec" type="asm_include"/>
        <include_path relative_path="g722/hifi4/include/g722_codec" type="asm_include"/>
        <include_path relative_path="mp3_dec/hifi4/include/mp3_dec" type="asm_include"/>
        <include_path relative_path="opus/hifi4/include/opus_codec" type="asm_include"/>
        <include_path relative_path="opus/hifi4/include/ogg_lib" type="asm_include"/>
        <include_path relative_path="sbc_dec/hifi4/include/sbc_dec" type="asm_include"/>
        <include_path relative_path="sbc_enc/hifi4/include/sbc_enc" type="asm_include"/>
        <include_path relative_path="vorbis_dec/hifi4/include/vorbis_dec" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.codecs_hifi4_rt700.MIMXRT798S" name="cadence_codecs_hifi4_rt700" brief="DSP Audio Streamer HiFi4 codecs for RT700" version="1.0.0" full_name="DSP Audio Streamer HiFi4 codecs for RT700" category="Audio/Codecs" user_visible="false" type="middleware" package_base_path="middleware/cadence/codecs" project_base_path="codecs">
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi4_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="lc3/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/doc" type="doc">
        <files mask="HiFi-LC3-Codec-ProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="lc3/hifi4/include/lc3_codec" type="c_include">
        <files mask="xa_lc3_codec_api.h" hidden="true"/>
        <files mask="xa_lc3_codec_api.h"/>
      </source>
      <source relative_path="lc3/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/test/include" type="c_include">
        <files mask="tinywavein_c.h" hidden="true"/>
        <files mask="tinywaveout_c.h" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/test/src" type="src">
        <files mask="xa_lc3_decoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_lc3_encoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_lc3_error_handler.c" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/test/test_inp" type="other">
        <files mask="ABBA_44100.lp20.wav" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits.wav" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/test/test_inp" type="binary">
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.bin" hidden="true"/>
        <files mask="rate_switching_dec_Castanets_16000_NA.bin" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/test/test_ref" type="binary">
        <files mask="ABBA_44100_96000.bin" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.bin" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi4/test/test_ref" type="other">
        <files mask="Castanets_16000d.wav" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4/doc" type="doc">
        <files mask="HiFi-MP3-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="mp3_enc/hifi4/include/mp3_enc" type="c_include">
        <files mask="xa_mp3_enc_api.h" hidden="true"/>
        <files mask="xa_mp3_enc_api.h"/>
      </source>
      <source relative_path="mp3_enc/hifi4/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4/test/include" type="c_include">
        <files mask="xa_mp3_enc_error.h" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4/test/src" type="src">
        <files mask="xa_mp3_enc_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi4/test/test_ref" type="other">
        <files mask="hihat_128.mp3" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_codecs_hifi4_rt700.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.cadence.codecs_hifi1.MIMXRT798S" name="codecs_hifi1" brief="DSP Audio Streamer hifi1 codecs" version="1.0.0" full_name="DSP Audio Streamer hifi1 codecs" category="Audio/HiFi1 codecs" user_visible="false" type="middleware" package_base_path="middleware/cadence/codecs" project_base_path="dsp">
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="hifi1_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="aacplus_dec/hifi1/lib" type="lib">
        <files mask="xa_aacplus_v2_dec.a" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/doc" type="doc">
        <files mask="HiFi-AAC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/include/aac_dec" type="c_include">
        <files mask="xa_aac_dec_api.h" hidden="true"/>
        <files mask="xa_aac_dec_api.h"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
        <files mask="paramfilesimple_loas.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/src" type="src">
        <files mask="xa_aac_dec_error_handler.c" hidden="true"/>
        <files mask="xa_aac_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/test_inp" type="binary">
        <files mask="sample_loas.bin" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/test_inp" type="other">
        <files mask="thetest.adts" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/test_ref" type="other">
        <files mask="sample_loas.wav" hidden="true"/>
        <files mask="thetest.wav" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/doc" type="doc">
        <files mask="HiFi-ASRC-SRC-PP-ProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/include" type="c_include">
        <files mask="xa_api_defs.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_api_defs.h"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/include/src_pp" type="c_include">
        <files mask="xa_src_pp_api.h" hidden="true"/>
        <files mask="xa_src_pp_api.h"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/build" type="doc">
        <files mask="paramfile_src_pp.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/build" type="script">
        <files mask="test_common.mk" hidden="true"/>
        <files mask="test_common_win.mk" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/src" type="src">
        <files mask="xa_src_pp_error_handler.c" hidden="true"/>
        <files mask="xa_src_pp_sample_testbench_hifi3.c" hidden="true"/>
        <files mask="xa_src_pp_waveio.c" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/src" type="c_include">
        <files mask="xa_src_pp_waveio.h" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/test_inp" type="other">
        <files mask="sinusoid_8960Hz_32kHz.wav" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/test_ref" type="other">
        <files mask="out_src_sinusoid_8960Hz_48kHz.wav" hidden="true"/>
        <files mask="out_src_sinusoid_8960Hz_48kHz_asrc.wav" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/doc" type="doc">
        <files mask="HiFi-LC3-Codec-ProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="lc3/hifi1/include/lc3_codec" type="c_include">
        <files mask="xa_lc3_codec_api.h" hidden="true"/>
        <files mask="xa_lc3_codec_api.h"/>
      </source>
      <source relative_path="lc3/hifi1/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/include" type="c_include">
        <files mask="tinywavein_c.h" hidden="true"/>
        <files mask="tinywaveout_c.h" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/src" type="src">
        <files mask="xa_lc3_decoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_lc3_encoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_lc3_error_handler.c" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/test_inp" type="other">
        <files mask="ABBA_44100.lp20.wav" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits.wav" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/test_inp" type="binary">
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.bin" hidden="true"/>
        <files mask="rate_switching_dec_Castanets_16000_NA.bin" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/test_ref" type="binary">
        <files mask="ABBA_44100_96000.bin" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.bin" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/test_ref" type="other">
        <files mask="Castanets_16000d.wav" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/doc" type="doc">
        <files mask="HiFi-MP3-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="mp3_dec/hifi1/include/mp3_dec" type="c_include">
        <files mask="xa_mp3_dec_api.h" hidden="true"/>
        <files mask="xa_mp3_dec_api.h"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/build" type="doc">
        <files mask="ldscript_stream_data.txt" hidden="true"/>
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/include" type="c_include">
        <files mask="id3_tag_decode.h" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/src" type="src">
        <files mask="id3_tag_decode.c" hidden="true"/>
        <files mask="stream_data.c" hidden="true"/>
        <files mask="xa_mp3_dec_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/test_inp" type="other">
        <files mask="compl.mp3" hidden="true"/>
        <files mask="hihat.mp3" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/test_ref" type="other">
        <files mask="hihat_16bit.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/doc" type="doc">
        <files mask="HiFi-MP3-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="mp3_enc/hifi1/include/mp3_enc" type="c_include">
        <files mask="xa_mp3_enc_api.h" hidden="true"/>
        <files mask="xa_mp3_enc_api.h"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/include" type="c_include">
        <files mask="xa_mp3_enc_error.h" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/src" type="src">
        <files mask="xa_mp3_enc_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/test_ref" type="other">
        <files mask="hihat_128.mp3" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/doc" type="doc">
        <files mask="HiFi-OPUS-CodecProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="opus/hifi1/include/opus_codec" type="c_include">
        <files mask="xa_opus_codec_api.h" hidden="true"/>
        <files mask="xa_opus_codec_api.h"/>
      </source>
      <source relative_path="opus/hifi1/include/ogg_lib" type="c_include">
        <files mask="xa_ogg_lib_api.h" hidden="true"/>
        <files mask="xa_ogg_lib_api.h"/>
      </source>
      <source relative_path="opus/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_decode_celt.txt" hidden="true"/>
        <files mask="paramfilesimple_decode_silk.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode_celt.txt" hidden="true"/>
        <files mask="paramfilesimple_encode_silk.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/include" type="c_include">
        <files mask="opus_header.h" hidden="true"/>
        <files mask="xa_profiler.h" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/src" type="src">
        <files mask="opus_header.c" hidden="true"/>
        <files mask="xa_common_error_handler.c" hidden="true"/>
        <files mask="xa_ogg_lib_error_handler.c" hidden="true"/>
        <files mask="xa_opus_codec_error_handler.c" hidden="true"/>
        <files mask="xa_opus_decoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_opus_encoder_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/test_inp" type="other">
        <files mask="opus51_trim.webm.ogg" hidden="true"/>
        <files mask="testvector04_trim.bit" hidden="true"/>
        <files mask="testvector11-16000-1ch_trim.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-48000-2ch_trim.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.bit" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/test_ref" type="other">
        <files mask="opus51_trim-48000-6ch.out" hidden="true"/>
        <files mask="opus51_trim-48000-6ch_celt.out" hidden="true"/>
        <files mask="testvector04-48000-2ch_trim.out" hidden="true"/>
        <files mask="testvector11-16000-1ch_trim.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim_silk.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim_celt.bit" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/doc" type="doc">
        <files mask="HiFi-SBC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="sbc_dec/hifi1/include/sbc_dec" type="c_include">
        <files mask="xa_sbc_dec_api.h" hidden="true"/>
        <files mask="xa_sbc_dec_api.h"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/build" type="doc">
        <files mask="paramfilesimple_sbc_dec.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/src" type="src">
        <files mask="xa_sbc_dec_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/test_inp" type="other">
        <files mask="sbc_test_02.sbc" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/test_ref" type="other">
        <files mask="sbc_test_02.wav" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/doc" type="doc">
        <files mask="HiFi-SBC-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="sbc_enc/hifi1/include/sbc_enc" type="c_include">
        <files mask="xa_sbc_enc_api.h" hidden="true"/>
        <files mask="xa_sbc_enc_api.h"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/build" type="doc">
        <files mask="paramfilesimple_sbc_enc.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/src" type="src">
        <files mask="xa_sbc_enc_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/test_ref" type="other">
        <files mask="hihat.sbc" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/doc" type="doc">
        <files mask="HiFi-Vorbis-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/include/vorbis_dec" type="c_include">
        <files mask="xa_vorbis_dec_api.h" hidden="true"/>
        <files mask="xa_vorbis_dec_api.h"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/build" type="doc">
        <files mask="parameter.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/src" type="src">
        <files mask="xa_vorbis_dec_error_handler.c" hidden="true"/>
        <files mask="xa_vorbis_dec_test.c" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/test_inp" type="other">
        <files mask="hihat.ogg" hidden="true"/>
        <files mask="i9.vor" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/test_ref" type="other">
        <files mask="hihat.pcm" hidden="true"/>
        <files mask="i9.pcm" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/lib" type="lib">
        <files mask="xa_aacplus_v2_dec.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_codecs_hifi1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="aacplus_dec/hifi1/include/aac_dec" type="c_include"/>
        <include_path relative_path="asrc_src_pp/hifi1/include/src_pp" type="c_include"/>
        <include_path relative_path="mp3_dec/hifi1/include/mp3_dec" type="c_include"/>
        <include_path relative_path="mp3_enc/hifi1/include/mp3_enc" type="c_include"/>
        <include_path relative_path="opus/hifi1/include/opus_codec" type="c_include"/>
        <include_path relative_path="opus/hifi1/include/ogg_lib" type="c_include"/>
        <include_path relative_path="sbc_dec/hifi1/include/sbc_dec" type="c_include"/>
        <include_path relative_path="sbc_enc/hifi1/include/sbc_enc" type="c_include"/>
        <include_path relative_path="vorbis_dec/hifi1/include/vorbis_dec" type="c_include"/>
        <include_path relative_path="aacplus_dec/hifi1/include/aac_dec" type="asm_include"/>
        <include_path relative_path="asrc_src_pp/hifi1/include/src_pp" type="asm_include"/>
        <include_path relative_path="mp3_dec/hifi1/include/mp3_dec" type="asm_include"/>
        <include_path relative_path="mp3_enc/hifi1/include/mp3_enc" type="asm_include"/>
        <include_path relative_path="opus/hifi1/include/opus_codec" type="asm_include"/>
        <include_path relative_path="opus/hifi1/include/ogg_lib" type="asm_include"/>
        <include_path relative_path="sbc_dec/hifi1/include/sbc_dec" type="asm_include"/>
        <include_path relative_path="sbc_enc/hifi1/include/sbc_enc" type="asm_include"/>
        <include_path relative_path="vorbis_dec/hifi1/include/vorbis_dec" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.ota.MIMXRT798S" name="ota-for-aws-iot-embedded-sdk" brief="Client library for using the AWS Over-the-air Update service on embedded devices." version="3.4.0" full_name="AWS IoT Over-the-air Update Library" category="AWS IoT/AWS IoT Over-the-air Update" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/ota" project_base_path="aws_iot/ota">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corejson.MIMXRT798S"/>
          <component_dependency value="middleware.tinycbor.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="ota.c"/>
        <files mask="ota_base64.c"/>
        <files mask="ota_cbor.c"/>
        <files mask="ota_http.c"/>
        <files mask="ota_interface.c"/>
        <files mask="ota_mqtt.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="ota.h"/>
        <files mask="ota_appversion32.h"/>
        <files mask="ota_base64_private.h"/>
        <files mask="ota_cbor_private.h"/>
        <files mask="ota_config_defaults.h"/>
        <files mask="ota_http_interface.h"/>
        <files mask="ota_http_private.h"/>
        <files mask="ota_interface_private.h"/>
        <files mask="ota_mqtt_interface.h"/>
        <files mask="ota_mqtt_private.h"/>
        <files mask="ota_os_interface.h"/>
        <files mask="ota_platform_interface.h"/>
        <files mask="ota_private.h"/>
      </source>
      <source relative_path="source/include" type="doc">
        <files mask="stdbool.readme"/>
        <files mask="stdint.readme"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_ota.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.ota.freertos.MIMXRT798S" name="ota-for-aws-iot-embedded-sdk - freertos" brief="Client library for using the AWS Over-the-air Update service on embedded devices. FreeRTOS port." version="3.4.0" full_name="ota-for-aws-iot-embedded-sdk - FreeRTOS" category="AWS IoT/AWS IoT Over-the-air Update" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/ota" project_base_path="aws_iot/ota">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source/portable/os" type="src">
        <files mask="ota_os_freertos.c"/>
      </source>
      <source relative_path="source/portable/os" type="c_include">
        <files mask="ota_os_freertos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_ota_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/portable/os" type="c_include"/>
        <include_path relative_path="source/portable/os" type="asm_include"/>
      </include_paths>
    </component>
    <component id="docs.AWS.OTA.MIMXRT798S" name="doc_AWS_OTA" brief="Amazon FreeRTOS Over-The-Air documentation" version="1.0.0" full_name="AWS OTA documentation" category="docs/AWS IoT Over-the-air" user_visible="true" type="documentation" package_base_path="docs/AWS" project_base_path="AWS">
      <dependencies>
        <all>
          <component_dependency value="middleware.aws_iot.ota.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
    </component>
    <component id="middleware.aws_iot.jobs.MIMXRT798S" name="jobs-for-aws-iot-embedded-sdk" brief="Library for using the AWS IoT Jobs service on embedded devices." version="1.3.0" full_name="AWS IoT Jobs library" category="AWS IoT/AWS IoT Jobs" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/jobs" project_base_path="aws_iot/jobs">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="jobs.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="jobs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_jobs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.kvstore.MIMXRT798S" name="kvstore" brief="kvstore, IoT reference common example component" version="1.0.0" full_name="kvstore" category="AWS IoT/IoT Reference" user_visible="false" type="middleware" package_base_path="components/aws_iot/kvstore" project_base_path="aws_iot/kvstore">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="kvstore.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="kvstore.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_kvstore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.logging.MIMXRT798S" name="logging" brief="logging, IoT reference common example component" version="1.0.0" full_name="logging" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/logging" project_base_path="aws_iot/logging">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="logging.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="logging.h"/>
        <files mask="logging_levels.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_logging.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.mqtt_agent.MIMXRT798S" name="mqtt_agent" brief="mqtt_agent, IoT reference common example component" version="1.0.0" full_name="mqtt_agent" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/mqtt_agent" project_base_path="aws_iot/mqtt_agent">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <component_dependency value="middleware.freertos.backoffalgorithm.MIMXRT798S"/>
          <component_dependency value="middleware.freertos.coremqtt-agent.MIMXRT798S"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT798S"/>
          <component_dependency value="middleware.iot_reference.kvstore.MIMXRT798S"/>
          <component_dependency value="middleware.iot_reference.mqtt_agent_interface.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="mqtt_agent_task.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="mqtt_agent_task.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_mqtt_agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.mqtt_agent_interface.MIMXRT798S" name="mqtt-agent-interface" brief="mqtt-agent-interface, IoT reference common example component" version="1.0.0" full_name="mqtt-agent-interface" category="AWS IoT/IoT Reference" user_visible="false" type="middleware" package_base_path="components/aws_iot/mqtt-agent-interface" project_base_path="aws_iot/mqtt-agent-interface">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <component_dependency value="middleware.freertos.coremqtt-agent.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="freertos_agent_message.c"/>
        <files mask="freertos_command_pool.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="freertos_agent_message.h"/>
        <files mask="freertos_command_pool.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_mqtt_agent_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.transport_mbedtls3x.MIMXRT798S" name="transport_mbedtls3x" brief="transport_mbedtls3x, IoT reference common example component" version="1.0.0" full_name="transport_mbedtls3x" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/using_mbedtls_pkcs11" project_base_path="aws_iot/using_mbedtls_pkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT798S"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.MIMXRT798S"/>
          <component_dependency value="middleware.pkcs11.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="using_mbedtls.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="using_mbedtls.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_transport_mbedtls3x.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.transport_mbedtls_psa.MIMXRT798S" name="transport_mbedtls_psa" brief="transport_mbedtls_psa, IoT reference common example component" version="1.0.0" full_name="transport_mbedtls_psa" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/using_mbedtls_psa" project_base_path="aws_iot/using_mbedtls_psa">
      <dependencies>
        <all>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="using_mbedtls.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="using_mbedtls.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_transport_mbedtls_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_shadow.template.MIMXRT798S" name="device_shadow configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="device_shadow configuration template" category="AWS IoT/AWS IoT Device Shadow" user_visible="false" type="project_template" package_base_path="middleware/aws_iot/device-shadow" project_base_path="aws_iot/device-shadow">
      <dependencies>
        <all>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="template" type="c_include">
        <files mask="shadow_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_shadow_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_shadow.MIMXRT798S" name="device_shadow" brief="Client library for using the AWS IoT Device Shadow service on embedded devices." version="1.3.0" full_name="AWS IoT Device Shadow library" category="AWS IoT/AWS IoT Device Shadow" user_visible="true" type="middleware" package_base_path="middleware/aws_iot/device-shadow" project_base_path="aws_iot/device-shadow">
      <dependencies>
        <all>
          <component_dependency value="middleware.aws_iot.device_shadow.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="shadow.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="shadow.h"/>
        <files mask="shadow_config_defaults.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_shadow.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ezhv.MIMXRT798S" name="ezhv" brief="EZHV Driver" version="2.1.0" full_name="EZHV Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            <device_core_dependency value="cm33_core1_MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ezhv.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ezhv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ezhv.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.power.MIMXRT798S" name="power" brief="Power driver" version="2.4.0" full_name="Driver power" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            <device_core_dependency value="cm33_core1_MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_power.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.romapi.MIMXRT798S" name="romapi" brief="ROMAPI Driver" version="2.1.0" full_name="ROMAPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT798S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="cm33_core0_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="romapi/bootloader" type="c_include">
        <files mask="fsl_romapi.h"/>
      </source>
      <source relative_path="romapi/bootloader" type="src">
        <files mask="fsl_romapi.c"/>
      </source>
      <source relative_path="romapi/otp" type="c_include">
        <files mask="fsl_romapi_otp.h"/>
      </source>
      <source relative_path="romapi/otp" type="src">
        <files mask="fsl_romapi_otp.c"/>
      </source>
      <source relative_path="romapi/nboot" type="c_include">
        <files mask="fsl_romapi_nboot.h"/>
      </source>
      <source relative_path="romapi/nboot" type="src">
        <files mask="fsl_romapi_nboot.c"/>
      </source>
      <source relative_path="romapi/iap" type="c_include">
        <files mask="fsl_romapi_iap.h"/>
        <files mask="fsl_sbloader_v3.h"/>
      </source>
      <source relative_path="romapi/iap" type="src">
        <files mask="fsl_romapi_iap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_romapi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="romapi" type="c_include"/>
        <include_path relative_path="romapi/bootloader" type="c_include"/>
        <include_path relative_path="romapi/nboot" type="c_include"/>
        <include_path relative_path="romapi/iap" type="c_include"/>
        <include_path relative_path="romapi/otp" type="c_include"/>
        <include_path relative_path="romapi" type="asm_include"/>
        <include_path relative_path="romapi/bootloader" type="asm_include"/>
        <include_path relative_path="romapi/nboot" type="asm_include"/>
        <include_path relative_path="romapi/iap" type="asm_include"/>
        <include_path relative_path="romapi/otp" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-common.MIMXRT798S" name="camera-common" brief="Driver camera-common" version="1.0.0" full_name="Driver camera-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-common.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-common.MIMXRT798S" name="camera-device-common" brief="Driver camera-device-common" version="1.0.0" full_name="Driver camera-device-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/device" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-common.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov5640.MIMXRT798S" name="camera-device-ov5640" brief="Driver camera-device-ov5640" version="1.0.1" full_name="Driver camera-device-ov5640" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov5640" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT798S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov5640.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov5640.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov5640.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7670.MIMXRT798S" name="camera-device-ov7670" brief="Driver camera-device-ov7670" version="1.0.2" full_name="Driver camera-device-ov7670" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7670" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT798S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7670.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7670.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7670.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7725.MIMXRT798S" name="camera-device-ov7725" brief="Driver camera-device-ov7725" version="1.0.1" full_name="Driver camera-device-ov7725" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7725" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT798S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7725.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-sccb.MIMXRT798S" name="camera-device-sccb" brief="Driver camera-device-sccb" version="1.0.1" full_name="Driver camera-device-sccb" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/camera/device/sccb" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-sccb.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-common.MIMXRT798S" name="camera-receiver-common" brief="Driver camera-receiver-common" version="1.0.0" full_name="Driver camera-receiver-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-receiver-common.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi.MIMXRT798S" name="dbi" brief="Driver dbi" version="1.0.0" full_name="Driver dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_flexio_edma.MIMXRT798S" name="dbi_flexio_edma" brief="Driver dbi_flexio_edma" version="1.0.1" full_name="Driver dbi_flexio_edma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT798S"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT798S"/>
          <component_dependency value="platform.drivers.flexio_mculcd_edma.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_flexio_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_flexio_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi_flexio_edma.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_lcdif.MIMXRT798S" name="dbi_lcdif" brief="Driver dbi_lcdif" version="1.0.1" full_name="Driver dbi_lcdif" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/lcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lcdif.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi_lcdif.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MIMXRT798S" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-common.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dbi.MIMXRT798S" name="dc-fb-dbi" brief="Driver dc-fb-dbi" version="1.0.0" full_name="Driver dc-fb-dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dbi" project_base_path="video">
      <defines>
        <define name="MCUX_DBI_LEGACY" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="driver.dbi.MIMXRT798S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT798S"/>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-dbi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dsi-cmd.MIMXRT798S" name="dc-fb-dsi-cmd" brief="Driver dc-fb-dsi-cmd" version="1.1.1" full_name="Driver dc-fb-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT798S"/>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-dsi-cmd.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-lcdif.MIMXRT798S" name="dc-fb-lcdif" brief="Driver dc-fb-lcdif" version="1.0.1" full_name="Driver dc-fb-lcdif" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/lcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT798S"/>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.lcdif.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-lcdif.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-ssd1963.MIMXRT798S" name="dc-fb-ssd1963" brief="Driver dc-fb-ssd1963" version="1.0.2" full_name="Driver dc-fb-ssd1963" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/ssd1963" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT798S"/>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.ssd1963.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-ssd1963.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MIMXRT798S" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-common.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-hx8394.MIMXRT798S" name="display-hx8394" brief="Driver display-hx8394" version="1.0.0" full_name="Driver display-hx8394" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/hx8394" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hx8394.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hx8394.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-hx8394.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-mipi-dsi-cmd.MIMXRT798S" name="display-mipi-dsi-cmd" brief="Driver display-mipi-dsi-cmd" version="1.0.2" full_name="Driver display-mipi-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/mipi_dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mipi_dsi.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-mipi-dsi-cmd.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67162.MIMXRT798S" name="display-rm67162" brief="Driver display-rm67162" version="1.0.2" full_name="Driver display-rm67162" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67162" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67162.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67162.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm67162.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-co5300.MIMXRT798S" name="display-co5300" brief="Driver display-co5300" version="1.0.0" full_name="Driver display-co5300" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/co5300" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_co5300.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_co5300.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-co5300.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67191.MIMXRT798S" name="display-rm67191" brief="Driver display-rm67191" version="1.1.0" full_name="Driver display-rm67191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67191.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm67191.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68191.MIMXRT798S" name="display-rm68191" brief="Driver display-rm68191" version="1.1.0" full_name="Driver display-rm68191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68191.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm68191.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68200.MIMXRT798S" name="display-rm68200" brief="Driver display-rm68200" version="1.1.1" full_name="Driver display-rm68200" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68200" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68200.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68200.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm68200.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm692c9.MIMXRT798S" name="display-rm692c9" brief="Driver display-rm692c9" version="1.1.0" full_name="Driver display-rm692c9" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm692c9" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm692c9.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm692c9.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm692c9.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rpi.MIMXRT798S" name="display-rpi" brief="Driver display-rpi" version="1.0.0" full_name="Driver display-rpi" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rpi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT798S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rpi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rpi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rpi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fbdev.MIMXRT798S" name="fbdev" brief="Driver fbdev" version="1.0.4" full_name="Driver fbdev" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/fbdev" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fbdev.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fbdev.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fbdev.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MIMXRT798S" name="video-common" brief="Driver video-common" version="1.1.0" full_name="Driver video-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-common.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ili9341.MIMXRT798S" name="ili9341" brief="Driver ili9341" version="1.0.2" full_name="Driver ili9341" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ili9341" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ili9341.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.psp27801.MIMXRT798S" name="psp27801" brief="Driver psp27801" version="1.0.0" full_name="Driver psp27801" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/psp27801" project_base_path="oled">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_psp27801.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_psp27801.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_psp27801.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ssd1963.MIMXRT798S" name="ssd1963" brief="Driver ssd1963" version="1.2.0" full_name="Driver ssd1963" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ssd1963" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ssd1963.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.st7796s.MIMXRT798S" name="st7796s" brief="Driver st7796s" version="1.0.0" full_name="Driver st7796s" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/st7796s" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_st7796s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_st7796s.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_st7796s.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406_rt.MIMXRT798S" name="ft5406_rt" brief="Driver ft5406_rt" version="1.0.0" full_name="Driver ft5406_rt" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/touch/ft5406_rt" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406_rt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406_rt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft5406_rt.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft6x06.MIMXRT798S" name="ft6x06" brief="Driver ft6x06" version="1.0.0" full_name="Driver ft6x06" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft6x06" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft6x06.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft6x06.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft6x06.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMXRT798S" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpuart_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT798S" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.ctimer_adapter.MIMXRT798S"/>
              <component_dependency value="platform.drivers.ctimer.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="component.mrt_adapter.MIMXRT798S"/>
              <component_dependency value="platform.drivers.mrt.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="component.ostimer_adapter.MIMXRT798S"/>
              <component_dependency value="platform.drivers.ostimer.MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_timer_manager.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_adapter.MIMXRT798S" name="ctimer_adapter" brief="Component ctimer_adapter" version="1.0.0" full_name="Component ctimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_CTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ctimer_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mrt_adapter.MIMXRT798S" name="mrt_adapter" brief="Component mrt_adapter" version="1.0.0" full_name="Component mrt_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_MRT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mrt.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mrt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mrt_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ostimer_adapter.MIMXRT798S" name="ostimer_adapter" brief="Component ostimer_adapter" version="1.0.0" full_name="Component ostimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_OSTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ostimer.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ostimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ostimer_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT798S" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT798S/utilities/shell" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="utility.str.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_shell.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT798S" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_swo.MIMXRT798S"/>
            <component_dependency value="component.serial_manager_uart.MIMXRT798S"/>
            <component_dependency value="component.serial_manager_usb_cdc.MIMXRT798S"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT798S"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT798S" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT798S"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_uart.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT798S" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT798S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_usb_cdc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="usb_cdc_adapter" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxas21002cq.MIMXRT798S" name="fxas21002cq" brief="Driver fxas21002cq" version="1.0.0" full_name="Driver fxas21002cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxas21002cq" project_base_path="gyroscope">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxas.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxas21002cq.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MIMXRT798S" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxls8974cf.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMXRT798S" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxos8700cq" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxos8700cq.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.htu21d.MIMXRT798S" name="htu21d" brief="Driver htu21d" version="1.0.0" full_name="Driver htu21d" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/htu21d" project_base_path="htu">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_htu21d.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_htu21d.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_htu21d.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.icm42688p.MIMXRT798S" name="icm42688p" brief="Driver icm42688p" version="1.0.0" full_name="Driver icm42688p" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/icm42688p" project_base_path="icm42688p">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_icm42688p.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_icm42688p.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_icm42688p.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.lsm6dso.MIMXRT798S" name="lsm6dso" brief="Driver lsm6dso" version="1.0.0" full_name="Driver lsm6dso" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/lsm6dso" project_base_path="tilt_pedo">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lsm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lsm6dso.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.max30101.MIMXRT798S" name="max30101" brief="Driver max30101" version="1.0.0" full_name="Driver max30101" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/max30101" project_base_path="heartrate">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_max30101.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8451q.MIMXRT798S" name="mma8451q" brief="Driver mma8451q" version="1.0.0" full_name="Driver mma8451q" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8451q" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8451q.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8652fc.MIMXRT798S" name="mma8652fc" brief="Driver mma8652fc" version="1.0.0" full_name="Driver mma8652fc" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8652fc" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8652fc.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.p3t1755.MIMXRT798S" name="p3t1755" brief="Driver p3t1755" version="2.0.0" full_name="Driver p3t1755" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/p3t1755" project_base_path="component/p3t1755">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_p3t1755.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_p3t1755.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_p3t1755.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tsl2561.MIMXRT798S" name="tsl2561" brief="Driver tsl2561" version="1.0.0" full_name="Driver tsl2561" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/tsl2561" project_base_path="tsl">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tsl2561.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tsl2561.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tsl2561.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.rtt.MIMXRT798S" name="segger_rtt" brief="SEGGER Real Time Transfer(RTT)" version="7.22.0" full_name="SEGGER RTT" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/rtt" project_base_path="rtt">
      <dependencies>
        <all>
          <component_dependency value="driver.rtt.template.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="License.txt" hidden="true"/>
        <files mask="README.txt" hidden="true"/>
        <files mask="License.txt"/>
        <files mask="README.txt"/>
      </source>
      <source relative_path="RTT" type="src">
        <files mask="SEGGER_RTT.c"/>
        <files mask="SEGGER_RTT_printf.c"/>
      </source>
      <source relative_path="RTT" type="c_include">
        <files mask="SEGGER_RTT.h"/>
      </source>
      <source relative_path="RTT" type="asm_include">
        <files mask="SEGGER_RTT_ASM_ARMv7M.S"/>
      </source>
      <source relative_path="Syscalls" type="src">
        <files mask="SEGGER_RTT_Syscalls_GCC.c"/>
        <files mask="SEGGER_RTT_Syscalls_IAR.c"/>
        <files mask="SEGGER_RTT_Syscalls_KEIL.c"/>
        <files mask="SEGGER_RTT_Syscalls_SES.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rtt.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTT" type="c_include"/>
        <include_path relative_path="RTT" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.trng_adapter.MIMXRT798S" name="trng_adapter" brief="Component trng_adapter" version="1.0.0" full_name="Component trng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.trng.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_trng.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_trng_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.MIMXRT798S" name="psa_crypto_driver_els_pkc" brief="PSA crypto driver for els_pkc" version="1.0.0" full_name="PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_crypto_driver_els_pkc" user_visible="true" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <defines>
        <define name="PSA_CRYPTO_DRIVER_ELS_PKC" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.psa_crypto_driver.osal.baremetal.MIMXRT798S"/>
            <component_dependency value="component.psa_crypto_driver.osal.frtos.MIMXRT798S"/>
          </any_of>
          <component_dependency value="middleware.mbedtls3x.crypto.MIMXRT798S"/>
          <component_dependency value="middleware.mbedtls3x.port.psa_crypto_config.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.psa_driver.MIMXRT798S"/>
          <component_dependency value="component.psa_crypto_driver.els_pkc.common.MIMXRT798S"/>
          <component_dependency value="component.psa_crypto_driver.els_pkc.opaque.MIMXRT798S"/>
          <component_dependency value="component.psa_crypto_driver.els_pkc.oracle.MIMXRT798S"/>
          <component_dependency value="component.psa_crypto_driver.els_pkc.transparent.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="els_pkc" type="c_include">
        <files mask="els_pkc_driver.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc" type="c_include"/>
        <include_path relative_path="els_pkc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.els_pkc.oracle.MIMXRT798S" name="psa_crypto_driver els_pkc_oracle" brief="Oracle of PSA crypto driver for els_pkc" version="1.0.0" full_name="Oracle of PSA crypto driver for els_pkc" category="psa_crypto_driver/psa_crypto_driver_els_pkc_oracle" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <all>
          <component_dependency value="component.psa_crypto_driver.els_pkc.oracle.mimxrt.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="els_pkc/oracle/inc" type="c_include">
        <files mask="mcuxClPsaDriver_Oracle_Interface_builtin_key_ids.h"/>
        <files mask="mcuxClPsaDriver_Oracle_Interface_key_locations.h"/>
        <files mask="mcuxClPsaDriver_Oracle_ElsUtils.h"/>
        <files mask="mcuxClPsaDriver_Oracle_Macros.h"/>
        <files mask="mcuxClPsaDriver_Oracle_Utils.h"/>
      </source>
      <source relative_path="els_pkc/oracle/src" type="src">
        <files mask="mcuxClPsaDriver_Oracle.c"/>
        <files mask="mcuxClPsaDriver_Oracle_ElsUtils.c"/>
        <files mask="mcuxClPsaDriver_Oracle_Utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_els_pkc_oracle.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="els_pkc/oracle/inc" type="c_include"/>
        <include_path relative_path="els_pkc/oracle/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.osal.baremetal.MIMXRT798S" name="psa_crypto_driver osal_baremetal" brief="OS Abstraction Layer for PSA crypto driver on bare metal" version="1.0.0" full_name="PSA crypto driver osal layer for bare metal implementations" category="psa_crypto_driver/psa_crypto_driver_osal_baremetal" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <all>
          <component_dependency value="component.psa_crypto_driver.osal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="osal/baremetal" type="src">
        <files mask="osal_mutex.c"/>
      </source>
      <source relative_path="osal/baremetal" type="c_include">
        <files mask="osal_mutex_platform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_osal_baremetal.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osal/baremetal" type="c_include"/>
        <include_path relative_path="osal/baremetal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.psa_crypto_driver.osal.frtos.MIMXRT798S" name="psa_crypto_driver osal_frtos" brief="OS Abstraction Layer for PSA crypto driver on FreeRTOS" version="1.0.0" full_name="PSA crypto driver osal layer for FreeRTOS" category="psa_crypto_driver/psa_crypto_driver_osal_frtos" user_visible="false" type="software_component" package_base_path="components/psa_crypto_driver" project_base_path="component/psa_crypto_driver">
      <dependencies>
        <all>
          <component_dependency value="component.psa_crypto_driver.osal.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="osal/frtos" type="src">
        <files mask="osal_mutex.c"/>
      </source>
      <source relative_path="osal/frtos" type="c_include">
        <files mask="osal_mutex_platform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_psa_crypto_driver_osal_frtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osal/frtos" type="c_include"/>
        <include_path relative_path="osal/frtos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.power_manager_framework.MIMXRT798S" name="power_manager_core" brief="Component power manager core level" version="2.0.0" full_name="Component power manager core" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/power_manager/core" project_base_path="component/power_manager">
      <defines>
        <define name="GENERIC_LIST_LIGHT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.common.MIMXRT798S"/>
            <component_dependency value="platform.drivers.crc.MIMXRT798S"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pm_core.h"/>
        <files mask="fsl_pm_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pm_core.c"/>
      </source>
      <source relative_path="../devices/MIMXRT798S" type="src">
        <files mask="fsl_pm_device.c"/>
      </source>
      <source relative_path="../devices/MIMXRT798S" type="c_include">
        <files mask="fsl_pm_device.h"/>
        <files mask="fsl_pm_device_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_power_manager_framework.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="../devices/MIMXRT798S" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="../devices/MIMXRT798S" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9420.MIMXRT798S" name="pca9420" brief="Driver pca9420" version="1.0.0" full_name="Driver pca9420" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pca9420" project_base_path="component/pmic/pca9420">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.power.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9420.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9420.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pca9420.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9422.MIMXRT798S" name="pca9422" brief="Driver pca9422" version="1.0.0" full_name="Driver pca9422" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pca9422" project_base_path="component/pmic/pca9422">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="platform.drivers.power.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9422.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9422.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pca9422.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf1550.MIMXRT798S" name="pf1550" brief="Driver pf1550" version="1.0.0" full_name="Driver pf1550" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf1550" project_base_path="component/pmic/pf1550">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf1550.c"/>
        <files mask="fsl_pf1550_charger.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf1550.h"/>
        <files mask="fsl_pf1550_charger.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf1550.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf3000.MIMXRT798S" name="pf3000" brief="Driver pf3000" version="1.0.0" full_name="Driver pf3000" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf3000" project_base_path="component/pmic/pf3000">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf3000.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf3000.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf3000.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf5020.MIMXRT798S" name="pf5020" brief="Driver pf5020" version="2.0.0" full_name="Driver pf5020" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf5020" project_base_path="component/pmic/pf5020">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf5020.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf5020.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf5020.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT798S" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
              </not>
              <component_dependency value="component.osa_bm.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="component.osa_free_rtos.MIMXRT798S"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
            </all>
          </any_of>
          <component_dependency value="component.osa_interface.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.osa_bm.MIMXRT798S" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="0"/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          </not>
          <component_dependency value="component.osa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT798S" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT798S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMXRT798S" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT798S"/>
          <component_dependency value="component.osa_template_config.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT798S" name="log" brief="Component log" version="1.0.0" full_name="Component log" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="utility.str.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console.MIMXRT798S" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="utility.debug_console.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_debug_console.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console_lite.MIMXRT798S" name="log_backend_debug_console_lite" brief="Component log backend debug console lite" version="1.0.0" full_name="Component log backend debug console lite" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_debug_console_lite.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT798S" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_ringbuffer.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT798S" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lists.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.led.MIMXRT798S" name="led" brief="Component led" version="1.0.0" full_name="Component led" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="component.gpio_adapter.MIMXRT798S"/>
          <component_dependency value="platform.drivers.gpio.MIMXRT798S"/>
          <component_dependency value="component.timer_manager.MIMXRT798S"/>
          <component_dependency value="platform.drivers.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_led.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus.MIMXRT798S" name="i3c_bus" brief="Component i3c_bus" version="1.0.1" full_name="Component i3c_bus" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus_adapter.MIMXRT798S" name="i3c_bus_adapter" brief="Component i3c_bus_adapter" version="1.1.0" full_name="Component i3c_bus_adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="component.i3c_bus.MIMXRT798S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_adapter.MIMXRT798S" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <defines>
        <define name="SDK_I3C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT798S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.lpi2c_adapter.MIMXRT798S" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpi2c_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.i2c_adapter_interface.MIMXRT798S" name="i2c_adapter_interface" brief="Component i2c_adapter_interface" version="1.0.0" full_name="Component i2c_adapter_interface" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT798S"/>
              <component_dependency value="component.lpi2c_adapter.MIMXRT798S"/>
            </all>
            <all>
              <component_dependency value="component.i3c_adapter.MIMXRT798S"/>
              <component_dependency value="platform.drivers.i3c.MIMXRT798S"/>
            </all>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i2c_adapter_interface.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.gpio_adapter.MIMXRT798S" name="gpio_adapter" brief="Component gpio_adapter" version="1.0.1" full_name="Component gpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpio.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_gpio_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_xspi.MIMXRT798S" name="flash_nor_xspi" brief="Component flash_nor_xspi" version="1.0.0" full_name="Component flash_nor_xspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.xspi.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
        <files mask="fsl_sfdp_parser.h"/>
      </source>
      <source relative_path="nor/xspi" type="src">
        <files mask="fsl_xspi_nor_flash.c"/>
      </source>
      <source relative_path="nor/xspi" type="c_include">
        <files mask="fsl_xspi_nor_flash.h"/>
      </source>
      <source relative_path="nor" type="src">
        <files mask="fsl_sfdp_parser.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nor_xspi.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/xspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/xspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip.MIMXRT798S" name="mflash onchip" brief="mflash onchip" version="1.0.0" full_name="mflash onchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_xcache.MIMXRT798S"/>
            <component_dependency value="platform.drivers.romapi.MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_onchip.MIMXRT798S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.mflash_offchip.MIMXRT798S" name="mflash offchip" brief="mflash offchip" version="1.0.0" full_name="mflash offchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <defines>
        <define name="MFLASH_FILE_BASEADDR" value="7340032"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_xcache.MIMXRT798S"/>
            <component_dependency value="platform.drivers.romapi.MIMXRT798S"/>
            <component_dependency value="platform.drivers.xspi.MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="mimxrt700" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source relative_path="mimxrt700" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_offchip.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="mimxrt700" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="mimxrt700" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.MIMXRT798S" name="els_pkc" brief="Component els_pkc of Crypto Lib" version="1.9.0" full_name="Component els_pkc" category="els_pkc/els_pkc_main" user_visible="true" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.doc.mimxrt.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.key_derivation.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.platform.mimxrt.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.random_modes_ctr.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.random_modes_hmacdrbg.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.rsa_oaep.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.static_lib.mimxrt.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pkc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.trng.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/inc" type="c_include">
        <files mask="mcuxCl_clns.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.aead.MIMXRT798S" name="els_pkc.aead" brief="Component els_pkc.aead" version="1.9.0" full_name="Component els_pkc.aead" category="els_pkc/els_pkc_aead" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClAead/src" type="src">
        <files mask="mcuxClAead.c"/>
      </source>
      <source relative_path="src/comps/mcuxClAead/inc" type="c_include">
        <files mask="mcuxClAead.h"/>
        <files mask="mcuxClAead_Constants.h"/>
        <files mask="mcuxClAead_Functions.h"/>
        <files mask="mcuxClAead_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClAead/inc/internal" type="c_include">
        <files mask="mcuxClAead_Ctx.h"/>
        <files mask="mcuxClAead_Descriptor.h"/>
        <files mask="mcuxClAead_Internal_Functions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_aead.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAead/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAead/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAead/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAead/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.aead_modes.MIMXRT798S" name="els_pkc.aead_modes" brief="Component els_pkc.aead_modes" version="1.9.0" full_name="Component els_pkc.aead_modes" category="els_pkc/els_pkc_aead_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aead.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClAeadModes/src" type="src">
        <files mask="mcuxClAeadModes_Els_AesCcm.c"/>
        <files mask="mcuxClAeadModes_Els_AesCcmEngine.c"/>
        <files mask="mcuxClAeadModes_Els_AesGcm.c"/>
        <files mask="mcuxClAeadModes_Els_AesGcmEngine.c"/>
        <files mask="mcuxClAeadModes_Els_Modes.c"/>
        <files mask="mcuxClAeadModes_Els_Multipart.c"/>
        <files mask="mcuxClAeadModes_Els_Oneshot.c"/>
      </source>
      <source relative_path="src/comps/mcuxClAeadModes/inc" type="c_include">
        <files mask="mcuxClAeadModes.h"/>
        <files mask="mcuxClAeadModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClAeadModes/inc/internal" type="c_include">
        <files mask="mcuxClAeadModes_Common.h"/>
        <files mask="mcuxClAeadModes_Common_Constants.h"/>
        <files mask="mcuxClAeadModes_Common_Functions.h"/>
        <files mask="mcuxClAeadModes_Els_Algorithms.h"/>
        <files mask="mcuxClAeadModes_Els_Functions.h"/>
        <files mask="mcuxClAeadModes_Els_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_aead_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAeadModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAeadModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAeadModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAeadModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.aes.MIMXRT798S" name="els-pkc aes" brief="Component aes" version="1.9.0" full_name="Component aes" category="els_pkc/els_pkc_aes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.key.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClAes/src" type="src">
        <files mask="mcuxClAes_KeyTypes.c"/>
      </source>
      <source relative_path="src/comps/mcuxClAes/inc" type="c_include">
        <files mask="mcuxClAes.h"/>
        <files mask="mcuxClAes_Constants.h"/>
        <files mask="mcuxClAes_KeyTypes.h"/>
        <files mask="mcuxClAes_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClAes/inc/internal" type="c_include">
        <files mask="mcuxClAes_Ctx.h"/>
        <files mask="mcuxClAes_Internal_Constants.h"/>
        <files mask="mcuxClAes_Internal_Functions.h"/>
        <files mask="mcuxClAes_Wa.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_aes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.buffer.MIMXRT798S" name="els-pkc buffer" brief="Component buffer" version="1.9.0" full_name="Component buffer" category="els_pkc/els_pkc_buffer" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.data_integrity.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClBuffer/src" type="src">
        <files mask="mcuxClBuffer.c"/>
      </source>
      <source relative_path="src/comps/mcuxClBuffer/inc" type="c_include">
        <files mask="mcuxClBuffer.h"/>
        <files mask="mcuxClBuffer_Cfg.h"/>
        <files mask="mcuxClBuffer_Constants.h"/>
        <files mask="mcuxClBuffer_Impl.h"/>
        <files mask="mcuxClBuffer_Pointer.h"/>
      </source>
      <source relative_path="src/comps/mcuxClBuffer/inc/internal" type="c_include">
        <files mask="mcuxClBuffer_Internal.h"/>
        <files mask="mcuxClBuffer_Internal_Pointer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_buffer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.cipher.MIMXRT798S" name="els_pkc.cipher" brief="Component els_pkc.cipher" version="1.9.0" full_name="Component els_pkc.cipher" category="els_pkc/els_pkc_cipher" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClCipher/src" type="src">
        <files mask="mcuxClCipher.c"/>
      </source>
      <source relative_path="src/comps/mcuxClCipher/inc" type="c_include">
        <files mask="mcuxClCipher.h"/>
        <files mask="mcuxClCipher_Constants.h"/>
        <files mask="mcuxClCipher_Functions.h"/>
        <files mask="mcuxClCipher_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClCipher/inc/internal" type="c_include">
        <files mask="mcuxClCipher_Internal.h"/>
        <files mask="mcuxClCipher_Internal_Constants.h"/>
        <files mask="mcuxClCipher_Internal_Functions.h"/>
        <files mask="mcuxClCipher_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_cipher.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCipher/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCipher/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCipher/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCipher/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.cipher_modes.MIMXRT798S" name="els_pkc.cipher" brief="Component els_pkc.cipher" version="1.9.0" full_name="Component els_pkc.cipher_modes" category="els_pkc/els_pkc_cipher_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.cipher.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClCipherModes/src" type="src">
        <files mask="mcuxClCipherModes_Common_Helper.c"/>
        <files mask="mcuxClCipherModes_Crypt_Els_Modes.c"/>
        <files mask="mcuxClCipherModes_Els_Aes.c"/>
        <files mask="mcuxClCipherModes_Els_AesEngine.c"/>
        <files mask="mcuxClCipherModes_Els_Aes_Internal.c"/>
      </source>
      <source relative_path="src/comps/mcuxClCipherModes/inc" type="c_include">
        <files mask="mcuxClCipherModes.h"/>
        <files mask="mcuxClCipherModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClCipherModes/inc/internal" type="c_include">
        <files mask="mcuxClCipherModes_Common.h"/>
        <files mask="mcuxClCipherModes_Common_Constants.h"/>
        <files mask="mcuxClCipherModes_Common_Helper.h"/>
        <files mask="mcuxClCipherModes_Common_Wa.h"/>
        <files mask="mcuxClCipherModes_Els_Algorithms.h"/>
        <files mask="mcuxClCipherModes_Els_Functions.h"/>
        <files mask="mcuxClCipherModes_Els_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_cipher_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCipherModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCipherModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCipherModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCipherModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.common.MIMXRT798S" name="Component els pkc common" brief="Component els pkc common" version="1.9.0" full_name="Component els pkc common" category="els_pkc/els_pkc_common" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/common/src" type="src">
        <files mask="mcuxClOscca_CommonOperations.c"/>
      </source>
      <source relative_path="src/comps/common/inc" type="c_include">
        <files mask="mcuxClOscca_FunctionIdentifiers.h"/>
        <files mask="mcuxClOscca_Memory.h"/>
        <files mask="mcuxClOscca_PlatformTypes.h"/>
        <files mask="mcuxClOscca_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/common/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/common/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.crc.MIMXRT798S" name="els-pkc crc" brief="Component crc" version="1.9.0" full_name="Component crc" category="els_pkc/els_pkc_crc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.data_integrity.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClCrc/src" type="src">
        <files mask="mcuxClCrc.c"/>
        <files mask="mcuxClCrc_Sw.c"/>
      </source>
      <source relative_path="src/comps/mcuxClCrc/inc" type="c_include">
        <files mask="mcuxClCrc.h"/>
      </source>
      <source relative_path="src/comps/mcuxClCrc/inc/internal" type="c_include">
        <files mask="mcuxClCrc_Internal_Constants.h"/>
        <files mask="mcuxClCrc_Internal_Functions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_crc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCrc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCrc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCrc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCrc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.doc.mimxrt.MIMXRT798S" name="els_pkc.doc.mimxrt" brief="Component els_pkc.doc.mimxrt" version="1.9.0" full_name="Component els_pkc.doc.mimxrt" category="els_pkc/doc" user_visible="true" type="software_component" package_base_path="components/els_pkc/" project_base_path="component/els_pkc/">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="doc/mimxrt/html" type="doc">
        <files mask="a00002.html"/>
        <files mask="a00005.html"/>
        <files mask="a00008.html"/>
        <files mask="a00011.html"/>
        <files mask="a00014.html"/>
        <files mask="a00017.html"/>
        <files mask="a00020.html"/>
        <files mask="a00023.html"/>
        <files mask="a00026.html"/>
        <files mask="a00029.html"/>
        <files mask="a00032.html"/>
        <files mask="a00035.html"/>
        <files mask="a00038.html"/>
        <files mask="a00044.html"/>
        <files mask="a00047.html"/>
        <files mask="a00050.html"/>
        <files mask="a00083.html"/>
        <files mask="a00086.html"/>
        <files mask="a00089.html"/>
        <files mask="a00092.html"/>
        <files mask="a00095.html"/>
        <files mask="a00098.html"/>
        <files mask="a00101.html"/>
        <files mask="a00104.html"/>
        <files mask="a00107.html"/>
        <files mask="a00110.html"/>
        <files mask="a00113.html"/>
        <files mask="a00116.html"/>
        <files mask="a00155.html"/>
        <files mask="a00158.html"/>
        <files mask="a00161.html"/>
        <files mask="a00164.html"/>
        <files mask="a00167.html"/>
        <files mask="a00170.html"/>
        <files mask="a00173.html"/>
        <files mask="a00176.html"/>
        <files mask="a00179.html"/>
        <files mask="a00182.html"/>
        <files mask="a00185.html"/>
        <files mask="a00188.html"/>
        <files mask="a00206.html"/>
        <files mask="a00209.html"/>
        <files mask="a00212.html"/>
        <files mask="a00215.html"/>
        <files mask="a00218.html"/>
        <files mask="a00221.html"/>
        <files mask="a00224.html"/>
        <files mask="a00227.html"/>
        <files mask="a00230.html"/>
        <files mask="a00233.html"/>
        <files mask="a00236.html"/>
        <files mask="a00239.html"/>
        <files mask="a00242.html"/>
        <files mask="a00245.html"/>
        <files mask="a00248.html"/>
        <files mask="a00266.html"/>
        <files mask="a00269.html"/>
        <files mask="a00272.html"/>
        <files mask="a00275.html"/>
        <files mask="a00278.html"/>
        <files mask="a00281.html"/>
        <files mask="a00284.html"/>
        <files mask="a00287.html"/>
        <files mask="a00329.html"/>
        <files mask="a00332.html"/>
        <files mask="a00335.html"/>
        <files mask="a00338_source.html"/>
        <files mask="a00341_source.html"/>
        <files mask="a00344.html"/>
        <files mask="a00344_source.html"/>
        <files mask="a00350.html"/>
        <files mask="a00350_source.html"/>
        <files mask="a00353_source.html"/>
        <files mask="a00356.html"/>
        <files mask="a00356_source.html"/>
        <files mask="a00359.html"/>
        <files mask="a00359_source.html"/>
        <files mask="a00362.html"/>
        <files mask="a00362_source.html"/>
        <files mask="a00365.html"/>
        <files mask="a00365_source.html"/>
        <files mask="a00368.html"/>
        <files mask="a00368_source.html"/>
        <files mask="a00371_source.html"/>
        <files mask="a00374.html"/>
        <files mask="a00374_source.html"/>
        <files mask="a00377.html"/>
        <files mask="a00377_source.html"/>
        <files mask="a00380.html"/>
        <files mask="a00380_source.html"/>
        <files mask="a00383.html"/>
        <files mask="a00383_source.html"/>
        <files mask="a00386.html"/>
        <files mask="a00386_source.html"/>
        <files mask="a00389.html"/>
        <files mask="a00389_source.html"/>
        <files mask="a00392.html"/>
        <files mask="a00392_source.html"/>
        <files mask="a00395.html"/>
        <files mask="a00395_source.html"/>
        <files mask="a00398_source.html"/>
        <files mask="a00401.html"/>
        <files mask="a00401_source.html"/>
        <files mask="a00404.html"/>
        <files mask="a00404_source.html"/>
        <files mask="a00407.html"/>
        <files mask="a00407_source.html"/>
        <files mask="a00410.html"/>
        <files mask="a00410_source.html"/>
        <files mask="a00413_source.html"/>
        <files mask="a00416.html"/>
        <files mask="a00416_source.html"/>
        <files mask="a00419.html"/>
        <files mask="a00419_source.html"/>
        <files mask="a00422_source.html"/>
        <files mask="a00425_source.html"/>
        <files mask="a00428.html"/>
        <files mask="a00428_source.html"/>
        <files mask="a00431.html"/>
        <files mask="a00431_source.html"/>
        <files mask="a00434.html"/>
        <files mask="a00434_source.html"/>
        <files mask="a00437.html"/>
        <files mask="a00437_source.html"/>
        <files mask="a00440.html"/>
        <files mask="a00440_source.html"/>
        <files mask="a00443.html"/>
        <files mask="a00443_source.html"/>
        <files mask="a00446.html"/>
        <files mask="a00446_source.html"/>
        <files mask="a00449.html"/>
        <files mask="a00449_source.html"/>
        <files mask="a00452.html"/>
        <files mask="a00452_source.html"/>
        <files mask="a00455.html"/>
        <files mask="a00455_source.html"/>
        <files mask="a00458.html"/>
        <files mask="a00458_source.html"/>
        <files mask="a00461.html"/>
        <files mask="a00461_source.html"/>
        <files mask="a00464.html"/>
        <files mask="a00464_source.html"/>
        <files mask="a00467.html"/>
        <files mask="a00467_source.html"/>
        <files mask="a00470.html"/>
        <files mask="a00470_source.html"/>
        <files mask="a00473.html"/>
        <files mask="a00473_source.html"/>
        <files mask="a00476.html"/>
        <files mask="a00476_source.html"/>
        <files mask="a00479.html"/>
        <files mask="a00479_source.html"/>
        <files mask="a00482.html"/>
        <files mask="a00482_source.html"/>
        <files mask="a00485.html"/>
        <files mask="a00485_source.html"/>
        <files mask="a00488_source.html"/>
        <files mask="a00491_source.html"/>
        <files mask="a00494_source.html"/>
        <files mask="a00497_source.html"/>
        <files mask="a00500_source.html"/>
        <files mask="a00503_source.html"/>
        <files mask="a00506.html"/>
        <files mask="a00506_source.html"/>
        <files mask="a00509.html"/>
        <files mask="a00509_source.html"/>
        <files mask="a00512_source.html"/>
        <files mask="a00515.html"/>
        <files mask="a00515_source.html"/>
        <files mask="a00518.html"/>
        <files mask="a00518_source.html"/>
        <files mask="a00521_source.html"/>
        <files mask="a00524.html"/>
        <files mask="a00524_source.html"/>
        <files mask="a00527.html"/>
        <files mask="a00527_source.html"/>
        <files mask="a00530.html"/>
        <files mask="a00530_source.html"/>
        <files mask="a00533_source.html"/>
        <files mask="a00536.html"/>
        <files mask="a00536_source.html"/>
        <files mask="a00539.html"/>
        <files mask="a00539_source.html"/>
        <files mask="a00542.html"/>
        <files mask="a00542_source.html"/>
        <files mask="a00545.html"/>
        <files mask="a00545_source.html"/>
        <files mask="a00548.html"/>
        <files mask="a00548_source.html"/>
        <files mask="a00551.html"/>
        <files mask="a00551_source.html"/>
        <files mask="a00554.html"/>
        <files mask="a00554_source.html"/>
        <files mask="a00557.html"/>
        <files mask="a00557_source.html"/>
        <files mask="a00560.html"/>
        <files mask="a00560_source.html"/>
        <files mask="a00563.html"/>
        <files mask="a00563_source.html"/>
        <files mask="a00566.html"/>
        <files mask="a00566_source.html"/>
        <files mask="a00569.html"/>
        <files mask="a00569_source.html"/>
        <files mask="a00572_source.html"/>
        <files mask="a00575.html"/>
        <files mask="a00575_source.html"/>
        <files mask="a00578.html"/>
        <files mask="a00578_source.html"/>
        <files mask="a00581_source.html"/>
        <files mask="a00584.html"/>
        <files mask="a00584_source.html"/>
        <files mask="a00587.html"/>
        <files mask="a00587_source.html"/>
        <files mask="a00590_source.html"/>
        <files mask="a00593.html"/>
        <files mask="a00593_source.html"/>
        <files mask="a00596.html"/>
        <files mask="a00596_source.html"/>
        <files mask="a00599.html"/>
        <files mask="a00599_source.html"/>
        <files mask="a00602.html"/>
        <files mask="a00602_source.html"/>
        <files mask="a00605.html"/>
        <files mask="a00605_source.html"/>
        <files mask="a00608_source.html"/>
        <files mask="a00611.html"/>
        <files mask="a00611_source.html"/>
        <files mask="a00614.html"/>
        <files mask="a00614_source.html"/>
        <files mask="a00617.html"/>
        <files mask="a00617_source.html"/>
        <files mask="a00620.html"/>
        <files mask="a00620_source.html"/>
        <files mask="a00623.html"/>
        <files mask="a00623_source.html"/>
        <files mask="a00626.html"/>
        <files mask="a00626_source.html"/>
        <files mask="a00629.html"/>
        <files mask="a00629_source.html"/>
        <files mask="a00632.html"/>
        <files mask="a00632_source.html"/>
        <files mask="a00635.html"/>
        <files mask="a00635_source.html"/>
        <files mask="a00638.html"/>
        <files mask="a00638_source.html"/>
        <files mask="a00641.html"/>
        <files mask="a00641_source.html"/>
        <files mask="a00644.html"/>
        <files mask="a00644_source.html"/>
        <files mask="a00647.html"/>
        <files mask="a00647_source.html"/>
        <files mask="a00650_source.html"/>
        <files mask="a00653.html"/>
        <files mask="a00653_source.html"/>
        <files mask="a00656.html"/>
        <files mask="a00656_source.html"/>
        <files mask="a00659_source.html"/>
        <files mask="a00662.html"/>
        <files mask="a00662_source.html"/>
        <files mask="a00665.html"/>
        <files mask="a00665_source.html"/>
        <files mask="a00668.html"/>
        <files mask="a00668_source.html"/>
        <files mask="a00671.html"/>
        <files mask="a00671_source.html"/>
        <files mask="a00674.html"/>
        <files mask="a00674_source.html"/>
        <files mask="a00677.html"/>
        <files mask="a00677_source.html"/>
        <files mask="a00680.html"/>
        <files mask="a00680_source.html"/>
        <files mask="a00683_source.html"/>
        <files mask="a00686.html"/>
        <files mask="a00686_source.html"/>
        <files mask="a00689_source.html"/>
        <files mask="a00692_source.html"/>
        <files mask="a00695_source.html"/>
        <files mask="a00698.html"/>
        <files mask="a00698_source.html"/>
        <files mask="a00701.html"/>
        <files mask="a00701_source.html"/>
        <files mask="a00704.html"/>
        <files mask="a00704_source.html"/>
        <files mask="a00707.html"/>
        <files mask="a00707_source.html"/>
        <files mask="a00710.html"/>
        <files mask="a00710_source.html"/>
        <files mask="a00713.html"/>
        <files mask="a00713_source.html"/>
        <files mask="a00716.html"/>
        <files mask="a00716_source.html"/>
        <files mask="a00719.html"/>
        <files mask="a00719_source.html"/>
        <files mask="a00722.html"/>
        <files mask="a00722_source.html"/>
        <files mask="a00725.html"/>
        <files mask="a00725_source.html"/>
        <files mask="a00728.html"/>
        <files mask="a00728_source.html"/>
        <files mask="a00731.html"/>
        <files mask="a00731_source.html"/>
        <files mask="a00734.html"/>
        <files mask="a00734_source.html"/>
        <files mask="a00737.html"/>
        <files mask="a00737_source.html"/>
        <files mask="a00740.html"/>
        <files mask="a00740_source.html"/>
        <files mask="a00743.html"/>
        <files mask="a00743_source.html"/>
        <files mask="a00746.html"/>
        <files mask="a00746_source.html"/>
        <files mask="a00749.html"/>
        <files mask="a00749_source.html"/>
        <files mask="a00752.html"/>
        <files mask="a00752_source.html"/>
        <files mask="a00755.html"/>
        <files mask="a00755_source.html"/>
        <files mask="a00758.html"/>
        <files mask="a00758_source.html"/>
        <files mask="a00761.html"/>
        <files mask="a00761_source.html"/>
        <files mask="a00764.html"/>
        <files mask="a00764_source.html"/>
        <files mask="a00767.html"/>
        <files mask="a00767_source.html"/>
        <files mask="a00770.html"/>
        <files mask="a00770_source.html"/>
        <files mask="a00773.html"/>
        <files mask="a00773_source.html"/>
        <files mask="a00776_source.html"/>
        <files mask="a00779_source.html"/>
        <files mask="a00782.html"/>
        <files mask="a00782_source.html"/>
        <files mask="a00785.html"/>
        <files mask="a00785_source.html"/>
        <files mask="a00788.html"/>
        <files mask="a00788_source.html"/>
        <files mask="a00791.html"/>
        <files mask="a00791_source.html"/>
        <files mask="a00794.html"/>
        <files mask="a00794_source.html"/>
        <files mask="a00797.html"/>
        <files mask="a00797_source.html"/>
        <files mask="a00800.html"/>
        <files mask="a00800_source.html"/>
        <files mask="a00803_source.html"/>
        <files mask="a00806.html"/>
        <files mask="a00806_source.html"/>
        <files mask="a00809.html"/>
        <files mask="a00809_source.html"/>
        <files mask="a00812.html"/>
        <files mask="a00812_source.html"/>
        <files mask="a00815.html"/>
        <files mask="a00815_source.html"/>
        <files mask="a00818_source.html"/>
        <files mask="a00821_source.html"/>
        <files mask="a00824_source.html"/>
        <files mask="a00827_source.html"/>
        <files mask="a00830.html"/>
        <files mask="a00830_source.html"/>
        <files mask="a00833_source.html"/>
        <files mask="a00836.html"/>
        <files mask="a00836_source.html"/>
        <files mask="a00839.html"/>
        <files mask="a00839_source.html"/>
        <files mask="a00842.html"/>
        <files mask="a00842_source.html"/>
        <files mask="a00845.html"/>
        <files mask="a00845_source.html"/>
        <files mask="a00848.html"/>
        <files mask="a00848_source.html"/>
        <files mask="a00851.html"/>
        <files mask="a00851_source.html"/>
        <files mask="a00854.html"/>
        <files mask="a00854_source.html"/>
        <files mask="a00857.html"/>
        <files mask="a00857_source.html"/>
        <files mask="a00860.html"/>
        <files mask="a00860_source.html"/>
        <files mask="a00863.html"/>
        <files mask="a00863_source.html"/>
        <files mask="a00866.html"/>
        <files mask="a00866_source.html"/>
        <files mask="a00869.html"/>
        <files mask="a00869_source.html"/>
        <files mask="a00872.html"/>
        <files mask="a00872_source.html"/>
        <files mask="a00875.html"/>
        <files mask="a00875_source.html"/>
        <files mask="a00878.html"/>
        <files mask="a00878_source.html"/>
        <files mask="a00881.html"/>
        <files mask="a00881_source.html"/>
        <files mask="a00884.html"/>
        <files mask="a00884_source.html"/>
        <files mask="a00887.html"/>
        <files mask="a00887_source.html"/>
        <files mask="a00890.html"/>
        <files mask="a00890_source.html"/>
        <files mask="a00893.html"/>
        <files mask="a00893_source.html"/>
        <files mask="a00896.html"/>
        <files mask="a00896_source.html"/>
        <files mask="a00899.html"/>
        <files mask="a00899_source.html"/>
        <files mask="a00902.html"/>
        <files mask="a00902_source.html"/>
        <files mask="a00905.html"/>
        <files mask="a00905_source.html"/>
        <files mask="a00908.html"/>
        <files mask="a00908_source.html"/>
        <files mask="a00911_source.html"/>
        <files mask="a00914.html"/>
        <files mask="a00914_source.html"/>
        <files mask="a00917.html"/>
        <files mask="a00917_source.html"/>
        <files mask="a00920.html"/>
        <files mask="a00920_source.html"/>
        <files mask="a00923.html"/>
        <files mask="a00923_source.html"/>
        <files mask="a00926.html"/>
        <files mask="a00926_source.html"/>
        <files mask="a00929.html"/>
        <files mask="a00929_source.html"/>
        <files mask="a00932.html"/>
        <files mask="a00932_source.html"/>
        <files mask="a00935.html"/>
        <files mask="a00935_source.html"/>
        <files mask="a00938.html"/>
        <files mask="a00938_source.html"/>
        <files mask="a00941.html"/>
        <files mask="a00941_source.html"/>
        <files mask="a00944.html"/>
        <files mask="a00944_source.html"/>
        <files mask="a00947.html"/>
        <files mask="a00947_source.html"/>
        <files mask="a00950.html"/>
        <files mask="a00950_source.html"/>
        <files mask="a00953.html"/>
        <files mask="a00953_source.html"/>
        <files mask="a00956.html"/>
        <files mask="a00956_source.html"/>
        <files mask="a00959.html"/>
        <files mask="a00959_source.html"/>
        <files mask="a00970.html"/>
        <files mask="a00971.html"/>
        <files mask="a00972.html"/>
        <files mask="a00973.html"/>
        <files mask="a00974.html"/>
        <files mask="a00975.html"/>
        <files mask="a00976.html"/>
        <files mask="a00977.html"/>
        <files mask="a00978.html"/>
        <files mask="a00979.html"/>
        <files mask="a00980.html"/>
        <files mask="a00981.html"/>
        <files mask="a00982.html"/>
        <files mask="a00983.html"/>
        <files mask="a00984.html"/>
        <files mask="a00985.html"/>
        <files mask="a00986.html"/>
        <files mask="a00987.html"/>
        <files mask="a00988.html"/>
        <files mask="a00989.html"/>
        <files mask="a00990.html"/>
        <files mask="a00991.html"/>
        <files mask="a00992.html"/>
        <files mask="a00993.html"/>
        <files mask="a00994.html"/>
        <files mask="a00995.html"/>
        <files mask="a00996.html"/>
        <files mask="a00997.html"/>
        <files mask="a00998.html"/>
        <files mask="a00999.html"/>
        <files mask="a01000.html"/>
        <files mask="a01001.html"/>
        <files mask="a01002.html"/>
        <files mask="a01003.html"/>
        <files mask="a01004.html"/>
        <files mask="a01005.html"/>
        <files mask="a01006.html"/>
        <files mask="a01007.html"/>
        <files mask="a01008.html"/>
        <files mask="a01009.html"/>
        <files mask="a01010.html"/>
        <files mask="a01011.html"/>
        <files mask="a01012.html"/>
        <files mask="a01013.html"/>
        <files mask="a01014.html"/>
        <files mask="a01015.html"/>
        <files mask="a01016.html"/>
        <files mask="a01017.html"/>
        <files mask="a01018.html"/>
        <files mask="a01019.html"/>
        <files mask="a01020.html"/>
        <files mask="a01021.html"/>
        <files mask="a01022.html"/>
        <files mask="a01023.html"/>
        <files mask="a01024.html"/>
        <files mask="a01025.html"/>
        <files mask="a01026.html"/>
        <files mask="a01027.html"/>
        <files mask="a01028.html"/>
        <files mask="a01029.html"/>
        <files mask="a01030.html"/>
        <files mask="a01031.html"/>
        <files mask="a01032.html"/>
        <files mask="a01033.html"/>
        <files mask="a01034.html"/>
        <files mask="a01035.html"/>
        <files mask="a01036.html"/>
        <files mask="a01037.html"/>
        <files mask="a01038.html"/>
        <files mask="a01039.html"/>
        <files mask="a01040.html"/>
        <files mask="a01041.html"/>
        <files mask="a01042.html"/>
        <files mask="a01043.html"/>
        <files mask="a01044.html"/>
        <files mask="a01045.html"/>
        <files mask="a01046.html"/>
        <files mask="a01047.html"/>
        <files mask="a01048.html"/>
        <files mask="a01049.html"/>
        <files mask="a01050.html"/>
        <files mask="a01051.html"/>
        <files mask="a01052.html"/>
        <files mask="a01053.html"/>
        <files mask="a01054.html"/>
        <files mask="a01055.html"/>
        <files mask="a01056.html"/>
        <files mask="a01057.html"/>
        <files mask="a01058.html"/>
        <files mask="a01059.html"/>
        <files mask="a01060.html"/>
        <files mask="a01061.html"/>
        <files mask="a01062.html"/>
        <files mask="a01063.html"/>
        <files mask="a01064.html"/>
        <files mask="a01065.html"/>
        <files mask="a01066.html"/>
        <files mask="a01067.html"/>
        <files mask="a01068.html"/>
        <files mask="a01069.html"/>
        <files mask="a01070.html"/>
        <files mask="a01071.html"/>
        <files mask="a01072.html"/>
        <files mask="a01073.html"/>
        <files mask="a01074.html"/>
        <files mask="a01075.html"/>
        <files mask="a01076.html"/>
        <files mask="a01077.html"/>
        <files mask="a01078.html"/>
        <files mask="a01079.html"/>
        <files mask="a01080.html"/>
        <files mask="a01081.html"/>
        <files mask="a01082.html"/>
        <files mask="a01083.html"/>
        <files mask="a01084.html"/>
        <files mask="a01085.html"/>
        <files mask="a01086.html"/>
        <files mask="a01087.html"/>
        <files mask="a01088.html"/>
        <files mask="a01089.html"/>
        <files mask="a01090.html"/>
        <files mask="a01091.html"/>
        <files mask="a01092.html"/>
        <files mask="a01093.html"/>
        <files mask="a01094.html"/>
        <files mask="a01095.html"/>
        <files mask="a01096.html"/>
        <files mask="a01097.html"/>
        <files mask="a01098.html"/>
        <files mask="a01099.html"/>
        <files mask="a01100.html"/>
        <files mask="a01101.html"/>
        <files mask="a01102.html"/>
        <files mask="a01103.html"/>
        <files mask="a01104.html"/>
        <files mask="a01105.html"/>
        <files mask="a01106.html"/>
        <files mask="a01107.html"/>
        <files mask="a01108.html"/>
        <files mask="a01109.html"/>
        <files mask="a01110.html"/>
        <files mask="a01111.html"/>
        <files mask="a01112.html"/>
        <files mask="a01113.html"/>
        <files mask="a01114.html"/>
        <files mask="a01115.html"/>
        <files mask="a01116.html"/>
        <files mask="a01117.html"/>
        <files mask="a01118.html"/>
        <files mask="a01119.html"/>
        <files mask="a01120.html"/>
        <files mask="a01121.html"/>
        <files mask="a01122.html"/>
        <files mask="a01123.html"/>
        <files mask="a01124.html"/>
        <files mask="a01125.html"/>
        <files mask="a01126.html"/>
        <files mask="a01127.html"/>
        <files mask="a01128.html"/>
        <files mask="a01129.html"/>
        <files mask="a01130.html"/>
        <files mask="a01131.html"/>
        <files mask="a01132.html"/>
        <files mask="a01133.html"/>
        <files mask="a01134.html"/>
        <files mask="a01135.html"/>
        <files mask="a01136.html"/>
        <files mask="a01137.html"/>
        <files mask="a01138.html"/>
        <files mask="a01139.html"/>
        <files mask="a01140.html"/>
        <files mask="a01141.html"/>
        <files mask="a01142.html"/>
        <files mask="a01143.html"/>
        <files mask="a01144.html"/>
        <files mask="a01145.html"/>
        <files mask="a01146.html"/>
        <files mask="a01147.html"/>
        <files mask="a01148.html"/>
        <files mask="a01149.html"/>
        <files mask="a01150.html"/>
        <files mask="a01151.html"/>
        <files mask="a01152.html"/>
        <files mask="a01153.html"/>
        <files mask="a01154.html"/>
        <files mask="a01155.html"/>
        <files mask="a01156.html"/>
        <files mask="a01157.html"/>
        <files mask="a01158.html"/>
        <files mask="a01159.html"/>
        <files mask="a01160.html"/>
        <files mask="a01161.html"/>
        <files mask="a01162.html"/>
        <files mask="a01163.html"/>
        <files mask="a01164.html"/>
        <files mask="a01165.html"/>
        <files mask="a01166.html"/>
        <files mask="a01167.html"/>
        <files mask="a01168.html"/>
        <files mask="a01169.html"/>
        <files mask="a01170.html"/>
        <files mask="a01171.html"/>
        <files mask="a01172.html"/>
        <files mask="a01173.html"/>
        <files mask="a01174.html"/>
        <files mask="a01175.html"/>
        <files mask="a01176.html"/>
        <files mask="a01177.html"/>
        <files mask="a01178.html"/>
        <files mask="a01179.html"/>
        <files mask="a01180.html"/>
        <files mask="a01181.html"/>
        <files mask="a01182.html"/>
        <files mask="a01183.html"/>
        <files mask="a01184.html"/>
        <files mask="a01185.html"/>
        <files mask="a01186.html"/>
        <files mask="a01187.html"/>
        <files mask="a01188.html"/>
        <files mask="a01189.html"/>
        <files mask="a01190.html"/>
        <files mask="a01191.html"/>
        <files mask="a01192.html"/>
        <files mask="a01193.html"/>
        <files mask="a01194.html"/>
        <files mask="a01195.html"/>
        <files mask="a01196.html"/>
        <files mask="a01197.html"/>
        <files mask="a01198.html"/>
        <files mask="a01199.html"/>
        <files mask="a01200.html"/>
        <files mask="a01201.html"/>
        <files mask="a01202.html"/>
        <files mask="a01203.html"/>
        <files mask="a01204.html"/>
        <files mask="a01205.html"/>
        <files mask="a01206.html"/>
        <files mask="a01207.html"/>
        <files mask="a01208.html"/>
        <files mask="a01209.html"/>
        <files mask="a01210.html"/>
        <files mask="a01211.html"/>
        <files mask="a01212.html"/>
        <files mask="a01213.html"/>
        <files mask="a01214.html"/>
        <files mask="a01215.html"/>
        <files mask="a01216.html"/>
        <files mask="a01217.html"/>
        <files mask="a01218.html"/>
        <files mask="a01219.html"/>
        <files mask="a01220.html"/>
        <files mask="a01221.html"/>
        <files mask="a01222.html"/>
        <files mask="a01223.html"/>
        <files mask="a01224.html"/>
        <files mask="a01225.html"/>
        <files mask="a01226.html"/>
        <files mask="a01227.html"/>
        <files mask="a01228.html"/>
        <files mask="a01229.html"/>
        <files mask="a01230.html"/>
        <files mask="a01231.html"/>
        <files mask="a01232.html"/>
        <files mask="a01233.html"/>
        <files mask="a01234.html"/>
        <files mask="a01235.html"/>
        <files mask="a01236.html"/>
        <files mask="a01237.html"/>
        <files mask="a01238.html"/>
        <files mask="a01239.html"/>
        <files mask="a01240.html"/>
        <files mask="a01241.html"/>
        <files mask="a01242.html"/>
        <files mask="a01243.html"/>
        <files mask="a01244.html"/>
        <files mask="a01245.html"/>
        <files mask="a01246.html"/>
        <files mask="a01247.html"/>
        <files mask="a01248.html"/>
        <files mask="a01249.html"/>
        <files mask="a01250.html"/>
        <files mask="a01251.html"/>
        <files mask="a01252.html"/>
        <files mask="a01253.html"/>
        <files mask="a01254.html"/>
        <files mask="a01255.html"/>
        <files mask="a01256.html"/>
        <files mask="a01257.html"/>
        <files mask="a01258.html"/>
        <files mask="a01259.html"/>
        <files mask="a01260.html"/>
        <files mask="a01261.html"/>
        <files mask="a01262.html"/>
        <files mask="a01263.html"/>
        <files mask="a01264.html"/>
        <files mask="a01265.html"/>
        <files mask="a01266.html"/>
        <files mask="a01267.html"/>
        <files mask="a01268.html"/>
        <files mask="a01269.html"/>
        <files mask="a01270.html"/>
        <files mask="a01271.html"/>
        <files mask="a01272.html"/>
        <files mask="a01273.html"/>
        <files mask="a01274.html"/>
        <files mask="a01275.html"/>
        <files mask="a01276.html"/>
        <files mask="a01277.html"/>
        <files mask="a01278.html"/>
        <files mask="a01279.html"/>
        <files mask="a01280.html"/>
        <files mask="a01281.html"/>
        <files mask="a01282.html"/>
        <files mask="a01283.html"/>
        <files mask="a01284.html"/>
        <files mask="a01285.html"/>
        <files mask="a01286.html"/>
        <files mask="a01287.html"/>
        <files mask="a01288.html"/>
        <files mask="a01289.html"/>
        <files mask="a01290.html"/>
        <files mask="a01291.html"/>
        <files mask="a01292.html"/>
        <files mask="a01293.html"/>
        <files mask="a01294.html"/>
        <files mask="a01295.html"/>
        <files mask="a01296.html"/>
        <files mask="a01297.html"/>
        <files mask="a01298.html"/>
        <files mask="a01299.html"/>
        <files mask="a01300.html"/>
        <files mask="a01301.html"/>
        <files mask="a01302.html"/>
        <files mask="a01303.html"/>
        <files mask="a01304.html"/>
        <files mask="a01305.html"/>
        <files mask="a01306.html"/>
        <files mask="a01307.html"/>
        <files mask="a01308.html"/>
        <files mask="a01309.html"/>
        <files mask="a01310.html"/>
        <files mask="a01311.html"/>
        <files mask="a01312.html"/>
        <files mask="a01313.html"/>
        <files mask="a01314.html"/>
        <files mask="a01315.html"/>
        <files mask="a01316.html"/>
        <files mask="a01317.html"/>
        <files mask="a01318.html"/>
        <files mask="a01319.html"/>
        <files mask="a01320.html"/>
        <files mask="a01321.html"/>
        <files mask="a01325.html"/>
        <files mask="a01329.html"/>
        <files mask="a01333.html"/>
        <files mask="a01337.html"/>
        <files mask="a01341.html"/>
        <files mask="a01345.html"/>
        <files mask="a01357.html"/>
        <files mask="a01369.html"/>
        <files mask="a01381.html"/>
        <files mask="a01393.html"/>
        <files mask="a01405.html"/>
        <files mask="a01417.html"/>
        <files mask="a01429.html"/>
        <files mask="a01441.html"/>
        <files mask="a01453.html"/>
        <files mask="a01465.html"/>
        <files mask="a01477.html"/>
        <files mask="a01489.html"/>
        <files mask="a01501.html"/>
        <files mask="a01513.html"/>
        <files mask="a01525.html"/>
        <files mask="a01537.html"/>
        <files mask="a01549.html"/>
        <files mask="a01561.html"/>
        <files mask="a01573.html"/>
        <files mask="a01585.html"/>
        <files mask="a01597.html"/>
        <files mask="a01601.html"/>
        <files mask="a01605.html"/>
        <files mask="a01609.html"/>
        <files mask="a01613.html"/>
        <files mask="a01617.html"/>
        <files mask="a01621.html"/>
        <files mask="a01625.html"/>
        <files mask="a01629.html"/>
        <files mask="a01633.html"/>
        <files mask="a01637.html"/>
        <files mask="a01638.html"/>
        <files mask="a01639.html"/>
        <files mask="a01640.html"/>
        <files mask="a01641.html"/>
        <files mask="a01642.html"/>
        <files mask="a01643.html"/>
        <files mask="a01644.html"/>
        <files mask="a01645.html"/>
        <files mask="a01646.html"/>
        <files mask="a01647.html"/>
        <files mask="a01648.html"/>
        <files mask="a01649.html"/>
        <files mask="a01650.html"/>
        <files mask="a01651.html"/>
        <files mask="a01652.html"/>
        <files mask="a01653.html"/>
        <files mask="a01654.html"/>
        <files mask="a01655.html"/>
        <files mask="a01656.html"/>
        <files mask="a01657.html"/>
        <files mask="a01658.html"/>
        <files mask="a01659.html"/>
        <files mask="a01660.html"/>
        <files mask="a01662.html"/>
        <files mask="a01663.html"/>
        <files mask="a01664.html"/>
        <files mask="a01665.html"/>
        <files mask="a01666.html"/>
        <files mask="a01667.html"/>
        <files mask="a01668.html"/>
        <files mask="a01669.html"/>
        <files mask="a01670.html"/>
        <files mask="a01671.html"/>
        <files mask="a01672.html"/>
        <files mask="a01673.html"/>
        <files mask="a01674.html"/>
        <files mask="a01675.html"/>
        <files mask="a01676.html"/>
        <files mask="a01677.html"/>
        <files mask="a01678.html"/>
        <files mask="a01679.html"/>
        <files mask="a01680.html"/>
        <files mask="a01681.html"/>
        <files mask="a01682.html"/>
        <files mask="a01683.html"/>
        <files mask="a01684.html"/>
        <files mask="a01685.html"/>
        <files mask="a01686.html"/>
        <files mask="annotated.html"/>
        <files mask="classes.html"/>
        <files mask="dir_01728041b73b35212f9c70304fbd6941.html"/>
        <files mask="dir_048916002fb1c65ba9d6be0a28513389.html"/>
        <files mask="dir_0797c94a3da61d3c30c38ad4bebd123e.html"/>
        <files mask="dir_1bdd4212147753c6857c0181b7ff2c83.html"/>
        <files mask="dir_1d78cde6907429fc7ff3faa0e60e1934.html"/>
        <files mask="dir_28d394395be6bc3a119407e2b960b555.html"/>
        <files mask="dir_2eb425afb7d84500d7d3970f078e88fc.html"/>
        <files mask="dir_342d2a19aef8359edc7607760d6dc660.html"/>
        <files mask="dir_6bc0e71ed988cab81816d0ae80bcd053.html"/>
        <files mask="dir_74e71b644c96d6e40d1ff18482a65c9e.html"/>
        <files mask="dir_82a750f2c24be1f5a16cb4c1f565aee2.html"/>
        <files mask="dir_8cffc6cb708128322c9c72a5522018bb.html"/>
        <files mask="dir_93a3d8210c4daeaca4440151be6f086e.html"/>
        <files mask="dir_960199fd2ed508bf6c2be3d0bebbc8bf.html"/>
        <files mask="dir_9ece74090cf126cc8b2bfd98a6ff42cf.html"/>
        <files mask="dir_9f351d46ce3cc29445a41dc3a31e6919.html"/>
        <files mask="dir_a13d40520f8ae985d4d198cfc5d51e6a.html"/>
        <files mask="dir_b8182ea4e1b37372cef76e76561b1ea4.html"/>
        <files mask="dir_ba0fb44945174e3a1dfee9a70216b8a3.html"/>
        <files mask="dir_bdcd83523a4251c9ada1d1bef5f265cd.html"/>
        <files mask="dir_cee807ca30de410121475dc4149d4f70.html"/>
        <files mask="dir_cf2e22cc336d983ff0a40174c32a781b.html"/>
        <files mask="dir_d3c412a3a9fc56c33ad18d5c7279a9f5.html"/>
        <files mask="dir_dc0d5cf89cffc2a09430f9942ae4ccc9.html"/>
        <files mask="dir_e84ed773fd520e7d80aa0f353515f48b.html"/>
        <files mask="dir_e96f948b0bc7224829512b9972af9922.html"/>
        <files mask="dir_f46bfce375c7c9364cb686067c441ab2.html"/>
        <files mask="dir_fa7c90738c61d7024a5411d35b756043.html"/>
        <files mask="dir_fd7d019e50012d537437a082fa41cad3.html"/>
        <files mask="doxygen.css"/>
        <files mask="examples.html"/>
        <files mask="files.html"/>
        <files mask="functions.html"/>
        <files mask="functions_a.html"/>
        <files mask="functions_b.html"/>
        <files mask="functions_c.html"/>
        <files mask="functions_d.html"/>
        <files mask="functions_e.html"/>
        <files mask="functions_f.html"/>
        <files mask="functions_g.html"/>
        <files mask="functions_h.html"/>
        <files mask="functions_i.html"/>
        <files mask="functions_k.html"/>
        <files mask="functions_l.html"/>
        <files mask="functions_m.html"/>
        <files mask="functions_o.html"/>
        <files mask="functions_p.html"/>
        <files mask="functions_q.html"/>
        <files mask="functions_r.html"/>
        <files mask="functions_s.html"/>
        <files mask="functions_t.html"/>
        <files mask="functions_u.html"/>
        <files mask="functions_v.html"/>
        <files mask="functions_vars.html"/>
        <files mask="functions_vars_a.html"/>
        <files mask="functions_vars_b.html"/>
        <files mask="functions_vars_c.html"/>
        <files mask="functions_vars_d.html"/>
        <files mask="functions_vars_e.html"/>
        <files mask="functions_vars_f.html"/>
        <files mask="functions_vars_g.html"/>
        <files mask="functions_vars_h.html"/>
        <files mask="functions_vars_i.html"/>
        <files mask="functions_vars_k.html"/>
        <files mask="functions_vars_l.html"/>
        <files mask="functions_vars_m.html"/>
        <files mask="functions_vars_o.html"/>
        <files mask="functions_vars_p.html"/>
        <files mask="functions_vars_q.html"/>
        <files mask="functions_vars_r.html"/>
        <files mask="functions_vars_s.html"/>
        <files mask="functions_vars_t.html"/>
        <files mask="functions_vars_u.html"/>
        <files mask="functions_vars_v.html"/>
        <files mask="functions_vars_w.html"/>
        <files mask="functions_w.html"/>
        <files mask="globals.html"/>
        <files mask="globals_a.html"/>
        <files mask="globals_d.html"/>
        <files mask="globals_defs.html"/>
        <files mask="globals_defs_i.html"/>
        <files mask="globals_defs_m.html"/>
        <files mask="globals_defs_r.html"/>
        <files mask="globals_defs_s.html"/>
        <files mask="globals_defs_u.html"/>
        <files mask="globals_e.html"/>
        <files mask="globals_func.html"/>
        <files mask="globals_func_m.html"/>
        <files mask="globals_g.html"/>
        <files mask="globals_i.html"/>
        <files mask="globals_m.html"/>
        <files mask="globals_p.html"/>
        <files mask="globals_r.html"/>
        <files mask="globals_s.html"/>
        <files mask="globals_type.html"/>
        <files mask="globals_u.html"/>
        <files mask="globals_vars.html"/>
        <files mask="globals_vars_d.html"/>
        <files mask="globals_vars_e.html"/>
        <files mask="globals_vars_g.html"/>
        <files mask="globals_vars_m.html"/>
        <files mask="globals_vars_p.html"/>
        <files mask="globals_vars_r.html"/>
        <files mask="globals_vars_s.html"/>
        <files mask="index.html"/>
        <files mask="modules.html"/>
        <files mask="navtree.css"/>
        <files mask="pages.html"/>
        <files mask="tabs.css"/>
      </source>
      <source relative_path="doc/mimxrt/html" type="script">
        <files mask="a00002.js"/>
        <files mask="a00005.js"/>
        <files mask="a00008.js"/>
        <files mask="a00011.js"/>
        <files mask="a00014.js"/>
        <files mask="a00017.js"/>
        <files mask="a00020.js"/>
        <files mask="a00023.js"/>
        <files mask="a00026.js"/>
        <files mask="a00029.js"/>
        <files mask="a00032.js"/>
        <files mask="a00035.js"/>
        <files mask="a00038.js"/>
        <files mask="a00044.js"/>
        <files mask="a00047.js"/>
        <files mask="a00050.js"/>
        <files mask="a00083.js"/>
        <files mask="a00086.js"/>
        <files mask="a00098.js"/>
        <files mask="a00101.js"/>
        <files mask="a00155.js"/>
        <files mask="a00158.js"/>
        <files mask="a00161.js"/>
        <files mask="a00164.js"/>
        <files mask="a00167.js"/>
        <files mask="a00170.js"/>
        <files mask="a00173.js"/>
        <files mask="a00176.js"/>
        <files mask="a00179.js"/>
        <files mask="a00182.js"/>
        <files mask="a00185.js"/>
        <files mask="a00188.js"/>
        <files mask="a00206.js"/>
        <files mask="a00209.js"/>
        <files mask="a00212.js"/>
        <files mask="a00215.js"/>
        <files mask="a00218.js"/>
        <files mask="a00221.js"/>
        <files mask="a00224.js"/>
        <files mask="a00227.js"/>
        <files mask="a00230.js"/>
        <files mask="a00233.js"/>
        <files mask="a00236.js"/>
        <files mask="a00239.js"/>
        <files mask="a00242.js"/>
        <files mask="a00245.js"/>
        <files mask="a00248.js"/>
        <files mask="a00266.js"/>
        <files mask="a00269.js"/>
        <files mask="a00272.js"/>
        <files mask="a00275.js"/>
        <files mask="a00278.js"/>
        <files mask="a00281.js"/>
        <files mask="a00284.js"/>
        <files mask="a00287.js"/>
        <files mask="a00329.js"/>
        <files mask="a00332.js"/>
        <files mask="a00335.js"/>
        <files mask="a00356.js"/>
        <files mask="a00359.js"/>
        <files mask="a00362.js"/>
        <files mask="a00365.js"/>
        <files mask="a00374.js"/>
        <files mask="a00377.js"/>
        <files mask="a00380.js"/>
        <files mask="a00383.js"/>
        <files mask="a00386.js"/>
        <files mask="a00392.js"/>
        <files mask="a00401.js"/>
        <files mask="a00407.js"/>
        <files mask="a00410.js"/>
        <files mask="a00416.js"/>
        <files mask="a00428.js"/>
        <files mask="a00434.js"/>
        <files mask="a00437.js"/>
        <files mask="a00440.js"/>
        <files mask="a00443.js"/>
        <files mask="a00449.js"/>
        <files mask="a00452.js"/>
        <files mask="a00455.js"/>
        <files mask="a00458.js"/>
        <files mask="a00461.js"/>
        <files mask="a00464.js"/>
        <files mask="a00467.js"/>
        <files mask="a00470.js"/>
        <files mask="a00473.js"/>
        <files mask="a00476.js"/>
        <files mask="a00479.js"/>
        <files mask="a00482.js"/>
        <files mask="a00485.js"/>
        <files mask="a00506.js"/>
        <files mask="a00515.js"/>
        <files mask="a00518.js"/>
        <files mask="a00524.js"/>
        <files mask="a00527.js"/>
        <files mask="a00530.js"/>
        <files mask="a00536.js"/>
        <files mask="a00539.js"/>
        <files mask="a00542.js"/>
        <files mask="a00545.js"/>
        <files mask="a00551.js"/>
        <files mask="a00557.js"/>
        <files mask="a00560.js"/>
        <files mask="a00563.js"/>
        <files mask="a00566.js"/>
        <files mask="a00569.js"/>
        <files mask="a00575.js"/>
        <files mask="a00584.js"/>
        <files mask="a00596.js"/>
        <files mask="a00599.js"/>
        <files mask="a00605.js"/>
        <files mask="a00614.js"/>
        <files mask="a00617.js"/>
        <files mask="a00620.js"/>
        <files mask="a00623.js"/>
        <files mask="a00626.js"/>
        <files mask="a00629.js"/>
        <files mask="a00632.js"/>
        <files mask="a00635.js"/>
        <files mask="a00665.js"/>
        <files mask="a00668.js"/>
        <files mask="a00680.js"/>
        <files mask="a00686.js"/>
        <files mask="a00698.js"/>
        <files mask="a00710.js"/>
        <files mask="a00716.js"/>
        <files mask="a00719.js"/>
        <files mask="a00728.js"/>
        <files mask="a00734.js"/>
        <files mask="a00743.js"/>
        <files mask="a00746.js"/>
        <files mask="a00752.js"/>
        <files mask="a00755.js"/>
        <files mask="a00761.js"/>
        <files mask="a00764.js"/>
        <files mask="a00773.js"/>
        <files mask="a00782.js"/>
        <files mask="a00785.js"/>
        <files mask="a00788.js"/>
        <files mask="a00794.js"/>
        <files mask="a00797.js"/>
        <files mask="a00800.js"/>
        <files mask="a00806.js"/>
        <files mask="a00812.js"/>
        <files mask="a00815.js"/>
        <files mask="a00830.js"/>
        <files mask="a00839.js"/>
        <files mask="a00842.js"/>
        <files mask="a00848.js"/>
        <files mask="a00851.js"/>
        <files mask="a00854.js"/>
        <files mask="a00863.js"/>
        <files mask="a00866.js"/>
        <files mask="a00872.js"/>
        <files mask="a00875.js"/>
        <files mask="a00878.js"/>
        <files mask="a00881.js"/>
        <files mask="a00884.js"/>
        <files mask="a00887.js"/>
        <files mask="a00890.js"/>
        <files mask="a00893.js"/>
        <files mask="a00896.js"/>
        <files mask="a00902.js"/>
        <files mask="a00905.js"/>
        <files mask="a00908.js"/>
        <files mask="a00914.js"/>
        <files mask="a00917.js"/>
        <files mask="a00920.js"/>
        <files mask="a00944.js"/>
        <files mask="a00947.js"/>
        <files mask="a00953.js"/>
        <files mask="a00970.js"/>
        <files mask="a00971.js"/>
        <files mask="a00972.js"/>
        <files mask="a00973.js"/>
        <files mask="a00974.js"/>
        <files mask="a00975.js"/>
        <files mask="a00977.js"/>
        <files mask="a00978.js"/>
        <files mask="a00979.js"/>
        <files mask="a00980.js"/>
        <files mask="a00981.js"/>
        <files mask="a00982.js"/>
        <files mask="a00983.js"/>
        <files mask="a00984.js"/>
        <files mask="a00985.js"/>
        <files mask="a00987.js"/>
        <files mask="a00988.js"/>
        <files mask="a00992.js"/>
        <files mask="a00993.js"/>
        <files mask="a00994.js"/>
        <files mask="a00995.js"/>
        <files mask="a00996.js"/>
        <files mask="a00997.js"/>
        <files mask="a00998.js"/>
        <files mask="a00999.js"/>
        <files mask="a01000.js"/>
        <files mask="a01001.js"/>
        <files mask="a01002.js"/>
        <files mask="a01005.js"/>
        <files mask="a01006.js"/>
        <files mask="a01007.js"/>
        <files mask="a01008.js"/>
        <files mask="a01009.js"/>
        <files mask="a01010.js"/>
        <files mask="a01011.js"/>
        <files mask="a01012.js"/>
        <files mask="a01013.js"/>
        <files mask="a01014.js"/>
        <files mask="a01015.js"/>
        <files mask="a01016.js"/>
        <files mask="a01017.js"/>
        <files mask="a01018.js"/>
        <files mask="a01019.js"/>
        <files mask="a01020.js"/>
        <files mask="a01021.js"/>
        <files mask="a01022.js"/>
        <files mask="a01023.js"/>
        <files mask="a01024.js"/>
        <files mask="a01025.js"/>
        <files mask="a01026.js"/>
        <files mask="a01027.js"/>
        <files mask="a01028.js"/>
        <files mask="a01029.js"/>
        <files mask="a01030.js"/>
        <files mask="a01031.js"/>
        <files mask="a01032.js"/>
        <files mask="a01033.js"/>
        <files mask="a01034.js"/>
        <files mask="a01035.js"/>
        <files mask="a01036.js"/>
        <files mask="a01037.js"/>
        <files mask="a01038.js"/>
        <files mask="a01039.js"/>
        <files mask="a01040.js"/>
        <files mask="a01041.js"/>
        <files mask="a01042.js"/>
        <files mask="a01043.js"/>
        <files mask="a01044.js"/>
        <files mask="a01045.js"/>
        <files mask="a01046.js"/>
        <files mask="a01047.js"/>
        <files mask="a01048.js"/>
        <files mask="a01049.js"/>
        <files mask="a01050.js"/>
        <files mask="a01051.js"/>
        <files mask="a01052.js"/>
        <files mask="a01053.js"/>
        <files mask="a01054.js"/>
        <files mask="a01055.js"/>
        <files mask="a01056.js"/>
        <files mask="a01057.js"/>
        <files mask="a01058.js"/>
        <files mask="a01059.js"/>
        <files mask="a01060.js"/>
        <files mask="a01061.js"/>
        <files mask="a01062.js"/>
        <files mask="a01063.js"/>
        <files mask="a01064.js"/>
        <files mask="a01065.js"/>
        <files mask="a01066.js"/>
        <files mask="a01067.js"/>
        <files mask="a01068.js"/>
        <files mask="a01069.js"/>
        <files mask="a01070.js"/>
        <files mask="a01071.js"/>
        <files mask="a01072.js"/>
        <files mask="a01073.js"/>
        <files mask="a01074.js"/>
        <files mask="a01075.js"/>
        <files mask="a01076.js"/>
        <files mask="a01077.js"/>
        <files mask="a01078.js"/>
        <files mask="a01079.js"/>
        <files mask="a01080.js"/>
        <files mask="a01081.js"/>
        <files mask="a01082.js"/>
        <files mask="a01083.js"/>
        <files mask="a01084.js"/>
        <files mask="a01085.js"/>
        <files mask="a01086.js"/>
        <files mask="a01087.js"/>
        <files mask="a01088.js"/>
        <files mask="a01089.js"/>
        <files mask="a01090.js"/>
        <files mask="a01091.js"/>
        <files mask="a01092.js"/>
        <files mask="a01093.js"/>
        <files mask="a01094.js"/>
        <files mask="a01095.js"/>
        <files mask="a01096.js"/>
        <files mask="a01097.js"/>
        <files mask="a01098.js"/>
        <files mask="a01099.js"/>
        <files mask="a01101.js"/>
        <files mask="a01102.js"/>
        <files mask="a01103.js"/>
        <files mask="a01104.js"/>
        <files mask="a01105.js"/>
        <files mask="a01106.js"/>
        <files mask="a01107.js"/>
        <files mask="a01108.js"/>
        <files mask="a01109.js"/>
        <files mask="a01110.js"/>
        <files mask="a01112.js"/>
        <files mask="a01113.js"/>
        <files mask="a01114.js"/>
        <files mask="a01115.js"/>
        <files mask="a01116.js"/>
        <files mask="a01117.js"/>
        <files mask="a01119.js"/>
        <files mask="a01120.js"/>
        <files mask="a01121.js"/>
        <files mask="a01122.js"/>
        <files mask="a01123.js"/>
        <files mask="a01124.js"/>
        <files mask="a01125.js"/>
        <files mask="a01126.js"/>
        <files mask="a01127.js"/>
        <files mask="a01128.js"/>
        <files mask="a01129.js"/>
        <files mask="a01130.js"/>
        <files mask="a01131.js"/>
        <files mask="a01132.js"/>
        <files mask="a01133.js"/>
        <files mask="a01134.js"/>
        <files mask="a01138.js"/>
        <files mask="a01139.js"/>
        <files mask="a01140.js"/>
        <files mask="a01142.js"/>
        <files mask="a01143.js"/>
        <files mask="a01144.js"/>
        <files mask="a01145.js"/>
        <files mask="a01146.js"/>
        <files mask="a01147.js"/>
        <files mask="a01148.js"/>
        <files mask="a01149.js"/>
        <files mask="a01153.js"/>
        <files mask="a01154.js"/>
        <files mask="a01155.js"/>
        <files mask="a01156.js"/>
        <files mask="a01157.js"/>
        <files mask="a01158.js"/>
        <files mask="a01159.js"/>
        <files mask="a01160.js"/>
        <files mask="a01161.js"/>
        <files mask="a01162.js"/>
        <files mask="a01163.js"/>
        <files mask="a01164.js"/>
        <files mask="a01165.js"/>
        <files mask="a01170.js"/>
        <files mask="a01171.js"/>
        <files mask="a01172.js"/>
        <files mask="a01173.js"/>
        <files mask="a01174.js"/>
        <files mask="a01176.js"/>
        <files mask="a01177.js"/>
        <files mask="a01178.js"/>
        <files mask="a01179.js"/>
        <files mask="a01180.js"/>
        <files mask="a01181.js"/>
        <files mask="a01182.js"/>
        <files mask="a01183.js"/>
        <files mask="a01184.js"/>
        <files mask="a01185.js"/>
        <files mask="a01186.js"/>
        <files mask="a01187.js"/>
        <files mask="a01188.js"/>
        <files mask="a01189.js"/>
        <files mask="a01190.js"/>
        <files mask="a01191.js"/>
        <files mask="a01192.js"/>
        <files mask="a01193.js"/>
        <files mask="a01194.js"/>
        <files mask="a01195.js"/>
        <files mask="a01196.js"/>
        <files mask="a01197.js"/>
        <files mask="a01198.js"/>
        <files mask="a01199.js"/>
        <files mask="a01200.js"/>
        <files mask="a01202.js"/>
        <files mask="a01203.js"/>
        <files mask="a01204.js"/>
        <files mask="a01205.js"/>
        <files mask="a01206.js"/>
        <files mask="a01207.js"/>
        <files mask="a01208.js"/>
        <files mask="a01209.js"/>
        <files mask="a01210.js"/>
        <files mask="a01211.js"/>
        <files mask="a01212.js"/>
        <files mask="a01213.js"/>
        <files mask="a01214.js"/>
        <files mask="a01215.js"/>
        <files mask="a01216.js"/>
        <files mask="a01217.js"/>
        <files mask="a01218.js"/>
        <files mask="a01219.js"/>
        <files mask="a01220.js"/>
        <files mask="a01221.js"/>
        <files mask="a01222.js"/>
        <files mask="a01223.js"/>
        <files mask="a01224.js"/>
        <files mask="a01225.js"/>
        <files mask="a01226.js"/>
        <files mask="a01227.js"/>
        <files mask="a01228.js"/>
        <files mask="a01229.js"/>
        <files mask="a01230.js"/>
        <files mask="a01231.js"/>
        <files mask="a01232.js"/>
        <files mask="a01233.js"/>
        <files mask="a01234.js"/>
        <files mask="a01235.js"/>
        <files mask="a01236.js"/>
        <files mask="a01237.js"/>
        <files mask="a01238.js"/>
        <files mask="a01239.js"/>
        <files mask="a01240.js"/>
        <files mask="a01241.js"/>
        <files mask="a01242.js"/>
        <files mask="a01243.js"/>
        <files mask="a01244.js"/>
        <files mask="a01245.js"/>
        <files mask="a01246.js"/>
        <files mask="a01247.js"/>
        <files mask="a01248.js"/>
        <files mask="a01249.js"/>
        <files mask="a01250.js"/>
        <files mask="a01256.js"/>
        <files mask="a01257.js"/>
        <files mask="a01258.js"/>
        <files mask="a01260.js"/>
        <files mask="a01261.js"/>
        <files mask="a01262.js"/>
        <files mask="a01263.js"/>
        <files mask="a01264.js"/>
        <files mask="a01265.js"/>
        <files mask="a01298.js"/>
        <files mask="a01299.js"/>
        <files mask="a01301.js"/>
        <files mask="a01302.js"/>
        <files mask="a01303.js"/>
        <files mask="a01304.js"/>
        <files mask="a01305.js"/>
        <files mask="a01306.js"/>
        <files mask="a01307.js"/>
        <files mask="a01308.js"/>
        <files mask="a01309.js"/>
        <files mask="a01310.js"/>
        <files mask="a01311.js"/>
        <files mask="a01312.js"/>
        <files mask="a01313.js"/>
        <files mask="a01314.js"/>
        <files mask="a01315.js"/>
        <files mask="a01316.js"/>
        <files mask="a01317.js"/>
        <files mask="a01318.js"/>
        <files mask="a01319.js"/>
        <files mask="a01320.js"/>
        <files mask="a01321.js"/>
        <files mask="a01325.js"/>
        <files mask="a01329.js"/>
        <files mask="a01333.js"/>
        <files mask="a01337.js"/>
        <files mask="a01341.js"/>
        <files mask="a01345.js"/>
        <files mask="a01357.js"/>
        <files mask="a01369.js"/>
        <files mask="a01381.js"/>
        <files mask="a01393.js"/>
        <files mask="a01405.js"/>
        <files mask="a01417.js"/>
        <files mask="a01429.js"/>
        <files mask="a01441.js"/>
        <files mask="a01453.js"/>
        <files mask="a01465.js"/>
        <files mask="a01477.js"/>
        <files mask="a01489.js"/>
        <files mask="a01501.js"/>
        <files mask="a01513.js"/>
        <files mask="a01525.js"/>
        <files mask="a01537.js"/>
        <files mask="a01549.js"/>
        <files mask="a01561.js"/>
        <files mask="a01573.js"/>
        <files mask="a01585.js"/>
        <files mask="a01601.js"/>
        <files mask="a01609.js"/>
        <files mask="a01613.js"/>
        <files mask="a01617.js"/>
        <files mask="a01621.js"/>
        <files mask="a01625.js"/>
        <files mask="a01629.js"/>
        <files mask="a01633.js"/>
        <files mask="a01637.js"/>
        <files mask="annotated_dup.js"/>
        <files mask="dir_01728041b73b35212f9c70304fbd6941.js"/>
        <files mask="dir_048916002fb1c65ba9d6be0a28513389.js"/>
        <files mask="dir_0797c94a3da61d3c30c38ad4bebd123e.js"/>
        <files mask="dir_1d78cde6907429fc7ff3faa0e60e1934.js"/>
        <files mask="dir_28d394395be6bc3a119407e2b960b555.js"/>
        <files mask="dir_342d2a19aef8359edc7607760d6dc660.js"/>
        <files mask="dir_6bc0e71ed988cab81816d0ae80bcd053.js"/>
        <files mask="dir_74e71b644c96d6e40d1ff18482a65c9e.js"/>
        <files mask="dir_82a750f2c24be1f5a16cb4c1f565aee2.js"/>
        <files mask="dir_93a3d8210c4daeaca4440151be6f086e.js"/>
        <files mask="dir_960199fd2ed508bf6c2be3d0bebbc8bf.js"/>
        <files mask="dir_a13d40520f8ae985d4d198cfc5d51e6a.js"/>
        <files mask="dir_b8182ea4e1b37372cef76e76561b1ea4.js"/>
        <files mask="dir_ba0fb44945174e3a1dfee9a70216b8a3.js"/>
        <files mask="dir_d3c412a3a9fc56c33ad18d5c7279a9f5.js"/>
        <files mask="dir_dc0d5cf89cffc2a09430f9942ae4ccc9.js"/>
        <files mask="dir_e84ed773fd520e7d80aa0f353515f48b.js"/>
        <files mask="dir_e96f948b0bc7224829512b9972af9922.js"/>
        <files mask="dir_fd7d019e50012d537437a082fa41cad3.js"/>
        <files mask="dynsections.js"/>
        <files mask="examples.js"/>
        <files mask="files_dup.js"/>
        <files mask="functions_dup.js"/>
        <files mask="functions_vars.js"/>
        <files mask="globals_defs.js"/>
        <files mask="globals_dup.js"/>
        <files mask="globals_func.js"/>
        <files mask="globals_vars.js"/>
        <files mask="index.js"/>
        <files mask="jquery.js"/>
        <files mask="modules.js"/>
        <files mask="navtree.js"/>
        <files mask="navtreedata.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="navtreeindex10.js"/>
        <files mask="navtreeindex11.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="navtreeindex4.js"/>
        <files mask="navtreeindex5.js"/>
        <files mask="navtreeindex6.js"/>
        <files mask="navtreeindex7.js"/>
        <files mask="navtreeindex8.js"/>
        <files mask="navtreeindex9.js"/>
        <files mask="resize.js"/>
      </source>
      <source relative_path="doc/mimxrt/html" type="image">
        <files mask="bc_s.png"/>
        <files mask="bc_sd.png"/>
        <files mask="closed.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_fd.png"/>
        <files mask="nav_g.png"/>
        <files mask="nav_h.png"/>
        <files mask="nav_hd.png"/>
        <files mask="open.png"/>
        <files mask="splitbar.png"/>
        <files mask="splitbard.png"/>
        <files mask="sync_off.png"/>
        <files mask="sync_on.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_ad.png"/>
        <files mask="tab_b.png"/>
        <files mask="tab_bd.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_hd.png"/>
        <files mask="tab_s.png"/>
        <files mask="tab_sd.png"/>
      </source>
      <source relative_path="doc/mimxrt/html" type="other">
        <files mask="doc.svg"/>
        <files mask="docd.svg"/>
        <files mask="doxygen.svg"/>
        <files mask="folderclosed.svg"/>
        <files mask="folderclosedd.svg"/>
        <files mask="folderopen.svg"/>
        <files mask="folderopend.svg"/>
      </source>
      <source relative_path="doc/mimxrt/html/search" type="script">
        <files mask="all_0.js"/>
        <files mask="all_1.js"/>
        <files mask="all_10.js"/>
        <files mask="all_11.js"/>
        <files mask="all_12.js"/>
        <files mask="all_13.js"/>
        <files mask="all_14.js"/>
        <files mask="all_15.js"/>
        <files mask="all_2.js"/>
        <files mask="all_3.js"/>
        <files mask="all_4.js"/>
        <files mask="all_5.js"/>
        <files mask="all_6.js"/>
        <files mask="all_7.js"/>
        <files mask="all_8.js"/>
        <files mask="all_9.js"/>
        <files mask="all_a.js"/>
        <files mask="all_b.js"/>
        <files mask="all_c.js"/>
        <files mask="all_d.js"/>
        <files mask="all_e.js"/>
        <files mask="all_f.js"/>
        <files mask="classes_0.js"/>
        <files mask="defines_0.js"/>
        <files mask="defines_1.js"/>
        <files mask="defines_2.js"/>
        <files mask="defines_3.js"/>
        <files mask="files_0.js"/>
        <files mask="functions_0.js"/>
        <files mask="functions_1.js"/>
        <files mask="groups_0.js"/>
        <files mask="groups_1.js"/>
        <files mask="groups_2.js"/>
        <files mask="groups_3.js"/>
        <files mask="groups_4.js"/>
        <files mask="groups_5.js"/>
        <files mask="groups_6.js"/>
        <files mask="groups_7.js"/>
        <files mask="groups_8.js"/>
        <files mask="groups_9.js"/>
        <files mask="groups_a.js"/>
        <files mask="groups_b.js"/>
        <files mask="groups_c.js"/>
        <files mask="groups_d.js"/>
        <files mask="pages_0.js"/>
        <files mask="pages_1.js"/>
        <files mask="search.js"/>
        <files mask="searchdata.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="variables_0.js"/>
        <files mask="variables_1.js"/>
        <files mask="variables_10.js"/>
        <files mask="variables_11.js"/>
        <files mask="variables_12.js"/>
        <files mask="variables_13.js"/>
        <files mask="variables_14.js"/>
        <files mask="variables_15.js"/>
        <files mask="variables_2.js"/>
        <files mask="variables_3.js"/>
        <files mask="variables_4.js"/>
        <files mask="variables_5.js"/>
        <files mask="variables_6.js"/>
        <files mask="variables_7.js"/>
        <files mask="variables_8.js"/>
        <files mask="variables_9.js"/>
        <files mask="variables_a.js"/>
        <files mask="variables_b.js"/>
        <files mask="variables_c.js"/>
        <files mask="variables_d.js"/>
        <files mask="variables_e.js"/>
        <files mask="variables_f.js"/>
      </source>
      <source relative_path="doc/mimxrt/html/search" type="other">
        <files mask="close.svg"/>
        <files mask="mag.svg"/>
        <files mask="mag_d.svg"/>
        <files mask="mag_sel.svg"/>
        <files mask="mag_seld.svg"/>
      </source>
      <source relative_path="doc/mimxrt/html/search" type="doc">
        <files mask="search.css"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="LA_OPT_Online_Code_Hosting.htm"/>
        <files mask="softwareContentRegister.txt"/>
        <files mask="ReleaseNotes.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_doc_mimxrt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.ecc.MIMXRT798S" name="els_pkc.ecc" brief="Component els_pkc.ecc" version="1.9.0" full_name="Component els_pkc.ecc" category="els_pkc/els_pkc_ecc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClEcc/src" type="src">
        <files mask="mcuxClEcc_Constants.c"/>
        <files mask="mcuxClEcc_ECDSA_GenerateProtocolDescriptor.c"/>
        <files mask="mcuxClEcc_ECDSA_Internal_BlindedSecretKeyGen.c"/>
        <files mask="mcuxClEcc_ECDSA_Internal_BlindedSecretKeyGen_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateKeyPair.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateKeyPair_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignature.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignatureMode.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignature_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_InitPrivKeyInputMode.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_CalcHashModN.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_CalcHashModN_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_DecodePoint_Ed25519.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_DecodePoint_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_EncodePoint.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_SetupEnvironment.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_SignatureMechanisms.c"/>
        <files mask="mcuxClEcc_EdDSA_VerifySignature.c"/>
        <files mask="mcuxClEcc_Internal_BlindedScalarMult.c"/>
        <files mask="mcuxClEcc_Internal_Convert_FUP.c"/>
        <files mask="mcuxClEcc_Internal_GenerateMultiplicativeBlinding.c"/>
        <files mask="mcuxClEcc_Internal_InterleaveScalar.c"/>
        <files mask="mcuxClEcc_Internal_InterleaveTwoScalars.c"/>
        <files mask="mcuxClEcc_Internal_Interleave_FUP.c"/>
        <files mask="mcuxClEcc_Internal_PointComparison_FUP.c"/>
        <files mask="mcuxClEcc_Internal_RecodeAndReorderScalar.c"/>
        <files mask="mcuxClEcc_Internal_SetupEnvironment.c"/>
        <files mask="mcuxClEcc_Internal_SetupEnvironment_FUP.c"/>
        <files mask="mcuxClEcc_Internal_Types.c"/>
        <files mask="mcuxClEcc_KeyTypes.c"/>
        <files mask="mcuxClEcc_MontDH_GenerateKeyPair.c"/>
        <files mask="mcuxClEcc_MontDH_KeyAgreement.c"/>
        <files mask="mcuxClEcc_Mont_Internal_DhSetupEnvironment.c"/>
        <files mask="mcuxClEcc_Mont_Internal_MontDhX.c"/>
        <files mask="mcuxClEcc_Mont_Internal_MontDhX_FUP.c"/>
        <files mask="mcuxClEcc_Mont_Internal_SecureScalarMult_XZMontLadder.c"/>
        <files mask="mcuxClEcc_Mont_Internal_SecureScalarMult_XZMontLadder_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_FixScalarMult.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PlainFixScalarMult25519.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PlainPtrSelectComb.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PlainPtrSelectML.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PlainVarScalarMult.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmetic.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmetic_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmeticEd25519.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmeticEd25519_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointSubtraction_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointValidation_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PrecPointImportAndValidate.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_VarScalarMult.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_VarScalarMult_FUP.c"/>
        <files mask="mcuxClEcc_WeierECC_Internal_BlindedSecretKeyGen.c"/>
        <files mask="mcuxClEcc_WeierECC_Internal_BlindedSecretKeyGen_FUP.c"/>
        <files mask="mcuxClEcc_WeierECC_Internal_GenerateKeyPair.c"/>
        <files mask="mcuxClEcc_WeierECC_Internal_SetupEnvironment.c"/>
        <files mask="mcuxClEcc_Weier_Internal_ConvertPoint_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointArithmetic.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointArithmetic_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointCheck.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointCheck_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointMult.c"/>
        <files mask="mcuxClEcc_Weier_Internal_SecurePointMult_CoZMontLadder.c"/>
        <files mask="mcuxClEcc_Weier_Internal_SecurePointMult_CoZMontLadder_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_SetupEnvironment.c"/>
        <files mask="mcuxClEcc_Weier_KeyGen.c"/>
        <files mask="mcuxClEcc_Weier_KeyGen_FUP.c"/>
        <files mask="mcuxClEcc_Weier_PointMult.c"/>
        <files mask="mcuxClEcc_Weier_PointMult_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Sign.c"/>
        <files mask="mcuxClEcc_Weier_Sign_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Verify.c"/>
        <files mask="mcuxClEcc_Weier_Verify_FUP.c"/>
      </source>
      <source relative_path="src/comps/mcuxClEcc/inc" type="c_include">
        <files mask="mcuxClEcc.h"/>
        <files mask="mcuxClEcc_Constants.h"/>
        <files mask="mcuxClEcc_EdDSA_GenerateKeyPair_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignature_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal_CalcHashModN_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal_DecodePoint_FUP.h"/>
        <files mask="mcuxClEcc_Functions.h"/>
        <files mask="mcuxClEcc_Internal_Convert_FUP.h"/>
        <files mask="mcuxClEcc_Internal_Interleave_FUP.h"/>
        <files mask="mcuxClEcc_Internal_PointComparison_FUP.h"/>
        <files mask="mcuxClEcc_Internal_SetupEnvironment_FUP.h"/>
        <files mask="mcuxClEcc_KeyTypes.h"/>
        <files mask="mcuxClEcc_Mont_Internal_MontDhX_FUP.h"/>
        <files mask="mcuxClEcc_Mont_Internal_SecureScalarMult_XZMontLadder_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmeticEd25519_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointSubtraction_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmetic_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointValidation_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_VarScalarMult_FUP.h"/>
        <files mask="mcuxClEcc_Types.h"/>
        <files mask="mcuxClEcc_WeierECC_Internal_BlindedSecretKeyGen_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_ConvertPoint_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_PointArithmetic_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_PointCheck_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_SecurePointMult_CoZMontLadder_FUP.h"/>
        <files mask="mcuxClEcc_Weier_KeyGen_FUP.h"/>
        <files mask="mcuxClEcc_Weier_PointMult_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Sign_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Verify_FUP.h"/>
      </source>
      <source relative_path="src/comps/mcuxClEcc/inc/internal" type="c_include">
        <files mask="mcuxClEcc_ECDH_Internal.h"/>
        <files mask="mcuxClEcc_ECDSA_Internal.h"/>
        <files mask="mcuxClEcc_ECDSA_Internal_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal_Hash.h"/>
        <files mask="mcuxClEcc_Internal.h"/>
        <files mask="mcuxClEcc_Internal_FUP.h"/>
        <files mask="mcuxClEcc_Internal_PkcWaLayout.h"/>
        <files mask="mcuxClEcc_Internal_Random.h"/>
        <files mask="mcuxClEcc_Internal_SecurePointSelect.h"/>
        <files mask="mcuxClEcc_Internal_UPTRT_access.h"/>
        <files mask="mcuxClEcc_Mont_Internal.h"/>
        <files mask="mcuxClEcc_Mont_Internal_FUP.h"/>
        <files mask="mcuxClEcc_Mont_Internal_PkcWaLayout.h"/>
        <files mask="mcuxClEcc_TwEd_Internal.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PkcWaLayout.h"/>
        <files mask="mcuxClEcc_WeierEcc_KeyGenerate_Internal.h"/>
        <files mask="mcuxClEcc_Weier_Internal.h"/>
        <files mask="mcuxClEcc_Weier_Internal_FP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_PkcWaLayout.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_ecc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.els.MIMXRT798S" name="els" brief="Component els" version="1.9.0" full_name="Component els" category="els_pkc/els_pkc_els" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aead_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.cipher_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.core.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.data_integrity.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.els_common.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.els_header_only.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.hash.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.key.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.mac_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClEls/src" type="src">
        <files mask="mcuxClEls_Aead.c"/>
        <files mask="mcuxClEls_Cipher.c"/>
        <files mask="mcuxClEls_Cmac.c"/>
        <files mask="mcuxClEls_Ecc.c"/>
        <files mask="mcuxClEls_Hash.c"/>
        <files mask="mcuxClEls_Hmac.c"/>
        <files mask="mcuxClEls_Kdf.c"/>
        <files mask="mcuxClEls_Rng.c"/>
        <files mask="mcuxClEls_KeyManagement.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_els.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.els_common.MIMXRT798S" name="els_pkc.els_common" brief="Component els_pkc els_common" version="1.9.0" full_name="Component els_pkc els_common" category="els_pkc/els_pkc_els_common" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClEls/src" type="src">
        <files mask="mcuxClEls_Common.c"/>
      </source>
      <source relative_path="src/comps/mcuxClEls/inc" type="c_include">
        <files mask="mcuxClEls_Common.h"/>
      </source>
      <source relative_path="src/comps/mcuxClEls/inc/internal" type="c_include">
        <files mask="mcuxClEls_Internal_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_els_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples.MIMXRT798S" name="els_pkc_test" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.examples_random_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_aead.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_cipher_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_ecc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_hash_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_hmac.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_key.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_mac_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.examples_rsa.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pkc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.random_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.els_pkc.examples_aead.MIMXRT798S" name="els_pkc_test_aead" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_aead" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.padding.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClAeadModes" type="src">
        <files mask="mcuxClAeadModes_Els_Ccm_Aes128_Multipart_example.c"/>
        <files mask="mcuxClAeadModes_Els_Ccm_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClAeadModes_Els_Gcm_Aes128_Oneshot_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_aead.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_cipher_modes.MIMXRT798S" name="els_pkc_test_cipher" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_cipher" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClCipherModes" type="src">
        <files mask="mcuxClCipherModes_Els_Cbc_Aes128_Multipart_example.c"/>
        <files mask="mcuxClCipherModes_Els_Cbc_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClCipherModes_Els_Cbc_Aes128_Oneshot_PaddingZero_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ctr_Aes128_Multipart_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ctr_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Multipart_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Multipart_PaddingPKCS7_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Oneshot_PaddingPKCS7_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Oneshot_PaddingZero_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_cipher_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_ecc.MIMXRT798S" name="els_pkc_test_ecc" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_ecc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClEcc" type="src">
        <files mask="mcuxClEcc_EdDSA_Ed25519ctx_example.c"/>
        <files mask="mcuxClEcc_EdDSA_Ed25519ph_example.c"/>
        <files mask="mcuxClEcc_EdDSA_Ed25519_example.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignature_Ed25519_example.c"/>
        <files mask="mcuxClEcc_EdDSA_VerifySignature_Ed25519_example.c"/>
        <files mask="mcuxClEcc_MontDH_Curve25519_example.c"/>
        <files mask="mcuxClEcc_MontDH_Curve448_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_ecc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_els.MIMXRT798S" name="els_pkc_test_els" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_els" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClEls" type="src">
        <files mask="mcuxClEls_Cipher_Aes128_Cbc_Encrypt_example.c"/>
        <files mask="mcuxClEls_Cipher_Aes128_Ecb_Encrypt_example.c"/>
        <files mask="mcuxClEls_Common_Get_Info_example.c"/>
        <files mask="mcuxClEls_Ecc_Keygen_Sign_Verify_example.c"/>
        <files mask="mcuxClEls_Hash_HW_Security_Counter_example.c"/>
        <files mask="mcuxClEls_Hash_Sha224_One_Block_example.c"/>
        <files mask="mcuxClEls_Hash_Sha256_One_Block_example.c"/>
        <files mask="mcuxClEls_Hash_Sha384_One_Block_example.c"/>
        <files mask="mcuxClEls_Hash_Sha512_One_Block_example.c"/>
        <files mask="mcuxClEls_Rng_Prng_Get_Random_example.c"/>
        <files mask="mcuxClEls_Tls_Master_Key_Session_Keys_example.c"/>
      </source>
      <source relative_path="examples/mcuxClRandomModes" type="src">
        <files mask="mcuxClRandomModes_ELS_example.c"/>
      </source>
      <source relative_path="src/comps/mcuxClExample/inc" type="c_include">
        <files mask="mcuxClExample_ELS_Helper.h"/>
        <files mask="mcuxClExample_ELS_Key_Helper.h"/>
        <files mask="mcuxClExample_Key_Helper.h"/>
        <files mask="mcuxClExample_RFC3394_Helper.h"/>
        <files mask="mcuxClExample_RNG_Helper.h"/>
        <files mask="mcuxClExample_Session_Helper.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_els.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_flow_protection.MIMXRT798S" name="els_pkc_test_flow_protection" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_flow_protection" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxCsslFlowProtection" type="src">
        <files mask="mcuxCsslFlowProtection_example.c"/>
      </source>
      <source relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include">
        <files mask="mcuxCsslExamples.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_flow_protection.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_hash_modes.MIMXRT798S" name="els_pkc_test_hash_modes" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_hash_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClHashModes" type="src">
        <files mask="mcuxClHashModes_sha1_longMsgOneshot_example.c"/>
        <files mask="mcuxClHashModes_sha1_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha1_streaming_example.c"/>
        <files mask="mcuxClHashModes_sha224_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha256_longMsgOneshot_example.c"/>
        <files mask="mcuxClHashModes_sha256_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha256_streaming_example.c"/>
        <files mask="mcuxClHashModes_sha384_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha512_224_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha512_256_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha512_256_streaming_example.c"/>
        <files mask="mcuxClHashModes_sha512_oneshot_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_hash_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_hmac.MIMXRT798S" name="els_pkc_test_hmac" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_hmac" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClHmac" type="src">
        <files mask="mcuxClHmac_Els_Oneshot_External_Key_example.c"/>
        <files mask="mcuxClHmac_Sw_Multipart_example.c"/>
        <files mask="mcuxClHmac_Sw_Oneshot_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_hmac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_key.MIMXRT798S" name="els_pkc_test_key" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_key" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClKey" type="src">
        <files mask="mcuxClKey_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_key.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_mac_modes.MIMXRT798S" name="els_pkc_test_mac_modes" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_mac_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.mac.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClMacModes" type="src">
        <files mask="mcuxClMacModes_Els_Cbcmac_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClMacModes_Els_Cbcmac_Aes256_Multipart_PaddingZero_example.c"/>
        <files mask="mcuxClMacModes_Els_Cmac_Aes128_Oneshot_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_mac_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_memory.MIMXRT798S" name="els_pkc_test_memory" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_memory" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxCsslMemory" type="src">
        <files mask="mcuxCsslMemory_Clear_example.c"/>
        <files mask="mcuxCsslMemory_Compare_example.c"/>
        <files mask="mcuxCsslMemory_Copy_example.c"/>
        <files mask="mcuxCsslMemory_Set_example.c"/>
      </source>
      <source relative_path="examples/mcuxCsslMemory/inc" type="c_include">
        <files mask="mcuxCsslMemory_Examples.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_memory.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_random_modes.MIMXRT798S" name="els_pkc_test_random_modes" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_random_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClRandomModes" type="src">
        <files mask="mcuxClRandomModes_CtrDrbg_AES256_DRG3_example.c"/>
        <files mask="mcuxClRandomModes_CtrDrbg_AES256_DRG4_example.c"/>
        <files mask="mcuxClRandomModes_CtrDrbg_AES256_ELS_example.c"/>
        <files mask="mcuxClRandomModes_Different_Sessions_example.c"/>
        <files mask="mcuxClRandomModes_PatchMode_CtrDrbg_AES256_DRG3_example.c"/>
        <files mask="mcuxClRandomModes_TestMode_CtrDrbg_AES256_DRG4_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_random_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_rsa.MIMXRT798S" name="els_pkc_test_rsa" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_rsa" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClRsa" type="src">
        <files mask="mcuxClRsa_sign_NoEncode_example.c"/>
        <files mask="mcuxClRsa_sign_pss_sha2_256_example.c"/>
        <files mask="mcuxClRsa_verify_NoVerify_example.c"/>
        <files mask="mcuxClRsa_verify_pssverify_sha2_256_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_rsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.flow_protection.MIMXRT798S" name="els_pkc.flow_protection" brief="Component els_pkc.flow_protection" version="1.9.0" full_name="Component els_pkc.flow_protection" category="els_pkc/els_pkc_flow_protection" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslFlowProtection/inc" type="c_include">
        <files mask="mcuxCsslFlowProtection.h"/>
        <files mask="mcuxCsslFlowProtection_Cfg.h"/>
        <files mask="mcuxCsslFlowProtection_FunctionIdentifiers.h"/>
        <files mask="mcuxCsslFlowProtection_Impl.h"/>
        <files mask="mcuxCsslFlowProtection_SecureCounter_Common.h"/>
        <files mask="mcuxCsslFlowProtection_SecureCounter_Local.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_flow_protection.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslFlowProtection/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.glikey.MIMXRT798S" name="els-pkc glikey" brief="Component glikey" version="1.9.0" full_name="Component glikey" category="els_pkc/els_pkc_glikey" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClGlikey/src" type="src">
        <files mask="mcuxClGlikey.c"/>
      </source>
      <source relative_path="src/comps/mcuxClGlikey/inc" type="c_include">
        <files mask="mcuxClGlikey.h"/>
      </source>
      <source relative_path="src/comps/mcuxClGlikey/inc/internal" type="c_include">
        <files mask="mcuxClGlikey_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_glikey.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClGlikey/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClGlikey/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClGlikey/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClGlikey/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.hash.MIMXRT798S" name="els_pkc.hash" brief="Component els_pkc.hash" version="1.9.0" full_name="Component els_pkc.hash" category="els_pkc/els_pkc_hash" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.hashmodes.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClHash/src" type="src">
        <files mask="mcuxClHash_api_multipart_common.c"/>
        <files mask="mcuxClHash_api_multipart_compute.c"/>
        <files mask="mcuxClHash_api_oneshot_compute.c"/>
        <files mask="mcuxClHash_Internal.c"/>
      </source>
      <source relative_path="src/comps/mcuxClHash/inc" type="c_include">
        <files mask="mcuxClHash.h"/>
        <files mask="mcuxClHash_Constants.h"/>
        <files mask="mcuxClHash_Functions.h"/>
        <files mask="mcuxClHash_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClHash/inc/internal" type="c_include">
        <files mask="mcuxClHash_Internal.h"/>
        <files mask="mcuxClHash_Internal_Memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_hash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHash/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHash/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHash/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHash/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.hashmodes.MIMXRT798S" name="els_pkc.hashmodes" brief="Component els_pkc.hashmodes" version="1.9.0" full_name="Component els_pkc.hashmodes" category="els_pkc/els_pkc_hashmodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClHashModes/src" type="src">
        <files mask="mcuxClHashModes_Core_c_sha1.c"/>
        <files mask="mcuxClHashModes_Core_els_sha2.c"/>
        <files mask="mcuxClHashModes_Internal_c_sha1.c"/>
        <files mask="mcuxClHashModes_Internal_els_sha2.c"/>
      </source>
      <source relative_path="src/comps/mcuxClHashModes/inc" type="c_include">
        <files mask="mcuxClHashModes.h"/>
        <files mask="mcuxClHashModes_Algorithms.h"/>
        <files mask="mcuxClHashModes_Constants.h"/>
        <files mask="mcuxClHashModes_Functions.h"/>
      </source>
      <source relative_path="src/comps/mcuxClHashModes/inc/internal" type="c_include">
        <files mask="mcuxClHashModes_Core_c_sha1.h"/>
        <files mask="mcuxClHashModes_Core_els_sha2.h"/>
        <files mask="mcuxClHashModes_Internal.h"/>
        <files mask="mcuxClHashModes_Internal_els_sha2.h"/>
        <files mask="mcuxClHashModes_Internal_Memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_hashmodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHashModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHashModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHashModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHashModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.hmac.MIMXRT798S" name="els_pkc.hmac" brief="Component els_pkc.hmac" version="1.9.0" full_name="Component els_pkc.hmac" category="els_pkc/els_pkc_hmac" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.key.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.padding.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClHmac/src" type="src">
        <files mask="mcuxClHmac_Els.c"/>
        <files mask="mcuxClHmac_Functions.c"/>
        <files mask="mcuxClHmac_Helper.c"/>
        <files mask="mcuxClHmac_KeyTypes.c"/>
        <files mask="mcuxClHmac_Modes.c"/>
        <files mask="mcuxClHmac_Sw.c"/>
      </source>
      <source relative_path="src/comps/mcuxClHmac/inc" type="c_include">
        <files mask="mcuxClHmac.h"/>
        <files mask="mcuxClHmac_Constants.h"/>
        <files mask="mcuxClHmac_Functions.h"/>
        <files mask="mcuxClHmac_KeyTypes.h"/>
        <files mask="mcuxClHmac_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClHmac/inc/internal" type="c_include">
        <files mask="mcuxClHmac_Core_Functions_Els.h"/>
        <files mask="mcuxClHmac_Core_Functions_Sw.h"/>
        <files mask="mcuxClHmac_Internal_Functions.h"/>
        <files mask="mcuxClHmac_Internal_Memory.h"/>
        <files mask="mcuxClHmac_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_hmac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHmac/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHmac/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHmac/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHmac/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.key.MIMXRT798S" name="els_pkc.key" brief="Component els_pkc.key" version="1.9.0" full_name="Component els_pkc.key" category="els_pkc/els_pkc_key" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.ecc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClKey/src" type="src">
        <files mask="mcuxClKey.c"/>
        <files mask="mcuxClKey_Protection.c"/>
      </source>
      <source relative_path="src/comps/mcuxClKey/inc" type="c_include">
        <files mask="mcuxClKey.h"/>
        <files mask="mcuxClKey_Constants.h"/>
        <files mask="mcuxClKey_Functions.h"/>
        <files mask="mcuxClKey_ProtectionMechanisms.h"/>
        <files mask="mcuxClKey_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClKey/inc/internal" type="c_include">
        <files mask="mcuxClKey_Functions_Internal.h"/>
        <files mask="mcuxClKey_Internal.h"/>
        <files mask="mcuxClKey_Protection_Internal.h"/>
        <files mask="mcuxClKey_Types_Internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_key.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.mac.MIMXRT798S" name="els_pkc.mac" brief="Component els_pkc.mac" version="1.9.0" full_name="Component els_pkc.mac" category="els_pkc/els_pkc_mac" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.hmac.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.padding.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClMac/src" type="src">
        <files mask="mcuxClMac.c"/>
      </source>
      <source relative_path="src/comps/mcuxClMac/inc" type="c_include">
        <files mask="mcuxClMac.h"/>
        <files mask="mcuxClMac_Constants.h"/>
        <files mask="mcuxClMac_Functions.h"/>
        <files mask="mcuxClMac_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClMac/inc/internal" type="c_include">
        <files mask="mcuxClMac_Ctx.h"/>
        <files mask="mcuxClMac_Internal_Constants.h"/>
        <files mask="mcuxClMac_Internal_Functions.h"/>
        <files mask="mcuxClMac_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_mac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMac/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMac/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMac/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMac/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.mac_modes.MIMXRT798S" name="els_pkc.mac_modes" brief="Component els_pkc.mac_modes" version="1.9.0" full_name="Component els_pkc.mac_modes" category="els_pkc/els_pkc_mac_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.mac.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClMacModes/src" type="src">
        <files mask="mcuxClMacModes_Common.c"/>
        <files mask="mcuxClMacModes_Common_Modes.c"/>
        <files mask="mcuxClMacModes_Els_Cbcmac.c"/>
        <files mask="mcuxClMacModes_Els_Cmac.c"/>
        <files mask="mcuxClMacModes_Els_Functions.c"/>
      </source>
      <source relative_path="src/comps/mcuxClMacModes/inc" type="c_include">
        <files mask="mcuxClMacModes.h"/>
        <files mask="mcuxClMacModes_Constants.h"/>
        <files mask="mcuxClMacModes_Functions.h"/>
        <files mask="mcuxClMacModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClMacModes/inc/internal" type="c_include">
        <files mask="mcuxClMacModes_Common_Algorithms.h"/>
        <files mask="mcuxClMacModes_Common_Constants.h"/>
        <files mask="mcuxClMacModes_Common_Functions.h"/>
        <files mask="mcuxClMacModes_Common_Memory.h"/>
        <files mask="mcuxClMacModes_Common_Types.h"/>
        <files mask="mcuxClMacModes_Common_Wa.h"/>
        <files mask="mcuxClMacModes_Els_Cbcmac.h"/>
        <files mask="mcuxClMacModes_Els_Cmac.h"/>
        <files mask="mcuxClMacModes_Els_Ctx.h"/>
        <files mask="mcuxClMacModes_Els_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_mac_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMacModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMacModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMacModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMacModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.math.MIMXRT798S" name="els_pkc.math" brief="Component els_pkc.math" version="1.9.0" full_name="Component els_pkc.math" category="els_pkc/els_pkc_math" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClMath/src" type="src">
        <files mask="mcuxClMath_ExactDivide.c"/>
        <files mask="mcuxClMath_ExactDivideOdd.c"/>
        <files mask="mcuxClMath_ExactDivideOdd_FUP.c"/>
        <files mask="mcuxClMath_ModExp_SqrMultL2R.c"/>
        <files mask="mcuxClMath_ModInv.c"/>
        <files mask="mcuxClMath_ModInv_FUP.c"/>
        <files mask="mcuxClMath_NDash.c"/>
        <files mask="mcuxClMath_NDash_FUP.c"/>
        <files mask="mcuxClMath_QDash.c"/>
        <files mask="mcuxClMath_QDash_FUP.c"/>
        <files mask="mcuxClMath_ReduceModEven.c"/>
        <files mask="mcuxClMath_SecModExp.c"/>
        <files mask="mcuxClMath_SecModExp_FUP.c"/>
        <files mask="mcuxClMath_Utils.c"/>
      </source>
      <source relative_path="src/comps/mcuxClMath/inc" type="c_include">
        <files mask="mcuxClMath.h"/>
        <files mask="mcuxClMath_ExactDivideOdd_FUP.h"/>
        <files mask="mcuxClMath_Functions.h"/>
        <files mask="mcuxClMath_ModInv_FUP.h"/>
        <files mask="mcuxClMath_NDash_FUP.h"/>
        <files mask="mcuxClMath_QDash_FUP.h"/>
        <files mask="mcuxClMath_SecModExp_FUP.h"/>
        <files mask="mcuxClMath_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClMath/inc/internal" type="c_include">
        <files mask="mcuxClMath_ExactDivideOdd_FUP.h"/>
        <files mask="mcuxClMath_Internal_ExactDivideOdd.h"/>
        <files mask="mcuxClMath_Internal_ModInv.h"/>
        <files mask="mcuxClMath_Internal_NDash.h"/>
        <files mask="mcuxClMath_Internal_QDash.h"/>
        <files mask="mcuxClMath_Internal_SecModExp.h"/>
        <files mask="mcuxClMath_Internal_Utils.h"/>
        <files mask="mcuxClMath_ModInv_FUP.h"/>
        <files mask="mcuxClMath_NDash_FUP.h"/>
        <files mask="mcuxClMath_QDash_FUP.h"/>
        <files mask="mcuxClMath_SecModExp_FUP.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_math.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMath/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMath/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMath/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMath/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.memory.MIMXRT798S" name="els_pkc.memory" brief="Component els_pkc.memory" version="1.9.0" full_name="Component els_pkc.memory" category="els_pkc/els_pkc_memory" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.param_integrity.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClMemory/src" type="src">
        <files mask="mcuxClMemory.c"/>
      </source>
      <source relative_path="src/comps/mcuxClMemory/inc" type="c_include">
        <files mask="mcuxClMemory.h"/>
        <files mask="mcuxClMemory_Clear.h"/>
        <files mask="mcuxClMemory_Constants.h"/>
        <files mask="mcuxClMemory_Copy.h"/>
        <files mask="mcuxClMemory_Copy_Reversed.h"/>
        <files mask="mcuxClMemory_Endianness.h"/>
        <files mask="mcuxClMemory_Set.h"/>
        <files mask="mcuxClMemory_Types.h"/>
        <files mask="mcuxClMemory_Xor.h"/>
      </source>
      <source relative_path="src/comps/mcuxClMemory/inc/internal" type="c_include">
        <files mask="mcuxClMemory_Internal.h"/>
      </source>
      <source relative_path="src/comps/mcuxCsslMemory/src" type="src">
        <files mask="mcuxCsslMemory_Clear.c"/>
        <files mask="mcuxCsslMemory_Compare.c"/>
        <files mask="mcuxCsslMemory_Copy.c"/>
        <files mask="mcuxCsslMemory_Set.c"/>
      </source>
      <source relative_path="src/comps/mcuxCsslMemory/inc" type="c_include">
        <files mask="mcuxCsslMemory.h"/>
        <files mask="mcuxCsslMemory_Clear.h"/>
        <files mask="mcuxCsslMemory_Compare.h"/>
        <files mask="mcuxCsslMemory_Constants.h"/>
        <files mask="mcuxCsslMemory_Copy.h"/>
        <files mask="mcuxCsslMemory_Set.h"/>
        <files mask="mcuxCsslMemory_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxCsslMemory/inc/internal" type="c_include">
        <files mask="mcuxCsslMemory_Internal_Compare_asm.h"/>
        <files mask="mcuxCsslMemory_Internal_Copy_asm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_memory.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMemory/inc/internal" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslMemory/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMemory/inc/internal" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslMemory/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca.MIMXRT798S" name="els_pkc.oscca" brief="Component els_pkc.oscca" version="1.9.0" full_name="Component els_pkc.oscca" category="els_pkc/els_pkc_oscca" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.crc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_aeadmodes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_ciphermodes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_macmodes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_pkc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_randommodes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_safo.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_sm2.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_sm3.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.oscca_sm4.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.signature.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.els_pkc.oscca_aeadmodes.MIMXRT798S" name="els_pkc.oscca_aeadmodes" brief="Component els_pkc.oscca_aeadmodes" version="1.9.0" full_name="Component els_pkc.oscca_aeadmodes" category="els_pkc/els_pkc_oscca_aeadmodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaAeadModes/src" type="src">
        <files mask="mcuxClOsccaAeadModes_Ccm_Common.c"/>
        <files mask="mcuxClOsccaAeadModes_Constants.c"/>
        <files mask="mcuxClOsccaAeadModes_EngineCcm.c"/>
        <files mask="mcuxClOsccaAeadModes_SkeletonCcm.c"/>
        <files mask="mcuxClOsccaAeadModes_SM4Ctr.c"/>
        <files mask="mcuxClOsccaAeadModes_SM4_Multipart.c"/>
        <files mask="mcuxClOsccaAeadModes_SM4_OneShot.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaAeadModes/inc" type="c_include">
        <files mask="mcuxClOsccaAeadModes.h"/>
        <files mask="mcuxClOsccaAeadModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaAeadModes/inc/internal" type="c_include">
        <files mask="mcuxClOsccaAeadModes_Internal_Algorithms.h"/>
        <files mask="mcuxClOsccaAeadModes_Internal_Functions.h"/>
        <files mask="mcuxClOsccaAeadModes_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_aeadmodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaAeadModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaAeadModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaAeadModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaAeadModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_ciphermodes.MIMXRT798S" name="els_pkc.oscca_ciphermodes" brief="Component els_pkc.oscca_ciphermodes" version="1.9.0" full_name="Component els_pkc.oscca_ciphermodes" category="els_pkc/els_pkc_oscca_ciphermodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaCipherModes/src" type="src">
        <files mask="mcuxClOsccaCipherModes_Constants.c"/>
        <files mask="mcuxClOsccaCipherModes_SM4_Crypt.c"/>
        <files mask="mcuxClOsccaCipherModes_SM4_Crypt_Internal.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaCipherModes/inc" type="c_include">
        <files mask="mcuxClOsccaCipherModes.h"/>
        <files mask="mcuxClOsccaCipherModes_Constants.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaCipherModes/inc/internal" type="c_include">
        <files mask="mcuxClOsccaCipherModes_Algorithms.h"/>
        <files mask="mcuxClOsccaCipherModes_Internal_Functions.h"/>
        <files mask="mcuxClOsccaCipherModes_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_ciphermodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaCipherModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaCipherModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaCipherModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaCipherModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_macmodes.MIMXRT798S" name="els_pkc.oscca_macmodes" brief="Component els_pkc.oscca_macmodes" version="1.9.0" full_name="Component els_pkc.oscca_macmodes" category="els_pkc/els_pkc_oscca_macmodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaMacModes/src" type="src">
        <files mask="mcuxClOsccaMacModes.c"/>
        <files mask="mcuxClOsccaMacModes_CBCMac.c"/>
        <files mask="mcuxClOsccaMacModes_CMac.c"/>
        <files mask="mcuxClOsccaMacModes_Helper.c"/>
        <files mask="mcuxClOsccaMacModes_KeyTypes.c"/>
        <files mask="mcuxClOsccaMacModes_Modes.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaMacModes/inc" type="c_include">
        <files mask="mcuxClOsccaMacModes.h"/>
        <files mask="mcuxClOsccaMacModes_Constants.h"/>
        <files mask="mcuxClOsccaMacModes_KeyTypes.h"/>
        <files mask="mcuxClOsccaMacModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaMacModes/inc/internal" type="c_include">
        <files mask="mcuxClOsccaMacModes_Algorithms.h"/>
        <files mask="mcuxClOsccaMacModes_Ctx.h"/>
        <files mask="mcuxClOsccaMacModes_Internal_Functions.h"/>
        <files mask="mcuxClOsccaMacModes_SM4_CBCMAC.h"/>
        <files mask="mcuxClOsccaMacModes_SM4_CMAC.h"/>
        <files mask="mcuxClOsccaMacModes_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_macmodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaMacModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaMacModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaMacModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaMacModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_pkc.MIMXRT798S" name="els_pkc.oscca_pkc" brief="Component els_pkc.oscca_pkc" version="1.9.0" full_name="Component els_pkc.oscca_pkc" category="els_pkc/els_pkc_oscca_pkc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaPkc/src" type="src">
        <files mask="mcuxClOsccaPkc.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaPkc/inc" type="c_include">
        <files mask="mcuxClOsccaPkc.h"/>
        <files mask="mcuxClOsccaPkc_Functions.h"/>
        <files mask="mcuxClOsccaPkc_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaPkc/inc/internal" type="c_include">
        <files mask="mcuxClOsccaPkc_FupMacros.h"/>
        <files mask="mcuxClOsccaPkc_Macros.h"/>
        <files mask="mcuxClOsccaPkc_Operations.h"/>
        <files mask="mcuxClOsccaPkc_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_pkc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaPkc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaPkc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaPkc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaPkc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_randommodes.MIMXRT798S" name="els_pkc.oscca_randommodes" brief="Component els_pkc.oscca_randommodes" version="1.9.0" full_name="Component els_pkc.oscca_randommodes" category="els_pkc/els_pkc_oscca_randommodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaRandomModes/src" type="src">
        <files mask="mcuxClOsccaRandomModes_OsccaMode.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaRandomModes/inc" type="c_include">
        <files mask="mcuxClOsccaRandomModes.h"/>
        <files mask="mcuxClOsccaRandomModes_Constants.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaRandomModes/inc/internal" type="c_include">
        <files mask="mcuxClOsccaRandomModes_Private_RNG.h"/>
        <files mask="mcuxClOsccaRandomModes_Private_Types.h"/>
        <files mask="mcuxClOsccaRandomModes_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_randommodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaRandomModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaRandomModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaRandomModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaRandomModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_safo.MIMXRT798S" name="els_pkc.oscca_safo" brief="Component els_pkc.oscca_safo" version="1.9.0" full_name="Component els_pkc.oscca_safo" category="els_pkc/els_pkc_oscca_safo" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaSafo/src" type="src">
        <files mask="mcuxClOsccaSafo_Drv.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSafo/inc" type="c_include">
        <files mask="mcuxClOsccaSafo.h"/>
        <files mask="mcuxClOsccaSafo_Constants.h"/>
        <files mask="mcuxClOsccaSafo_Functions.h"/>
        <files mask="mcuxClOsccaSafo_SfrAccess.h"/>
        <files mask="mcuxClOsccaSafo_Sfr_Ctrl.h"/>
        <files mask="mcuxClOsccaSafo_Sfr_RegBank.h"/>
        <files mask="mcuxClOsccaSafo_Sfr_Status.h"/>
        <files mask="mcuxClOsccaSafo_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_safo.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSafo/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSafo/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_sm2.MIMXRT798S" name="els_pkc.oscca_sm2" brief="Component els_pkc.oscca_sm2" version="1.9.0" full_name="Component els_pkc.oscca_sm2" category="els_pkc/els_pkc_oscca_sm2" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.signature.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaSm2/src" type="src">
        <files mask="mcuxClOsccaSm2_Cipher_Crypt.c"/>
        <files mask="mcuxClOsccaSm2_ComputePrehash.c"/>
        <files mask="mcuxClOsccaSm2_Constants.c"/>
        <files mask="mcuxClOsccaSm2_CryptoUtils.c"/>
        <files mask="mcuxClOsccaSm2_Decrypt.c"/>
        <files mask="mcuxClOsccaSm2_Ecc.c"/>
        <files mask="mcuxClOsccaSm2_EccUtils.c"/>
        <files mask="mcuxClOsccaSm2_EncDec_Internal.c"/>
        <files mask="mcuxClOsccaSm2_Encrypt.c"/>
        <files mask="mcuxClOsccaSm2_FUP.c"/>
        <files mask="mcuxClOsccaSm2_GenerateKeyPair.c"/>
        <files mask="mcuxClOsccaSm2_Helper.c"/>
        <files mask="mcuxClOsccaSm2_InvertPrivateKey.c"/>
        <files mask="mcuxClOsccaSm2_Keyagreement.c"/>
        <files mask="mcuxClOsccaSm2_Keyagreement_SelfTest.c"/>
        <files mask="mcuxClOsccaSm2_KeyExchange.c"/>
        <files mask="mcuxClOsccaSm2_KeyTypes.c"/>
        <files mask="mcuxClOsccaSm2_SelfTest.c"/>
        <files mask="mcuxClOsccaSm2_Sign.c"/>
        <files mask="mcuxClOsccaSm2_Signature_Internal.c"/>
        <files mask="mcuxClOsccaSm2_Signature_PreHash.c"/>
        <files mask="mcuxClOsccaSm2_Signature_SelfTest.c"/>
        <files mask="mcuxClOsccaSm2_Verify.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm2/inc" type="c_include">
        <files mask="mcuxClOsccaSm2.h"/>
        <files mask="mcuxClOsccaSm2_Constants.h"/>
        <files mask="mcuxClOsccaSm2_Functions.h"/>
        <files mask="mcuxClOsccaSm2_FUP.h"/>
        <files mask="mcuxClOsccaSm2_KeyTypes.h"/>
        <files mask="mcuxClOsccaSm2_ModeConstants.h"/>
        <files mask="mcuxClOsccaSm2_SelfTest.h"/>
        <files mask="mcuxClOsccaSm2_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm2/inc/internal" type="c_include">
        <files mask="mcuxClOsccaSm2_Internal.h"/>
        <files mask="mcuxClOsccaSm2_Internal_ConstructTypes.h"/>
        <files mask="mcuxClOsccaSm2_Internal_CryptoUtils.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Ecc.h"/>
        <files mask="mcuxClOsccaSm2_Internal_FP.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Functions.h"/>
        <files mask="mcuxClOsccaSm2_Internal_FUP.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Hash.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Helper.h"/>
        <files mask="mcuxClOsccaSm2_Internal_PkcWaLayout.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_sm2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm2/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm2/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm2/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm2/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_sm3.MIMXRT798S" name="els_pkc.oscca_sm3" brief="Component els_pkc.oscca_sm3" version="1.9.0" full_name="Component els_pkc.oscca_sm3" category="els_pkc/els_pkc_oscca_sm3" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaSm3/src" type="src">
        <files mask="mcuxClOsccaSm3_core_sm3.c"/>
        <files mask="mcuxClOsccaSm3_internal_sm3.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm3/inc" type="c_include">
        <files mask="mcuxClOsccaSm3.h"/>
        <files mask="mcuxClOsccaSm3_Algorithms.h"/>
        <files mask="mcuxClOsccaSm3_Constants.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm3/inc/internal" type="c_include">
        <files mask="mcuxClOsccaSm3_Core_sm3.h"/>
        <files mask="mcuxClOsccaSm3_Internal.h"/>
        <files mask="mcuxClOsccaSm3_Internal_sm3.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_sm3.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm3/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm3/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm3/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm3/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_sm4.MIMXRT798S" name="els_pkc.oscca_sm4" brief="Component els_pkc.oscca_sm4" version="1.9.0" full_name="Component els_pkc.oscca_sm4" category="els_pkc/els_pkc_oscca_sm4" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaSm4/src" type="src">
        <files mask="mcuxClOsccaSm4_CommonOperations.c"/>
        <files mask="mcuxClOsccaSm4_Core.c"/>
        <files mask="mcuxClOsccaSm4_KeyTypes.c"/>
        <files mask="mcuxClOsccaSm4_LoadKey.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm4/inc" type="c_include">
        <files mask="mcuxClOsccaSm4.h"/>
        <files mask="mcuxClOsccaSm4_KeyTypes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm4/inc/internal" type="c_include">
        <files mask="mcuxClOsccaSm4_Internal.h"/>
        <files mask="mcuxClOsccaSm4_Internal_Constants.h"/>
        <files mask="mcuxClOsccaSm4_Internal_Functions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_sm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm4/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm4/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm4/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm4/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.padding.MIMXRT798S" name="els_pkc.padding" brief="Component els_pkc.padding" version="1.9.0" full_name="Component els_pkc.padding" category="els_pkc/els_pkc_padding" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClPadding/src" type="src">
        <files mask="mcuxClPadding.c"/>
      </source>
      <source relative_path="src/comps/mcuxClPadding/inc" type="c_include">
        <files mask="mcuxClPadding.h"/>
        <files mask="mcuxClPadding_Constants.h"/>
        <files mask="mcuxClPadding_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClPadding/inc/internal" type="c_include">
        <files mask="mcuxClPadding_Functions_Internal.h"/>
        <files mask="mcuxClPadding_Internal.h"/>
        <files mask="mcuxClPadding_Types_Internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_padding.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPadding/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPadding/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPadding/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPadding/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.param_integrity.MIMXRT798S" name="els_pkc.param_integrity" brief="Component els_pkc.param_integrity" version="1.9.0" full_name="Component els_pkc.param_integrity" category="els_pkc/els_pkc_param_integrity" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslParamIntegrity/src" type="src">
        <files mask="mcuxCsslParamIntegrity32.c"/>
      </source>
      <source relative_path="src/comps/mcuxCsslParamIntegrity/inc" type="c_include">
        <files mask="mcuxCsslParamIntegrity.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_param_integrity.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslParamIntegrity/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslParamIntegrity/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.pkc.MIMXRT798S" name="pkc" brief="Component pkc" version="1.9.0" full_name="Component pkc" category="els_pkc/els_pkc_pkc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.ecc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.math.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.rsa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClPkc/src" type="src">
        <files mask="mcuxClPkc_Calculate.c"/>
        <files mask="mcuxClPkc_ImportExport.c"/>
        <files mask="mcuxClPkc_Initialize.c"/>
        <files mask="mcuxClPkc_UPTRT.c"/>
      </source>
      <source relative_path="src/comps/mcuxClPkc/inc" type="c_include">
        <files mask="mcuxClPkc.h"/>
        <files mask="mcuxClPkc_Functions.h"/>
        <files mask="mcuxClPkc_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClPkc/inc/internal" type="c_include">
        <files mask="mcuxClPkc_FupMacros.h"/>
        <files mask="mcuxClPkc_ImportExport.h"/>
        <files mask="mcuxClPkc_Inline_Functions.h"/>
        <files mask="mcuxClPkc_Macros.h"/>
        <files mask="mcuxClPkc_Operations.h"/>
        <files mask="mcuxClPkc_Resource.h"/>
        <files mask="mcuxClPkc_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_pkc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPkc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPkc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPkc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPkc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.platform.mimxrt.MIMXRT798S" name="els_pkc_mimxrt" brief="Component els_pkc_mimxrt" version="1.9.0" full_name="Component els_pkc_mimxrt" category="els_pkc/els_pkc_platform" user_visible="true" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.glikey.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.trng.type_els.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/mimxrt" type="c_include">
        <files mask="platform_specific_headers.h"/>
        <files mask="mcuxClConfig.h"/>
        <files mask="mcux_els.h"/>
        <files mask="mcux_pkc.h"/>
      </source>
      <source relative_path="src/platforms/mimxrt/inc" type="c_include">
        <files mask="ip_css_constants.h"/>
        <files mask="ip_css_design_configuration.h"/>
        <files mask="ip_platform.h"/>
      </source>
      <source relative_path="src/platforms/mimxrt" type="src">
        <files mask="mcux_els.c"/>
        <files mask="mcux_pkc.c"/>
      </source>
      <source relative_path="includes/platform/mimxrt" type="c_include">
        <files mask="mcuxClAeadModes_MemoryConsumption.h"/>
        <files mask="mcuxClCipherModes_MemoryConsumption.h"/>
        <files mask="mcuxClEcc_MemoryConsumption.h"/>
        <files mask="mcuxClHash_MemoryConsumption.h"/>
        <files mask="mcuxClHashModes_MemoryConsumption.h"/>
        <files mask="mcuxClHmac_MemoryConsumption.h"/>
        <files mask="mcuxClKey_MemoryConsumption.h"/>
        <files mask="mcuxClMacModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaAeadModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaCipherModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaMacModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaRandomModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaSm2_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaSm3_MemoryConsumption.h"/>
        <files mask="mcuxClRandomModes_MemoryConsumption.h"/>
        <files mask="mcuxClRsa_MemoryConsumption.h"/>
        <files mask="mcuxClSession_MemoryConsumption.h"/>
        <files mask="mcuxClSignature_MemoryConsumption.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_platform_mimxrt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/platforms/mimxrt" type="c_include"/>
        <include_path relative_path="src/platforms/mimxrt/inc" type="c_include"/>
        <include_path relative_path="includes/platform/mimxrt" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/platforms/mimxrt" type="asm_include"/>
        <include_path relative_path="src/platforms/mimxrt/inc" type="asm_include"/>
        <include_path relative_path="includes/platform/mimxrt" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.prng.MIMXRT798S" name="els_pkc.prng" brief="Component prng" version="1.9.0" full_name="Component prng" category="els_pkc/els_pkc_prng" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.ecc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.math.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.rsa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClPrng/src" type="src">
        <files mask="mcuxClPrng_ELS.c"/>
      </source>
      <source relative_path="src/comps/mcuxClPrng/inc/internal" type="c_include">
        <files mask="mcuxClPrng_Internal.h"/>
        <files mask="mcuxClPrng_Internal_Constants.h"/>
        <files mask="mcuxClPrng_Internal_ELS.h"/>
        <files mask="mcuxClPrng_Internal_Functions.h"/>
        <files mask="mcuxClPrng_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_prng.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPrng/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPrng/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPrng/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPrng/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.psa_driver.MIMXRT798S" name="els_pkc_psa_driver" brief="Component els_pkc_psa_driver" version="1.9.0" full_name="Component els_pkc_psa_driver" category="els_pkc/els_pkc_psa_driver" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClPsaDriver/src" type="src">
        <files mask="mcuxClPsaDriver_Aead.c"/>
        <files mask="mcuxClPsaDriver_Cipher.c"/>
        <files mask="mcuxClPsaDriver_DER_functions.c"/>
        <files mask="mcuxClPsaDriver_export_public_key.c"/>
        <files mask="mcuxClPsaDriver_generate_ecp_key.c"/>
        <files mask="mcuxClPsaDriver_Hash.c"/>
        <files mask="mcuxClPsaDriver_Key.c"/>
        <files mask="mcuxClPsaDriver_Mac.c"/>
        <files mask="mcuxClPsaDriver_Rsa.c"/>
        <files mask="mcuxClPsaDriver_Sign.c"/>
        <files mask="mcuxClPsaDriver_UpdateKeyStatus.c"/>
        <files mask="mcuxClPsaDriver_Verify.c"/>
      </source>
      <source relative_path="src/comps/mcuxClPsaDriver/inc" type="c_include">
        <files mask="mcuxClPsaDriver.h"/>
        <files mask="mcuxClPsaDriver_Constants.h"/>
        <files mask="mcuxClPsaDriver_MemoryConsumption.h"/>
        <files mask="mcuxClPsaDriver_Oracle.h"/>
        <files mask="els_pkc_crypto_primitives.h"/>
        <files mask="els_pkc_crypto_composites.h"/>
      </source>
      <source relative_path="src/comps/mcuxClPsaDriver/inc/internal" type="c_include">
        <files mask="mcuxClPsaDriver_ExternalMacroWrappers.h"/>
        <files mask="mcuxClPsaDriver_Functions.h"/>
        <files mask="mcuxClPsaDriver_Internal.h"/>
        <files mask="mcuxClPsaDriver_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_psa_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPsaDriver/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPsaDriver/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPsaDriver/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPsaDriver/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.random.MIMXRT798S" name="els_pkc.random" brief="Component els_pkc.random" version="1.9.0" full_name="Component els_pkc.random" category="els_pkc/els_pkc_random" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.prng.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.random_modes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandom/src" type="src">
        <files mask="mcuxClRandom_DRBG.c"/>
        <files mask="mcuxClRandom_PRNG.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRandom/inc" type="c_include">
        <files mask="mcuxClRandom.h"/>
        <files mask="mcuxClRandom_Constants.h"/>
        <files mask="mcuxClRandom_Functions.h"/>
        <files mask="mcuxClRandom_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClRandom/inc/internal" type="c_include">
        <files mask="mcuxClRandom_Internal_Functions.h"/>
        <files mask="mcuxClRandom_Internal_Memory.h"/>
        <files mask="mcuxClRandom_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_random.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandom/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandom/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandom/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandom/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.random_modes.MIMXRT798S" name="els_pkc.random_modes" brief="Component els_pkc.random_modes" version="1.9.0" full_name="Component els_pkc.random_modes" category="els_pkc/els_pkc_random_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.trng.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandomModes/src" type="src">
        <files mask="mcuxClRandomModes_CtrDrbg_Els.c"/>
        <files mask="mcuxClRandomModes_ElsMode.c"/>
        <files mask="mcuxClRandomModes_PatchMode.c"/>
        <files mask="mcuxClRandomModes_TestMode.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRandomModes/inc" type="c_include">
        <files mask="mcuxClRandomModes.h"/>
        <files mask="mcuxClRandomModes_Constants.h"/>
        <files mask="mcuxClRandomModes_Functions_PatchMode.h"/>
        <files mask="mcuxClRandomModes_Functions_TestMode.h"/>
      </source>
      <source relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include">
        <files mask="mcuxClRandomModes_Internal_SizeDefinitions.h"/>
        <files mask="mcuxClRandomModes_Private_CtrDrbg.h"/>
        <files mask="mcuxClRandomModes_Private_CtrDrbg_BlockCipher.h"/>
        <files mask="mcuxClRandomModes_Private_Drbg.h"/>
        <files mask="mcuxClRandomModes_Private_NormalMode.h"/>
        <files mask="mcuxClRandomModes_Private_PatchMode.h"/>
        <files mask="mcuxClRandomModes_Private_PrDisabled.h"/>
        <files mask="mcuxClRandomModes_Private_TestMode.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_random_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.random_modes_ctr.MIMXRT798S" name="els_pkc.random_modes_ctr" brief="Component els_pkc.random_modes_ctr" version="1.9.0" full_name="Component els_pkc.random_modes_ctr" category="els_pkc/els_pkc_random_modes_ctr" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aes.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.trng.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandomModes/src" type="src">
        <files mask="mcuxClRandomModes_CtrDrbg.c"/>
        <files mask="mcuxClRandomModes_CtrDrbg_PrDisabled.c"/>
        <files mask="mcuxClRandomModes_NormalMode.c"/>
        <files mask="mcuxClRandomModes_PrDisabled.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_random_modes_ctr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.random_modes_hmacdrbg.MIMXRT798S" name="els_pkc.random_modes_hmacdrbg" brief="Component els_pkc.random_modes_hmacdrbg" version="1.9.0" full_name="Component els_pkc.random_modes_hmacdrbg" category="els_pkc/els_pkc_random_modes_hmacdrbg" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.random_modes.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandomModes/src" type="src">
        <files mask="mcuxClRandomModes_HmacDrbg.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include">
        <files mask="mcuxClRandomModes_Internal_HmacDrbg_Functions.h"/>
        <files mask="mcuxClRandomModes_Private_HmacDrbg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_random_modes_hmacdrbg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.rsa.MIMXRT798S" name="els_pkc.rsa" brief="Component els_pkc.rsa" version="1.9.0" full_name="Component els_pkc.rsa" category="els_pkc/els_pkc_rsa" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRsa/src" type="src">
        <files mask="mcuxClRsa_ComputeD.c"/>
        <files mask="mcuxClRsa_ComputeD_FUP.c"/>
        <files mask="mcuxClRsa_GenerateProbablePrime.c"/>
        <files mask="mcuxClRsa_getMillerRabinTestIterations.c"/>
        <files mask="mcuxClRsa_KeyGeneration_Crt.c"/>
        <files mask="mcuxClRsa_KeyGeneration_Crt_FUP.c"/>
        <files mask="mcuxClRsa_KeyGeneration_Helper.c"/>
        <files mask="mcuxClRsa_KeyGeneration_Plain.c"/>
        <files mask="mcuxClRsa_Mgf1.c"/>
        <files mask="mcuxClRsa_MillerRabinTest.c"/>
        <files mask="mcuxClRsa_MillerRabinTest_FUP.c"/>
        <files mask="mcuxClRsa_ModInv.c"/>
        <files mask="mcuxClRsa_Pkcs1v15Encode_sign.c"/>
        <files mask="mcuxClRsa_Pkcs1v15Verify.c"/>
        <files mask="mcuxClRsa_PrivateCrt.c"/>
        <files mask="mcuxClRsa_PrivateCrt_FUP.c"/>
        <files mask="mcuxClRsa_PrivatePlain.c"/>
        <files mask="mcuxClRsa_PssEncode.c"/>
        <files mask="mcuxClRsa_PssVerify.c"/>
        <files mask="mcuxClRsa_Public.c"/>
        <files mask="mcuxClRsa_PublicExp.c"/>
        <files mask="mcuxClRsa_RemoveBlinding.c"/>
        <files mask="mcuxClRsa_RemoveBlinding_FUP.c"/>
        <files mask="mcuxClRsa_Sign.c"/>
        <files mask="mcuxClRsa_Sign_NoEMSA.c"/>
        <files mask="mcuxClRsa_TestPQDistance.c"/>
        <files mask="mcuxClRsa_TestPQDistance_FUP.c"/>
        <files mask="mcuxClRsa_TestPrimeCandidate.c"/>
        <files mask="mcuxClRsa_TestPrimeCandidate_FUP.c"/>
        <files mask="mcuxClRsa_Verify.c"/>
        <files mask="mcuxClRsa_VerifyE.c"/>
        <files mask="mcuxClRsa_Verify_NoEMSA.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRsa/inc" type="c_include">
        <files mask="mcuxClRsa.h"/>
        <files mask="mcuxClRsa_ComputeD_FUP.h"/>
        <files mask="mcuxClRsa_Constants.h"/>
        <files mask="mcuxClRsa_Functions.h"/>
        <files mask="mcuxClRsa_KeyGeneration_Crt_FUP.h"/>
        <files mask="mcuxClRsa_MillerRabinTest_FUP.h"/>
        <files mask="mcuxClRsa_PrivateCrt_FUP.h"/>
        <files mask="mcuxClRsa_RemoveBlinding_FUP.h"/>
        <files mask="mcuxClRsa_TestPQDistance_FUP.h"/>
        <files mask="mcuxClRsa_TestPrimeCandidate_FUP.h"/>
        <files mask="mcuxClRsa_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClRsa/inc/internal" type="c_include">
        <files mask="mcuxClRsa_ComputeD_FUP.h"/>
        <files mask="mcuxClRsa_Internal_Functions.h"/>
        <files mask="mcuxClRsa_Internal_Macros.h"/>
        <files mask="mcuxClRsa_Internal_MemoryConsumption.h"/>
        <files mask="mcuxClRsa_Internal_PkcDefs.h"/>
        <files mask="mcuxClRsa_Internal_PkcTypes.h"/>
        <files mask="mcuxClRsa_Internal_Types.h"/>
        <files mask="mcuxClRsa_KeyGeneration_Crt_FUP.h"/>
        <files mask="mcuxClRsa_MillerRabinTest_FUP.h"/>
        <files mask="mcuxClRsa_PrivateCrt_FUP.h"/>
        <files mask="mcuxClRsa_RemoveBlinding_FUP.h"/>
        <files mask="mcuxClRsa_TestPQDistance_FUP.h"/>
        <files mask="mcuxClRsa_TestPrimeCandidate_FUP.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_rsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.rsa_oaep.MIMXRT798S" name="els_pkc.rsa_oaep" brief="Component els_pkc.rsa_oaep" version="1.9.0" full_name="Component els_pkc.rsa_oaep" category="els_pkc/els_pkc_rsa_oaep" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.rsa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRsa/src" type="src">
        <files mask="mcuxClRsa_KeyTypes.c"/>
        <files mask="mcuxClRsa_ModeConstructors.c"/>
        <files mask="mcuxClRsa_OaepDecode.c"/>
        <files mask="mcuxClRsa_OaepEncode.c"/>
        <files mask="mcuxClRsa_pkcs1v15Decode_decrypt.c"/>
        <files mask="mcuxClRsa_Pkcs1v15Encode_encrypt.c"/>
        <files mask="mcuxClRsa_Util_Decrypt.c"/>
        <files mask="mcuxClRsa_Util_Encrypt.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRsa/inc" type="c_include">
        <files mask="mcuxClRsa_KeyTypes.h"/>
        <files mask="mcuxClRsa_ModeConstructors.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_rsa_oaep.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.session.MIMXRT798S" name="els_pkc.session" brief="Component els_pkc.session" version="1.9.0" full_name="Component els_pkc.session" category="els_pkc/els_pkc_session" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.random.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClSession/src" type="src">
        <files mask="mcuxClSession.c"/>
      </source>
      <source relative_path="src/comps/mcuxClSession/inc" type="c_include">
        <files mask="mcuxClSession.h"/>
        <files mask="mcuxClSession_Functions.h"/>
        <files mask="mcuxClSession_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClSession/inc/internal" type="c_include">
        <files mask="mcuxClSession_Internal.h"/>
        <files mask="mcuxClSession_Internal_EntryExit.h"/>
        <files mask="mcuxClSession_Internal_EntryExit_RegularReturn.h"/>
        <files mask="mcuxClSession_Internal_Functions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_session.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClSession/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClSession/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClSession/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClSession/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.signature.MIMXRT798S" name="els_pkc.signature" brief="Component els_pkc.signature" version="1.9.0" full_name="Component els_pkc.signature" category="els_pkc/els_pkc_signature" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClSignature/src" type="src">
        <files mask="mcuxClSignature.c"/>
      </source>
      <source relative_path="src/comps/mcuxClSignature/inc" type="c_include">
        <files mask="mcuxClSignature.h"/>
        <files mask="mcuxClSignature_Constants.h"/>
        <files mask="mcuxClSignature_Functions.h"/>
        <files mask="mcuxClSignature_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClSignature/inc/internal" type="c_include">
        <files mask="mcuxClSignature_Internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_signature.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClSignature/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClSignature/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClSignature/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClSignature/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.standalone_gdet.MIMXRT798S" name="els_pkc.standalone_gdet" brief="Component els_pkc standalone_gdet" version="1.9.0" full_name="Component els_pkc standalone_dget" category="els_pkc/els_pkc_standalone_gdetr" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els_header_only.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClEls/src" type="src">
        <files mask="mcuxClEls_GlitchDetector.c"/>
      </source>
      <source relative_path="src/comps/mcuxClEls/inc" type="c_include">
        <files mask="mcuxClEls_GlitchDetector.h"/>
      </source>
      <source relative_path="includes" type="c_include">
        <files mask="mcuxClEls_GlitchDetector.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_standalone_gdet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.static_lib.mimxrt.MIMXRT798S" name="els_pkc static_lib MIMXRT" brief="Component els_pkc static_lib MIMXRT" version="1.9.0" full_name="Component els_pkc static_lib for MIMXRT" category="els_pkc/static_lib_mimxrt" user_visible="true" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT798S"/>
      </dependencies>
      <source relative_path="static_library/mimxrt" type="lib">
        <files mask="libclns.a"/>
      </source>
      <source relative_path="static_library/mimxrt" type="other">
        <files mask="libclns.a.libsize"/>
        <files mask="libclns.a.objsize"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_static_lib_mimxrt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.trng.MIMXRT798S" name="els_pkc.trng" brief="Component els_pkc.trng" version="1.9.0" full_name="Component els_pkc.trng" category="els_pkc/els_pkc_trng" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClTrng/inc/internal" type="c_include">
        <files mask="mcuxClTrng_Internal.h"/>
        <files mask="mcuxClTrng_Internal_Constants.h"/>
        <files mask="mcuxClTrng_Internal_Functions.h"/>
        <files mask="mcuxClTrng_Internal_SA_TRNG.h"/>
        <files mask="mcuxClTrng_Internal_Types.h"/>
        <files mask="mcuxClTrng_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_trng.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.trng.type_els.MIMXRT798S" name="els_pkc.trng.type_els" brief="Component els_pkc.trng.type_els" version="1.9.0" full_name="Component els_pkc.trng.type_els" category="els_pkc/els_pkc_trng_type_els" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT798S"/>
          <component_dependency value="component.els_pkc.trng.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandomModes/src" type="src">
        <files mask="mcuxClRandomModes_NormalMode.c"/>
      </source>
      <source relative_path="src/comps/mcuxClTrng/src" type="src">
        <files mask="mcuxClTrng_ELS.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_trng_type_els.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.trng.type_rng4.MIMXRT798S" name="els_pkc.trng.type_rng4" brief="Component els_pkc.trng.type_rng4" version="1.9.0" full_name="Component els_pkc.trng.type_rng4" category="els_pkc/els_pkc_trng_type_rng4" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.trng.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClTrng/src" type="src">
        <files mask="mcuxClTrng_SA_TRNG.c"/>
      </source>
      <source relative_path="src/comps/mcuxClTrng/inc/internal" type="c_include">
        <files mask="mcuxClTrng_SfrAccess.h"/>
        <files mask="mcuxClTrng_Internal_SA_TRNG.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_trng_type_rng4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_wifi_nxp.MIMXRT798S" name="edgefast_wifi_nxp" brief="Edgefast Wi-Fi NXP is a blocking layer for Wi-Fi NXP" version="1.0.0" full_name="Edgefast Wi-Fi NXP" category="Wireless/Edgefast Wi-Fi" user_visible="true" type="middleware" package_base_path="components/edgefast_wifi" project_base_path="edgefast_wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT798S"/>
          <component_dependency value="middleware.lwip.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.MIMXRT798S"/>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="wpl.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="wpl_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_wifi_nxp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT798S" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT798S" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_i2c.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ak4497.MIMXRT798S" name="ak4497" brief="Driver ak4497" version="2.1.2" full_name="Driver ak4497" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/ak4497" project_base_path="codec">
      <defines>
        <define name="CODEC_AK4497_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.ak4497_adapter.MIMXRT798S"/>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ak4497.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ak4497.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ak4497.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42448.MIMXRT798S" name="cs42448" brief="Driver cs42448" version="2.0.1" full_name="Driver cs42448" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42448" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42448_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.cs42448_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42448.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42448.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42448.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMXRT798S" name="cs42888" brief="Driver cs42888" version="2.1.3" full_name="Driver cs42888" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42888_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.cs42888_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42888.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMXRT798S" name="dialog7212" brief="Driver dialog7212" version="2.3.1" full_name="Driver dialog7212" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <defines>
        <define name="CODEC_DA7212_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.da7212_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dialog7212.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm186x.MIMXRT798S" name="pcm186x" brief="Driver pcm186x" version="2.0.1" full_name="Driver pcm186x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm186x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM186X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.pcm186x_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm186x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm186x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcm186x.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm512x.MIMXRT798S" name="pcm512x" brief="Driver pcm512x" version="2.0.1" full_name="Driver pcm512x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm512x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM512X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.pcm512x_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm512x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm512x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcm512x.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMXRT798S" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <defines>
        <define name="CODEC_SGTL5000_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.sgtl_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sgtl5000.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9896.MIMXRT798S" name="tfa9896" brief="Driver tfa9896" version="6.0.2" full_name="Driver tfa9896" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9896" project_base_path="codec">
      <defines>
        <define name="CODEC_TFA9896_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.tfa9896_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_buffer.h"/>
        <files mask="fsl_tfa9896.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hal_registers.c"/>
        <files mask="fsl_tfa9896.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="MIMXRT595595-EVK_TFA9896_SW.pdf"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9896.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx.MIMXRT798S" name="tfa9xxx" brief="Driver tfa9xxx" version="2.1.0" full_name="Driver tfa9xxx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <defines>
        <define name="CODEC_TFA9XXX_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.tfa9xxx_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_config_TFA9892N1.h"/>
        <files mask="tfa_config_TFA9894N1.h"/>
        <files mask="tfa_config_TFA9894N2.h"/>
        <files mask="fsl_tfa9xxx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tfa9xxx.c"/>
        <files mask="fsl_tfa9xxx_IMX.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="vas_tfa_drv" type="c_include">
        <files mask="config.h"/>
        <files mask="tfa2_container.h"/>
        <files mask="tfa2_dev.h"/>
        <files mask="tfa2_dsp_fw.h"/>
        <files mask="tfa2_haptic.h"/>
        <files mask="tfa9xxx_parameters.h"/>
        <files mask="tfa_haptic_fw_defs.h"/>
      </source>
      <source relative_path="vas_tfa_drv" type="src">
        <files mask="tfa2_container.c"/>
        <files mask="tfa2_dev.c"/>
        <files mask="tfa2_haptic.c"/>
        <files mask="tfa2_init.c"/>
        <files mask="tfa_container_crc32.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9xxx.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="vas_tfa_drv" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="vas_tfa_drv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx_hal.MIMXRT798S" name="tfa9xxx_hal" brief="Driver tfa9xxx_hal" version="2.1.0" full_name="Driver tfa9xxx_hal" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <component_dependency value="driver.tfa9xxx.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_device_hal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="tfa_device_hal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9xxx_hal.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8524.MIMXRT798S" name="wm8524" brief="Driver wm8524" version="2.1.1" full_name="Driver wm8524" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8524" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8524_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.wm8524_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8524.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMXRT798S" name="wm8904" brief="Driver wm8904" version="2.5.1" full_name="Driver wm8904" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8904_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.wm8904_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8904.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMXRT798S" name="wm8960" brief="Driver wm8960" version="2.2.4" full_name="Driver wm8960" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8960_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.wm8960_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8960.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMXRT798S" name="wm8962" brief="Driver wm8962" version="2.2.0" full_name="Driver wm8962" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8962" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8962_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT798S"/>
          <component_dependency value="component.codec_i2c.MIMXRT798S"/>
          <component_dependency value="component.wm8962_adapter.MIMXRT798S"/>
          <component_dependency value="driver.codec.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8962.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.button.MIMXRT798S" name="button" brief="Component button" version="1.0.0" full_name="Component button" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="component.gpio_adapter.MIMXRT798S"/>
          <component_dependency value="platform.drivers.gpio.MIMXRT798S"/>
          <component_dependency value="component.timer_manager.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_button.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.audio_sai_edma_adapter.MIMXRT798S" name="sai_edma_adapter" brief="Component sai_edma_adapter" version="1.0.0" full_name="Component sai_edma_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/audio" project_base_path="component/audio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.sai_edma.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_audio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_audio_sai_edma_adapter.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT798S_CMSIS.MIMXRT798S" name="MIMXRT798S_CMSIS" brief="Device MIMXRT798S_cmsis" version="1.0.0" full_name="Device MIMXRT798S_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT798S" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT798S">
        <files mask="MIMXRT798S_cm33_core0.h"/>
        <files mask="MIMXRT798S_cm33_core0_COMMON.h"/>
        <files mask="MIMXRT798S_cm33_core0_features.h"/>
      </source>
      <source relative_path="periph" type="c_include">
        <files mask="PERI_ADC.h"/>
        <files mask="PERI_AHBSC0.h"/>
        <files mask="PERI_AHBSC3.h"/>
        <files mask="PERI_AHBSC4.h"/>
        <files mask="PERI_CACHE64_CTRL.h"/>
        <files mask="PERI_CACHE64_POLSEL.h"/>
        <files mask="PERI_CDOG.h"/>
        <files mask="PERI_CLKCTL0.h"/>
        <files mask="PERI_CLKCTL1.h"/>
        <files mask="PERI_CLKCTL2.h"/>
        <files mask="PERI_CLKCTL3.h"/>
        <files mask="PERI_CLKCTL4.h"/>
        <files mask="PERI_CMP.h"/>
        <files mask="PERI_CRC.h"/>
        <files mask="PERI_CTIMER.h"/>
        <files mask="PERI_DEBUG_MAILBOX.h"/>
        <files mask="PERI_DMA.h"/>
        <files mask="PERI_ELS.h"/>
        <files mask="PERI_FLEXIO.h"/>
        <files mask="PERI_FREQME.h"/>
        <files mask="PERI_FRO.h"/>
        <files mask="PERI_GDET.h"/>
        <files mask="PERI_GLIKEY.h"/>
        <files mask="PERI_GPIO.h"/>
        <files mask="PERI_I2S.h"/>
        <files mask="PERI_I3C.h"/>
        <files mask="PERI_INPUTMUX0.h"/>
        <files mask="PERI_INPUTMUX1.h"/>
        <files mask="PERI_IOPCTL0.h"/>
        <files mask="PERI_IOPCTL1.h"/>
        <files mask="PERI_IOPCTL2.h"/>
        <files mask="PERI_ITRC.h"/>
        <files mask="PERI_JPEGDEC.h"/>
        <files mask="PERI_JPGDECWRP.h"/>
        <files mask="PERI_LCDIF.h"/>
        <files mask="PERI_LPI2C.h"/>
        <files mask="PERI_LPSPI.h"/>
        <files mask="PERI_LPUART.h"/>
        <files mask="PERI_LP_FLEXCOMM.h"/>
        <files mask="PERI_MIPI_DSI_HOST.h"/>
        <files mask="PERI_MMU.h"/>
        <files mask="PERI_MRT.h"/>
        <files mask="PERI_MU.h"/>
        <files mask="PERI_NIC.h"/>
        <files mask="PERI_OCOTP.h"/>
        <files mask="PERI_OSC32KNP.h"/>
        <files mask="PERI_OSCCA.h"/>
        <files mask="PERI_OSTIMER.h"/>
        <files mask="PERI_PDM.h"/>
        <files mask="PERI_PINT.h"/>
        <files mask="PERI_PKC.h"/>
        <files mask="PERI_PMC.h"/>
        <files mask="PERI_PNGDEC.h"/>
        <files mask="PERI_PUF.h"/>
        <files mask="PERI_PVTS.h"/>
        <files mask="PERI_ROMCP.h"/>
        <files mask="PERI_RSTCTL0.h"/>
        <files mask="PERI_RSTCTL1.h"/>
        <files mask="PERI_RSTCTL2.h"/>
        <files mask="PERI_RSTCTL3.h"/>
        <files mask="PERI_RSTCTL4.h"/>
        <files mask="PERI_RTC.h"/>
        <files mask="PERI_SCT.h"/>
        <files mask="PERI_SDADC.h"/>
        <files mask="PERI_SEMA42.h"/>
        <files mask="PERI_SLEEPCON0.h"/>
        <files mask="PERI_SLEEPCON1.h"/>
        <files mask="PERI_SYSCON0.h"/>
        <files mask="PERI_SYSCON1.h"/>
        <files mask="PERI_SYSCON2.h"/>
        <files mask="PERI_SYSCON3.h"/>
        <files mask="PERI_SYSCON4.h"/>
        <files mask="PERI_SYSPM.h"/>
        <files mask="PERI_TRNG.h"/>
        <files mask="PERI_USB.h"/>
        <files mask="PERI_USBHSDCD.h"/>
        <files mask="PERI_USBNC.h"/>
        <files mask="PERI_USBPHY.h"/>
        <files mask="PERI_USDHC.h"/>
        <files mask="PERI_UTICK.h"/>
        <files mask="PERI_WWDT.h"/>
        <files mask="PERI_XCACHE.h"/>
        <files mask="PERI_XSPI.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core1_MIMXRT798S">
        <files mask="MIMXRT798S_cm33_core1.h"/>
        <files mask="MIMXRT798S_cm33_core1_COMMON.h"/>
        <files mask="MIMXRT798S_cm33_core1_features.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_CMSIS.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="periph" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="periph" type="asm_include"/>
        <include_path relative_path="../periph" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT798S_system.MIMXRT798S" name="MIMXRT798S_system" brief="Device MIMXRT798S_system" version="1.0.0" full_name="Device MIMXRT798S_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT798S" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT798S_CMSIS.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src" device_cores="cm33_core0_MIMXRT798S">
        <files mask="system_MIMXRT798S_cm33_core0.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT798S">
        <files mask="system_MIMXRT798S_cm33_core0.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_core1_MIMXRT798S">
        <files mask="system_MIMXRT798S_cm33_core1.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core1_MIMXRT798S">
        <files mask="system_MIMXRT798S_cm33_core1.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_system.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MIMXRT798S" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="6.1.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT798S"/>
            <device_core_dependency value="cm33_core1_MIMXRT798S"/>
          </any_of>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source compiler="compiler_armclang" relative_path="./" type="c_include">
        <files mask="cmsis_armclang.h"/>
      </source>
      <source compiler="compiler_armclang" relative_path="m-profile" type="c_include">
        <files mask="cmsis_armclang_m.h"/>
      </source>
      <source compiler="compiler_armclang compiler_gcc compiler_iar" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source compiler="compiler_iar" relative_path="m-profile" type="c_include">
        <files mask="cmsis_iccarm_m.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="m-profile" type="c_include">
        <files mask="cmsis_gcc_m.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="core_cm33.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="armv8m_mpu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="m-profile" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="m-profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX.MIMXRT798S" name="CMSIS_RTOS2_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <defines>
        <define name="CMSIS_device_header" value="'&quot;fsl_device_registers.h&quot;'"/>
        <define name="RTE_COMPONENTS_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT798S"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_delay.c"/>
        <files mask="rtx_evflags.c"/>
        <files mask="rtx_evr.c"/>
        <files mask="rtx_kernel.c"/>
        <files mask="rtx_memory.c"/>
        <files mask="rtx_mempool.c"/>
        <files mask="rtx_msgqueue.c"/>
        <files mask="rtx_mutex.c"/>
        <files mask="rtx_semaphore.c"/>
        <files mask="rtx_system.c"/>
        <files mask="rtx_thread.c"/>
        <files mask="rtx_timer.c"/>
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source relative_path="Source" type="src" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="os_systick.c"/>
      </source>
      <source toolchain="mdk armgcc mcuxpresso" relative_path="RTX/Source/GCC" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="irq_armv8mml.S"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Source/IAR" type="asm_include" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S">
        <files mask="irq_armv8mml.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX_LIB.MIMXRT798S" name="CMSIS_RTOS2_RTX5_Library" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT798S"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT798S"/>
          <device_dependency value="MIMXRT798S"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="RTX_V8MMF.a"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="RTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true" tz="true">
        <files mask="RTX_V8MMF.a"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="RTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" type="lib" device_cores="cm33_core0_MIMXRT798S cm33_core1_MIMXRT798S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX_LIB.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Source" type="asm_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="RISCV_Include_Core.MIMXRT798S" name="RISCV Core Headers" brief="Core headers for RISCV cores" version="1.0.0" full_name="Core headers for RISCV cores" category="Board Support/SDK Project Template" user_visible="true" type="other" package_base_path="arch/riscv/headers" project_base_path="riscv">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT798S"/>
          <device_core_dependency value="ezhv_MIMXRT798S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_riscv.h"/>
        <files mask="core_zv2116.h"/>
        <files mask="riscv_asm.h"/>
        <files mask="riscv_barrier.h"/>
        <files mask="riscv_csr.h"/>
        <files mask="riscv_ezhv_blc.h"/>
        <files mask="riscv_ezhv_dbiu.h"/>
        <files mask="riscv_ezhv_em.h"/>
        <files mask="riscv_ezhv_gpio.h"/>
        <files mask="riscv_interrupt.h"/>
        <files mask="riscv_types.h"/>
        <files mask="riscv_xzbf.h"/>
        <files mask="riscv_xzbranch.h"/>
        <files mask="riscv_xzdspv.h"/>
        <files mask="riscv_xzezhv.h"/>
        <files mask="riscv_xzmsg.h"/>
        <files mask="core_riscv.h"/>
        <files mask="riscv_asm.h"/>
        <files mask="riscv_barrier.h"/>
        <files mask="riscv_csr.h"/>
        <files mask="riscv_interrupt.h"/>
        <files mask="riscv_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="RISCV_Include_Core.MIMXRT798S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT735S_debugger.MIMXRT735S" name="Device MIMXRT735S_debugger" brief="Device MIMXRT735S_debugger" version="1.0.0" full_name="Device MIMXRT735S_debugger" category="Device/SDK Utilities" user_visible="true" type="debugger" package_base_path="devices/MIMXRT735S" project_base_path="svd">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="xml" device_cores="cm33_core0_MIMXRT735S">
        <files mask="MIMXRT735S_cm33_core0.xml"/>
      </source>
      <source relative_path="./" type="xml" device_cores="cm33_core1_MIMXRT735S">
        <files mask="MIMXRT735S_cm33_core1.xml"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT735S" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_syscall_stub.c"/>
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="./" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="fsl_memcpy.S"/>
      </source>
    </component>
    <component id="utility.incbin.MIMXRT735S" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities/incbin" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source toolchain="armgcc mdk" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
    </component>
    <component id="utility.debug_console_template_config.MIMXRT735S" name="debug_console_template_config" brief="Utility debug_console Template Config" version="1.0.0" full_name="Utility debug_console Template Config" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="debug_console/config" config="true" type="c_include">
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console/config" type="c_include"/>
        <include_path relative_path="debug_console/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.MIMXRT735S" name="systick_utils" brief="ISSDK Utils" version="1.8.0" full_name="Middleware issdk drivers systick_utils" category="Sensors/utils" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="drivers/systick" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source relative_path="drivers/systick" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_drivers_systick_utils.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/systick" type="c_include"/>
        <include_path relative_path="drivers/systick" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cmsis_drivers.MIMXRT735S" name="CMSIS driver" brief="CMSIS driver" version="2.0.0" full_name="CMSIS driver" category="Board Support/SDK Project Template" user_visible="true" type="CMSIS_driver" package_base_path="components/cmsis_drivers" project_base_path="CMSIS_drivers">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
    </component>
    <component id="platform.drivers.common.MIMXRT735S" name="common" brief="common Driver" version="2.5.0" full_name="common Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="fsl_common_arm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT735S" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MIMXRT735S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/sdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
        <include_path relative_path="template/sdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MIMXRT735S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/sdif" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdif_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
        <include_path relative_path="template/sdif" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MIMXRT735S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/usdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_usdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
        <include_path relative_path="template/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.MIMXRT735S" name="mcmgr" brief="MCMgr" version="4.1.5" full_name="Multicore Manager" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <defines>
        <define name="MULTICORE_APP" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="mcmgr/src" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcmgr/src" type="c_include"/>
        <include_path relative_path="mcmgr/src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.common.MIMXRT735S" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_version.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_pre_post_action.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_codec.hpp"/>
        <files mask="erpc_basic_codec.hpp"/>
        <files mask="erpc_transport.hpp"/>
        <files mask="erpc_message_buffer.hpp"/>
        <files mask="erpc_message_loggers.hpp"/>
        <files mask="erpc_manually_constructed.hpp"/>
        <files mask="erpc_crc16.hpp"/>
        <files mask="erpc_client_server_common.hpp"/>
        <files mask="erpc_utils.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
        <files mask="erpc_crc16.cpp"/>
        <files mask="erpc_pre_post_action.cpp"/>
        <files mask="erpc_utils.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_transport_setup.h"/>
        <files mask="erpc_mbf_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_setup_extensions.h"/>
        <files mask="erpc_endianness_agnostic_example.h"/>
        <files mask="erpc_endianness_undefined.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source relative_path="erpc/erpc_c/config" type="c_include">
        <files mask="erpc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.doc.MIMXRT735S" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
        <files mask="SW-Content-Register.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="doc" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/config" project_relative_path="erpc_aux" config="true" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_threading.h" hidden="true"/>
        <files mask="erpc_serial.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_threading_pthreads.cpp" hidden="true"/>
        <files mask="erpc_serial.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp" hidden="true"/>
        <files mask="erpc_setup_serial.cpp" hidden="true"/>
        <files mask="erpc_setup_uart_zephyr.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp" hidden="true"/>
        <files mask="erpc_serial_transport.cpp" hidden="true"/>
        <files mask="erpc_tcp_transport.cpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="erpc_inter_thread_buffer_transport.hpp" hidden="true"/>
        <files mask="erpc_serial_transport.hpp" hidden="true"/>
        <files mask="erpc_tcp_transport.hpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="script">
        <files mask="setup.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="doc">
        <files mask="README_Pypi.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python/erpc" project_relative_path="erpc_aux" type="script">
        <files mask="__init__.py" hidden="true"/>
        <files mask="arbitrator.py" hidden="true"/>
        <files mask="basic_codec.py" hidden="true"/>
        <files mask="client.py" hidden="true"/>
        <files mask="codec.py" hidden="true"/>
        <files mask="crc16.py" hidden="true"/>
        <files mask="erpc_version.py" hidden="true"/>
        <files mask="server.py" hidden="true"/>
        <files mask="simple_server.py" hidden="true"/>
        <files mask="transport.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/bin" project_relative_path="erpc_aux" type="script">
        <files mask="txt_to_c.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj" project_relative_path="erpc_aux" type="other">
        <files mask="project.pbxproj" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" project_relative_path="erpc_aux" type="other">
        <files mask="contents.xcworkspacedata" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="annotations.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AstNode.hpp" hidden="true"/>
        <files mask="AstWalker.hpp" hidden="true"/>
        <files mask="CGenerator.hpp" hidden="true"/>
        <files mask="ErpcLexer.hpp" hidden="true"/>
        <files mask="Generator.hpp" hidden="true"/>
        <files mask="HexValues.hpp" hidden="true"/>
        <files mask="InterfaceDefinition.hpp" hidden="true"/>
        <files mask="JavaGenerator.hpp" hidden="true"/>
        <files mask="Logging.hpp" hidden="true"/>
        <files mask="ParseErrors.hpp" hidden="true"/>
        <files mask="PythonGenerator.hpp" hidden="true"/>
        <files mask="SearchPath.hpp" hidden="true"/>
        <files mask="SymbolScanner.hpp" hidden="true"/>
        <files mask="Token.hpp" hidden="true"/>
        <files mask="UniqueIdChecker.hpp" hidden="true"/>
        <files mask="Utils.hpp" hidden="true"/>
        <files mask="Value.hpp" hidden="true"/>
        <files mask="format_string.hpp" hidden="true"/>
        <files mask="options.hpp" hidden="true"/>
        <files mask="os_config.hpp" hidden="true"/>
        <files mask="smart_ptr.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="src">
        <files mask="AstNode.cpp" hidden="true"/>
        <files mask="AstWalker.cpp" hidden="true"/>
        <files mask="CGenerator.cpp" hidden="true"/>
        <files mask="ErpcLexer.cpp" hidden="true"/>
        <files mask="Generator.cpp" hidden="true"/>
        <files mask="HexValues.cpp" hidden="true"/>
        <files mask="InterfaceDefinition.cpp" hidden="true"/>
        <files mask="JavaGenerator.cpp" hidden="true"/>
        <files mask="Logging.cpp" hidden="true"/>
        <files mask="ParseErrors.cpp" hidden="true"/>
        <files mask="PythonGenerator.cpp" hidden="true"/>
        <files mask="SearchPath.cpp" hidden="true"/>
        <files mask="SymbolScanner.cpp" hidden="true"/>
        <files mask="Token.cpp" hidden="true"/>
        <files mask="UniqueIdChecker.cpp" hidden="true"/>
        <files mask="Utils.cpp" hidden="true"/>
        <files mask="erpcgen.cpp" hidden="true"/>
        <files mask="format_string.cpp" hidden="true"/>
        <files mask="options.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen_lexer.l" hidden="true"/>
        <files mask="erpcgen_parser.y" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="cpptempl.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="src">
        <files mask="cpptempl.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="other">
        <files mask="README.rst" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/templates" project_relative_path="erpc_aux" type="other">
        <files mask="c_client_header.template" hidden="true"/>
        <files mask="c_client_source.template" hidden="true"/>
        <files mask="c_common_header.template" hidden="true"/>
        <files mask="c_crc.template" hidden="true"/>
        <files mask="c_server_header.template" hidden="true"/>
        <files mask="c_server_source.template" hidden="true"/>
        <files mask="cpp_client_header.template" hidden="true"/>
        <files mask="cpp_client_source.template" hidden="true"/>
        <files mask="cpp_coders.template" hidden="true"/>
        <files mask="cpp_common_functions.template" hidden="true"/>
        <files mask="cpp_interface_header.template" hidden="true"/>
        <files mask="cpp_interface_source.template" hidden="true"/>
        <files mask="cpp_server_header.template" hidden="true"/>
        <files mask="cpp_server_source.template" hidden="true"/>
        <files mask="java_client.template" hidden="true"/>
        <files mask="java_coders.template" hidden="true"/>
        <files mask="java_const.template" hidden="true"/>
        <files mask="java_enum.template" hidden="true"/>
        <files mask="java_interface.template" hidden="true"/>
        <files mask="java_server.template" hidden="true"/>
        <files mask="java_struct.template" hidden="true"/>
        <files mask="py_client.template" hidden="true"/>
        <files mask="py_coders.template" hidden="true"/>
        <files mask="py_common.template" hidden="true"/>
        <files mask="py_global_init.template" hidden="true"/>
        <files mask="py_init.template" hidden="true"/>
        <files mask="py_interface.template" hidden="true"/>
        <files mask="py_server.template" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AliasType.hpp" hidden="true"/>
        <files mask="Annotation.hpp" hidden="true"/>
        <files mask="ArrayType.hpp" hidden="true"/>
        <files mask="BuiltinType.hpp" hidden="true"/>
        <files mask="ConstType.hpp" hidden="true"/>
        <files mask="DataType.hpp" hidden="true"/>
        <files mask="EnumMember.hpp" hidden="true"/>
        <files mask="EnumType.hpp" hidden="true"/>
        <files mask="Function.hpp" hidden="true"/>
        <files mask="FunctionType.hpp" hidden="true"/>
        <files mask="Group.hpp" hidden="true"/>
        <files mask="Interface.hpp" hidden="true"/>
        <files mask="ListType.hpp" hidden="true"/>
        <files mask="Program.hpp" hidden="true"/>
        <files mask="StructMember.hpp" hidden="true"/>
        <files mask="StructType.hpp" hidden="true"/>
        <files mask="Symbol.hpp" hidden="true"/>
        <files mask="SymbolScope.hpp" hidden="true"/>
        <files mask="UnionCase.hpp" hidden="true"/>
        <files mask="UnionType.hpp" hidden="true"/>
        <files mask="VoidType.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="src">
        <files mask="Type.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.sln" hidden="true"/>
        <files mask="erpcgen.vcxproj" hidden="true"/>
        <files mask="erpcgen.vcxproj.filters" hidden="true"/>
        <files mask="erpcgen.vcxproj.user" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="doc">
        <files mask="readme_erpcgen.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="src">
        <files mask="stdafx.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="c_include">
        <files mask="stdafx.h" hidden="true"/>
        <files mask="stdbool.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="Sniffer.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="src">
        <files mask="Sniffer.cpp" hidden="true"/>
        <files mask="erpcsniffer.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/mk" project_relative_path="erpc_aux" type="script">
        <files mask="common.mk" hidden="true"/>
        <files mask="erpc_common.mk" hidden="true"/>
        <files mask="flags.mk" hidden="true"/>
        <files mask="paths.mk" hidden="true"/>
        <files mask="subdirs.mk" hidden="true"/>
        <files mask="targets.mk" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/NOTEPADpp" project_relative_path="erpc_aux" type="xml">
        <files mask="IDl_deep_black.xml" hidden="true"/>
        <files mask="IDl_default.xml" hidden="true"/>
        <files mask="template_deep_black.xml" hidden="true"/>
        <files mask="template_default.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="vsc-extension-quickstart.md" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="other">
        <files mask="language-configuration.json" hidden="true"/>
        <files mask="package.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/.vscode" project_relative_path="erpc_aux" type="other">
        <files mask="launch.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/img" project_relative_path="erpc_aux" type="image">
        <files mask="erpcPic.png" hidden="true"/>
        <files mask="templatePic.png" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/syntaxes" project_relative_path="erpc_aux" type="other">
        <files mask="erpc.tmLanguage.json" hidden="true"/>
        <files mask="template.tmLanguage.json" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Mac" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Windows" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.exe" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_doc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.MIMXRT735S" name="multicore middleware" brief="Multicore SDK" version="2.16.0" full_name="Multicore Software Development Kit" category="Multicore/MulticoreSDK" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="multicore">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
    </component>
    <component id="middleware.fatfs.MIMXRT735S" name="fatfs" brief="FatFs" version="0.15.0" full_name="FAT File System stack" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MIMXRT735S" name="fatfs_mmc" brief="FatFs template MMC" version="0.15.0" full_name="FatFs template configuration for MMC disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/mmc" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/mmc" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MIMXRT735S" name="fatfs_nand" brief="FatFs template NAND" version="0.15.0" full_name="FatFs template configuration for NAND disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/nand" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/nand" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MIMXRT735S" name="fatfs_ram" brief="FatFs template RAM" version="0.15.0" full_name="FatFs template configuration for RAM disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/ram" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ram" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MIMXRT735S" name="fatfs_sd" brief="FatFs template SD" version="0.15.0" full_name="FatFs template configuration for SD disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/sd" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sd" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sd" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MIMXRT735S" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.15.0" full_name="FatFs template configuration for SDSPI disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/sdspi" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sdspi" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MIMXRT735S" name="fatfs_usb" brief="FatFs template USB" version="0.15.0" full_name="FatFs template configuration for USB disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="template/usb" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/usb" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.nnlib.MIMXRT735S" name="cadence_nnlib" brief="DSP Neural Networks" version="4.1.0" full_name="Middleware nnlib" category="DSP/Middleware nnlib" user_visible="false" type="middleware" package_base_path="middleware/cadence/nnlib" project_base_path="nnlib">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="license.txt"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="include/nnlib" type="c_include">
        <files mask="xa_nnlib_api.h"/>
        <files mask="xa_nnlib_cnn_api.h"/>
        <files mask="xa_nnlib_gru_api.h"/>
        <files mask="xa_nnlib_kernels_api.h"/>
        <files mask="xa_nnlib_lstm_api.h"/>
        <files mask="xa_nnlib_standards.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_nnlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/nnlib" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/nnlib" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMXRT735S" name="clock" brief="Clock Driver" version="2.4.0" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.MIMXRT735S" name="reset" brief="Reset Driver" version="2.1.0" full_name="Reset Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux_connections.MIMXRT735S" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.0" full_name="Inputmux_connections Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_iopctl.MIMXRT735S" name="iopctl" brief="iopctl Driver" version="2.0.2" full_name="iopctl Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iopctl.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.edma_soc.MIMXRT735S" name="edma_soc" brief="EDMA SOC Driver" version="1.0.0" full_name="EDMA SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_edma_soc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma_soc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utilities.unity.MIMXRT735S" name="unity" brief="Simple Unit Testing for C" version="2.1.0" full_name="Utilities unity" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities/unity" project_base_path="utilities/unity">
      <defines>
        <define name="NDEBUG" value=""/>
        <define name="UNITY_DUMP_RESULT" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="unity.c"/>
        <files mask="gcov_support.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
        <files mask="gcov_support.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="linkscripts" type="src">
        <files mask="main_text.ldt"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT735S" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT735S" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SSERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMXRT735S" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MIMXRT735S" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/reset" project_base_path="component/reset">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMXRT735S" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_template_config.MIMXRT735S" name="osa" brief="Component osa template config" version="1.0.0" full_name="Component osa template config" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="config" config="true" type="c_include">
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_template_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip_fmu.MIMXRT735S" name="mflash onchip_fmu" brief="mflash onchip_fmu" version="1.0.0" full_name="mflash onchip_fmu" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
    </component>
    <component id="component.els_pkc.core.MIMXRT735S" name="els_pkc.core" brief="Component els_pkc.core" version="1.9.0" full_name="Component els_pkc.core" category="els_pkc/els_pkc_core" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxClCore/inc" type="c_include">
        <files mask="mcuxClCore_Examples.h"/>
        <files mask="mcuxClCore_FunctionIdentifiers.h"/>
        <files mask="mcuxClCore_Macros.h"/>
        <files mask="mcuxClCore_Platform.h"/>
        <files mask="mcuxClCore_Toolchain.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_core.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCore/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCore/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.data_integrity.MIMXRT735S" name="els_pkc.data_integrity" brief="Component els_pkc.data_integrity" version="1.9.0" full_name="Component els_pkc.data_integrity" category="els_pkc/els_pkc_data_integrity" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslDataIntegrity/inc" type="c_include">
        <files mask="mcuxCsslDataIntegrity.h"/>
        <files mask="mcuxCsslDataIntegrity_Cfg.h"/>
        <files mask="mcuxCsslDataIntegrity_Impl.h"/>
        <files mask="mcuxCsslDataIntegrity_None.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_data_integrity.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslDataIntegrity/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslDataIntegrity/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.ecc_deterministic.MIMXRT735S" name="els_pkc.ecc_deterministic" brief="Component els_pkc.ecc_deterministic" version="1.9.0" full_name="Component els_pkc.ecc_deterministic" category="els_pkc/els_pkc_ecc_deterministic" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_ecc_deterministic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.els_header_only.MIMXRT735S" name="els_header_only" brief="Component els_header_only" version="1.9.0" full_name="Component els_header_only" category="els_pkc/els_pkc_els_header_only" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxClEls/inc" type="c_include">
        <files mask="mcuxClEls.h"/>
        <files mask="mcuxClEls_Aead.h"/>
        <files mask="mcuxClEls_Cipher.h"/>
        <files mask="mcuxClEls_Cmac.h"/>
        <files mask="mcuxClEls_Crc.h"/>
        <files mask="mcuxClEls_Ecc.h"/>
        <files mask="mcuxClEls_Hash.h"/>
        <files mask="mcuxClEls_Hmac.h"/>
        <files mask="mcuxClEls_Kdf.h"/>
        <files mask="mcuxClEls_mapping.h"/>
        <files mask="mcuxClEls_Rng.h"/>
        <files mask="mcuxClEls_Types.h"/>
        <files mask="mcuxClEls_KeyManagement.h"/>
      </source>
      <source relative_path="src/comps/mcuxClEls/inc/internal" type="c_include">
        <files mask="mcuxClEls_Internal.h"/>
        <files mask="mcuxClEls_Internal_mapping.h"/>
        <files mask="mcuxClEls_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_els_header_only.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.key_derivation.MIMXRT735S" name="els_pkc.key_derivation" brief="Component els_pkc.key_derivation" version="1.9.0" full_name="Component els_pkc.key_derivation" category="els_pkc/els_pkc_key_derivation" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxClKey/src" type="src">
        <files mask="mcuxClKey_agreement.c"/>
        <files mask="mcuxClKey_agreement_selftest.c"/>
        <files mask="mcuxClKey_Derivation.c"/>
        <files mask="mcuxClKey_Derivation_HKDF.c"/>
        <files mask="mcuxClKey_Derivation_NIST_SP800_108.c"/>
        <files mask="mcuxClKey_Derivation_NIST_SP800_56C.c"/>
        <files mask="mcuxClKey_Derivation_PBKDF2.c"/>
        <files mask="mcuxClKey_generate_keypair.c"/>
      </source>
      <source relative_path="src/comps/mcuxClKey/inc" type="c_include">
        <files mask="mcuxClKey_DerivationAlgorithms.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_HKDF.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_NIST_SP800_108.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_NIST_SP800_56C.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_PBKDF2.h"/>
      </source>
      <source relative_path="src/comps/mcuxClKey/inc/internal" type="c_include">
        <files mask="mcuxClKey_Derivation_Helper.h"/>
        <files mask="mcuxClKey_DerivationAlgorithms_NIST_SP800_108_Internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_key_derivation.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.pre_processor.MIMXRT735S" name="els_pkc.pre_processor" brief="Component els_pkc.pre_processor" version="1.9.0" full_name="Component els_pkc.pre_processor" category="els_pkc/els_pkc_pre_processor" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslCPreProcessor/inc" type="c_include">
        <files mask="mcuxCsslAnalysis.h"/>
        <files mask="mcuxCsslCPreProcessor.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_pre_processor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslCPreProcessor/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslCPreProcessor/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.secure_counter.MIMXRT735S" name="els_pkc.secure_counter" brief="Component els_pkc.secure_counter" version="1.9.0" full_name="Component els_pkc.secure_counter" category="els_pkc/els_pkc_secure_counter" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslSecureCounter/inc" type="c_include">
        <files mask="mcuxCsslSecureCounter.h"/>
        <files mask="mcuxCsslSecureCounter_Cfg.h"/>
        <files mask="mcuxCsslSecureCounter_Impl.h"/>
        <files mask="mcuxCsslSecureCounter_None.h"/>
        <files mask="mcuxCsslSecureCounter_SW_Local.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_secure_counter.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslSecureCounter/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslSecureCounter/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.toolchain.MIMXRT735S" name="els_pkc toolchain" brief="Component els_pkc toolchain" version="1.9.0" full_name="Component els_pkc toolchain" category="els_pkc/els_pkc_toolchain" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="src/compiler" type="c_include">
        <files mask="mcuxClToolchain.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_toolchain.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/compiler" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/compiler" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.component.els_pkc.unused_files.MIMXRT735S" name="unused_files" version="1.9.0" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="examples" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
</component>-->
    <component id="component.ak4497_adapter.MIMXRT735S" name="codec_ak4497_adapter" brief="Component ak4497 adapter for single codec" version="2.2.0" full_name="Component ak4497_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/ak4497" type="c_include">
        <files mask="fsl_codec_ak4497_adapter.h"/>
      </source>
      <source relative_path="port/ak4497" type="src">
        <files mask="fsl_codec_ak4497_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ak4497" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/ak4497" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMXRT735S" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <defines>
        <define name="CODEC_MULTI_ADAPTERS" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42448_adapter.MIMXRT735S" name="codec_cs42448_adapter" brief="Component cs42448 adapter for single codec" version="2.2.1" full_name="Component cs42448_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/cs42448" type="c_include">
        <files mask="fsl_codec_cs42448_adapter.h"/>
      </source>
      <source relative_path="port/cs42448" type="src">
        <files mask="fsl_codec_cs42448_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42448" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42448" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMXRT735S" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/cs42888" type="c_include">
        <files mask="fsl_codec_cs42888_adapter.h"/>
      </source>
      <source relative_path="port/cs42888" type="src">
        <files mask="fsl_codec_cs42888_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42888" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42888" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMXRT735S" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/da7212" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/da7212" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm186x_adapter.MIMXRT735S" name="codec_pcm186x_adapter" brief="Component pcm186x adapter for single codec" version="2.0.0" full_name="Component pcm186x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/pcm186x" type="c_include">
        <files mask="fsl_codec_pcm186x_adapter.h"/>
      </source>
      <source relative_path="port/pcm186x" type="src">
        <files mask="fsl_codec_pcm186x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm186x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm186x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm512x_adapter.MIMXRT735S" name="codec_pcm512x_adapter" brief="Component pcm512x adapter for single codec" version="2.0.0" full_name="Component pcm512x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/pcm512x" type="c_include">
        <files mask="fsl_codec_pcm512x_adapter.h"/>
      </source>
      <source relative_path="port/pcm512x" type="src">
        <files mask="fsl_codec_pcm512x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm512x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm512x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMXRT735S" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sgtl5000" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sgtl5000" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9896_adapter.MIMXRT735S" name="codec_tfa9896_adapter" brief="Component tfa9896 adapter for single codec" version="2.2.0" full_name="Component tfa9896_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/tfa9896" type="c_include">
        <files mask="fsl_codec_tfa9896_adapter.h"/>
      </source>
      <source relative_path="port/tfa9896" type="src">
        <files mask="fsl_codec_tfa9896_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9896" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9896" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9xxx_adapter.MIMXRT735S" name="codec_tfa9xxx_adapter" brief="Component tfa9xxx adapter for single codec" version="2.2.0" full_name="Component tfa9xxx_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/tfa9xxx" type="c_include">
        <files mask="fsl_codec_tfa9xxx_adapter.h"/>
      </source>
      <source relative_path="port/tfa9xxx" type="src">
        <files mask="fsl_codec_tfa9xxx_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9xxx" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9xxx" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8524_adapter.MIMXRT735S" name="codec_wm8524_adapter" brief="Component wm8524 adapter for single codec" version="2.2.0" full_name="Component wm8524_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/wm8524" type="c_include">
        <files mask="fsl_codec_wm8524_adapter.h"/>
      </source>
      <source relative_path="port/wm8524" type="src">
        <files mask="fsl_codec_wm8524_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8524" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8524" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMXRT735S" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/wm8904" type="c_include">
        <files mask="fsl_codec_wm8904_adapter.h"/>
      </source>
      <source relative_path="port/wm8904" type="src">
        <files mask="fsl_codec_wm8904_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8904" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8904" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMXRT735S" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8960" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8960" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMXRT735S" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8962" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8962" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT735S" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMXRT735S" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
        <files mask="riscvllvm.cmake"/>
      </source>
    </component>
    <component id="CMSIS_DSP_Include.MIMXRT735S" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.16.2" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMXRT735S" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.16.2" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
        <files mask="arm_fir_decimate_f64.c"/>
        <files mask="arm_fir_decimate_init_f64.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_average_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_average_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMXRT735S" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMXRT735S" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.3.0" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMXRT735S" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMXRT735S" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT735S" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT735S" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMXRT735S" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MIMXRT735S" name="CMSIS_Driver_GPIO" brief="Access to #include Driver_GPIO.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver GPIO" category="CMSIS Driver/GPIO" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include/GPIO" template="true" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="Include/GPIO" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_GPIO.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="asm_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMXRT735S" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMXRT735S" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMXRT735S" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMXRT735S" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMXRT735S" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMXRT735S" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMXRT735S" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMXRT735S" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMXRT735S" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMXRT735S" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="6.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.RTE.MIMXRT735S" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT735S/template" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MIMXRT735S" name="MIMXRT735S" version="1.0.0" package_base_path="CMSIS" project_base_path="./">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
  </source>
  <source relative_path="Driver/Include/GPIO" type="c_include">
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
  </source>
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Core/Include" type="c_include">
    <files mask="cmsis_clang.h"/>
  </source>
  <source relative_path="Core/Include/m-profile" type="c_include">
    <files mask="cmsis_clang_m.h"/>
  </source>
</component>-->
    <component id="project_template.MIMXRT735S.MIMXRT735S" name="MIMXRT735S" brief="Devices_project_template MIMXRT735S" version="1.0.0" full_name="Devices_project_template MIMXRT735S" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT735S/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT735S"/>
              <component_dependency value="utility.debug_console_template_config.MIMXRT735S"/>
              <component_dependency value="platform.utilities.assert.MIMXRT735S"/>
              <component_dependency value="component.serial_manager.MIMXRT735S"/>
              <component_dependency value="component.serial_manager_uart.MIMXRT735S"/>
            </all>
            <all>
              <component_dependency value="utility.debug_console_lite.MIMXRT735S"/>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT735S"/>
            </all>
          </any_of>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.xspi.MIMXRT735S"/>
              <component_dependency value="platform.drivers.cache_xcache.MIMXRT735S"/>
              <component_dependency value="platform.drivers.power.MIMXRT735S"/>
              <device_core_dependency value="cm33_core0_MIMXRT735S"/>
            </all>
            <all>
              <component_dependency value="platform.drivers.power.MIMXRT735S"/>
              <device_core_dependency value="cm33_core1_MIMXRT735S"/>
            </all>
          </any_of>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT735S"/>
          <component_dependency value="platform.drivers.gpio.MIMXRT735S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT735S"/>
          <component_dependency value="device.MIMXRT735S_startup.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT735S"/>
          <component_dependency value="platform.drivers.glikey.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
      </source>
      <source relative_path="cm33_core0" config="true" type="c_include" device_cores="cm33_core0_MIMXRT735S">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm33_core0" config="true" type="src" device_cores="cm33_core0_MIMXRT735S">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="cm33_core1" config="true" type="c_include" device_cores="cm33_core1_MIMXRT735S">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm33_core1" config="true" type="src" device_cores="cm33_core1_MIMXRT735S">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT735S_linker.MIMXRT735S" name="MIMXRT735S_linker" brief="Device MIMXRT735S_linker" version="1.0.0" full_name="Device MIMXRT735S_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="devices/MIMXRT735S" project_base_path="MIMXRT735S">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm33_core0_MIMXRT735S">
        <files mask="MIMXRT735Sxxxx_cm33_core0_ram.scf"/>
        <files mask="MIMXRT735Sxxxx_cm33_core0_flash.scf"/>
        <files mask="MIMXRT735Sxxxx_cm33_core0_flash1.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm33_core0_MIMXRT735S">
        <files mask="MIMXRT735Sxxxx_cm33_core0_ram.ld"/>
        <files mask="MIMXRT735Sxxxx_cm33_core0_flash.ld"/>
        <files mask="MIMXRT735Sxxxx_cm33_core0_flash1.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm33_core0_MIMXRT735S">
        <files mask="MIMXRT735Sxxxx_cm33_core0_ram.icf"/>
        <files mask="MIMXRT735Sxxxx_cm33_core0_flash.icf"/>
        <files mask="MIMXRT735Sxxxx_cm33_core0_flash1.icf"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm33_core1_MIMXRT735S">
        <files mask="MIMXRT735Sxxxx_cm33_core1_ram.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm33_core1_MIMXRT735S">
        <files mask="MIMXRT735Sxxxx_cm33_core1_ram.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm33_core1_MIMXRT735S">
        <files mask="MIMXRT735Sxxxx_cm33_core1_ram.icf"/>
      </source>
    </component>
    <component id="platform.drivers.utick.MIMXRT735S" name="utick" brief="UTICK Driver" version="2.0.5" full_name="UTICK Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dsp.MIMXRT735S" name="dsp" brief="DSP Driver" version="2.0.0" full_name="DSP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
          <device_core_dependency value="cm33_core1_MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dsp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dsp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT735S" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console_lite" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" type="c_include"/>
        <include_path relative_path="debug_console_lite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.str.MIMXRT735S" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="str" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="str" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <include_paths>
        <include_path relative_path="str" type="c_include"/>
        <include_path relative_path="str" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console.MIMXRT735S" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="utility.str.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" type="c_include"/>
        <include_path relative_path="debug_console" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MIMXRT735S" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="utility.debug_console.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT735S" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="platform.utilities.assert.MIMXRT735S"/>
          </not>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT735S_startup.MIMXRT735S" name="MIMXRT735S_startup" brief="Device MIMXRT735S_startup" version="1.0.0" full_name="Device MIMXRT735S_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMXRT735S" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT735S_system.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm33_core0_MIMXRT735S">
        <files mask="startup_mimxrt735s_cm33_core0.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm33_core0_MIMXRT735S">
        <files mask="startup_mimxrt735s_cm33_core0.cpp"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src">
        <files mask="boot_multicore_slave.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="c_include">
        <files mask="boot_multicore_slave.h"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm33_core0_MIMXRT735S">
        <files mask="startup_MIMXRT735S_cm33_core0.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm33_core0_MIMXRT735S">
        <files mask="startup_MIMXRT735S_cm33_core0.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm33_core0_MIMXRT735S">
        <files mask="startup_MIMXRT735S_cm33_core0.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm33_core1_MIMXRT735S">
        <files mask="startup_mimxrt735s_cm33_core1.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm33_core1_MIMXRT735S">
        <files mask="startup_mimxrt735s_cm33_core1.cpp"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm33_core1_MIMXRT735S">
        <files mask="startup_MIMXRT735S_cm33_core1.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm33_core1_MIMXRT735S">
        <files mask="startup_MIMXRT735S_cm33_core1.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm33_core1_MIMXRT735S">
        <files mask="startup_MIMXRT735S_cm33_core1.S"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.interface.common.MIMXRT735S" name="issdk_interfaces" brief="ISSDK Sensor Interface Common" version="1.7.0" full_name="Middleware issdk sensor interface common" category="Sensors/drivers" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT735S"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" type="src">
        <files mask="register_io_i2c.c"/>
        <files mask="register_io_spi.c"/>
        <files mask="sensor_io_spi.c"/>
        <files mask="sensor_io_i2c.c"/>
      </source>
      <source relative_path="sensors" type="c_include">
        <files mask="register_io_i2c.h"/>
        <files mask="register_io_spi.h"/>
        <files mask="sensor_io_spi.h"/>
        <files mask="sensor_io_i2c.h"/>
        <files mask="sensor_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_sensor_interface_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" type="c_include"/>
        <include_path relative_path="sensors" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.allregdefs.MIMXRT735S" name="sensor_allregdefs" brief="ISSDK Allregdefs" version="1.8.0" full_name="Middleware issdk sensor all regdefs" category="issdk/allregdefs" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT735S"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxos8700.h"/>
        <files mask="mpl3115.h"/>
        <files mask="fxlc95000.h"/>
        <files mask="fxls8471q.h"/>
        <files mask="fxls8962.h"/>
        <files mask="fxpq3115.h"/>
        <files mask="mag3110.h"/>
        <files mask="mma845x.h"/>
        <files mask="mma865x.h"/>
        <files mask="mma8491q.h"/>
        <files mask="mma9553.h"/>
        <files mask="diff_p.h"/>
        <files mask="dbap.h"/>
        <files mask="fxls896x.h"/>
        <files mask="fxls8974.h"/>
        <files mask="fxls8961.h"/>
        <files mask="fxls8971.h"/>
        <files mask="nmh1000.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_sensor_allregdefs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" type="c_include"/>
        <include_path relative_path="sensors" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxls8974cf.MIMXRT735S" name="issdk_fxls8974cf" brief="ISSDK FXLS8974CF Sensor Driver Files" version="1.8.0" full_name="Middleware issdk sensor FXLS8974CF" category="Sensors/sensors" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="issdk">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT735S"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" type="c_include">
        <files mask="fxls8974.h"/>
        <files mask="fxls8974_drv.h"/>
      </source>
      <source relative_path="sensors" type="src">
        <files mask="fxls8974_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_issdk_sensor_fxls8974cf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" type="c_include"/>
        <include_path relative_path="sensors" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT735S" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT735S"/>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT735S"/>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT735S"/>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT735S"/>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.config.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_non_trustzone.MIMXRT735S" name="cm33 nontrustzone port" brief="FreeRTOS cm33 non trustzone port" version="11.0.1" full_name="FreeRTOS cm33 non trustzone port" category="RTOS/cm33_non_trustzone_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT735S"/>
            <device_core_dependency value="cm33_core1_MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.S"/>
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_non_trustzone.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.non_secure.MIMXRT735S" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="11.0.1" full_name="FreeRTOS cm33 secure port" category="RTOS/cm33_secure_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT735S"/>
            <device_core_dependency value="cm33_core1_MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.S"/>
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="src" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_non_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.secure.MIMXRT735S" name="cm33 secure port" brief="FreeRTOS Secure Context" version="11.0.1" full_name="FreeRTOS Secure Context" category="RTOS/cm33 secure port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT735S"/>
            <device_core_dependency value="cm33_core1_MIMXRT735S"/>
          </any_of>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="src" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="src" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="secure_context.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="asm_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="asm_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT735S" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT735S" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT735S" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT735S" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT735S" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT735S" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT735S" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MIMXRT735S" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.config.MIMXRT735S" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="true" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM33_3_priority_bits" config="true" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true">
        <files mask="FreeRTOSConfig_Gen.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
        <include_path relative_path="template" type="asm_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" fpu="true"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpuart_freertos.MIMXRT735S" name="lpuart_freertos" brief="LPFLEXCOMM LPUART FreeRTOS Driver" version="2.0.0" full_name="LPFLEXCOMM LPUART FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT735S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpspi_freertos.MIMXRT735S" name="lpspi_freertos" brief="LPFLEXCOMM LPSPI FreeRTOS Driver" version="2.0.0" full_name="LPFLEXCOMM LPSPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpspi.MIMXRT735S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpi2c_freertos.MIMXRT735S" name="lpi2c_freertos" brief="LPFLEXCOMM LPI2C FreeRTOS Driver" version="2.0.0" full_name="LPFLEXCOMM LPI2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xspi.MIMXRT735S" name="xspi" brief="XSPI Driver" version="2.5.0" full_name="XSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_xspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xspi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xspi_edma.MIMXRT735S" name="xspi_edma" brief="XSPI EDMA Driver" version="2.0.2" full_name="XSPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.xspi.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_xspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xspi_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wwdt.MIMXRT735S" name="wwdt" brief="WWDT Driver" version="2.1.9" full_name="WWDT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT735S" name="sdhc" brief="USDHC Driver" version="2.8.4" full_name="USDHC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trng.MIMXRT735S" name="trng" brief="TRNG Driver" version="2.0.17" full_name="TRNG Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.syspm.MIMXRT735S" name="syspm" brief="SYSPM Driver" version="2.3.0" full_name="SYSPM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_syspm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_syspm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMXRT735S" name="sema42" brief="SEMA42 Driver" version="2.0.4" full_name="SEMA42 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sdadc.MIMXRT735S" name="sdadc" brief="SDADC Driver" version="2.0.1" full_name="SDADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_sdadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sdadc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sctimer.MIMXRT735S" name="sctimer" brief="SCT Driver" version="2.5.1" full_name="SCT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMXRT735S" name="sai" brief="SAI Driver" version="2.4.4" full_name="SAI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai_edma.MIMXRT735S" name="sai_edma" brief="SAI EDMA Driver" version="2.7.1" full_name="SAI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.sai.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.puf_v3.MIMXRT735S" name="PUFv3" brief="PUFv3 Driver" version="2.0.3" full_name="PUFv3 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_puf_v3.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_puf_v3.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pint.MIMXRT735S" name="pint" brief="PINT Driver" version="2.1.13" full_name="PINT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pint.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm.MIMXRT735S" name="pdm" brief="PDM Driver" version="2.9.1" full_name="PDM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm_edma.MIMXRT735S" name="pdm_edma" brief="PDM EDMA Driver" version="2.6.3" full_name="PDM EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.pdm.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ostimer.MIMXRT735S" name="ostimer" brief="OSTimer Driver" version="2.2.2" full_name="OSTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ostimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ostimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu1.MIMXRT735S" name="mu" brief="MU Driver" version="2.7.0" full_name="MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mrt.MIMXRT735S" name="mrt" brief="MRT Driver" version="2.0.4" full_name="MRT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mmu.MIMXRT735S" name="mmu" brief="MMU Driver" version="2.0.0" full_name="MMU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mmu.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mmu.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMXRT735S" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="1.0.0" full_name="LPUART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT735S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT735S"/>
          <component_dependency value="device.RTE.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart_edma.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMXRT735S" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="1.0.0" full_name="LPSPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT735S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpspi.MIMXRT735S"/>
          <component_dependency value="device.RTE.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpspi_edma.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMXRT735S" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="1.0.0" full_name="LPI2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT735S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="device.RTE.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c_edma.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpuart.MIMXRT735S" name="lpuart" brief="LPUART Driver" version="2.3.2" full_name="LPUART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpuart_edma.MIMXRT735S" name="lpuart_edma" brief="LPUART EDMA Driver" version="2.0.0" full_name="LPUART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpspi.MIMXRT735S" name="lpspi" brief="LPSPI Driver" version="2.2.7" full_name="LPSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpspi_edma.MIMXRT735S" name="lpspi_edma" brief="LPSPI EDMA Driver" version="2.1.2" full_name="LPSPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpspi.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S" name="lpi2c" brief="LPI2C Driver" version="2.2.5" full_name="LPI2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm_lpi2c_edma.MIMXRT735S" name="lpi2c_edma" brief="LPI2C EDMA Driver" version="2.0.1" full_name="LPI2C EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpflexcomm.MIMXRT735S" name="lpflexcomm" brief="LPFLEXCOMM Driver" version="2.2.1" full_name="LPFLEXCOMM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpflexcomm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpflexcomm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_freqme.MIMXRT735S" name="lpc_freqme" brief="lpc_freqme Driver" version="2.1.2" full_name="lpc_freqme Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_freqme.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_freqme.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMXRT735S" name="lpadc" brief="LPADC Driver" version="2.9.1" full_name="LPADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.itrc.MIMXRT735S" name="itrc" brief="itrc Driver" version="2.4.0" full_name="itrc Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_itrc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_itrc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.irtc.MIMXRT735S" name="rtc" brief="IRTC Driver" version="2.3.1" full_name="IRTC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_irtc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_irtc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux.MIMXRT735S" name="inputmux" brief="INPUTMUX Driver" version="2.0.7" full_name="INPUTMUX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="platform.drivers.inputmux_connections.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMXRT735S" name="i3c" brief="I3C Driver" version="2.13.0" full_name="I3C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c_edma.MIMXRT735S" name="i3c_edma" brief="I3C EDMA Driver" version="2.2.9" full_name="I3C EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpio.MIMXRT735S" name="gpio" brief="GPIO Driver" version="2.8.0" full_name="GPIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.glikey.MIMXRT735S" name="glikey" brief="GLIKEY Driver" version="2.0.1" full_name="GLIKEY Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_glikey.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_glikey.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gdet.MIMXRT735S" name="gdet" brief="GDET Driver" version="2.1.0" full_name="GDET Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gdet.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gdet.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT735S" name="flexio_uart" brief="FLEXIO UART Driver" version="2.5.0" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMXRT735S" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.flexio_uart.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT735S" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.4" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMXRT735S" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.3.0" full_name="FLEXIO SPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.flexio_spi.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT735S" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.1.0" full_name="FLEXIO MCULCD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMXRT735S" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.5" full_name="FLEXIO MCULCD EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT735S" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMXRT735S" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.8" full_name="FLEXIO I2S EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MIMXRT735S"/>
          <component_dependency value="platform.drivers.flexio_i2s.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT735S" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT735S" name="flexio" brief="FLEXIO Driver" version="2.2.3" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma4.MIMXRT735S" name="edma" brief="EDMA Driver" version="2.10.1" full_name="EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="driver.edma_soc.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
        <files mask="fsl_edma_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ctimer.MIMXRT735S" name="ctimer" brief="CTimer Driver" version="2.3.1" full_name="CTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.crc.MIMXRT735S" name="crc" brief="CRC Driver" version="2.0.4" full_name="CRC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cdog.MIMXRT735S" name="cdog" brief="cdog Driver" version="2.1.3" full_name="cdog Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cdog.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_xcache.MIMXRT735S" name="cache_xcache" brief="CACHE XCACHE Driver" version="2.0.2" full_name="CACHE XCACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.acmp.MIMXRT735S" name="acmp" brief="ACMP Driver" version="2.3.0" full_name="ACMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT735S" name="sdmmc_osa" brief="Middleware sdmmc osa" version="2.3.0" full_name="SDMMC osa stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
        <include_path relative_path="osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT735S" name="sd" brief="Middleware sdmmc sd" version="2.4.1" full_name="SDMMC sd stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SD_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="sd" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" type="c_include"/>
        <include_path relative_path="sd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT735S" name="mmc" brief="Middleware sdmmc mmc" version="2.5.1" full_name="SDMMC mmc stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="MMC_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="mmc" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" type="c_include"/>
        <include_path relative_path="mmc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT735S" name="sdio" brief="Middleware sdmmc sdio" version="2.4.1" full_name="SDMMC sdio stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="sdio" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" type="c_include"/>
        <include_path relative_path="sdio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdspi.MIMXRT735S" name="sdspi" brief="Middleware sdmmc sdspi" version="2.2.1" full_name="SDMMC sdspi stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDSPI_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="sdspi" type="src">
        <files mask="fsl_sdspi.c"/>
      </source>
      <source relative_path="sdspi" type="c_include">
        <files mask="fsl_sdspi.h"/>
      </source>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdspi" type="c_include"/>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="sdspi" type="asm_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT735S" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.6.3" full_name="Middleware sdmmc host usdhc" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT735S"/>
            <component_dependency value="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT735S"/>
          </any_of>
          <component_dependency value="platform.drivers.usdhc.MIMXRT735S"/>
          <component_dependency value="middleware.sdmmc.common.MIMXRT735S"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT735S"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT735S" name="sdmmc_host_usdhc_non_blocking" brief="Middleware sdmmc host usdhc non_blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc non_blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_non_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT735S" name="sdmmc_host_usdhc_blocking" brief="Middleware sdmmc host usdhc blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.bm.MIMXRT735S" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="5.1.2" full_name="RPMsg-Lite baremetal environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.freertos.MIMXRT735S" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="5.1.2" full_name="RPMsg-Lite FreeRTOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.xos.MIMXRT735S" name="rpmsg_lite xos" brief="RPMsg-Lite XOS environment layer sources" version="5.1.2" full_name="RPMsg-Lite XOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_xos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_xos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.qnx.MIMXRT735S" name="rpmsg_lite qnx" brief="RPMsg-Lite QNX environment layer sources" version="5.1.2" full_name="RPMsg-Lite QNX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_qnx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_qnx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.threadx.MIMXRT735S" name="rpmsg_lite threadx" brief="RPMsg-Lite ThreadX environment layer sources" version="5.1.2" full_name="RPMsg-Lite ThreadX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_threadx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.zephyr.MIMXRT735S" name="rpmsg_lite zephyr" brief="RPMsg-Lite Zephyr environment sources" version="5.1.2" full_name="RPMsg-Lite Zephyr environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_zephyr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_zephyr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.MIMXRT735S" name="rpmsg_lite" brief="RPMsg-Lite" version="5.1.2" full_name="Remote Procedure Messaging Lite library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.rpmsg-lite.bm.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.qnx.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.threadx.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.xos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.zephyr.MIMXRT735S"/>
          </any_of>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="llist.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_lite.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.ns.MIMXRT735S" name="rpmsg_lite" brief="RPMsg-Lite NS" version="5.1.2" full_name="Remote Procedure Messaging Lite NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_ns.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_ns.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_ns.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.queue.MIMXRT735S" name="rpmsg_lite" brief="RPMsg-Lite Queue" version="5.1.2" full_name="Remote Procedure Messaging Queue NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_queue.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.imxrt700.MIMXRT735S" name="rpmsg_lite_imxrt700" brief="RPMsg-Lite for imxrt700 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for imxrt700 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT735S"/>
            <device_core_dependency value="cm33_core1_MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt700_m33" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt700_m33" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_imxrt700.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_m33" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_m33" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.imxrt700_hifi1.MIMXRT735S" name="rpmsg_lite_imxrt700_hifi1" brief="RPMsg-Lite for imxrt700 hifi1 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for imxrt700 hifi1 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
          <device_core_dependency value="hifi1_MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi1" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt700_hifi1" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_imxrt700_hifi1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi1" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt700_hifi1" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.imxrt700.MIMXRT735S" name="mcmgr_imxrt700" brief="Multicore Manager for imxrt700 board" version="4.1.5" full_name="Multicore Manager for imxrt700 board" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mu1.MIMXRT735S"/>
          <component_dependency value="middleware.multicore.mcmgr.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr_internal_core_api_imxrt700.c"/>
        <files mask="mcmgr_mu_internal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr_imxrt700.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.client.MIMXRT735S" name="eRPC_client" brief="eRPC_client" version="1.13.0" full_name="eRPC client" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.server.MIMXRT735S" name="eRPC_server" brief="eRPC_server" version="1.13.0" full_name="eRPC server" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.arbitrator.MIMXRT735S" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.13.0" full_name="eRPC arbitrator" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_arbitrated_client_manager.hpp"/>
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
        <files mask="erpc_transport_arbitrator.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_arbitrator.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_stdlib.MIMXRT735S" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.13.0" full_name="eRPC stdlib port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_stdlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_freertos.MIMXRT735S" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.13.0" full_name="eRPC FreeRTOS port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_threading.h"/>
        <files mask="erpc_setup_extensions.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
        <files mask="erpc_threading_freertos.cpp"/>
        <files mask="erpc_setup_extensions_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.MIMXRT735S" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.13.0" full_name="eRPC MU transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_mu_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_mu.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_mu_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_master.MIMXRT735S" name="eRPC_rpmsg_lite_transport_master" brief="eRPC_rpmsg_lite_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_remote.MIMXRT735S" name="eRPC_rpmsg_lite_transport_remote" brief="eRPC_rpmsg_lite_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_master.MIMXRT735S" name="eRPC_rpmsg_lite_rtos_transport_master" brief="eRPC_rpmsg_lite_rtos_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_remote.MIMXRT735S" name="eRPC_rpmsg_lite_rtos_transport_remote" brief="eRPC_rpmsg_lite_rtos_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.MIMXRT735S" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.13.0" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_tty_rtos_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.MIMXRT735S" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.13.0" full_name="eRPC UART CMSIS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_uart_cmsis_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_uart_cmsis.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_uart_cmsis_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.MIMXRT735S" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.13.0" full_name="eRPC DSPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.MIMXRT735S" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.13.0" full_name="eRPC DSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.MIMXRT735S" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.13.0" full_name="eRPC SPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.MIMXRT735S" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.13.0" full_name="eRPC SPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpspi_slave_transport.MIMXRT735S" name="eRPC_lpspi_slave_transport" brief="eRPC_lpspi_slave_transport" version="1.13.0" full_name="eRPC LPSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_i2c_slave_transport.MIMXRT735S" name="eRPC_i2c_slave_transport" brief="eRPC_i2c_slave_transport" version="1.13.0" full_name="eRPC I2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_i2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_i2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_i2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_i2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpi2c_slave_transport.MIMXRT735S" name="eRPC_lpi2c_slave_transport" brief="eRPC_lpi2c_slave_transport" version="1.13.0" full_name="eRPC LPI2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT735S"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT735S"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpi2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpi2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpi2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpi2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_common_multicore.MIMXRT735S" name="eRPC_common" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include">
        <files mask="erpc_error_handler.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="src">
        <files mask="erpc_error_handler.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_common_multicore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_client.MIMXRT735S" name="eRPC_examples Matrix Multiply Client" brief="erpc_examples Matrix Multiply Client" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_client.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_client.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_client.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_client.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_server.MIMXRT735S" name="eRPC_examples Matrix Multiply Server" brief="erpc_examples Matrix Multiply Server" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_server.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_server.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_server.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core0.MIMXRT735S" name="eRPC_examples Two Way RPC core0" brief="erpc_examples Two Way RPC core0" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core0.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core1.MIMXRT735S" name="eRPC_examples Two Way RPC core1" brief="erpc_examples Two Way RPC core1" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT735S" name="mmc" brief="FatFs_MMC" version="0.15.0" full_name="Fatfs MMC layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT735S"/>
          <component_dependency value="middleware.fatfs.template_mmc.MIMXRT735S"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
        <include_path relative_path="source/fsl_mmc_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT735S" name="ram" brief="FatFs_RAM" version="0.15.0" full_name="Fatfs RAM layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT735S"/>
          <component_dependency value="middleware.fatfs.template_ram.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
        <include_path relative_path="source/fsl_ram_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT735S" name="sd" brief="FatFs_SD" version="0.15.0" full_name="Fatfs SD layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT735S"/>
          <component_dependency value="middleware.fatfs.template_sd.MIMXRT735S"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sd_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sdspi.MIMXRT735S" name="sdspi" brief="FatFs_SDSPI" version="0.15.0" full_name="Fatfs SDSPI layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT735S"/>
          <component_dependency value="middleware.fatfs.template_sdspi.MIMXRT735S"/>
          <component_dependency value="middleware.sdmmc.sdspi.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sdspi_disk" type="src">
        <files mask="fsl_sdspi_disk.c"/>
      </source>
      <source relative_path="source/fsl_sdspi_disk" type="c_include">
        <files mask="fsl_sdspi_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sdspi_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sdspi_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.nnlib_rt700_hifi1.MIMXRT735S" name="nnlib_hifi1_rt700" brief="DSP Neural Networks" version="4.1.0" full_name="Middleware nnlib hifi1 rt700" category="DSP/Middleware nnlib" user_visible="false" type="middleware" package_base_path="middleware/cadence/nnlib" project_base_path="nnlib">
      <dependencies>
        <all>
          <component_dependency value="middleware.cadence.nnlib.MIMXRT735S"/>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT735S"/>
          <device_core_dependency value="hifi1_MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_nnlib_rt700_hifi1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.cadence.naturedsp_hifi1.MIMXRT735S" name="naturedsp_hifi1" brief="NatureDSP" version="1.1.0" full_name="NatureDSP hifi1 library" category="Audio/NatureDSP" user_visible="false" type="middleware" package_base_path="middleware/cadence/naturedsp/hifi1" project_base_path="naturedsp">
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT735S"/>
          <device_core_dependency value="hifi1_MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="NatureDSP_Signal.h"/>
        <files mask="NatureDSP_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_naturedsp_hifi1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.multicore_xaf.MIMXRT735S" name="multicore-xaf" brief="DSP Audio Streamer" version="3.6.0" full_name="Middleware multicore-xaf libxa_af_hostless" category="Audio/DSP Audio Streamer" user_visible="false" type="middleware" package_base_path="middleware/cadence/multicore-xaf" project_base_path="multicore-xaf">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT735S"/>
          <device_core_dependency value="hifi1_MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/src" type="src">
        <files mask="rbtree.c"/>
        <files mask="xa-class-audio-codec.c"/>
        <files mask="xa-class-base.c"/>
        <files mask="xa-class-capturer.c"/>
        <files mask="xa-class-mimo-proc.c"/>
        <files mask="xa-class-mixer.c"/>
        <files mask="xa-class-renderer.c"/>
        <files mask="xf-core.c"/>
        <files mask="xf-io.c"/>
        <files mask="xf-ipc-if.c"/>
        <files mask="xf-ipi.c"/>
        <files mask="xf-isr.c"/>
        <files mask="xf-main.c"/>
        <files mask="xf-mem-ipc.c"/>
        <files mask="xf-mem.c"/>
        <files mask="xf-msg.c"/>
        <files mask="xf-msgq.c"/>
        <files mask="xf-sched.c"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include" type="c_include">
        <files mask="xf-component.h"/>
        <files mask="xf-core.h"/>
        <files mask="xf-dp.h"/>
        <files mask="xf-dp_opcode.h"/>
        <files mask="xf-dp_proxy.h"/>
        <files mask="xf-flx-lock-if.h"/>
        <files mask="xf-io.h"/>
        <files mask="xf-mm.h"/>
        <files mask="xf-msg.h"/>
        <files mask="xf-plugin.h"/>
        <files mask="xf-probe.h"/>
        <files mask="xf-sched.h"/>
        <files mask="xf-timebase.h"/>
        <files mask="xf-trace.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="c_include">
        <files mask="xa-class-base.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="c_include">
        <files mask="rbtree.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="c_include">
        <files mask="xf-dp_config.h"/>
        <files mask="xf-dp_hal.h"/>
        <files mask="xf-dp_ipc.h"/>
        <files mask="xf-dp_runtime.h"/>
        <files mask="xf-dp_types.h"/>
        <files mask="xf-ipc-if.h"/>
        <files mask="xf-mem-ipc.h"/>
        <files mask="xf-mem.h"/>
        <files mask="xf-shmem.h"/>
        <files mask="xf-sys.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="c_include">
        <files mask="xf-board.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/src" type="src">
        <files mask="xaf-api.c"/>
        <files mask="xf-msgq1.c"/>
        <files mask="xf-proxy.c"/>
        <files mask="xf-trace.c"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/include" type="c_include">
        <files mask="xaf-structs.h"/>
        <files mask="xaf-threads-priority.h"/>
        <files mask="xaf-version.h"/>
        <files mask="xf-opcode.h"/>
        <files mask="xf-proto.h"/>
        <files mask="xf-proxy.h"/>
        <files mask="xf.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="c_include">
        <files mask="xf-config.h"/>
        <files mask="xf-hal.h"/>
        <files mask="xf-ipc.h"/>
        <files mask="xf-runtime.h"/>
        <files mask="xf-types.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="c_include">
        <files mask="xa_af_hostless_definitions.h"/>
        <files mask="xa_api_defs.h"/>
        <files mask="xf-ap-dp-common.h"/>
        <files mask="xf-msgq-if.h"/>
      </source>
      <source relative_path="xa_af_hostless/include" type="c_include">
        <files mask="xaf-api.h"/>
        <files mask="xaf-config-user.h"/>
        <files mask="xf-debug.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/audio" type="c_include">
        <files mask="xa-audio-decoder-api.h"/>
        <files mask="xa-capturer-api.h"/>
        <files mask="xa-mimo-proc-api.h"/>
        <files mask="xa-mixer-api.h"/>
        <files mask="xa-renderer-api.h"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/freertos/include" type="c_include">
        <files mask="osal-isr.h"/>
        <files mask="osal-msgq.h"/>
        <files mask="osal-thread.h"/>
        <files mask="osal-timer.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="c_include">
        <files mask="xf-mc-ipc.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/xos/include" type="c_include">
        <files mask="osal-isr.h"/>
        <files mask="osal-msgq.h"/>
        <files mask="osal-thread.h"/>
        <files mask="osal-timer.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/include" type="c_include">
        <files mask="host_fio.h"/>
        <files mask="xaf-app-threads-priority.h"/>
        <files mask="xaf-clk-test.h"/>
        <files mask="xaf-fio-test.h"/>
        <files mask="xaf-mem.h"/>
        <files mask="xaf-test.h"/>
        <files mask="xaf-utils-test.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/include/audio" type="c_include">
        <files mask="xa-aec22-api.h"/>
        <files mask="xa-aec23-api.h"/>
        <files mask="xa-microspeech-frontend-api.h"/>
        <files mask="xa-microspeech-inference-api.h"/>
        <files mask="xa-mimo-mix-api.h"/>
        <files mask="xa-opus-decoder-api.h"/>
        <files mask="xa-opus-encoder-api.h"/>
        <files mask="xa-pcm-gain-api.h"/>
        <files mask="xa-pcm-split-api.h"/>
        <files mask="xa-pcm-stereo-api.h"/>
        <files mask="xa-person-detect-inference-api.h"/>
        <files mask="xa_amr_wb_dec_definitions.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins" type="c_include">
        <files mask="xa-gain-factor-event.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins" type="src">
        <files mask="xa-factory.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aac_dec" type="src">
        <files mask="xa-aac-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aec22" type="src">
        <files mask="xa-aec22.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aec23" type="src">
        <files mask="xa-aec23.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mixer" type="src">
        <files mask="xa-mixer.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mp3_dec" type="src">
        <files mask="xa-mp3-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mp3_enc" type="src">
        <files mask="xa-mp3-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_dec" type="src">
        <files mask="opus_header.c"/>
        <files mask="xa-opus-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_dec" type="c_include">
        <files mask="opus_header.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_enc" type="src">
        <files mask="xa-opus-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/pcm_gain" type="src">
        <files mask="xa-pcm-gain.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/pcm_split" type="src">
        <files mask="xa-pcm-split.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/src-pp" type="src">
        <files mask="xa-src-pp.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/vorbis_dec" type="src">
        <files mask="xa-vorbis-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/capturer" type="src">
        <files mask="xa-capturer-dmic.c"/>
        <files mask="xa-capturer-i2s.c"/>
        <files mask="xa-capturer-pdm.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/pcm_stereo" type="src">
        <files mask="xa-pcm-stereo.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/renderer" type="src">
        <files mask="xa-renderer-sai.c"/>
        <files mask="xa-renderer.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/sbc_dec" type="src">
        <files mask="xa-sbc-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/sbc_enc" type="src">
        <files mask="xa-sbc-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="src">
        <files mask="vit_pre_proc.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="c_include">
        <files mask="vit_pre_proc.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="src">
        <files mask="voice_seeker.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="c_include">
        <files mask="voice_seeker.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/src" type="src">
        <files mask="xaf-fio-test.c"/>
        <files mask="xaf-mem-test.c"/>
      </source>
      <source relative_path="xa_af_hostless/xf_shared/include" type="c_include">
        <files mask="xf-shared.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_multicore_xaf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/xos/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="c_include"/>
        <include_path relative_path="xa_af_hostless/xf_shared/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/xos/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/xf_shared/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.codecs_hifi1.MIMXRT735S" name="codecs_hifi1" brief="DSP Audio Streamer hifi1 codecs" version="1.0.0" full_name="DSP Audio Streamer hifi1 codecs" category="Audio/HiFi1 codecs" user_visible="false" type="middleware" package_base_path="middleware/cadence/codecs" project_base_path="dsp">
      <dependencies>
        <all>
          <board_dependency value="mimxrt700evk"/>
          <device_dependency value="MIMXRT735S"/>
          <device_core_dependency value="hifi1_MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="aacplus_dec/hifi1/lib" type="lib">
        <files mask="xa_aacplus_v2_dec.a" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/doc" type="doc">
        <files mask="HiFi-AAC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/include/aac_dec" type="c_include">
        <files mask="xa_aac_dec_api.h" hidden="true"/>
        <files mask="xa_aac_dec_api.h"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
        <files mask="paramfilesimple_loas.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/src" type="src">
        <files mask="xa_aac_dec_error_handler.c" hidden="true"/>
        <files mask="xa_aac_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/test_inp" type="binary">
        <files mask="sample_loas.bin" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/test_inp" type="other">
        <files mask="thetest.adts" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/test/test_ref" type="other">
        <files mask="sample_loas.wav" hidden="true"/>
        <files mask="thetest.wav" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/doc" type="doc">
        <files mask="HiFi-ASRC-SRC-PP-ProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/include" type="c_include">
        <files mask="xa_api_defs.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_api_defs.h"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/include/src_pp" type="c_include">
        <files mask="xa_src_pp_api.h" hidden="true"/>
        <files mask="xa_src_pp_api.h"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/build" type="doc">
        <files mask="paramfile_src_pp.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/build" type="script">
        <files mask="test_common.mk" hidden="true"/>
        <files mask="test_common_win.mk" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/src" type="src">
        <files mask="xa_src_pp_error_handler.c" hidden="true"/>
        <files mask="xa_src_pp_sample_testbench_hifi3.c" hidden="true"/>
        <files mask="xa_src_pp_waveio.c" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/src" type="c_include">
        <files mask="xa_src_pp_waveio.h" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/test_inp" type="other">
        <files mask="sinusoid_8960Hz_32kHz.wav" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/hifi1/test/test_ref" type="other">
        <files mask="out_src_sinusoid_8960Hz_48kHz.wav" hidden="true"/>
        <files mask="out_src_sinusoid_8960Hz_48kHz_asrc.wav" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/doc" type="doc">
        <files mask="HiFi-LC3-Codec-ProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="lc3/hifi1/include/lc3_codec" type="c_include">
        <files mask="xa_lc3_codec_api.h" hidden="true"/>
        <files mask="xa_lc3_codec_api.h"/>
      </source>
      <source relative_path="lc3/hifi1/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/include" type="c_include">
        <files mask="tinywavein_c.h" hidden="true"/>
        <files mask="tinywaveout_c.h" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/src" type="src">
        <files mask="xa_lc3_decoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_lc3_encoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_lc3_error_handler.c" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/test_inp" type="other">
        <files mask="ABBA_44100.lp20.wav" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits.wav" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/test_inp" type="binary">
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.bin" hidden="true"/>
        <files mask="rate_switching_dec_Castanets_16000_NA.bin" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/test_ref" type="binary">
        <files mask="ABBA_44100_96000.bin" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.bin" hidden="true"/>
      </source>
      <source relative_path="lc3/hifi1/test/test_ref" type="other">
        <files mask="Castanets_16000d.wav" hidden="true"/>
        <files mask="Female_Speech_German_48000_stereo_24bits_320000.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/doc" type="doc">
        <files mask="HiFi-MP3-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="mp3_dec/hifi1/include/mp3_dec" type="c_include">
        <files mask="xa_mp3_dec_api.h" hidden="true"/>
        <files mask="xa_mp3_dec_api.h"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/build" type="doc">
        <files mask="ldscript_stream_data.txt" hidden="true"/>
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/include" type="c_include">
        <files mask="id3_tag_decode.h" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/src" type="src">
        <files mask="id3_tag_decode.c" hidden="true"/>
        <files mask="stream_data.c" hidden="true"/>
        <files mask="xa_mp3_dec_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/test_inp" type="other">
        <files mask="compl.mp3" hidden="true"/>
        <files mask="hihat.mp3" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/hifi1/test/test_ref" type="other">
        <files mask="hihat_16bit.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/doc" type="doc">
        <files mask="HiFi-MP3-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="mp3_enc/hifi1/include/mp3_enc" type="c_include">
        <files mask="xa_mp3_enc_api.h" hidden="true"/>
        <files mask="xa_mp3_enc_api.h"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/include" type="c_include">
        <files mask="xa_mp3_enc_error.h" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/src" type="src">
        <files mask="xa_mp3_enc_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/hifi1/test/test_ref" type="other">
        <files mask="hihat_128.mp3" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/doc" type="doc">
        <files mask="HiFi-OPUS-CodecProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="opus/hifi1/include/opus_codec" type="c_include">
        <files mask="xa_opus_codec_api.h" hidden="true"/>
        <files mask="xa_opus_codec_api.h"/>
      </source>
      <source relative_path="opus/hifi1/include/ogg_lib" type="c_include">
        <files mask="xa_ogg_lib_api.h" hidden="true"/>
        <files mask="xa_ogg_lib_api.h"/>
      </source>
      <source relative_path="opus/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_decode_celt.txt" hidden="true"/>
        <files mask="paramfilesimple_decode_silk.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode_celt.txt" hidden="true"/>
        <files mask="paramfilesimple_encode_silk.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/include" type="c_include">
        <files mask="opus_header.h" hidden="true"/>
        <files mask="xa_profiler.h" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/src" type="src">
        <files mask="opus_header.c" hidden="true"/>
        <files mask="xa_common_error_handler.c" hidden="true"/>
        <files mask="xa_ogg_lib_error_handler.c" hidden="true"/>
        <files mask="xa_opus_codec_error_handler.c" hidden="true"/>
        <files mask="xa_opus_decoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_opus_encoder_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/test_inp" type="other">
        <files mask="opus51_trim.webm.ogg" hidden="true"/>
        <files mask="testvector04_trim.bit" hidden="true"/>
        <files mask="testvector11-16000-1ch_trim.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-48000-2ch_trim.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.bit" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="opus/hifi1/test/test_ref" type="other">
        <files mask="opus51_trim-48000-6ch.out" hidden="true"/>
        <files mask="opus51_trim-48000-6ch_celt.out" hidden="true"/>
        <files mask="testvector04-48000-2ch_trim.out" hidden="true"/>
        <files mask="testvector11-16000-1ch_trim.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim_silk.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim_celt.bit" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/doc" type="doc">
        <files mask="HiFi-SBC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="sbc_dec/hifi1/include/sbc_dec" type="c_include">
        <files mask="xa_sbc_dec_api.h" hidden="true"/>
        <files mask="xa_sbc_dec_api.h"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/build" type="doc">
        <files mask="paramfilesimple_sbc_dec.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/src" type="src">
        <files mask="xa_sbc_dec_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/test_inp" type="other">
        <files mask="sbc_test_02.sbc" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/hifi1/test/test_ref" type="other">
        <files mask="sbc_test_02.wav" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/doc" type="doc">
        <files mask="HiFi-SBC-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="sbc_enc/hifi1/include/sbc_enc" type="c_include">
        <files mask="xa_sbc_enc_api.h" hidden="true"/>
        <files mask="xa_sbc_enc_api.h"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/build" type="doc">
        <files mask="paramfilesimple_sbc_enc.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/src" type="src">
        <files mask="xa_sbc_enc_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/hifi1/test/test_ref" type="other">
        <files mask="hihat.sbc" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/doc" type="doc">
        <files mask="HiFi-Vorbis-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/include/vorbis_dec" type="c_include">
        <files mask="xa_vorbis_dec_api.h" hidden="true"/>
        <files mask="xa_vorbis_dec_api.h"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/build" type="doc">
        <files mask="parameter.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/src" type="src">
        <files mask="xa_vorbis_dec_error_handler.c" hidden="true"/>
        <files mask="xa_vorbis_dec_test.c" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/test_inp" type="other">
        <files mask="hihat.ogg" hidden="true"/>
        <files mask="i9.vor" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/hifi1/test/test_ref" type="other">
        <files mask="hihat.pcm" hidden="true"/>
        <files mask="i9.pcm" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/hifi1/lib" type="lib">
        <files mask="xa_aacplus_v2_dec.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_codecs_hifi1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="aacplus_dec/hifi1/include/aac_dec" type="c_include"/>
        <include_path relative_path="asrc_src_pp/hifi1/include/src_pp" type="c_include"/>
        <include_path relative_path="mp3_dec/hifi1/include/mp3_dec" type="c_include"/>
        <include_path relative_path="mp3_enc/hifi1/include/mp3_enc" type="c_include"/>
        <include_path relative_path="opus/hifi1/include/opus_codec" type="c_include"/>
        <include_path relative_path="opus/hifi1/include/ogg_lib" type="c_include"/>
        <include_path relative_path="sbc_dec/hifi1/include/sbc_dec" type="c_include"/>
        <include_path relative_path="sbc_enc/hifi1/include/sbc_enc" type="c_include"/>
        <include_path relative_path="vorbis_dec/hifi1/include/vorbis_dec" type="c_include"/>
        <include_path relative_path="aacplus_dec/hifi1/include/aac_dec" type="asm_include"/>
        <include_path relative_path="asrc_src_pp/hifi1/include/src_pp" type="asm_include"/>
        <include_path relative_path="mp3_dec/hifi1/include/mp3_dec" type="asm_include"/>
        <include_path relative_path="mp3_enc/hifi1/include/mp3_enc" type="asm_include"/>
        <include_path relative_path="opus/hifi1/include/opus_codec" type="asm_include"/>
        <include_path relative_path="opus/hifi1/include/ogg_lib" type="asm_include"/>
        <include_path relative_path="sbc_dec/hifi1/include/sbc_dec" type="asm_include"/>
        <include_path relative_path="sbc_enc/hifi1/include/sbc_enc" type="asm_include"/>
        <include_path relative_path="vorbis_dec/hifi1/include/vorbis_dec" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.power.MIMXRT735S" name="power" brief="Power driver" version="2.4.0" full_name="Driver power" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT735S"/>
            <device_core_dependency value="cm33_core1_MIMXRT735S"/>
          </any_of>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.romapi.MIMXRT735S" name="romapi" brief="ROMAPI Driver" version="2.1.0" full_name="ROMAPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT735S"/>
          <device_core_dependency value="cm33_core0_MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="romapi/bootloader" type="c_include">
        <files mask="fsl_romapi.h"/>
      </source>
      <source relative_path="romapi/bootloader" type="src">
        <files mask="fsl_romapi.c"/>
      </source>
      <source relative_path="romapi/otp" type="c_include">
        <files mask="fsl_romapi_otp.h"/>
      </source>
      <source relative_path="romapi/otp" type="src">
        <files mask="fsl_romapi_otp.c"/>
      </source>
      <source relative_path="romapi/nboot" type="c_include">
        <files mask="fsl_romapi_nboot.h"/>
      </source>
      <source relative_path="romapi/nboot" type="src">
        <files mask="fsl_romapi_nboot.c"/>
      </source>
      <source relative_path="romapi/iap" type="c_include">
        <files mask="fsl_romapi_iap.h"/>
        <files mask="fsl_sbloader_v3.h"/>
      </source>
      <source relative_path="romapi/iap" type="src">
        <files mask="fsl_romapi_iap.c"/>
      </source>
      <include_paths>
        <include_path relative_path="romapi" type="c_include"/>
        <include_path relative_path="romapi/bootloader" type="c_include"/>
        <include_path relative_path="romapi/nboot" type="c_include"/>
        <include_path relative_path="romapi/iap" type="c_include"/>
        <include_path relative_path="romapi/otp" type="c_include"/>
        <include_path relative_path="romapi" type="asm_include"/>
        <include_path relative_path="romapi/bootloader" type="asm_include"/>
        <include_path relative_path="romapi/nboot" type="asm_include"/>
        <include_path relative_path="romapi/iap" type="asm_include"/>
        <include_path relative_path="romapi/otp" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ezhv.MIMXRT735S" name="ezhv" brief="EZHV Driver" version="2.1.0" full_name="EZHV Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT735S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT735S"/>
            <device_core_dependency value="cm33_core1_MIMXRT735S"/>
          </any_of>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ezhv.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ezhv.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMXRT735S" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT735S" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.ctimer_adapter.MIMXRT735S"/>
              <component_dependency value="platform.drivers.ctimer.MIMXRT735S"/>
            </all>
            <all>
              <component_dependency value="component.mrt_adapter.MIMXRT735S"/>
              <component_dependency value="platform.drivers.mrt.MIMXRT735S"/>
            </all>
            <all>
              <component_dependency value="component.ostimer_adapter.MIMXRT735S"/>
              <component_dependency value="platform.drivers.ostimer.MIMXRT735S"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_adapter.MIMXRT735S" name="ctimer_adapter" brief="Component ctimer_adapter" version="1.0.0" full_name="Component ctimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_CTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mrt_adapter.MIMXRT735S" name="mrt_adapter" brief="Component mrt_adapter" version="1.0.0" full_name="Component mrt_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_MRT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mrt.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mrt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ostimer_adapter.MIMXRT735S" name="ostimer_adapter" brief="Component ostimer_adapter" version="1.0.0" full_name="Component ostimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_OSTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ostimer.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ostimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT735S" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT735S/utilities/shell" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="utility.str.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT735S" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_swo.MIMXRT735S"/>
            <component_dependency value="component.serial_manager_uart.MIMXRT735S"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT735S"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT735S" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpuart.MIMXRT735S"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxas21002cq.MIMXRT735S" name="fxas21002cq" brief="Driver fxas21002cq" version="1.0.0" full_name="Driver fxas21002cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxas21002cq" project_base_path="gyroscope">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxas.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MIMXRT735S" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMXRT735S" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxos8700cq" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.htu21d.MIMXRT735S" name="htu21d" brief="Driver htu21d" version="1.0.0" full_name="Driver htu21d" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/htu21d" project_base_path="htu">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_htu21d.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_htu21d.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.icm42688p.MIMXRT735S" name="icm42688p" brief="Driver icm42688p" version="1.0.0" full_name="Driver icm42688p" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/icm42688p" project_base_path="icm42688p">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_icm42688p.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_icm42688p.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.lsm6dso.MIMXRT735S" name="lsm6dso" brief="Driver lsm6dso" version="1.0.0" full_name="Driver lsm6dso" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/lsm6dso" project_base_path="tilt_pedo">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lsm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lsm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.max30101.MIMXRT735S" name="max30101" brief="Driver max30101" version="1.0.0" full_name="Driver max30101" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/max30101" project_base_path="heartrate">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8451q.MIMXRT735S" name="mma8451q" brief="Driver mma8451q" version="1.0.0" full_name="Driver mma8451q" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8451q" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8652fc.MIMXRT735S" name="mma8652fc" brief="Driver mma8652fc" version="1.0.0" full_name="Driver mma8652fc" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8652fc" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.p3t1755.MIMXRT735S" name="p3t1755" brief="Driver p3t1755" version="2.0.0" full_name="Driver p3t1755" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/p3t1755" project_base_path="component/p3t1755">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_p3t1755.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_p3t1755.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tsl2561.MIMXRT735S" name="tsl2561" brief="Driver tsl2561" version="1.0.0" full_name="Driver tsl2561" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/tsl2561" project_base_path="tsl">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tsl2561.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tsl2561.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.trng_adapter.MIMXRT735S" name="trng_adapter" brief="Component trng_adapter" version="1.0.0" full_name="Component trng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.trng.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_trng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.power_manager_framework.MIMXRT735S" name="power_manager_core" brief="Component power manager core level" version="2.0.0" full_name="Component power manager core" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/power_manager/core" project_base_path="component/power_manager">
      <defines>
        <define name="GENERIC_LIST_LIGHT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.common.MIMXRT735S"/>
            <component_dependency value="platform.drivers.crc.MIMXRT735S"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pm_core.h"/>
        <files mask="fsl_pm_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pm_core.c"/>
      </source>
      <source relative_path="../devices/MIMXRT798S" type="src">
        <files mask="fsl_pm_device.c"/>
      </source>
      <source relative_path="../devices/MIMXRT798S" type="c_include">
        <files mask="fsl_pm_device.h"/>
        <files mask="fsl_pm_device_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="../devices/MIMXRT798S" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="../devices/MIMXRT798S" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9420.MIMXRT735S" name="pca9420" brief="Driver pca9420" version="1.0.0" full_name="Driver pca9420" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pca9420" project_base_path="component/pmic/pca9420">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="platform.drivers.power.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9420.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9420.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9422.MIMXRT735S" name="pca9422" brief="Driver pca9422" version="1.0.0" full_name="Driver pca9422" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pca9422" project_base_path="component/pmic/pca9422">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="platform.drivers.power.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9422.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9422.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf1550.MIMXRT735S" name="pf1550" brief="Driver pf1550" version="1.0.0" full_name="Driver pf1550" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf1550" project_base_path="component/pmic/pf1550">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf1550.c"/>
        <files mask="fsl_pf1550_charger.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf1550.h"/>
        <files mask="fsl_pf1550_charger.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf3000.MIMXRT735S" name="pf3000" brief="Driver pf3000" version="1.0.0" full_name="Driver pf3000" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf3000" project_base_path="component/pmic/pf3000">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf3000.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf3000.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf5020.MIMXRT735S" name="pf5020" brief="Driver pf5020" version="2.0.0" full_name="Driver pf5020" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf5020" project_base_path="component/pmic/pf5020">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf5020.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf5020.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT735S" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
              </not>
              <component_dependency value="component.osa_bm.MIMXRT735S"/>
            </all>
            <all>
              <component_dependency value="component.osa_free_rtos.MIMXRT735S"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
            </all>
          </any_of>
          <component_dependency value="component.osa_interface.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.osa_bm.MIMXRT735S" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="0"/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          </not>
          <component_dependency value="component.osa.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT735S" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT735S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMXRT735S" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT735S"/>
          <component_dependency value="component.osa_template_config.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT735S" name="log" brief="Component log" version="1.0.0" full_name="Component log" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="utility.str.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console.MIMXRT735S" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="utility.debug_console.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console_lite.MIMXRT735S" name="log_backend_debug_console_lite" brief="Component log backend debug console lite" version="1.0.0" full_name="Component log backend debug console lite" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT735S" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT735S"/>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT735S" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_adapter.MIMXRT735S" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <defines>
        <define name="SDK_I3C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT735S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
    </component>
    <component id="component.lpi2c_adapter.MIMXRT735S" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
    </component>
    <component id="component.i2c_adapter_interface.MIMXRT735S" name="i2c_adapter_interface" brief="Component i2c_adapter_interface" version="1.0.0" full_name="Component i2c_adapter_interface" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.lpflexcomm_lpi2c.MIMXRT735S"/>
              <component_dependency value="component.lpi2c_adapter.MIMXRT735S"/>
            </all>
            <all>
              <component_dependency value="component.i3c_adapter.MIMXRT735S"/>
              <component_dependency value="platform.drivers.i3c.MIMXRT735S"/>
            </all>
          </any_of>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_xspi.MIMXRT735S" name="flash_nor_xspi" brief="Component flash_nor_xspi" version="1.0.0" full_name="Component flash_nor_xspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.xspi.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
        <files mask="fsl_sfdp_parser.h"/>
      </source>
      <source relative_path="nor/xspi" type="src">
        <files mask="fsl_xspi_nor_flash.c"/>
      </source>
      <source relative_path="nor/xspi" type="c_include">
        <files mask="fsl_xspi_nor_flash.h"/>
      </source>
      <source relative_path="nor" type="src">
        <files mask="fsl_sfdp_parser.c"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/xspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/xspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip.MIMXRT735S" name="mflash onchip" brief="mflash onchip" version="1.0.0" full_name="mflash onchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_xcache.MIMXRT735S"/>
            <component_dependency value="platform.drivers.romapi.MIMXRT735S"/>
          </any_of>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
    </component>
    <component id="component.mflash_offchip.MIMXRT735S" name="mflash offchip" brief="mflash offchip" version="1.0.0" full_name="mflash offchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <defines>
        <define name="MFLASH_FILE_BASEADDR" value="7340032"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_xcache.MIMXRT735S"/>
            <component_dependency value="platform.drivers.romapi.MIMXRT735S"/>
            <component_dependency value="platform.drivers.xspi.MIMXRT735S"/>
          </any_of>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="mimxrt700" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source relative_path="mimxrt700" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="mimxrt700" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="mimxrt700" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.MIMXRT735S" name="els_pkc" brief="Component els_pkc of Crypto Lib" version="1.9.0" full_name="Component els_pkc" category="els_pkc/els_pkc_main" user_visible="true" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.doc.mimxrt.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.key_derivation.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.platform.mimxrt.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.random_modes_ctr.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.random_modes_hmacdrbg.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.rsa_oaep.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.static_lib.mimxrt.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pkc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.trng.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/inc" type="c_include">
        <files mask="mcuxCl_clns.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.aead.MIMXRT735S" name="els_pkc.aead" brief="Component els_pkc.aead" version="1.9.0" full_name="Component els_pkc.aead" category="els_pkc/els_pkc_aead" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClAead/src" type="src">
        <files mask="mcuxClAead.c"/>
      </source>
      <source relative_path="src/comps/mcuxClAead/inc" type="c_include">
        <files mask="mcuxClAead.h"/>
        <files mask="mcuxClAead_Constants.h"/>
        <files mask="mcuxClAead_Functions.h"/>
        <files mask="mcuxClAead_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClAead/inc/internal" type="c_include">
        <files mask="mcuxClAead_Ctx.h"/>
        <files mask="mcuxClAead_Descriptor.h"/>
        <files mask="mcuxClAead_Internal_Functions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_aead.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAead/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAead/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAead/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAead/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.aead_modes.MIMXRT735S" name="els_pkc.aead_modes" brief="Component els_pkc.aead_modes" version="1.9.0" full_name="Component els_pkc.aead_modes" category="els_pkc/els_pkc_aead_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aead.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClAeadModes/src" type="src">
        <files mask="mcuxClAeadModes_Els_AesCcm.c"/>
        <files mask="mcuxClAeadModes_Els_AesCcmEngine.c"/>
        <files mask="mcuxClAeadModes_Els_AesGcm.c"/>
        <files mask="mcuxClAeadModes_Els_AesGcmEngine.c"/>
        <files mask="mcuxClAeadModes_Els_Modes.c"/>
        <files mask="mcuxClAeadModes_Els_Multipart.c"/>
        <files mask="mcuxClAeadModes_Els_Oneshot.c"/>
      </source>
      <source relative_path="src/comps/mcuxClAeadModes/inc" type="c_include">
        <files mask="mcuxClAeadModes.h"/>
        <files mask="mcuxClAeadModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClAeadModes/inc/internal" type="c_include">
        <files mask="mcuxClAeadModes_Common.h"/>
        <files mask="mcuxClAeadModes_Common_Constants.h"/>
        <files mask="mcuxClAeadModes_Common_Functions.h"/>
        <files mask="mcuxClAeadModes_Els_Algorithms.h"/>
        <files mask="mcuxClAeadModes_Els_Functions.h"/>
        <files mask="mcuxClAeadModes_Els_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_aead_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAeadModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAeadModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAeadModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAeadModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.aes.MIMXRT735S" name="els-pkc aes" brief="Component aes" version="1.9.0" full_name="Component aes" category="els_pkc/els_pkc_aes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.key.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClAes/src" type="src">
        <files mask="mcuxClAes_KeyTypes.c"/>
      </source>
      <source relative_path="src/comps/mcuxClAes/inc" type="c_include">
        <files mask="mcuxClAes.h"/>
        <files mask="mcuxClAes_Constants.h"/>
        <files mask="mcuxClAes_KeyTypes.h"/>
        <files mask="mcuxClAes_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClAes/inc/internal" type="c_include">
        <files mask="mcuxClAes_Ctx.h"/>
        <files mask="mcuxClAes_Internal_Constants.h"/>
        <files mask="mcuxClAes_Internal_Functions.h"/>
        <files mask="mcuxClAes_Wa.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_aes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClAes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClAes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.buffer.MIMXRT735S" name="els-pkc buffer" brief="Component buffer" version="1.9.0" full_name="Component buffer" category="els_pkc/els_pkc_buffer" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.data_integrity.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClBuffer/src" type="src">
        <files mask="mcuxClBuffer.c"/>
      </source>
      <source relative_path="src/comps/mcuxClBuffer/inc" type="c_include">
        <files mask="mcuxClBuffer.h"/>
        <files mask="mcuxClBuffer_Cfg.h"/>
        <files mask="mcuxClBuffer_Constants.h"/>
        <files mask="mcuxClBuffer_Impl.h"/>
        <files mask="mcuxClBuffer_Pointer.h"/>
      </source>
      <source relative_path="src/comps/mcuxClBuffer/inc/internal" type="c_include">
        <files mask="mcuxClBuffer_Internal.h"/>
        <files mask="mcuxClBuffer_Internal_Pointer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_buffer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.cipher.MIMXRT735S" name="els_pkc.cipher" brief="Component els_pkc.cipher" version="1.9.0" full_name="Component els_pkc.cipher" category="els_pkc/els_pkc_cipher" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClCipher/src" type="src">
        <files mask="mcuxClCipher.c"/>
      </source>
      <source relative_path="src/comps/mcuxClCipher/inc" type="c_include">
        <files mask="mcuxClCipher.h"/>
        <files mask="mcuxClCipher_Constants.h"/>
        <files mask="mcuxClCipher_Functions.h"/>
        <files mask="mcuxClCipher_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClCipher/inc/internal" type="c_include">
        <files mask="mcuxClCipher_Internal.h"/>
        <files mask="mcuxClCipher_Internal_Constants.h"/>
        <files mask="mcuxClCipher_Internal_Functions.h"/>
        <files mask="mcuxClCipher_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_cipher.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCipher/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCipher/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCipher/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCipher/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.cipher_modes.MIMXRT735S" name="els_pkc.cipher" brief="Component els_pkc.cipher" version="1.9.0" full_name="Component els_pkc.cipher_modes" category="els_pkc/els_pkc_cipher_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.cipher.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClCipherModes/src" type="src">
        <files mask="mcuxClCipherModes_Common_Helper.c"/>
        <files mask="mcuxClCipherModes_Crypt_Els_Modes.c"/>
        <files mask="mcuxClCipherModes_Els_Aes.c"/>
        <files mask="mcuxClCipherModes_Els_AesEngine.c"/>
        <files mask="mcuxClCipherModes_Els_Aes_Internal.c"/>
      </source>
      <source relative_path="src/comps/mcuxClCipherModes/inc" type="c_include">
        <files mask="mcuxClCipherModes.h"/>
        <files mask="mcuxClCipherModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClCipherModes/inc/internal" type="c_include">
        <files mask="mcuxClCipherModes_Common.h"/>
        <files mask="mcuxClCipherModes_Common_Constants.h"/>
        <files mask="mcuxClCipherModes_Common_Helper.h"/>
        <files mask="mcuxClCipherModes_Common_Wa.h"/>
        <files mask="mcuxClCipherModes_Els_Algorithms.h"/>
        <files mask="mcuxClCipherModes_Els_Functions.h"/>
        <files mask="mcuxClCipherModes_Els_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_cipher_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCipherModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCipherModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCipherModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCipherModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.common.MIMXRT735S" name="Component els pkc common" brief="Component els pkc common" version="1.9.0" full_name="Component els pkc common" category="els_pkc/els_pkc_common" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/common/src" type="src">
        <files mask="mcuxClOscca_CommonOperations.c"/>
      </source>
      <source relative_path="src/comps/common/inc" type="c_include">
        <files mask="mcuxClOscca_FunctionIdentifiers.h"/>
        <files mask="mcuxClOscca_Memory.h"/>
        <files mask="mcuxClOscca_PlatformTypes.h"/>
        <files mask="mcuxClOscca_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/common/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/common/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.crc.MIMXRT735S" name="els-pkc crc" brief="Component crc" version="1.9.0" full_name="Component crc" category="els_pkc/els_pkc_crc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.data_integrity.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClCrc/src" type="src">
        <files mask="mcuxClCrc.c"/>
        <files mask="mcuxClCrc_Sw.c"/>
      </source>
      <source relative_path="src/comps/mcuxClCrc/inc" type="c_include">
        <files mask="mcuxClCrc.h"/>
      </source>
      <source relative_path="src/comps/mcuxClCrc/inc/internal" type="c_include">
        <files mask="mcuxClCrc_Internal_Constants.h"/>
        <files mask="mcuxClCrc_Internal_Functions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_crc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCrc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClCrc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCrc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClCrc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.doc.mimxrt.MIMXRT735S" name="els_pkc.doc.mimxrt" brief="Component els_pkc.doc.mimxrt" version="1.9.0" full_name="Component els_pkc.doc.mimxrt" category="els_pkc/doc" user_visible="true" type="software_component" package_base_path="components/els_pkc/" project_base_path="component/els_pkc/">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="doc/mimxrt/html" type="doc">
        <files mask="a00002.html"/>
        <files mask="a00005.html"/>
        <files mask="a00008.html"/>
        <files mask="a00011.html"/>
        <files mask="a00014.html"/>
        <files mask="a00017.html"/>
        <files mask="a00020.html"/>
        <files mask="a00023.html"/>
        <files mask="a00026.html"/>
        <files mask="a00029.html"/>
        <files mask="a00032.html"/>
        <files mask="a00035.html"/>
        <files mask="a00038.html"/>
        <files mask="a00044.html"/>
        <files mask="a00047.html"/>
        <files mask="a00050.html"/>
        <files mask="a00083.html"/>
        <files mask="a00086.html"/>
        <files mask="a00089.html"/>
        <files mask="a00092.html"/>
        <files mask="a00095.html"/>
        <files mask="a00098.html"/>
        <files mask="a00101.html"/>
        <files mask="a00104.html"/>
        <files mask="a00107.html"/>
        <files mask="a00110.html"/>
        <files mask="a00113.html"/>
        <files mask="a00116.html"/>
        <files mask="a00155.html"/>
        <files mask="a00158.html"/>
        <files mask="a00161.html"/>
        <files mask="a00164.html"/>
        <files mask="a00167.html"/>
        <files mask="a00170.html"/>
        <files mask="a00173.html"/>
        <files mask="a00176.html"/>
        <files mask="a00179.html"/>
        <files mask="a00182.html"/>
        <files mask="a00185.html"/>
        <files mask="a00188.html"/>
        <files mask="a00206.html"/>
        <files mask="a00209.html"/>
        <files mask="a00212.html"/>
        <files mask="a00215.html"/>
        <files mask="a00218.html"/>
        <files mask="a00221.html"/>
        <files mask="a00224.html"/>
        <files mask="a00227.html"/>
        <files mask="a00230.html"/>
        <files mask="a00233.html"/>
        <files mask="a00236.html"/>
        <files mask="a00239.html"/>
        <files mask="a00242.html"/>
        <files mask="a00245.html"/>
        <files mask="a00248.html"/>
        <files mask="a00266.html"/>
        <files mask="a00269.html"/>
        <files mask="a00272.html"/>
        <files mask="a00275.html"/>
        <files mask="a00278.html"/>
        <files mask="a00281.html"/>
        <files mask="a00284.html"/>
        <files mask="a00287.html"/>
        <files mask="a00329.html"/>
        <files mask="a00332.html"/>
        <files mask="a00335.html"/>
        <files mask="a00338_source.html"/>
        <files mask="a00341_source.html"/>
        <files mask="a00344.html"/>
        <files mask="a00344_source.html"/>
        <files mask="a00350.html"/>
        <files mask="a00350_source.html"/>
        <files mask="a00353_source.html"/>
        <files mask="a00356.html"/>
        <files mask="a00356_source.html"/>
        <files mask="a00359.html"/>
        <files mask="a00359_source.html"/>
        <files mask="a00362.html"/>
        <files mask="a00362_source.html"/>
        <files mask="a00365.html"/>
        <files mask="a00365_source.html"/>
        <files mask="a00368.html"/>
        <files mask="a00368_source.html"/>
        <files mask="a00371_source.html"/>
        <files mask="a00374.html"/>
        <files mask="a00374_source.html"/>
        <files mask="a00377.html"/>
        <files mask="a00377_source.html"/>
        <files mask="a00380.html"/>
        <files mask="a00380_source.html"/>
        <files mask="a00383.html"/>
        <files mask="a00383_source.html"/>
        <files mask="a00386.html"/>
        <files mask="a00386_source.html"/>
        <files mask="a00389.html"/>
        <files mask="a00389_source.html"/>
        <files mask="a00392.html"/>
        <files mask="a00392_source.html"/>
        <files mask="a00395.html"/>
        <files mask="a00395_source.html"/>
        <files mask="a00398_source.html"/>
        <files mask="a00401.html"/>
        <files mask="a00401_source.html"/>
        <files mask="a00404.html"/>
        <files mask="a00404_source.html"/>
        <files mask="a00407.html"/>
        <files mask="a00407_source.html"/>
        <files mask="a00410.html"/>
        <files mask="a00410_source.html"/>
        <files mask="a00413_source.html"/>
        <files mask="a00416.html"/>
        <files mask="a00416_source.html"/>
        <files mask="a00419.html"/>
        <files mask="a00419_source.html"/>
        <files mask="a00422_source.html"/>
        <files mask="a00425_source.html"/>
        <files mask="a00428.html"/>
        <files mask="a00428_source.html"/>
        <files mask="a00431.html"/>
        <files mask="a00431_source.html"/>
        <files mask="a00434.html"/>
        <files mask="a00434_source.html"/>
        <files mask="a00437.html"/>
        <files mask="a00437_source.html"/>
        <files mask="a00440.html"/>
        <files mask="a00440_source.html"/>
        <files mask="a00443.html"/>
        <files mask="a00443_source.html"/>
        <files mask="a00446.html"/>
        <files mask="a00446_source.html"/>
        <files mask="a00449.html"/>
        <files mask="a00449_source.html"/>
        <files mask="a00452.html"/>
        <files mask="a00452_source.html"/>
        <files mask="a00455.html"/>
        <files mask="a00455_source.html"/>
        <files mask="a00458.html"/>
        <files mask="a00458_source.html"/>
        <files mask="a00461.html"/>
        <files mask="a00461_source.html"/>
        <files mask="a00464.html"/>
        <files mask="a00464_source.html"/>
        <files mask="a00467.html"/>
        <files mask="a00467_source.html"/>
        <files mask="a00470.html"/>
        <files mask="a00470_source.html"/>
        <files mask="a00473.html"/>
        <files mask="a00473_source.html"/>
        <files mask="a00476.html"/>
        <files mask="a00476_source.html"/>
        <files mask="a00479.html"/>
        <files mask="a00479_source.html"/>
        <files mask="a00482.html"/>
        <files mask="a00482_source.html"/>
        <files mask="a00485.html"/>
        <files mask="a00485_source.html"/>
        <files mask="a00488_source.html"/>
        <files mask="a00491_source.html"/>
        <files mask="a00494_source.html"/>
        <files mask="a00497_source.html"/>
        <files mask="a00500_source.html"/>
        <files mask="a00503_source.html"/>
        <files mask="a00506.html"/>
        <files mask="a00506_source.html"/>
        <files mask="a00509.html"/>
        <files mask="a00509_source.html"/>
        <files mask="a00512_source.html"/>
        <files mask="a00515.html"/>
        <files mask="a00515_source.html"/>
        <files mask="a00518.html"/>
        <files mask="a00518_source.html"/>
        <files mask="a00521_source.html"/>
        <files mask="a00524.html"/>
        <files mask="a00524_source.html"/>
        <files mask="a00527.html"/>
        <files mask="a00527_source.html"/>
        <files mask="a00530.html"/>
        <files mask="a00530_source.html"/>
        <files mask="a00533_source.html"/>
        <files mask="a00536.html"/>
        <files mask="a00536_source.html"/>
        <files mask="a00539.html"/>
        <files mask="a00539_source.html"/>
        <files mask="a00542.html"/>
        <files mask="a00542_source.html"/>
        <files mask="a00545.html"/>
        <files mask="a00545_source.html"/>
        <files mask="a00548.html"/>
        <files mask="a00548_source.html"/>
        <files mask="a00551.html"/>
        <files mask="a00551_source.html"/>
        <files mask="a00554.html"/>
        <files mask="a00554_source.html"/>
        <files mask="a00557.html"/>
        <files mask="a00557_source.html"/>
        <files mask="a00560.html"/>
        <files mask="a00560_source.html"/>
        <files mask="a00563.html"/>
        <files mask="a00563_source.html"/>
        <files mask="a00566.html"/>
        <files mask="a00566_source.html"/>
        <files mask="a00569.html"/>
        <files mask="a00569_source.html"/>
        <files mask="a00572_source.html"/>
        <files mask="a00575.html"/>
        <files mask="a00575_source.html"/>
        <files mask="a00578.html"/>
        <files mask="a00578_source.html"/>
        <files mask="a00581_source.html"/>
        <files mask="a00584.html"/>
        <files mask="a00584_source.html"/>
        <files mask="a00587.html"/>
        <files mask="a00587_source.html"/>
        <files mask="a00590_source.html"/>
        <files mask="a00593.html"/>
        <files mask="a00593_source.html"/>
        <files mask="a00596.html"/>
        <files mask="a00596_source.html"/>
        <files mask="a00599.html"/>
        <files mask="a00599_source.html"/>
        <files mask="a00602.html"/>
        <files mask="a00602_source.html"/>
        <files mask="a00605.html"/>
        <files mask="a00605_source.html"/>
        <files mask="a00608_source.html"/>
        <files mask="a00611.html"/>
        <files mask="a00611_source.html"/>
        <files mask="a00614.html"/>
        <files mask="a00614_source.html"/>
        <files mask="a00617.html"/>
        <files mask="a00617_source.html"/>
        <files mask="a00620.html"/>
        <files mask="a00620_source.html"/>
        <files mask="a00623.html"/>
        <files mask="a00623_source.html"/>
        <files mask="a00626.html"/>
        <files mask="a00626_source.html"/>
        <files mask="a00629.html"/>
        <files mask="a00629_source.html"/>
        <files mask="a00632.html"/>
        <files mask="a00632_source.html"/>
        <files mask="a00635.html"/>
        <files mask="a00635_source.html"/>
        <files mask="a00638.html"/>
        <files mask="a00638_source.html"/>
        <files mask="a00641.html"/>
        <files mask="a00641_source.html"/>
        <files mask="a00644.html"/>
        <files mask="a00644_source.html"/>
        <files mask="a00647.html"/>
        <files mask="a00647_source.html"/>
        <files mask="a00650_source.html"/>
        <files mask="a00653.html"/>
        <files mask="a00653_source.html"/>
        <files mask="a00656.html"/>
        <files mask="a00656_source.html"/>
        <files mask="a00659_source.html"/>
        <files mask="a00662.html"/>
        <files mask="a00662_source.html"/>
        <files mask="a00665.html"/>
        <files mask="a00665_source.html"/>
        <files mask="a00668.html"/>
        <files mask="a00668_source.html"/>
        <files mask="a00671.html"/>
        <files mask="a00671_source.html"/>
        <files mask="a00674.html"/>
        <files mask="a00674_source.html"/>
        <files mask="a00677.html"/>
        <files mask="a00677_source.html"/>
        <files mask="a00680.html"/>
        <files mask="a00680_source.html"/>
        <files mask="a00683_source.html"/>
        <files mask="a00686.html"/>
        <files mask="a00686_source.html"/>
        <files mask="a00689_source.html"/>
        <files mask="a00692_source.html"/>
        <files mask="a00695_source.html"/>
        <files mask="a00698.html"/>
        <files mask="a00698_source.html"/>
        <files mask="a00701.html"/>
        <files mask="a00701_source.html"/>
        <files mask="a00704.html"/>
        <files mask="a00704_source.html"/>
        <files mask="a00707.html"/>
        <files mask="a00707_source.html"/>
        <files mask="a00710.html"/>
        <files mask="a00710_source.html"/>
        <files mask="a00713.html"/>
        <files mask="a00713_source.html"/>
        <files mask="a00716.html"/>
        <files mask="a00716_source.html"/>
        <files mask="a00719.html"/>
        <files mask="a00719_source.html"/>
        <files mask="a00722.html"/>
        <files mask="a00722_source.html"/>
        <files mask="a00725.html"/>
        <files mask="a00725_source.html"/>
        <files mask="a00728.html"/>
        <files mask="a00728_source.html"/>
        <files mask="a00731.html"/>
        <files mask="a00731_source.html"/>
        <files mask="a00734.html"/>
        <files mask="a00734_source.html"/>
        <files mask="a00737.html"/>
        <files mask="a00737_source.html"/>
        <files mask="a00740.html"/>
        <files mask="a00740_source.html"/>
        <files mask="a00743.html"/>
        <files mask="a00743_source.html"/>
        <files mask="a00746.html"/>
        <files mask="a00746_source.html"/>
        <files mask="a00749.html"/>
        <files mask="a00749_source.html"/>
        <files mask="a00752.html"/>
        <files mask="a00752_source.html"/>
        <files mask="a00755.html"/>
        <files mask="a00755_source.html"/>
        <files mask="a00758.html"/>
        <files mask="a00758_source.html"/>
        <files mask="a00761.html"/>
        <files mask="a00761_source.html"/>
        <files mask="a00764.html"/>
        <files mask="a00764_source.html"/>
        <files mask="a00767.html"/>
        <files mask="a00767_source.html"/>
        <files mask="a00770.html"/>
        <files mask="a00770_source.html"/>
        <files mask="a00773.html"/>
        <files mask="a00773_source.html"/>
        <files mask="a00776_source.html"/>
        <files mask="a00779_source.html"/>
        <files mask="a00782.html"/>
        <files mask="a00782_source.html"/>
        <files mask="a00785.html"/>
        <files mask="a00785_source.html"/>
        <files mask="a00788.html"/>
        <files mask="a00788_source.html"/>
        <files mask="a00791.html"/>
        <files mask="a00791_source.html"/>
        <files mask="a00794.html"/>
        <files mask="a00794_source.html"/>
        <files mask="a00797.html"/>
        <files mask="a00797_source.html"/>
        <files mask="a00800.html"/>
        <files mask="a00800_source.html"/>
        <files mask="a00803_source.html"/>
        <files mask="a00806.html"/>
        <files mask="a00806_source.html"/>
        <files mask="a00809.html"/>
        <files mask="a00809_source.html"/>
        <files mask="a00812.html"/>
        <files mask="a00812_source.html"/>
        <files mask="a00815.html"/>
        <files mask="a00815_source.html"/>
        <files mask="a00818_source.html"/>
        <files mask="a00821_source.html"/>
        <files mask="a00824_source.html"/>
        <files mask="a00827_source.html"/>
        <files mask="a00830.html"/>
        <files mask="a00830_source.html"/>
        <files mask="a00833_source.html"/>
        <files mask="a00836.html"/>
        <files mask="a00836_source.html"/>
        <files mask="a00839.html"/>
        <files mask="a00839_source.html"/>
        <files mask="a00842.html"/>
        <files mask="a00842_source.html"/>
        <files mask="a00845.html"/>
        <files mask="a00845_source.html"/>
        <files mask="a00848.html"/>
        <files mask="a00848_source.html"/>
        <files mask="a00851.html"/>
        <files mask="a00851_source.html"/>
        <files mask="a00854.html"/>
        <files mask="a00854_source.html"/>
        <files mask="a00857.html"/>
        <files mask="a00857_source.html"/>
        <files mask="a00860.html"/>
        <files mask="a00860_source.html"/>
        <files mask="a00863.html"/>
        <files mask="a00863_source.html"/>
        <files mask="a00866.html"/>
        <files mask="a00866_source.html"/>
        <files mask="a00869.html"/>
        <files mask="a00869_source.html"/>
        <files mask="a00872.html"/>
        <files mask="a00872_source.html"/>
        <files mask="a00875.html"/>
        <files mask="a00875_source.html"/>
        <files mask="a00878.html"/>
        <files mask="a00878_source.html"/>
        <files mask="a00881.html"/>
        <files mask="a00881_source.html"/>
        <files mask="a00884.html"/>
        <files mask="a00884_source.html"/>
        <files mask="a00887.html"/>
        <files mask="a00887_source.html"/>
        <files mask="a00890.html"/>
        <files mask="a00890_source.html"/>
        <files mask="a00893.html"/>
        <files mask="a00893_source.html"/>
        <files mask="a00896.html"/>
        <files mask="a00896_source.html"/>
        <files mask="a00899.html"/>
        <files mask="a00899_source.html"/>
        <files mask="a00902.html"/>
        <files mask="a00902_source.html"/>
        <files mask="a00905.html"/>
        <files mask="a00905_source.html"/>
        <files mask="a00908.html"/>
        <files mask="a00908_source.html"/>
        <files mask="a00911_source.html"/>
        <files mask="a00914.html"/>
        <files mask="a00914_source.html"/>
        <files mask="a00917.html"/>
        <files mask="a00917_source.html"/>
        <files mask="a00920.html"/>
        <files mask="a00920_source.html"/>
        <files mask="a00923.html"/>
        <files mask="a00923_source.html"/>
        <files mask="a00926.html"/>
        <files mask="a00926_source.html"/>
        <files mask="a00929.html"/>
        <files mask="a00929_source.html"/>
        <files mask="a00932.html"/>
        <files mask="a00932_source.html"/>
        <files mask="a00935.html"/>
        <files mask="a00935_source.html"/>
        <files mask="a00938.html"/>
        <files mask="a00938_source.html"/>
        <files mask="a00941.html"/>
        <files mask="a00941_source.html"/>
        <files mask="a00944.html"/>
        <files mask="a00944_source.html"/>
        <files mask="a00947.html"/>
        <files mask="a00947_source.html"/>
        <files mask="a00950.html"/>
        <files mask="a00950_source.html"/>
        <files mask="a00953.html"/>
        <files mask="a00953_source.html"/>
        <files mask="a00956.html"/>
        <files mask="a00956_source.html"/>
        <files mask="a00959.html"/>
        <files mask="a00959_source.html"/>
        <files mask="a00970.html"/>
        <files mask="a00971.html"/>
        <files mask="a00972.html"/>
        <files mask="a00973.html"/>
        <files mask="a00974.html"/>
        <files mask="a00975.html"/>
        <files mask="a00976.html"/>
        <files mask="a00977.html"/>
        <files mask="a00978.html"/>
        <files mask="a00979.html"/>
        <files mask="a00980.html"/>
        <files mask="a00981.html"/>
        <files mask="a00982.html"/>
        <files mask="a00983.html"/>
        <files mask="a00984.html"/>
        <files mask="a00985.html"/>
        <files mask="a00986.html"/>
        <files mask="a00987.html"/>
        <files mask="a00988.html"/>
        <files mask="a00989.html"/>
        <files mask="a00990.html"/>
        <files mask="a00991.html"/>
        <files mask="a00992.html"/>
        <files mask="a00993.html"/>
        <files mask="a00994.html"/>
        <files mask="a00995.html"/>
        <files mask="a00996.html"/>
        <files mask="a00997.html"/>
        <files mask="a00998.html"/>
        <files mask="a00999.html"/>
        <files mask="a01000.html"/>
        <files mask="a01001.html"/>
        <files mask="a01002.html"/>
        <files mask="a01003.html"/>
        <files mask="a01004.html"/>
        <files mask="a01005.html"/>
        <files mask="a01006.html"/>
        <files mask="a01007.html"/>
        <files mask="a01008.html"/>
        <files mask="a01009.html"/>
        <files mask="a01010.html"/>
        <files mask="a01011.html"/>
        <files mask="a01012.html"/>
        <files mask="a01013.html"/>
        <files mask="a01014.html"/>
        <files mask="a01015.html"/>
        <files mask="a01016.html"/>
        <files mask="a01017.html"/>
        <files mask="a01018.html"/>
        <files mask="a01019.html"/>
        <files mask="a01020.html"/>
        <files mask="a01021.html"/>
        <files mask="a01022.html"/>
        <files mask="a01023.html"/>
        <files mask="a01024.html"/>
        <files mask="a01025.html"/>
        <files mask="a01026.html"/>
        <files mask="a01027.html"/>
        <files mask="a01028.html"/>
        <files mask="a01029.html"/>
        <files mask="a01030.html"/>
        <files mask="a01031.html"/>
        <files mask="a01032.html"/>
        <files mask="a01033.html"/>
        <files mask="a01034.html"/>
        <files mask="a01035.html"/>
        <files mask="a01036.html"/>
        <files mask="a01037.html"/>
        <files mask="a01038.html"/>
        <files mask="a01039.html"/>
        <files mask="a01040.html"/>
        <files mask="a01041.html"/>
        <files mask="a01042.html"/>
        <files mask="a01043.html"/>
        <files mask="a01044.html"/>
        <files mask="a01045.html"/>
        <files mask="a01046.html"/>
        <files mask="a01047.html"/>
        <files mask="a01048.html"/>
        <files mask="a01049.html"/>
        <files mask="a01050.html"/>
        <files mask="a01051.html"/>
        <files mask="a01052.html"/>
        <files mask="a01053.html"/>
        <files mask="a01054.html"/>
        <files mask="a01055.html"/>
        <files mask="a01056.html"/>
        <files mask="a01057.html"/>
        <files mask="a01058.html"/>
        <files mask="a01059.html"/>
        <files mask="a01060.html"/>
        <files mask="a01061.html"/>
        <files mask="a01062.html"/>
        <files mask="a01063.html"/>
        <files mask="a01064.html"/>
        <files mask="a01065.html"/>
        <files mask="a01066.html"/>
        <files mask="a01067.html"/>
        <files mask="a01068.html"/>
        <files mask="a01069.html"/>
        <files mask="a01070.html"/>
        <files mask="a01071.html"/>
        <files mask="a01072.html"/>
        <files mask="a01073.html"/>
        <files mask="a01074.html"/>
        <files mask="a01075.html"/>
        <files mask="a01076.html"/>
        <files mask="a01077.html"/>
        <files mask="a01078.html"/>
        <files mask="a01079.html"/>
        <files mask="a01080.html"/>
        <files mask="a01081.html"/>
        <files mask="a01082.html"/>
        <files mask="a01083.html"/>
        <files mask="a01084.html"/>
        <files mask="a01085.html"/>
        <files mask="a01086.html"/>
        <files mask="a01087.html"/>
        <files mask="a01088.html"/>
        <files mask="a01089.html"/>
        <files mask="a01090.html"/>
        <files mask="a01091.html"/>
        <files mask="a01092.html"/>
        <files mask="a01093.html"/>
        <files mask="a01094.html"/>
        <files mask="a01095.html"/>
        <files mask="a01096.html"/>
        <files mask="a01097.html"/>
        <files mask="a01098.html"/>
        <files mask="a01099.html"/>
        <files mask="a01100.html"/>
        <files mask="a01101.html"/>
        <files mask="a01102.html"/>
        <files mask="a01103.html"/>
        <files mask="a01104.html"/>
        <files mask="a01105.html"/>
        <files mask="a01106.html"/>
        <files mask="a01107.html"/>
        <files mask="a01108.html"/>
        <files mask="a01109.html"/>
        <files mask="a01110.html"/>
        <files mask="a01111.html"/>
        <files mask="a01112.html"/>
        <files mask="a01113.html"/>
        <files mask="a01114.html"/>
        <files mask="a01115.html"/>
        <files mask="a01116.html"/>
        <files mask="a01117.html"/>
        <files mask="a01118.html"/>
        <files mask="a01119.html"/>
        <files mask="a01120.html"/>
        <files mask="a01121.html"/>
        <files mask="a01122.html"/>
        <files mask="a01123.html"/>
        <files mask="a01124.html"/>
        <files mask="a01125.html"/>
        <files mask="a01126.html"/>
        <files mask="a01127.html"/>
        <files mask="a01128.html"/>
        <files mask="a01129.html"/>
        <files mask="a01130.html"/>
        <files mask="a01131.html"/>
        <files mask="a01132.html"/>
        <files mask="a01133.html"/>
        <files mask="a01134.html"/>
        <files mask="a01135.html"/>
        <files mask="a01136.html"/>
        <files mask="a01137.html"/>
        <files mask="a01138.html"/>
        <files mask="a01139.html"/>
        <files mask="a01140.html"/>
        <files mask="a01141.html"/>
        <files mask="a01142.html"/>
        <files mask="a01143.html"/>
        <files mask="a01144.html"/>
        <files mask="a01145.html"/>
        <files mask="a01146.html"/>
        <files mask="a01147.html"/>
        <files mask="a01148.html"/>
        <files mask="a01149.html"/>
        <files mask="a01150.html"/>
        <files mask="a01151.html"/>
        <files mask="a01152.html"/>
        <files mask="a01153.html"/>
        <files mask="a01154.html"/>
        <files mask="a01155.html"/>
        <files mask="a01156.html"/>
        <files mask="a01157.html"/>
        <files mask="a01158.html"/>
        <files mask="a01159.html"/>
        <files mask="a01160.html"/>
        <files mask="a01161.html"/>
        <files mask="a01162.html"/>
        <files mask="a01163.html"/>
        <files mask="a01164.html"/>
        <files mask="a01165.html"/>
        <files mask="a01166.html"/>
        <files mask="a01167.html"/>
        <files mask="a01168.html"/>
        <files mask="a01169.html"/>
        <files mask="a01170.html"/>
        <files mask="a01171.html"/>
        <files mask="a01172.html"/>
        <files mask="a01173.html"/>
        <files mask="a01174.html"/>
        <files mask="a01175.html"/>
        <files mask="a01176.html"/>
        <files mask="a01177.html"/>
        <files mask="a01178.html"/>
        <files mask="a01179.html"/>
        <files mask="a01180.html"/>
        <files mask="a01181.html"/>
        <files mask="a01182.html"/>
        <files mask="a01183.html"/>
        <files mask="a01184.html"/>
        <files mask="a01185.html"/>
        <files mask="a01186.html"/>
        <files mask="a01187.html"/>
        <files mask="a01188.html"/>
        <files mask="a01189.html"/>
        <files mask="a01190.html"/>
        <files mask="a01191.html"/>
        <files mask="a01192.html"/>
        <files mask="a01193.html"/>
        <files mask="a01194.html"/>
        <files mask="a01195.html"/>
        <files mask="a01196.html"/>
        <files mask="a01197.html"/>
        <files mask="a01198.html"/>
        <files mask="a01199.html"/>
        <files mask="a01200.html"/>
        <files mask="a01201.html"/>
        <files mask="a01202.html"/>
        <files mask="a01203.html"/>
        <files mask="a01204.html"/>
        <files mask="a01205.html"/>
        <files mask="a01206.html"/>
        <files mask="a01207.html"/>
        <files mask="a01208.html"/>
        <files mask="a01209.html"/>
        <files mask="a01210.html"/>
        <files mask="a01211.html"/>
        <files mask="a01212.html"/>
        <files mask="a01213.html"/>
        <files mask="a01214.html"/>
        <files mask="a01215.html"/>
        <files mask="a01216.html"/>
        <files mask="a01217.html"/>
        <files mask="a01218.html"/>
        <files mask="a01219.html"/>
        <files mask="a01220.html"/>
        <files mask="a01221.html"/>
        <files mask="a01222.html"/>
        <files mask="a01223.html"/>
        <files mask="a01224.html"/>
        <files mask="a01225.html"/>
        <files mask="a01226.html"/>
        <files mask="a01227.html"/>
        <files mask="a01228.html"/>
        <files mask="a01229.html"/>
        <files mask="a01230.html"/>
        <files mask="a01231.html"/>
        <files mask="a01232.html"/>
        <files mask="a01233.html"/>
        <files mask="a01234.html"/>
        <files mask="a01235.html"/>
        <files mask="a01236.html"/>
        <files mask="a01237.html"/>
        <files mask="a01238.html"/>
        <files mask="a01239.html"/>
        <files mask="a01240.html"/>
        <files mask="a01241.html"/>
        <files mask="a01242.html"/>
        <files mask="a01243.html"/>
        <files mask="a01244.html"/>
        <files mask="a01245.html"/>
        <files mask="a01246.html"/>
        <files mask="a01247.html"/>
        <files mask="a01248.html"/>
        <files mask="a01249.html"/>
        <files mask="a01250.html"/>
        <files mask="a01251.html"/>
        <files mask="a01252.html"/>
        <files mask="a01253.html"/>
        <files mask="a01254.html"/>
        <files mask="a01255.html"/>
        <files mask="a01256.html"/>
        <files mask="a01257.html"/>
        <files mask="a01258.html"/>
        <files mask="a01259.html"/>
        <files mask="a01260.html"/>
        <files mask="a01261.html"/>
        <files mask="a01262.html"/>
        <files mask="a01263.html"/>
        <files mask="a01264.html"/>
        <files mask="a01265.html"/>
        <files mask="a01266.html"/>
        <files mask="a01267.html"/>
        <files mask="a01268.html"/>
        <files mask="a01269.html"/>
        <files mask="a01270.html"/>
        <files mask="a01271.html"/>
        <files mask="a01272.html"/>
        <files mask="a01273.html"/>
        <files mask="a01274.html"/>
        <files mask="a01275.html"/>
        <files mask="a01276.html"/>
        <files mask="a01277.html"/>
        <files mask="a01278.html"/>
        <files mask="a01279.html"/>
        <files mask="a01280.html"/>
        <files mask="a01281.html"/>
        <files mask="a01282.html"/>
        <files mask="a01283.html"/>
        <files mask="a01284.html"/>
        <files mask="a01285.html"/>
        <files mask="a01286.html"/>
        <files mask="a01287.html"/>
        <files mask="a01288.html"/>
        <files mask="a01289.html"/>
        <files mask="a01290.html"/>
        <files mask="a01291.html"/>
        <files mask="a01292.html"/>
        <files mask="a01293.html"/>
        <files mask="a01294.html"/>
        <files mask="a01295.html"/>
        <files mask="a01296.html"/>
        <files mask="a01297.html"/>
        <files mask="a01298.html"/>
        <files mask="a01299.html"/>
        <files mask="a01300.html"/>
        <files mask="a01301.html"/>
        <files mask="a01302.html"/>
        <files mask="a01303.html"/>
        <files mask="a01304.html"/>
        <files mask="a01305.html"/>
        <files mask="a01306.html"/>
        <files mask="a01307.html"/>
        <files mask="a01308.html"/>
        <files mask="a01309.html"/>
        <files mask="a01310.html"/>
        <files mask="a01311.html"/>
        <files mask="a01312.html"/>
        <files mask="a01313.html"/>
        <files mask="a01314.html"/>
        <files mask="a01315.html"/>
        <files mask="a01316.html"/>
        <files mask="a01317.html"/>
        <files mask="a01318.html"/>
        <files mask="a01319.html"/>
        <files mask="a01320.html"/>
        <files mask="a01321.html"/>
        <files mask="a01325.html"/>
        <files mask="a01329.html"/>
        <files mask="a01333.html"/>
        <files mask="a01337.html"/>
        <files mask="a01341.html"/>
        <files mask="a01345.html"/>
        <files mask="a01357.html"/>
        <files mask="a01369.html"/>
        <files mask="a01381.html"/>
        <files mask="a01393.html"/>
        <files mask="a01405.html"/>
        <files mask="a01417.html"/>
        <files mask="a01429.html"/>
        <files mask="a01441.html"/>
        <files mask="a01453.html"/>
        <files mask="a01465.html"/>
        <files mask="a01477.html"/>
        <files mask="a01489.html"/>
        <files mask="a01501.html"/>
        <files mask="a01513.html"/>
        <files mask="a01525.html"/>
        <files mask="a01537.html"/>
        <files mask="a01549.html"/>
        <files mask="a01561.html"/>
        <files mask="a01573.html"/>
        <files mask="a01585.html"/>
        <files mask="a01597.html"/>
        <files mask="a01601.html"/>
        <files mask="a01605.html"/>
        <files mask="a01609.html"/>
        <files mask="a01613.html"/>
        <files mask="a01617.html"/>
        <files mask="a01621.html"/>
        <files mask="a01625.html"/>
        <files mask="a01629.html"/>
        <files mask="a01633.html"/>
        <files mask="a01637.html"/>
        <files mask="a01638.html"/>
        <files mask="a01639.html"/>
        <files mask="a01640.html"/>
        <files mask="a01641.html"/>
        <files mask="a01642.html"/>
        <files mask="a01643.html"/>
        <files mask="a01644.html"/>
        <files mask="a01645.html"/>
        <files mask="a01646.html"/>
        <files mask="a01647.html"/>
        <files mask="a01648.html"/>
        <files mask="a01649.html"/>
        <files mask="a01650.html"/>
        <files mask="a01651.html"/>
        <files mask="a01652.html"/>
        <files mask="a01653.html"/>
        <files mask="a01654.html"/>
        <files mask="a01655.html"/>
        <files mask="a01656.html"/>
        <files mask="a01657.html"/>
        <files mask="a01658.html"/>
        <files mask="a01659.html"/>
        <files mask="a01660.html"/>
        <files mask="a01662.html"/>
        <files mask="a01663.html"/>
        <files mask="a01664.html"/>
        <files mask="a01665.html"/>
        <files mask="a01666.html"/>
        <files mask="a01667.html"/>
        <files mask="a01668.html"/>
        <files mask="a01669.html"/>
        <files mask="a01670.html"/>
        <files mask="a01671.html"/>
        <files mask="a01672.html"/>
        <files mask="a01673.html"/>
        <files mask="a01674.html"/>
        <files mask="a01675.html"/>
        <files mask="a01676.html"/>
        <files mask="a01677.html"/>
        <files mask="a01678.html"/>
        <files mask="a01679.html"/>
        <files mask="a01680.html"/>
        <files mask="a01681.html"/>
        <files mask="a01682.html"/>
        <files mask="a01683.html"/>
        <files mask="a01684.html"/>
        <files mask="a01685.html"/>
        <files mask="a01686.html"/>
        <files mask="annotated.html"/>
        <files mask="classes.html"/>
        <files mask="dir_01728041b73b35212f9c70304fbd6941.html"/>
        <files mask="dir_048916002fb1c65ba9d6be0a28513389.html"/>
        <files mask="dir_0797c94a3da61d3c30c38ad4bebd123e.html"/>
        <files mask="dir_1bdd4212147753c6857c0181b7ff2c83.html"/>
        <files mask="dir_1d78cde6907429fc7ff3faa0e60e1934.html"/>
        <files mask="dir_28d394395be6bc3a119407e2b960b555.html"/>
        <files mask="dir_2eb425afb7d84500d7d3970f078e88fc.html"/>
        <files mask="dir_342d2a19aef8359edc7607760d6dc660.html"/>
        <files mask="dir_6bc0e71ed988cab81816d0ae80bcd053.html"/>
        <files mask="dir_74e71b644c96d6e40d1ff18482a65c9e.html"/>
        <files mask="dir_82a750f2c24be1f5a16cb4c1f565aee2.html"/>
        <files mask="dir_8cffc6cb708128322c9c72a5522018bb.html"/>
        <files mask="dir_93a3d8210c4daeaca4440151be6f086e.html"/>
        <files mask="dir_960199fd2ed508bf6c2be3d0bebbc8bf.html"/>
        <files mask="dir_9ece74090cf126cc8b2bfd98a6ff42cf.html"/>
        <files mask="dir_9f351d46ce3cc29445a41dc3a31e6919.html"/>
        <files mask="dir_a13d40520f8ae985d4d198cfc5d51e6a.html"/>
        <files mask="dir_b8182ea4e1b37372cef76e76561b1ea4.html"/>
        <files mask="dir_ba0fb44945174e3a1dfee9a70216b8a3.html"/>
        <files mask="dir_bdcd83523a4251c9ada1d1bef5f265cd.html"/>
        <files mask="dir_cee807ca30de410121475dc4149d4f70.html"/>
        <files mask="dir_cf2e22cc336d983ff0a40174c32a781b.html"/>
        <files mask="dir_d3c412a3a9fc56c33ad18d5c7279a9f5.html"/>
        <files mask="dir_dc0d5cf89cffc2a09430f9942ae4ccc9.html"/>
        <files mask="dir_e84ed773fd520e7d80aa0f353515f48b.html"/>
        <files mask="dir_e96f948b0bc7224829512b9972af9922.html"/>
        <files mask="dir_f46bfce375c7c9364cb686067c441ab2.html"/>
        <files mask="dir_fa7c90738c61d7024a5411d35b756043.html"/>
        <files mask="dir_fd7d019e50012d537437a082fa41cad3.html"/>
        <files mask="doxygen.css"/>
        <files mask="examples.html"/>
        <files mask="files.html"/>
        <files mask="functions.html"/>
        <files mask="functions_a.html"/>
        <files mask="functions_b.html"/>
        <files mask="functions_c.html"/>
        <files mask="functions_d.html"/>
        <files mask="functions_e.html"/>
        <files mask="functions_f.html"/>
        <files mask="functions_g.html"/>
        <files mask="functions_h.html"/>
        <files mask="functions_i.html"/>
        <files mask="functions_k.html"/>
        <files mask="functions_l.html"/>
        <files mask="functions_m.html"/>
        <files mask="functions_o.html"/>
        <files mask="functions_p.html"/>
        <files mask="functions_q.html"/>
        <files mask="functions_r.html"/>
        <files mask="functions_s.html"/>
        <files mask="functions_t.html"/>
        <files mask="functions_u.html"/>
        <files mask="functions_v.html"/>
        <files mask="functions_vars.html"/>
        <files mask="functions_vars_a.html"/>
        <files mask="functions_vars_b.html"/>
        <files mask="functions_vars_c.html"/>
        <files mask="functions_vars_d.html"/>
        <files mask="functions_vars_e.html"/>
        <files mask="functions_vars_f.html"/>
        <files mask="functions_vars_g.html"/>
        <files mask="functions_vars_h.html"/>
        <files mask="functions_vars_i.html"/>
        <files mask="functions_vars_k.html"/>
        <files mask="functions_vars_l.html"/>
        <files mask="functions_vars_m.html"/>
        <files mask="functions_vars_o.html"/>
        <files mask="functions_vars_p.html"/>
        <files mask="functions_vars_q.html"/>
        <files mask="functions_vars_r.html"/>
        <files mask="functions_vars_s.html"/>
        <files mask="functions_vars_t.html"/>
        <files mask="functions_vars_u.html"/>
        <files mask="functions_vars_v.html"/>
        <files mask="functions_vars_w.html"/>
        <files mask="functions_w.html"/>
        <files mask="globals.html"/>
        <files mask="globals_a.html"/>
        <files mask="globals_d.html"/>
        <files mask="globals_defs.html"/>
        <files mask="globals_defs_i.html"/>
        <files mask="globals_defs_m.html"/>
        <files mask="globals_defs_r.html"/>
        <files mask="globals_defs_s.html"/>
        <files mask="globals_defs_u.html"/>
        <files mask="globals_e.html"/>
        <files mask="globals_func.html"/>
        <files mask="globals_func_m.html"/>
        <files mask="globals_g.html"/>
        <files mask="globals_i.html"/>
        <files mask="globals_m.html"/>
        <files mask="globals_p.html"/>
        <files mask="globals_r.html"/>
        <files mask="globals_s.html"/>
        <files mask="globals_type.html"/>
        <files mask="globals_u.html"/>
        <files mask="globals_vars.html"/>
        <files mask="globals_vars_d.html"/>
        <files mask="globals_vars_e.html"/>
        <files mask="globals_vars_g.html"/>
        <files mask="globals_vars_m.html"/>
        <files mask="globals_vars_p.html"/>
        <files mask="globals_vars_r.html"/>
        <files mask="globals_vars_s.html"/>
        <files mask="index.html"/>
        <files mask="modules.html"/>
        <files mask="navtree.css"/>
        <files mask="pages.html"/>
        <files mask="tabs.css"/>
      </source>
      <source relative_path="doc/mimxrt/html" type="script">
        <files mask="a00002.js"/>
        <files mask="a00005.js"/>
        <files mask="a00008.js"/>
        <files mask="a00011.js"/>
        <files mask="a00014.js"/>
        <files mask="a00017.js"/>
        <files mask="a00020.js"/>
        <files mask="a00023.js"/>
        <files mask="a00026.js"/>
        <files mask="a00029.js"/>
        <files mask="a00032.js"/>
        <files mask="a00035.js"/>
        <files mask="a00038.js"/>
        <files mask="a00044.js"/>
        <files mask="a00047.js"/>
        <files mask="a00050.js"/>
        <files mask="a00083.js"/>
        <files mask="a00086.js"/>
        <files mask="a00098.js"/>
        <files mask="a00101.js"/>
        <files mask="a00155.js"/>
        <files mask="a00158.js"/>
        <files mask="a00161.js"/>
        <files mask="a00164.js"/>
        <files mask="a00167.js"/>
        <files mask="a00170.js"/>
        <files mask="a00173.js"/>
        <files mask="a00176.js"/>
        <files mask="a00179.js"/>
        <files mask="a00182.js"/>
        <files mask="a00185.js"/>
        <files mask="a00188.js"/>
        <files mask="a00206.js"/>
        <files mask="a00209.js"/>
        <files mask="a00212.js"/>
        <files mask="a00215.js"/>
        <files mask="a00218.js"/>
        <files mask="a00221.js"/>
        <files mask="a00224.js"/>
        <files mask="a00227.js"/>
        <files mask="a00230.js"/>
        <files mask="a00233.js"/>
        <files mask="a00236.js"/>
        <files mask="a00239.js"/>
        <files mask="a00242.js"/>
        <files mask="a00245.js"/>
        <files mask="a00248.js"/>
        <files mask="a00266.js"/>
        <files mask="a00269.js"/>
        <files mask="a00272.js"/>
        <files mask="a00275.js"/>
        <files mask="a00278.js"/>
        <files mask="a00281.js"/>
        <files mask="a00284.js"/>
        <files mask="a00287.js"/>
        <files mask="a00329.js"/>
        <files mask="a00332.js"/>
        <files mask="a00335.js"/>
        <files mask="a00356.js"/>
        <files mask="a00359.js"/>
        <files mask="a00362.js"/>
        <files mask="a00365.js"/>
        <files mask="a00374.js"/>
        <files mask="a00377.js"/>
        <files mask="a00380.js"/>
        <files mask="a00383.js"/>
        <files mask="a00386.js"/>
        <files mask="a00392.js"/>
        <files mask="a00401.js"/>
        <files mask="a00407.js"/>
        <files mask="a00410.js"/>
        <files mask="a00416.js"/>
        <files mask="a00428.js"/>
        <files mask="a00434.js"/>
        <files mask="a00437.js"/>
        <files mask="a00440.js"/>
        <files mask="a00443.js"/>
        <files mask="a00449.js"/>
        <files mask="a00452.js"/>
        <files mask="a00455.js"/>
        <files mask="a00458.js"/>
        <files mask="a00461.js"/>
        <files mask="a00464.js"/>
        <files mask="a00467.js"/>
        <files mask="a00470.js"/>
        <files mask="a00473.js"/>
        <files mask="a00476.js"/>
        <files mask="a00479.js"/>
        <files mask="a00482.js"/>
        <files mask="a00485.js"/>
        <files mask="a00506.js"/>
        <files mask="a00515.js"/>
        <files mask="a00518.js"/>
        <files mask="a00524.js"/>
        <files mask="a00527.js"/>
        <files mask="a00530.js"/>
        <files mask="a00536.js"/>
        <files mask="a00539.js"/>
        <files mask="a00542.js"/>
        <files mask="a00545.js"/>
        <files mask="a00551.js"/>
        <files mask="a00557.js"/>
        <files mask="a00560.js"/>
        <files mask="a00563.js"/>
        <files mask="a00566.js"/>
        <files mask="a00569.js"/>
        <files mask="a00575.js"/>
        <files mask="a00584.js"/>
        <files mask="a00596.js"/>
        <files mask="a00599.js"/>
        <files mask="a00605.js"/>
        <files mask="a00614.js"/>
        <files mask="a00617.js"/>
        <files mask="a00620.js"/>
        <files mask="a00623.js"/>
        <files mask="a00626.js"/>
        <files mask="a00629.js"/>
        <files mask="a00632.js"/>
        <files mask="a00635.js"/>
        <files mask="a00665.js"/>
        <files mask="a00668.js"/>
        <files mask="a00680.js"/>
        <files mask="a00686.js"/>
        <files mask="a00698.js"/>
        <files mask="a00710.js"/>
        <files mask="a00716.js"/>
        <files mask="a00719.js"/>
        <files mask="a00728.js"/>
        <files mask="a00734.js"/>
        <files mask="a00743.js"/>
        <files mask="a00746.js"/>
        <files mask="a00752.js"/>
        <files mask="a00755.js"/>
        <files mask="a00761.js"/>
        <files mask="a00764.js"/>
        <files mask="a00773.js"/>
        <files mask="a00782.js"/>
        <files mask="a00785.js"/>
        <files mask="a00788.js"/>
        <files mask="a00794.js"/>
        <files mask="a00797.js"/>
        <files mask="a00800.js"/>
        <files mask="a00806.js"/>
        <files mask="a00812.js"/>
        <files mask="a00815.js"/>
        <files mask="a00830.js"/>
        <files mask="a00839.js"/>
        <files mask="a00842.js"/>
        <files mask="a00848.js"/>
        <files mask="a00851.js"/>
        <files mask="a00854.js"/>
        <files mask="a00863.js"/>
        <files mask="a00866.js"/>
        <files mask="a00872.js"/>
        <files mask="a00875.js"/>
        <files mask="a00878.js"/>
        <files mask="a00881.js"/>
        <files mask="a00884.js"/>
        <files mask="a00887.js"/>
        <files mask="a00890.js"/>
        <files mask="a00893.js"/>
        <files mask="a00896.js"/>
        <files mask="a00902.js"/>
        <files mask="a00905.js"/>
        <files mask="a00908.js"/>
        <files mask="a00914.js"/>
        <files mask="a00917.js"/>
        <files mask="a00920.js"/>
        <files mask="a00944.js"/>
        <files mask="a00947.js"/>
        <files mask="a00953.js"/>
        <files mask="a00970.js"/>
        <files mask="a00971.js"/>
        <files mask="a00972.js"/>
        <files mask="a00973.js"/>
        <files mask="a00974.js"/>
        <files mask="a00975.js"/>
        <files mask="a00977.js"/>
        <files mask="a00978.js"/>
        <files mask="a00979.js"/>
        <files mask="a00980.js"/>
        <files mask="a00981.js"/>
        <files mask="a00982.js"/>
        <files mask="a00983.js"/>
        <files mask="a00984.js"/>
        <files mask="a00985.js"/>
        <files mask="a00987.js"/>
        <files mask="a00988.js"/>
        <files mask="a00992.js"/>
        <files mask="a00993.js"/>
        <files mask="a00994.js"/>
        <files mask="a00995.js"/>
        <files mask="a00996.js"/>
        <files mask="a00997.js"/>
        <files mask="a00998.js"/>
        <files mask="a00999.js"/>
        <files mask="a01000.js"/>
        <files mask="a01001.js"/>
        <files mask="a01002.js"/>
        <files mask="a01005.js"/>
        <files mask="a01006.js"/>
        <files mask="a01007.js"/>
        <files mask="a01008.js"/>
        <files mask="a01009.js"/>
        <files mask="a01010.js"/>
        <files mask="a01011.js"/>
        <files mask="a01012.js"/>
        <files mask="a01013.js"/>
        <files mask="a01014.js"/>
        <files mask="a01015.js"/>
        <files mask="a01016.js"/>
        <files mask="a01017.js"/>
        <files mask="a01018.js"/>
        <files mask="a01019.js"/>
        <files mask="a01020.js"/>
        <files mask="a01021.js"/>
        <files mask="a01022.js"/>
        <files mask="a01023.js"/>
        <files mask="a01024.js"/>
        <files mask="a01025.js"/>
        <files mask="a01026.js"/>
        <files mask="a01027.js"/>
        <files mask="a01028.js"/>
        <files mask="a01029.js"/>
        <files mask="a01030.js"/>
        <files mask="a01031.js"/>
        <files mask="a01032.js"/>
        <files mask="a01033.js"/>
        <files mask="a01034.js"/>
        <files mask="a01035.js"/>
        <files mask="a01036.js"/>
        <files mask="a01037.js"/>
        <files mask="a01038.js"/>
        <files mask="a01039.js"/>
        <files mask="a01040.js"/>
        <files mask="a01041.js"/>
        <files mask="a01042.js"/>
        <files mask="a01043.js"/>
        <files mask="a01044.js"/>
        <files mask="a01045.js"/>
        <files mask="a01046.js"/>
        <files mask="a01047.js"/>
        <files mask="a01048.js"/>
        <files mask="a01049.js"/>
        <files mask="a01050.js"/>
        <files mask="a01051.js"/>
        <files mask="a01052.js"/>
        <files mask="a01053.js"/>
        <files mask="a01054.js"/>
        <files mask="a01055.js"/>
        <files mask="a01056.js"/>
        <files mask="a01057.js"/>
        <files mask="a01058.js"/>
        <files mask="a01059.js"/>
        <files mask="a01060.js"/>
        <files mask="a01061.js"/>
        <files mask="a01062.js"/>
        <files mask="a01063.js"/>
        <files mask="a01064.js"/>
        <files mask="a01065.js"/>
        <files mask="a01066.js"/>
        <files mask="a01067.js"/>
        <files mask="a01068.js"/>
        <files mask="a01069.js"/>
        <files mask="a01070.js"/>
        <files mask="a01071.js"/>
        <files mask="a01072.js"/>
        <files mask="a01073.js"/>
        <files mask="a01074.js"/>
        <files mask="a01075.js"/>
        <files mask="a01076.js"/>
        <files mask="a01077.js"/>
        <files mask="a01078.js"/>
        <files mask="a01079.js"/>
        <files mask="a01080.js"/>
        <files mask="a01081.js"/>
        <files mask="a01082.js"/>
        <files mask="a01083.js"/>
        <files mask="a01084.js"/>
        <files mask="a01085.js"/>
        <files mask="a01086.js"/>
        <files mask="a01087.js"/>
        <files mask="a01088.js"/>
        <files mask="a01089.js"/>
        <files mask="a01090.js"/>
        <files mask="a01091.js"/>
        <files mask="a01092.js"/>
        <files mask="a01093.js"/>
        <files mask="a01094.js"/>
        <files mask="a01095.js"/>
        <files mask="a01096.js"/>
        <files mask="a01097.js"/>
        <files mask="a01098.js"/>
        <files mask="a01099.js"/>
        <files mask="a01101.js"/>
        <files mask="a01102.js"/>
        <files mask="a01103.js"/>
        <files mask="a01104.js"/>
        <files mask="a01105.js"/>
        <files mask="a01106.js"/>
        <files mask="a01107.js"/>
        <files mask="a01108.js"/>
        <files mask="a01109.js"/>
        <files mask="a01110.js"/>
        <files mask="a01112.js"/>
        <files mask="a01113.js"/>
        <files mask="a01114.js"/>
        <files mask="a01115.js"/>
        <files mask="a01116.js"/>
        <files mask="a01117.js"/>
        <files mask="a01119.js"/>
        <files mask="a01120.js"/>
        <files mask="a01121.js"/>
        <files mask="a01122.js"/>
        <files mask="a01123.js"/>
        <files mask="a01124.js"/>
        <files mask="a01125.js"/>
        <files mask="a01126.js"/>
        <files mask="a01127.js"/>
        <files mask="a01128.js"/>
        <files mask="a01129.js"/>
        <files mask="a01130.js"/>
        <files mask="a01131.js"/>
        <files mask="a01132.js"/>
        <files mask="a01133.js"/>
        <files mask="a01134.js"/>
        <files mask="a01138.js"/>
        <files mask="a01139.js"/>
        <files mask="a01140.js"/>
        <files mask="a01142.js"/>
        <files mask="a01143.js"/>
        <files mask="a01144.js"/>
        <files mask="a01145.js"/>
        <files mask="a01146.js"/>
        <files mask="a01147.js"/>
        <files mask="a01148.js"/>
        <files mask="a01149.js"/>
        <files mask="a01153.js"/>
        <files mask="a01154.js"/>
        <files mask="a01155.js"/>
        <files mask="a01156.js"/>
        <files mask="a01157.js"/>
        <files mask="a01158.js"/>
        <files mask="a01159.js"/>
        <files mask="a01160.js"/>
        <files mask="a01161.js"/>
        <files mask="a01162.js"/>
        <files mask="a01163.js"/>
        <files mask="a01164.js"/>
        <files mask="a01165.js"/>
        <files mask="a01170.js"/>
        <files mask="a01171.js"/>
        <files mask="a01172.js"/>
        <files mask="a01173.js"/>
        <files mask="a01174.js"/>
        <files mask="a01176.js"/>
        <files mask="a01177.js"/>
        <files mask="a01178.js"/>
        <files mask="a01179.js"/>
        <files mask="a01180.js"/>
        <files mask="a01181.js"/>
        <files mask="a01182.js"/>
        <files mask="a01183.js"/>
        <files mask="a01184.js"/>
        <files mask="a01185.js"/>
        <files mask="a01186.js"/>
        <files mask="a01187.js"/>
        <files mask="a01188.js"/>
        <files mask="a01189.js"/>
        <files mask="a01190.js"/>
        <files mask="a01191.js"/>
        <files mask="a01192.js"/>
        <files mask="a01193.js"/>
        <files mask="a01194.js"/>
        <files mask="a01195.js"/>
        <files mask="a01196.js"/>
        <files mask="a01197.js"/>
        <files mask="a01198.js"/>
        <files mask="a01199.js"/>
        <files mask="a01200.js"/>
        <files mask="a01202.js"/>
        <files mask="a01203.js"/>
        <files mask="a01204.js"/>
        <files mask="a01205.js"/>
        <files mask="a01206.js"/>
        <files mask="a01207.js"/>
        <files mask="a01208.js"/>
        <files mask="a01209.js"/>
        <files mask="a01210.js"/>
        <files mask="a01211.js"/>
        <files mask="a01212.js"/>
        <files mask="a01213.js"/>
        <files mask="a01214.js"/>
        <files mask="a01215.js"/>
        <files mask="a01216.js"/>
        <files mask="a01217.js"/>
        <files mask="a01218.js"/>
        <files mask="a01219.js"/>
        <files mask="a01220.js"/>
        <files mask="a01221.js"/>
        <files mask="a01222.js"/>
        <files mask="a01223.js"/>
        <files mask="a01224.js"/>
        <files mask="a01225.js"/>
        <files mask="a01226.js"/>
        <files mask="a01227.js"/>
        <files mask="a01228.js"/>
        <files mask="a01229.js"/>
        <files mask="a01230.js"/>
        <files mask="a01231.js"/>
        <files mask="a01232.js"/>
        <files mask="a01233.js"/>
        <files mask="a01234.js"/>
        <files mask="a01235.js"/>
        <files mask="a01236.js"/>
        <files mask="a01237.js"/>
        <files mask="a01238.js"/>
        <files mask="a01239.js"/>
        <files mask="a01240.js"/>
        <files mask="a01241.js"/>
        <files mask="a01242.js"/>
        <files mask="a01243.js"/>
        <files mask="a01244.js"/>
        <files mask="a01245.js"/>
        <files mask="a01246.js"/>
        <files mask="a01247.js"/>
        <files mask="a01248.js"/>
        <files mask="a01249.js"/>
        <files mask="a01250.js"/>
        <files mask="a01256.js"/>
        <files mask="a01257.js"/>
        <files mask="a01258.js"/>
        <files mask="a01260.js"/>
        <files mask="a01261.js"/>
        <files mask="a01262.js"/>
        <files mask="a01263.js"/>
        <files mask="a01264.js"/>
        <files mask="a01265.js"/>
        <files mask="a01298.js"/>
        <files mask="a01299.js"/>
        <files mask="a01301.js"/>
        <files mask="a01302.js"/>
        <files mask="a01303.js"/>
        <files mask="a01304.js"/>
        <files mask="a01305.js"/>
        <files mask="a01306.js"/>
        <files mask="a01307.js"/>
        <files mask="a01308.js"/>
        <files mask="a01309.js"/>
        <files mask="a01310.js"/>
        <files mask="a01311.js"/>
        <files mask="a01312.js"/>
        <files mask="a01313.js"/>
        <files mask="a01314.js"/>
        <files mask="a01315.js"/>
        <files mask="a01316.js"/>
        <files mask="a01317.js"/>
        <files mask="a01318.js"/>
        <files mask="a01319.js"/>
        <files mask="a01320.js"/>
        <files mask="a01321.js"/>
        <files mask="a01325.js"/>
        <files mask="a01329.js"/>
        <files mask="a01333.js"/>
        <files mask="a01337.js"/>
        <files mask="a01341.js"/>
        <files mask="a01345.js"/>
        <files mask="a01357.js"/>
        <files mask="a01369.js"/>
        <files mask="a01381.js"/>
        <files mask="a01393.js"/>
        <files mask="a01405.js"/>
        <files mask="a01417.js"/>
        <files mask="a01429.js"/>
        <files mask="a01441.js"/>
        <files mask="a01453.js"/>
        <files mask="a01465.js"/>
        <files mask="a01477.js"/>
        <files mask="a01489.js"/>
        <files mask="a01501.js"/>
        <files mask="a01513.js"/>
        <files mask="a01525.js"/>
        <files mask="a01537.js"/>
        <files mask="a01549.js"/>
        <files mask="a01561.js"/>
        <files mask="a01573.js"/>
        <files mask="a01585.js"/>
        <files mask="a01601.js"/>
        <files mask="a01609.js"/>
        <files mask="a01613.js"/>
        <files mask="a01617.js"/>
        <files mask="a01621.js"/>
        <files mask="a01625.js"/>
        <files mask="a01629.js"/>
        <files mask="a01633.js"/>
        <files mask="a01637.js"/>
        <files mask="annotated_dup.js"/>
        <files mask="dir_01728041b73b35212f9c70304fbd6941.js"/>
        <files mask="dir_048916002fb1c65ba9d6be0a28513389.js"/>
        <files mask="dir_0797c94a3da61d3c30c38ad4bebd123e.js"/>
        <files mask="dir_1d78cde6907429fc7ff3faa0e60e1934.js"/>
        <files mask="dir_28d394395be6bc3a119407e2b960b555.js"/>
        <files mask="dir_342d2a19aef8359edc7607760d6dc660.js"/>
        <files mask="dir_6bc0e71ed988cab81816d0ae80bcd053.js"/>
        <files mask="dir_74e71b644c96d6e40d1ff18482a65c9e.js"/>
        <files mask="dir_82a750f2c24be1f5a16cb4c1f565aee2.js"/>
        <files mask="dir_93a3d8210c4daeaca4440151be6f086e.js"/>
        <files mask="dir_960199fd2ed508bf6c2be3d0bebbc8bf.js"/>
        <files mask="dir_a13d40520f8ae985d4d198cfc5d51e6a.js"/>
        <files mask="dir_b8182ea4e1b37372cef76e76561b1ea4.js"/>
        <files mask="dir_ba0fb44945174e3a1dfee9a70216b8a3.js"/>
        <files mask="dir_d3c412a3a9fc56c33ad18d5c7279a9f5.js"/>
        <files mask="dir_dc0d5cf89cffc2a09430f9942ae4ccc9.js"/>
        <files mask="dir_e84ed773fd520e7d80aa0f353515f48b.js"/>
        <files mask="dir_e96f948b0bc7224829512b9972af9922.js"/>
        <files mask="dir_fd7d019e50012d537437a082fa41cad3.js"/>
        <files mask="dynsections.js"/>
        <files mask="examples.js"/>
        <files mask="files_dup.js"/>
        <files mask="functions_dup.js"/>
        <files mask="functions_vars.js"/>
        <files mask="globals_defs.js"/>
        <files mask="globals_dup.js"/>
        <files mask="globals_func.js"/>
        <files mask="globals_vars.js"/>
        <files mask="index.js"/>
        <files mask="jquery.js"/>
        <files mask="modules.js"/>
        <files mask="navtree.js"/>
        <files mask="navtreedata.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="navtreeindex10.js"/>
        <files mask="navtreeindex11.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="navtreeindex4.js"/>
        <files mask="navtreeindex5.js"/>
        <files mask="navtreeindex6.js"/>
        <files mask="navtreeindex7.js"/>
        <files mask="navtreeindex8.js"/>
        <files mask="navtreeindex9.js"/>
        <files mask="resize.js"/>
      </source>
      <source relative_path="doc/mimxrt/html" type="image">
        <files mask="bc_s.png"/>
        <files mask="bc_sd.png"/>
        <files mask="closed.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_fd.png"/>
        <files mask="nav_g.png"/>
        <files mask="nav_h.png"/>
        <files mask="nav_hd.png"/>
        <files mask="open.png"/>
        <files mask="splitbar.png"/>
        <files mask="splitbard.png"/>
        <files mask="sync_off.png"/>
        <files mask="sync_on.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_ad.png"/>
        <files mask="tab_b.png"/>
        <files mask="tab_bd.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_hd.png"/>
        <files mask="tab_s.png"/>
        <files mask="tab_sd.png"/>
      </source>
      <source relative_path="doc/mimxrt/html" type="other">
        <files mask="doc.svg"/>
        <files mask="docd.svg"/>
        <files mask="doxygen.svg"/>
        <files mask="folderclosed.svg"/>
        <files mask="folderclosedd.svg"/>
        <files mask="folderopen.svg"/>
        <files mask="folderopend.svg"/>
      </source>
      <source relative_path="doc/mimxrt/html/search" type="script">
        <files mask="all_0.js"/>
        <files mask="all_1.js"/>
        <files mask="all_10.js"/>
        <files mask="all_11.js"/>
        <files mask="all_12.js"/>
        <files mask="all_13.js"/>
        <files mask="all_14.js"/>
        <files mask="all_15.js"/>
        <files mask="all_2.js"/>
        <files mask="all_3.js"/>
        <files mask="all_4.js"/>
        <files mask="all_5.js"/>
        <files mask="all_6.js"/>
        <files mask="all_7.js"/>
        <files mask="all_8.js"/>
        <files mask="all_9.js"/>
        <files mask="all_a.js"/>
        <files mask="all_b.js"/>
        <files mask="all_c.js"/>
        <files mask="all_d.js"/>
        <files mask="all_e.js"/>
        <files mask="all_f.js"/>
        <files mask="classes_0.js"/>
        <files mask="defines_0.js"/>
        <files mask="defines_1.js"/>
        <files mask="defines_2.js"/>
        <files mask="defines_3.js"/>
        <files mask="files_0.js"/>
        <files mask="functions_0.js"/>
        <files mask="functions_1.js"/>
        <files mask="groups_0.js"/>
        <files mask="groups_1.js"/>
        <files mask="groups_2.js"/>
        <files mask="groups_3.js"/>
        <files mask="groups_4.js"/>
        <files mask="groups_5.js"/>
        <files mask="groups_6.js"/>
        <files mask="groups_7.js"/>
        <files mask="groups_8.js"/>
        <files mask="groups_9.js"/>
        <files mask="groups_a.js"/>
        <files mask="groups_b.js"/>
        <files mask="groups_c.js"/>
        <files mask="groups_d.js"/>
        <files mask="pages_0.js"/>
        <files mask="pages_1.js"/>
        <files mask="search.js"/>
        <files mask="searchdata.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="variables_0.js"/>
        <files mask="variables_1.js"/>
        <files mask="variables_10.js"/>
        <files mask="variables_11.js"/>
        <files mask="variables_12.js"/>
        <files mask="variables_13.js"/>
        <files mask="variables_14.js"/>
        <files mask="variables_15.js"/>
        <files mask="variables_2.js"/>
        <files mask="variables_3.js"/>
        <files mask="variables_4.js"/>
        <files mask="variables_5.js"/>
        <files mask="variables_6.js"/>
        <files mask="variables_7.js"/>
        <files mask="variables_8.js"/>
        <files mask="variables_9.js"/>
        <files mask="variables_a.js"/>
        <files mask="variables_b.js"/>
        <files mask="variables_c.js"/>
        <files mask="variables_d.js"/>
        <files mask="variables_e.js"/>
        <files mask="variables_f.js"/>
      </source>
      <source relative_path="doc/mimxrt/html/search" type="other">
        <files mask="close.svg"/>
        <files mask="mag.svg"/>
        <files mask="mag_d.svg"/>
        <files mask="mag_sel.svg"/>
        <files mask="mag_seld.svg"/>
      </source>
      <source relative_path="doc/mimxrt/html/search" type="doc">
        <files mask="search.css"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="LA_OPT_Online_Code_Hosting.htm"/>
        <files mask="softwareContentRegister.txt"/>
        <files mask="ReleaseNotes.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_doc_mimxrt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.ecc.MIMXRT735S" name="els_pkc.ecc" brief="Component els_pkc.ecc" version="1.9.0" full_name="Component els_pkc.ecc" category="els_pkc/els_pkc_ecc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClEcc/src" type="src">
        <files mask="mcuxClEcc_Constants.c"/>
        <files mask="mcuxClEcc_ECDSA_GenerateProtocolDescriptor.c"/>
        <files mask="mcuxClEcc_ECDSA_Internal_BlindedSecretKeyGen.c"/>
        <files mask="mcuxClEcc_ECDSA_Internal_BlindedSecretKeyGen_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateKeyPair.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateKeyPair_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignature.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignatureMode.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignature_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_InitPrivKeyInputMode.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_CalcHashModN.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_CalcHashModN_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_DecodePoint_Ed25519.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_DecodePoint_FUP.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_EncodePoint.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_SetupEnvironment.c"/>
        <files mask="mcuxClEcc_EdDSA_Internal_SignatureMechanisms.c"/>
        <files mask="mcuxClEcc_EdDSA_VerifySignature.c"/>
        <files mask="mcuxClEcc_Internal_BlindedScalarMult.c"/>
        <files mask="mcuxClEcc_Internal_Convert_FUP.c"/>
        <files mask="mcuxClEcc_Internal_GenerateMultiplicativeBlinding.c"/>
        <files mask="mcuxClEcc_Internal_InterleaveScalar.c"/>
        <files mask="mcuxClEcc_Internal_InterleaveTwoScalars.c"/>
        <files mask="mcuxClEcc_Internal_Interleave_FUP.c"/>
        <files mask="mcuxClEcc_Internal_PointComparison_FUP.c"/>
        <files mask="mcuxClEcc_Internal_RecodeAndReorderScalar.c"/>
        <files mask="mcuxClEcc_Internal_SetupEnvironment.c"/>
        <files mask="mcuxClEcc_Internal_SetupEnvironment_FUP.c"/>
        <files mask="mcuxClEcc_Internal_Types.c"/>
        <files mask="mcuxClEcc_KeyTypes.c"/>
        <files mask="mcuxClEcc_MontDH_GenerateKeyPair.c"/>
        <files mask="mcuxClEcc_MontDH_KeyAgreement.c"/>
        <files mask="mcuxClEcc_Mont_Internal_DhSetupEnvironment.c"/>
        <files mask="mcuxClEcc_Mont_Internal_MontDhX.c"/>
        <files mask="mcuxClEcc_Mont_Internal_MontDhX_FUP.c"/>
        <files mask="mcuxClEcc_Mont_Internal_SecureScalarMult_XZMontLadder.c"/>
        <files mask="mcuxClEcc_Mont_Internal_SecureScalarMult_XZMontLadder_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_FixScalarMult.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PlainFixScalarMult25519.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PlainPtrSelectComb.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PlainPtrSelectML.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PlainVarScalarMult.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmetic.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmetic_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmeticEd25519.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmeticEd25519_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointSubtraction_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointValidation_FUP.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_PrecPointImportAndValidate.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_VarScalarMult.c"/>
        <files mask="mcuxClEcc_TwEd_Internal_VarScalarMult_FUP.c"/>
        <files mask="mcuxClEcc_WeierECC_Internal_BlindedSecretKeyGen.c"/>
        <files mask="mcuxClEcc_WeierECC_Internal_BlindedSecretKeyGen_FUP.c"/>
        <files mask="mcuxClEcc_WeierECC_Internal_GenerateKeyPair.c"/>
        <files mask="mcuxClEcc_WeierECC_Internal_SetupEnvironment.c"/>
        <files mask="mcuxClEcc_Weier_Internal_ConvertPoint_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointArithmetic.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointArithmetic_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointCheck.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointCheck_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_PointMult.c"/>
        <files mask="mcuxClEcc_Weier_Internal_SecurePointMult_CoZMontLadder.c"/>
        <files mask="mcuxClEcc_Weier_Internal_SecurePointMult_CoZMontLadder_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Internal_SetupEnvironment.c"/>
        <files mask="mcuxClEcc_Weier_KeyGen.c"/>
        <files mask="mcuxClEcc_Weier_KeyGen_FUP.c"/>
        <files mask="mcuxClEcc_Weier_PointMult.c"/>
        <files mask="mcuxClEcc_Weier_PointMult_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Sign.c"/>
        <files mask="mcuxClEcc_Weier_Sign_FUP.c"/>
        <files mask="mcuxClEcc_Weier_Verify.c"/>
        <files mask="mcuxClEcc_Weier_Verify_FUP.c"/>
      </source>
      <source relative_path="src/comps/mcuxClEcc/inc" type="c_include">
        <files mask="mcuxClEcc.h"/>
        <files mask="mcuxClEcc_Constants.h"/>
        <files mask="mcuxClEcc_EdDSA_GenerateKeyPair_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignature_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal_CalcHashModN_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal_DecodePoint_FUP.h"/>
        <files mask="mcuxClEcc_Functions.h"/>
        <files mask="mcuxClEcc_Internal_Convert_FUP.h"/>
        <files mask="mcuxClEcc_Internal_Interleave_FUP.h"/>
        <files mask="mcuxClEcc_Internal_PointComparison_FUP.h"/>
        <files mask="mcuxClEcc_Internal_SetupEnvironment_FUP.h"/>
        <files mask="mcuxClEcc_KeyTypes.h"/>
        <files mask="mcuxClEcc_Mont_Internal_MontDhX_FUP.h"/>
        <files mask="mcuxClEcc_Mont_Internal_SecureScalarMult_XZMontLadder_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmeticEd25519_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointSubtraction_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointArithmetic_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PointValidation_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_VarScalarMult_FUP.h"/>
        <files mask="mcuxClEcc_Types.h"/>
        <files mask="mcuxClEcc_WeierECC_Internal_BlindedSecretKeyGen_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_ConvertPoint_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_PointArithmetic_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_PointCheck_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_SecurePointMult_CoZMontLadder_FUP.h"/>
        <files mask="mcuxClEcc_Weier_KeyGen_FUP.h"/>
        <files mask="mcuxClEcc_Weier_PointMult_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Sign_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Verify_FUP.h"/>
      </source>
      <source relative_path="src/comps/mcuxClEcc/inc/internal" type="c_include">
        <files mask="mcuxClEcc_ECDH_Internal.h"/>
        <files mask="mcuxClEcc_ECDSA_Internal.h"/>
        <files mask="mcuxClEcc_ECDSA_Internal_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal_FUP.h"/>
        <files mask="mcuxClEcc_EdDSA_Internal_Hash.h"/>
        <files mask="mcuxClEcc_Internal.h"/>
        <files mask="mcuxClEcc_Internal_FUP.h"/>
        <files mask="mcuxClEcc_Internal_PkcWaLayout.h"/>
        <files mask="mcuxClEcc_Internal_Random.h"/>
        <files mask="mcuxClEcc_Internal_SecurePointSelect.h"/>
        <files mask="mcuxClEcc_Internal_UPTRT_access.h"/>
        <files mask="mcuxClEcc_Mont_Internal.h"/>
        <files mask="mcuxClEcc_Mont_Internal_FUP.h"/>
        <files mask="mcuxClEcc_Mont_Internal_PkcWaLayout.h"/>
        <files mask="mcuxClEcc_TwEd_Internal.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_FUP.h"/>
        <files mask="mcuxClEcc_TwEd_Internal_PkcWaLayout.h"/>
        <files mask="mcuxClEcc_WeierEcc_KeyGenerate_Internal.h"/>
        <files mask="mcuxClEcc_Weier_Internal.h"/>
        <files mask="mcuxClEcc_Weier_Internal_FP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_FUP.h"/>
        <files mask="mcuxClEcc_Weier_Internal_PkcWaLayout.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_ecc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEcc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.els.MIMXRT735S" name="els" brief="Component els" version="1.9.0" full_name="Component els" category="els_pkc/els_pkc_els" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aead_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.cipher_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.core.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.data_integrity.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.els_common.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.els_header_only.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.hash.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.key.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.mac_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClEls/src" type="src">
        <files mask="mcuxClEls_Aead.c"/>
        <files mask="mcuxClEls_Cipher.c"/>
        <files mask="mcuxClEls_Cmac.c"/>
        <files mask="mcuxClEls_Ecc.c"/>
        <files mask="mcuxClEls_Hash.c"/>
        <files mask="mcuxClEls_Hmac.c"/>
        <files mask="mcuxClEls_Kdf.c"/>
        <files mask="mcuxClEls_Rng.c"/>
        <files mask="mcuxClEls_KeyManagement.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_els.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.els_common.MIMXRT735S" name="els_pkc.els_common" brief="Component els_pkc els_common" version="1.9.0" full_name="Component els_pkc els_common" category="els_pkc/els_pkc_els_common" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClEls/src" type="src">
        <files mask="mcuxClEls_Common.c"/>
      </source>
      <source relative_path="src/comps/mcuxClEls/inc" type="c_include">
        <files mask="mcuxClEls_Common.h"/>
      </source>
      <source relative_path="src/comps/mcuxClEls/inc/internal" type="c_include">
        <files mask="mcuxClEls_Internal_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_els_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples.MIMXRT735S" name="els_pkc_test" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.examples_random_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_aead.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_cipher_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_ecc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_hash_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_hmac.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_key.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_mac_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.examples_rsa.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pkc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.random_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.els_pkc.examples_aead.MIMXRT735S" name="els_pkc_test_aead" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_aead" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.padding.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClAeadModes" type="src">
        <files mask="mcuxClAeadModes_Els_Ccm_Aes128_Multipart_example.c"/>
        <files mask="mcuxClAeadModes_Els_Ccm_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClAeadModes_Els_Gcm_Aes128_Oneshot_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_aead.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_cipher_modes.MIMXRT735S" name="els_pkc_test_cipher" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_cipher" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClCipherModes" type="src">
        <files mask="mcuxClCipherModes_Els_Cbc_Aes128_Multipart_example.c"/>
        <files mask="mcuxClCipherModes_Els_Cbc_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClCipherModes_Els_Cbc_Aes128_Oneshot_PaddingZero_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ctr_Aes128_Multipart_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ctr_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Multipart_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Multipart_PaddingPKCS7_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Oneshot_PaddingPKCS7_example.c"/>
        <files mask="mcuxClCipherModes_Els_Ecb_Aes128_Oneshot_PaddingZero_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_cipher_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_ecc.MIMXRT735S" name="els_pkc_test_ecc" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_ecc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClEcc" type="src">
        <files mask="mcuxClEcc_EdDSA_Ed25519ctx_example.c"/>
        <files mask="mcuxClEcc_EdDSA_Ed25519ph_example.c"/>
        <files mask="mcuxClEcc_EdDSA_Ed25519_example.c"/>
        <files mask="mcuxClEcc_EdDSA_GenerateSignature_Ed25519_example.c"/>
        <files mask="mcuxClEcc_EdDSA_VerifySignature_Ed25519_example.c"/>
        <files mask="mcuxClEcc_MontDH_Curve25519_example.c"/>
        <files mask="mcuxClEcc_MontDH_Curve448_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_ecc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_els.MIMXRT735S" name="els_pkc_test_els" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_els" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClEls" type="src">
        <files mask="mcuxClEls_Cipher_Aes128_Cbc_Encrypt_example.c"/>
        <files mask="mcuxClEls_Cipher_Aes128_Ecb_Encrypt_example.c"/>
        <files mask="mcuxClEls_Common_Get_Info_example.c"/>
        <files mask="mcuxClEls_Ecc_Keygen_Sign_Verify_example.c"/>
        <files mask="mcuxClEls_Hash_HW_Security_Counter_example.c"/>
        <files mask="mcuxClEls_Hash_Sha224_One_Block_example.c"/>
        <files mask="mcuxClEls_Hash_Sha256_One_Block_example.c"/>
        <files mask="mcuxClEls_Hash_Sha384_One_Block_example.c"/>
        <files mask="mcuxClEls_Hash_Sha512_One_Block_example.c"/>
        <files mask="mcuxClEls_Rng_Prng_Get_Random_example.c"/>
        <files mask="mcuxClEls_Tls_Master_Key_Session_Keys_example.c"/>
      </source>
      <source relative_path="examples/mcuxClRandomModes" type="src">
        <files mask="mcuxClRandomModes_ELS_example.c"/>
      </source>
      <source relative_path="src/comps/mcuxClExample/inc" type="c_include">
        <files mask="mcuxClExample_ELS_Helper.h"/>
        <files mask="mcuxClExample_ELS_Key_Helper.h"/>
        <files mask="mcuxClExample_Key_Helper.h"/>
        <files mask="mcuxClExample_RFC3394_Helper.h"/>
        <files mask="mcuxClExample_RNG_Helper.h"/>
        <files mask="mcuxClExample_Session_Helper.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_els.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_flow_protection.MIMXRT735S" name="els_pkc_test_flow_protection" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_flow_protection" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxCsslFlowProtection" type="src">
        <files mask="mcuxCsslFlowProtection_example.c"/>
      </source>
      <source relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include">
        <files mask="mcuxCsslExamples.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_flow_protection.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_hash_modes.MIMXRT735S" name="els_pkc_test_hash_modes" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_hash_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClHashModes" type="src">
        <files mask="mcuxClHashModes_sha1_longMsgOneshot_example.c"/>
        <files mask="mcuxClHashModes_sha1_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha1_streaming_example.c"/>
        <files mask="mcuxClHashModes_sha224_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha256_longMsgOneshot_example.c"/>
        <files mask="mcuxClHashModes_sha256_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha256_streaming_example.c"/>
        <files mask="mcuxClHashModes_sha384_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha512_224_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha512_256_oneshot_example.c"/>
        <files mask="mcuxClHashModes_sha512_256_streaming_example.c"/>
        <files mask="mcuxClHashModes_sha512_oneshot_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_hash_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_hmac.MIMXRT735S" name="els_pkc_test_hmac" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_hmac" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClHmac" type="src">
        <files mask="mcuxClHmac_Els_Oneshot_External_Key_example.c"/>
        <files mask="mcuxClHmac_Sw_Multipart_example.c"/>
        <files mask="mcuxClHmac_Sw_Oneshot_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_hmac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_key.MIMXRT735S" name="els_pkc_test_key" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_key" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClKey" type="src">
        <files mask="mcuxClKey_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_key.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_mac_modes.MIMXRT735S" name="els_pkc_test_mac_modes" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_mac_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.mac.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClMacModes" type="src">
        <files mask="mcuxClMacModes_Els_Cbcmac_Aes128_Oneshot_example.c"/>
        <files mask="mcuxClMacModes_Els_Cbcmac_Aes256_Multipart_PaddingZero_example.c"/>
        <files mask="mcuxClMacModes_Els_Cmac_Aes128_Oneshot_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_mac_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_memory.MIMXRT735S" name="els_pkc_test_memory" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_memory" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxCsslMemory" type="src">
        <files mask="mcuxCsslMemory_Clear_example.c"/>
        <files mask="mcuxCsslMemory_Compare_example.c"/>
        <files mask="mcuxCsslMemory_Copy_example.c"/>
        <files mask="mcuxCsslMemory_Set_example.c"/>
      </source>
      <source relative_path="examples/mcuxCsslMemory/inc" type="c_include">
        <files mask="mcuxCsslMemory_Examples.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_memory.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_random_modes.MIMXRT735S" name="els_pkc_test_random_modes" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_random_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClRandomModes" type="src">
        <files mask="mcuxClRandomModes_CtrDrbg_AES256_DRG3_example.c"/>
        <files mask="mcuxClRandomModes_CtrDrbg_AES256_DRG4_example.c"/>
        <files mask="mcuxClRandomModes_CtrDrbg_AES256_ELS_example.c"/>
        <files mask="mcuxClRandomModes_Different_Sessions_example.c"/>
        <files mask="mcuxClRandomModes_PatchMode_CtrDrbg_AES256_DRG3_example.c"/>
        <files mask="mcuxClRandomModes_TestMode_CtrDrbg_AES256_DRG4_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_random_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.examples_rsa.MIMXRT735S" name="els_pkc_test_rsa" brief="Component els_pkc_test" version="1.9.0" full_name="Component els_pkc_test" category="els_pkc/els_pkc_examples_rsa" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.session.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="examples/mcuxClRsa" type="src">
        <files mask="mcuxClRsa_sign_NoEncode_example.c"/>
        <files mask="mcuxClRsa_sign_pss_sha2_256_example.c"/>
        <files mask="mcuxClRsa_verify_NoVerify_example.c"/>
        <files mask="mcuxClRsa_verify_pssverify_sha2_256_example.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_examples_rsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslFlowProtection/inc" type="asm_include"/>
        <include_path relative_path="examples/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClExample/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClBuffer/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.flow_protection.MIMXRT735S" name="els_pkc.flow_protection" brief="Component els_pkc.flow_protection" version="1.9.0" full_name="Component els_pkc.flow_protection" category="els_pkc/els_pkc_flow_protection" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslFlowProtection/inc" type="c_include">
        <files mask="mcuxCsslFlowProtection.h"/>
        <files mask="mcuxCsslFlowProtection_Cfg.h"/>
        <files mask="mcuxCsslFlowProtection_FunctionIdentifiers.h"/>
        <files mask="mcuxCsslFlowProtection_Impl.h"/>
        <files mask="mcuxCsslFlowProtection_SecureCounter_Common.h"/>
        <files mask="mcuxCsslFlowProtection_SecureCounter_Local.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_flow_protection.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslFlowProtection/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslFlowProtection/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.glikey.MIMXRT735S" name="els-pkc glikey" brief="Component glikey" version="1.9.0" full_name="Component glikey" category="els_pkc/els_pkc_glikey" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.core.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClGlikey/src" type="src">
        <files mask="mcuxClGlikey.c"/>
      </source>
      <source relative_path="src/comps/mcuxClGlikey/inc" type="c_include">
        <files mask="mcuxClGlikey.h"/>
      </source>
      <source relative_path="src/comps/mcuxClGlikey/inc/internal" type="c_include">
        <files mask="mcuxClGlikey_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_glikey.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClGlikey/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClGlikey/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClGlikey/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClGlikey/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.hash.MIMXRT735S" name="els_pkc.hash" brief="Component els_pkc.hash" version="1.9.0" full_name="Component els_pkc.hash" category="els_pkc/els_pkc_hash" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.hashmodes.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClHash/src" type="src">
        <files mask="mcuxClHash_api_multipart_common.c"/>
        <files mask="mcuxClHash_api_multipart_compute.c"/>
        <files mask="mcuxClHash_api_oneshot_compute.c"/>
        <files mask="mcuxClHash_Internal.c"/>
      </source>
      <source relative_path="src/comps/mcuxClHash/inc" type="c_include">
        <files mask="mcuxClHash.h"/>
        <files mask="mcuxClHash_Constants.h"/>
        <files mask="mcuxClHash_Functions.h"/>
        <files mask="mcuxClHash_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClHash/inc/internal" type="c_include">
        <files mask="mcuxClHash_Internal.h"/>
        <files mask="mcuxClHash_Internal_Memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_hash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHash/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHash/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHash/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHash/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.hashmodes.MIMXRT735S" name="els_pkc.hashmodes" brief="Component els_pkc.hashmodes" version="1.9.0" full_name="Component els_pkc.hashmodes" category="els_pkc/els_pkc_hashmodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClHashModes/src" type="src">
        <files mask="mcuxClHashModes_Core_c_sha1.c"/>
        <files mask="mcuxClHashModes_Core_els_sha2.c"/>
        <files mask="mcuxClHashModes_Internal_c_sha1.c"/>
        <files mask="mcuxClHashModes_Internal_els_sha2.c"/>
      </source>
      <source relative_path="src/comps/mcuxClHashModes/inc" type="c_include">
        <files mask="mcuxClHashModes.h"/>
        <files mask="mcuxClHashModes_Algorithms.h"/>
        <files mask="mcuxClHashModes_Constants.h"/>
        <files mask="mcuxClHashModes_Functions.h"/>
      </source>
      <source relative_path="src/comps/mcuxClHashModes/inc/internal" type="c_include">
        <files mask="mcuxClHashModes_Core_c_sha1.h"/>
        <files mask="mcuxClHashModes_Core_els_sha2.h"/>
        <files mask="mcuxClHashModes_Internal.h"/>
        <files mask="mcuxClHashModes_Internal_els_sha2.h"/>
        <files mask="mcuxClHashModes_Internal_Memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_hashmodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHashModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHashModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHashModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHashModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.hmac.MIMXRT735S" name="els_pkc.hmac" brief="Component els_pkc.hmac" version="1.9.0" full_name="Component els_pkc.hmac" category="els_pkc/els_pkc_hmac" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.key.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.padding.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClHmac/src" type="src">
        <files mask="mcuxClHmac_Els.c"/>
        <files mask="mcuxClHmac_Functions.c"/>
        <files mask="mcuxClHmac_Helper.c"/>
        <files mask="mcuxClHmac_KeyTypes.c"/>
        <files mask="mcuxClHmac_Modes.c"/>
        <files mask="mcuxClHmac_Sw.c"/>
      </source>
      <source relative_path="src/comps/mcuxClHmac/inc" type="c_include">
        <files mask="mcuxClHmac.h"/>
        <files mask="mcuxClHmac_Constants.h"/>
        <files mask="mcuxClHmac_Functions.h"/>
        <files mask="mcuxClHmac_KeyTypes.h"/>
        <files mask="mcuxClHmac_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClHmac/inc/internal" type="c_include">
        <files mask="mcuxClHmac_Core_Functions_Els.h"/>
        <files mask="mcuxClHmac_Core_Functions_Sw.h"/>
        <files mask="mcuxClHmac_Internal_Functions.h"/>
        <files mask="mcuxClHmac_Internal_Memory.h"/>
        <files mask="mcuxClHmac_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_hmac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHmac/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClHmac/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHmac/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClHmac/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.key.MIMXRT735S" name="els_pkc.key" brief="Component els_pkc.key" version="1.9.0" full_name="Component els_pkc.key" category="els_pkc/els_pkc_key" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.ecc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClKey/src" type="src">
        <files mask="mcuxClKey.c"/>
        <files mask="mcuxClKey_Protection.c"/>
      </source>
      <source relative_path="src/comps/mcuxClKey/inc" type="c_include">
        <files mask="mcuxClKey.h"/>
        <files mask="mcuxClKey_Constants.h"/>
        <files mask="mcuxClKey_Functions.h"/>
        <files mask="mcuxClKey_ProtectionMechanisms.h"/>
        <files mask="mcuxClKey_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClKey/inc/internal" type="c_include">
        <files mask="mcuxClKey_Functions_Internal.h"/>
        <files mask="mcuxClKey_Internal.h"/>
        <files mask="mcuxClKey_Protection_Internal.h"/>
        <files mask="mcuxClKey_Types_Internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_key.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClKey/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.mac.MIMXRT735S" name="els_pkc.mac" brief="Component els_pkc.mac" version="1.9.0" full_name="Component els_pkc.mac" category="els_pkc/els_pkc_mac" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.hmac.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.padding.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClMac/src" type="src">
        <files mask="mcuxClMac.c"/>
      </source>
      <source relative_path="src/comps/mcuxClMac/inc" type="c_include">
        <files mask="mcuxClMac.h"/>
        <files mask="mcuxClMac_Constants.h"/>
        <files mask="mcuxClMac_Functions.h"/>
        <files mask="mcuxClMac_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClMac/inc/internal" type="c_include">
        <files mask="mcuxClMac_Ctx.h"/>
        <files mask="mcuxClMac_Internal_Constants.h"/>
        <files mask="mcuxClMac_Internal_Functions.h"/>
        <files mask="mcuxClMac_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_mac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMac/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMac/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMac/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMac/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.mac_modes.MIMXRT735S" name="els_pkc.mac_modes" brief="Component els_pkc.mac_modes" version="1.9.0" full_name="Component els_pkc.mac_modes" category="els_pkc/els_pkc_mac_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.mac.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClMacModes/src" type="src">
        <files mask="mcuxClMacModes_Common.c"/>
        <files mask="mcuxClMacModes_Common_Modes.c"/>
        <files mask="mcuxClMacModes_Els_Cbcmac.c"/>
        <files mask="mcuxClMacModes_Els_Cmac.c"/>
        <files mask="mcuxClMacModes_Els_Functions.c"/>
      </source>
      <source relative_path="src/comps/mcuxClMacModes/inc" type="c_include">
        <files mask="mcuxClMacModes.h"/>
        <files mask="mcuxClMacModes_Constants.h"/>
        <files mask="mcuxClMacModes_Functions.h"/>
        <files mask="mcuxClMacModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClMacModes/inc/internal" type="c_include">
        <files mask="mcuxClMacModes_Common_Algorithms.h"/>
        <files mask="mcuxClMacModes_Common_Constants.h"/>
        <files mask="mcuxClMacModes_Common_Functions.h"/>
        <files mask="mcuxClMacModes_Common_Memory.h"/>
        <files mask="mcuxClMacModes_Common_Types.h"/>
        <files mask="mcuxClMacModes_Common_Wa.h"/>
        <files mask="mcuxClMacModes_Els_Cbcmac.h"/>
        <files mask="mcuxClMacModes_Els_Cmac.h"/>
        <files mask="mcuxClMacModes_Els_Ctx.h"/>
        <files mask="mcuxClMacModes_Els_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_mac_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMacModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMacModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMacModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMacModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.math.MIMXRT735S" name="els_pkc.math" brief="Component els_pkc.math" version="1.9.0" full_name="Component els_pkc.math" category="els_pkc/els_pkc_math" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClMath/src" type="src">
        <files mask="mcuxClMath_ExactDivide.c"/>
        <files mask="mcuxClMath_ExactDivideOdd.c"/>
        <files mask="mcuxClMath_ExactDivideOdd_FUP.c"/>
        <files mask="mcuxClMath_ModExp_SqrMultL2R.c"/>
        <files mask="mcuxClMath_ModInv.c"/>
        <files mask="mcuxClMath_ModInv_FUP.c"/>
        <files mask="mcuxClMath_NDash.c"/>
        <files mask="mcuxClMath_NDash_FUP.c"/>
        <files mask="mcuxClMath_QDash.c"/>
        <files mask="mcuxClMath_QDash_FUP.c"/>
        <files mask="mcuxClMath_ReduceModEven.c"/>
        <files mask="mcuxClMath_SecModExp.c"/>
        <files mask="mcuxClMath_SecModExp_FUP.c"/>
        <files mask="mcuxClMath_Utils.c"/>
      </source>
      <source relative_path="src/comps/mcuxClMath/inc" type="c_include">
        <files mask="mcuxClMath.h"/>
        <files mask="mcuxClMath_ExactDivideOdd_FUP.h"/>
        <files mask="mcuxClMath_Functions.h"/>
        <files mask="mcuxClMath_ModInv_FUP.h"/>
        <files mask="mcuxClMath_NDash_FUP.h"/>
        <files mask="mcuxClMath_QDash_FUP.h"/>
        <files mask="mcuxClMath_SecModExp_FUP.h"/>
        <files mask="mcuxClMath_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClMath/inc/internal" type="c_include">
        <files mask="mcuxClMath_ExactDivideOdd_FUP.h"/>
        <files mask="mcuxClMath_Internal_ExactDivideOdd.h"/>
        <files mask="mcuxClMath_Internal_ModInv.h"/>
        <files mask="mcuxClMath_Internal_NDash.h"/>
        <files mask="mcuxClMath_Internal_QDash.h"/>
        <files mask="mcuxClMath_Internal_SecModExp.h"/>
        <files mask="mcuxClMath_Internal_Utils.h"/>
        <files mask="mcuxClMath_ModInv_FUP.h"/>
        <files mask="mcuxClMath_NDash_FUP.h"/>
        <files mask="mcuxClMath_QDash_FUP.h"/>
        <files mask="mcuxClMath_SecModExp_FUP.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_math.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMath/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMath/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMath/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMath/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.memory.MIMXRT735S" name="els_pkc.memory" brief="Component els_pkc.memory" version="1.9.0" full_name="Component els_pkc.memory" category="els_pkc/els_pkc_memory" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.param_integrity.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClMemory/src" type="src">
        <files mask="mcuxClMemory.c"/>
      </source>
      <source relative_path="src/comps/mcuxClMemory/inc" type="c_include">
        <files mask="mcuxClMemory.h"/>
        <files mask="mcuxClMemory_Clear.h"/>
        <files mask="mcuxClMemory_Constants.h"/>
        <files mask="mcuxClMemory_Copy.h"/>
        <files mask="mcuxClMemory_Copy_Reversed.h"/>
        <files mask="mcuxClMemory_Endianness.h"/>
        <files mask="mcuxClMemory_Set.h"/>
        <files mask="mcuxClMemory_Types.h"/>
        <files mask="mcuxClMemory_Xor.h"/>
      </source>
      <source relative_path="src/comps/mcuxClMemory/inc/internal" type="c_include">
        <files mask="mcuxClMemory_Internal.h"/>
      </source>
      <source relative_path="src/comps/mcuxCsslMemory/src" type="src">
        <files mask="mcuxCsslMemory_Clear.c"/>
        <files mask="mcuxCsslMemory_Compare.c"/>
        <files mask="mcuxCsslMemory_Copy.c"/>
        <files mask="mcuxCsslMemory_Set.c"/>
      </source>
      <source relative_path="src/comps/mcuxCsslMemory/inc" type="c_include">
        <files mask="mcuxCsslMemory.h"/>
        <files mask="mcuxCsslMemory_Clear.h"/>
        <files mask="mcuxCsslMemory_Compare.h"/>
        <files mask="mcuxCsslMemory_Constants.h"/>
        <files mask="mcuxCsslMemory_Copy.h"/>
        <files mask="mcuxCsslMemory_Set.h"/>
        <files mask="mcuxCsslMemory_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxCsslMemory/inc/internal" type="c_include">
        <files mask="mcuxCsslMemory_Internal_Compare_asm.h"/>
        <files mask="mcuxCsslMemory_Internal_Copy_asm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_memory.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClMemory/inc/internal" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslMemory/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslMemory/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClMemory/inc/internal" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslMemory/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslMemory/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca.MIMXRT735S" name="els_pkc.oscca" brief="Component els_pkc.oscca" version="1.9.0" full_name="Component els_pkc.oscca" category="els_pkc/els_pkc_oscca" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.crc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_aeadmodes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_ciphermodes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_macmodes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_pkc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_randommodes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_safo.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_sm2.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_sm3.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.oscca_sm4.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.signature.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.els_pkc.oscca_aeadmodes.MIMXRT735S" name="els_pkc.oscca_aeadmodes" brief="Component els_pkc.oscca_aeadmodes" version="1.9.0" full_name="Component els_pkc.oscca_aeadmodes" category="els_pkc/els_pkc_oscca_aeadmodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaAeadModes/src" type="src">
        <files mask="mcuxClOsccaAeadModes_Ccm_Common.c"/>
        <files mask="mcuxClOsccaAeadModes_Constants.c"/>
        <files mask="mcuxClOsccaAeadModes_EngineCcm.c"/>
        <files mask="mcuxClOsccaAeadModes_SkeletonCcm.c"/>
        <files mask="mcuxClOsccaAeadModes_SM4Ctr.c"/>
        <files mask="mcuxClOsccaAeadModes_SM4_Multipart.c"/>
        <files mask="mcuxClOsccaAeadModes_SM4_OneShot.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaAeadModes/inc" type="c_include">
        <files mask="mcuxClOsccaAeadModes.h"/>
        <files mask="mcuxClOsccaAeadModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaAeadModes/inc/internal" type="c_include">
        <files mask="mcuxClOsccaAeadModes_Internal_Algorithms.h"/>
        <files mask="mcuxClOsccaAeadModes_Internal_Functions.h"/>
        <files mask="mcuxClOsccaAeadModes_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_aeadmodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaAeadModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaAeadModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaAeadModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaAeadModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_ciphermodes.MIMXRT735S" name="els_pkc.oscca_ciphermodes" brief="Component els_pkc.oscca_ciphermodes" version="1.9.0" full_name="Component els_pkc.oscca_ciphermodes" category="els_pkc/els_pkc_oscca_ciphermodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaCipherModes/src" type="src">
        <files mask="mcuxClOsccaCipherModes_Constants.c"/>
        <files mask="mcuxClOsccaCipherModes_SM4_Crypt.c"/>
        <files mask="mcuxClOsccaCipherModes_SM4_Crypt_Internal.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaCipherModes/inc" type="c_include">
        <files mask="mcuxClOsccaCipherModes.h"/>
        <files mask="mcuxClOsccaCipherModes_Constants.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaCipherModes/inc/internal" type="c_include">
        <files mask="mcuxClOsccaCipherModes_Algorithms.h"/>
        <files mask="mcuxClOsccaCipherModes_Internal_Functions.h"/>
        <files mask="mcuxClOsccaCipherModes_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_ciphermodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaCipherModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaCipherModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaCipherModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaCipherModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_macmodes.MIMXRT735S" name="els_pkc.oscca_macmodes" brief="Component els_pkc.oscca_macmodes" version="1.9.0" full_name="Component els_pkc.oscca_macmodes" category="els_pkc/els_pkc_oscca_macmodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaMacModes/src" type="src">
        <files mask="mcuxClOsccaMacModes.c"/>
        <files mask="mcuxClOsccaMacModes_CBCMac.c"/>
        <files mask="mcuxClOsccaMacModes_CMac.c"/>
        <files mask="mcuxClOsccaMacModes_Helper.c"/>
        <files mask="mcuxClOsccaMacModes_KeyTypes.c"/>
        <files mask="mcuxClOsccaMacModes_Modes.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaMacModes/inc" type="c_include">
        <files mask="mcuxClOsccaMacModes.h"/>
        <files mask="mcuxClOsccaMacModes_Constants.h"/>
        <files mask="mcuxClOsccaMacModes_KeyTypes.h"/>
        <files mask="mcuxClOsccaMacModes_Modes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaMacModes/inc/internal" type="c_include">
        <files mask="mcuxClOsccaMacModes_Algorithms.h"/>
        <files mask="mcuxClOsccaMacModes_Ctx.h"/>
        <files mask="mcuxClOsccaMacModes_Internal_Functions.h"/>
        <files mask="mcuxClOsccaMacModes_SM4_CBCMAC.h"/>
        <files mask="mcuxClOsccaMacModes_SM4_CMAC.h"/>
        <files mask="mcuxClOsccaMacModes_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_macmodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaMacModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaMacModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaMacModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaMacModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_pkc.MIMXRT735S" name="els_pkc.oscca_pkc" brief="Component els_pkc.oscca_pkc" version="1.9.0" full_name="Component els_pkc.oscca_pkc" category="els_pkc/els_pkc_oscca_pkc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaPkc/src" type="src">
        <files mask="mcuxClOsccaPkc.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaPkc/inc" type="c_include">
        <files mask="mcuxClOsccaPkc.h"/>
        <files mask="mcuxClOsccaPkc_Functions.h"/>
        <files mask="mcuxClOsccaPkc_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaPkc/inc/internal" type="c_include">
        <files mask="mcuxClOsccaPkc_FupMacros.h"/>
        <files mask="mcuxClOsccaPkc_Macros.h"/>
        <files mask="mcuxClOsccaPkc_Operations.h"/>
        <files mask="mcuxClOsccaPkc_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_pkc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaPkc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaPkc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaPkc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaPkc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_randommodes.MIMXRT735S" name="els_pkc.oscca_randommodes" brief="Component els_pkc.oscca_randommodes" version="1.9.0" full_name="Component els_pkc.oscca_randommodes" category="els_pkc/els_pkc_oscca_randommodes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaRandomModes/src" type="src">
        <files mask="mcuxClOsccaRandomModes_OsccaMode.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaRandomModes/inc" type="c_include">
        <files mask="mcuxClOsccaRandomModes.h"/>
        <files mask="mcuxClOsccaRandomModes_Constants.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaRandomModes/inc/internal" type="c_include">
        <files mask="mcuxClOsccaRandomModes_Private_RNG.h"/>
        <files mask="mcuxClOsccaRandomModes_Private_Types.h"/>
        <files mask="mcuxClOsccaRandomModes_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_randommodes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaRandomModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaRandomModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaRandomModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaRandomModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_safo.MIMXRT735S" name="els_pkc.oscca_safo" brief="Component els_pkc.oscca_safo" version="1.9.0" full_name="Component els_pkc.oscca_safo" category="els_pkc/els_pkc_oscca_safo" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaSafo/src" type="src">
        <files mask="mcuxClOsccaSafo_Drv.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSafo/inc" type="c_include">
        <files mask="mcuxClOsccaSafo.h"/>
        <files mask="mcuxClOsccaSafo_Constants.h"/>
        <files mask="mcuxClOsccaSafo_Functions.h"/>
        <files mask="mcuxClOsccaSafo_SfrAccess.h"/>
        <files mask="mcuxClOsccaSafo_Sfr_Ctrl.h"/>
        <files mask="mcuxClOsccaSafo_Sfr_RegBank.h"/>
        <files mask="mcuxClOsccaSafo_Sfr_Status.h"/>
        <files mask="mcuxClOsccaSafo_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_safo.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSafo/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSafo/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_sm2.MIMXRT735S" name="els_pkc.oscca_sm2" brief="Component els_pkc.oscca_sm2" version="1.9.0" full_name="Component els_pkc.oscca_sm2" category="els_pkc/els_pkc_oscca_sm2" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.signature.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaSm2/src" type="src">
        <files mask="mcuxClOsccaSm2_Cipher_Crypt.c"/>
        <files mask="mcuxClOsccaSm2_ComputePrehash.c"/>
        <files mask="mcuxClOsccaSm2_Constants.c"/>
        <files mask="mcuxClOsccaSm2_CryptoUtils.c"/>
        <files mask="mcuxClOsccaSm2_Decrypt.c"/>
        <files mask="mcuxClOsccaSm2_Ecc.c"/>
        <files mask="mcuxClOsccaSm2_EccUtils.c"/>
        <files mask="mcuxClOsccaSm2_EncDec_Internal.c"/>
        <files mask="mcuxClOsccaSm2_Encrypt.c"/>
        <files mask="mcuxClOsccaSm2_FUP.c"/>
        <files mask="mcuxClOsccaSm2_GenerateKeyPair.c"/>
        <files mask="mcuxClOsccaSm2_Helper.c"/>
        <files mask="mcuxClOsccaSm2_InvertPrivateKey.c"/>
        <files mask="mcuxClOsccaSm2_Keyagreement.c"/>
        <files mask="mcuxClOsccaSm2_Keyagreement_SelfTest.c"/>
        <files mask="mcuxClOsccaSm2_KeyExchange.c"/>
        <files mask="mcuxClOsccaSm2_KeyTypes.c"/>
        <files mask="mcuxClOsccaSm2_SelfTest.c"/>
        <files mask="mcuxClOsccaSm2_Sign.c"/>
        <files mask="mcuxClOsccaSm2_Signature_Internal.c"/>
        <files mask="mcuxClOsccaSm2_Signature_PreHash.c"/>
        <files mask="mcuxClOsccaSm2_Signature_SelfTest.c"/>
        <files mask="mcuxClOsccaSm2_Verify.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm2/inc" type="c_include">
        <files mask="mcuxClOsccaSm2.h"/>
        <files mask="mcuxClOsccaSm2_Constants.h"/>
        <files mask="mcuxClOsccaSm2_Functions.h"/>
        <files mask="mcuxClOsccaSm2_FUP.h"/>
        <files mask="mcuxClOsccaSm2_KeyTypes.h"/>
        <files mask="mcuxClOsccaSm2_ModeConstants.h"/>
        <files mask="mcuxClOsccaSm2_SelfTest.h"/>
        <files mask="mcuxClOsccaSm2_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm2/inc/internal" type="c_include">
        <files mask="mcuxClOsccaSm2_Internal.h"/>
        <files mask="mcuxClOsccaSm2_Internal_ConstructTypes.h"/>
        <files mask="mcuxClOsccaSm2_Internal_CryptoUtils.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Ecc.h"/>
        <files mask="mcuxClOsccaSm2_Internal_FP.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Functions.h"/>
        <files mask="mcuxClOsccaSm2_Internal_FUP.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Hash.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Helper.h"/>
        <files mask="mcuxClOsccaSm2_Internal_PkcWaLayout.h"/>
        <files mask="mcuxClOsccaSm2_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_sm2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm2/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm2/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm2/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm2/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_sm3.MIMXRT735S" name="els_pkc.oscca_sm3" brief="Component els_pkc.oscca_sm3" version="1.9.0" full_name="Component els_pkc.oscca_sm3" category="els_pkc/els_pkc_oscca_sm3" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaSm3/src" type="src">
        <files mask="mcuxClOsccaSm3_core_sm3.c"/>
        <files mask="mcuxClOsccaSm3_internal_sm3.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm3/inc" type="c_include">
        <files mask="mcuxClOsccaSm3.h"/>
        <files mask="mcuxClOsccaSm3_Algorithms.h"/>
        <files mask="mcuxClOsccaSm3_Constants.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm3/inc/internal" type="c_include">
        <files mask="mcuxClOsccaSm3_Core_sm3.h"/>
        <files mask="mcuxClOsccaSm3_Internal.h"/>
        <files mask="mcuxClOsccaSm3_Internal_sm3.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_sm3.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm3/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm3/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm3/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm3/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.oscca_sm4.MIMXRT735S" name="els_pkc.oscca_sm4" brief="Component els_pkc.oscca_sm4" version="1.9.0" full_name="Component els_pkc.oscca_sm4" category="els_pkc/els_pkc_oscca_sm4" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClOsccaSm4/src" type="src">
        <files mask="mcuxClOsccaSm4_CommonOperations.c"/>
        <files mask="mcuxClOsccaSm4_Core.c"/>
        <files mask="mcuxClOsccaSm4_KeyTypes.c"/>
        <files mask="mcuxClOsccaSm4_LoadKey.c"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm4/inc" type="c_include">
        <files mask="mcuxClOsccaSm4.h"/>
        <files mask="mcuxClOsccaSm4_KeyTypes.h"/>
      </source>
      <source relative_path="src/comps/mcuxClOsccaSm4/inc/internal" type="c_include">
        <files mask="mcuxClOsccaSm4_Internal.h"/>
        <files mask="mcuxClOsccaSm4_Internal_Constants.h"/>
        <files mask="mcuxClOsccaSm4_Internal_Functions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_oscca_sm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm4/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm4/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm4/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClOsccaSm4/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.padding.MIMXRT735S" name="els_pkc.padding" brief="Component els_pkc.padding" version="1.9.0" full_name="Component els_pkc.padding" category="els_pkc/els_pkc_padding" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClPadding/src" type="src">
        <files mask="mcuxClPadding.c"/>
      </source>
      <source relative_path="src/comps/mcuxClPadding/inc" type="c_include">
        <files mask="mcuxClPadding.h"/>
        <files mask="mcuxClPadding_Constants.h"/>
        <files mask="mcuxClPadding_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClPadding/inc/internal" type="c_include">
        <files mask="mcuxClPadding_Functions_Internal.h"/>
        <files mask="mcuxClPadding_Internal.h"/>
        <files mask="mcuxClPadding_Types_Internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_padding.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPadding/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPadding/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPadding/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPadding/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.param_integrity.MIMXRT735S" name="els_pkc.param_integrity" brief="Component els_pkc.param_integrity" version="1.9.0" full_name="Component els_pkc.param_integrity" category="els_pkc/els_pkc_param_integrity" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxCsslParamIntegrity/src" type="src">
        <files mask="mcuxCsslParamIntegrity32.c"/>
      </source>
      <source relative_path="src/comps/mcuxCsslParamIntegrity/inc" type="c_include">
        <files mask="mcuxCsslParamIntegrity.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_param_integrity.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxCsslParamIntegrity/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxCsslParamIntegrity/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.pkc.MIMXRT735S" name="pkc" brief="Component pkc" version="1.9.0" full_name="Component pkc" category="els_pkc/els_pkc_pkc" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.ecc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.math.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.rsa.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClPkc/src" type="src">
        <files mask="mcuxClPkc_Calculate.c"/>
        <files mask="mcuxClPkc_ImportExport.c"/>
        <files mask="mcuxClPkc_Initialize.c"/>
        <files mask="mcuxClPkc_UPTRT.c"/>
      </source>
      <source relative_path="src/comps/mcuxClPkc/inc" type="c_include">
        <files mask="mcuxClPkc.h"/>
        <files mask="mcuxClPkc_Functions.h"/>
        <files mask="mcuxClPkc_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClPkc/inc/internal" type="c_include">
        <files mask="mcuxClPkc_FupMacros.h"/>
        <files mask="mcuxClPkc_ImportExport.h"/>
        <files mask="mcuxClPkc_Inline_Functions.h"/>
        <files mask="mcuxClPkc_Macros.h"/>
        <files mask="mcuxClPkc_Operations.h"/>
        <files mask="mcuxClPkc_Resource.h"/>
        <files mask="mcuxClPkc_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_pkc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPkc/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPkc/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPkc/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPkc/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.platform.mimxrt.MIMXRT735S" name="els_pkc_mimxrt" brief="Component els_pkc_mimxrt" version="1.9.0" full_name="Component els_pkc_mimxrt" category="els_pkc/els_pkc_platform" user_visible="true" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.glikey.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.trng.type_els.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/mimxrt" type="c_include">
        <files mask="platform_specific_headers.h"/>
        <files mask="mcuxClConfig.h"/>
        <files mask="mcux_els.h"/>
        <files mask="mcux_pkc.h"/>
      </source>
      <source relative_path="src/platforms/mimxrt/inc" type="c_include">
        <files mask="ip_css_constants.h"/>
        <files mask="ip_css_design_configuration.h"/>
        <files mask="ip_platform.h"/>
      </source>
      <source relative_path="src/platforms/mimxrt" type="src">
        <files mask="mcux_els.c"/>
        <files mask="mcux_pkc.c"/>
      </source>
      <source relative_path="includes/platform/mimxrt" type="c_include">
        <files mask="mcuxClAeadModes_MemoryConsumption.h"/>
        <files mask="mcuxClCipherModes_MemoryConsumption.h"/>
        <files mask="mcuxClEcc_MemoryConsumption.h"/>
        <files mask="mcuxClHash_MemoryConsumption.h"/>
        <files mask="mcuxClHashModes_MemoryConsumption.h"/>
        <files mask="mcuxClHmac_MemoryConsumption.h"/>
        <files mask="mcuxClKey_MemoryConsumption.h"/>
        <files mask="mcuxClMacModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaAeadModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaCipherModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaMacModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaRandomModes_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaSm2_MemoryConsumption.h"/>
        <files mask="mcuxClOsccaSm3_MemoryConsumption.h"/>
        <files mask="mcuxClRandomModes_MemoryConsumption.h"/>
        <files mask="mcuxClRsa_MemoryConsumption.h"/>
        <files mask="mcuxClSession_MemoryConsumption.h"/>
        <files mask="mcuxClSignature_MemoryConsumption.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_platform_mimxrt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/platforms/mimxrt" type="c_include"/>
        <include_path relative_path="src/platforms/mimxrt/inc" type="c_include"/>
        <include_path relative_path="includes/platform/mimxrt" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/platforms/mimxrt" type="asm_include"/>
        <include_path relative_path="src/platforms/mimxrt/inc" type="asm_include"/>
        <include_path relative_path="includes/platform/mimxrt" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.prng.MIMXRT735S" name="els_pkc.prng" brief="Component prng" version="1.9.0" full_name="Component prng" category="els_pkc/els_pkc_prng" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.ecc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.math.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.rsa.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClPrng/src" type="src">
        <files mask="mcuxClPrng_ELS.c"/>
      </source>
      <source relative_path="src/comps/mcuxClPrng/inc/internal" type="c_include">
        <files mask="mcuxClPrng_Internal.h"/>
        <files mask="mcuxClPrng_Internal_Constants.h"/>
        <files mask="mcuxClPrng_Internal_ELS.h"/>
        <files mask="mcuxClPrng_Internal_Functions.h"/>
        <files mask="mcuxClPrng_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_prng.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPrng/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPrng/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPrng/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPrng/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.psa_driver.MIMXRT735S" name="els_pkc_psa_driver" brief="Component els_pkc_psa_driver" version="1.9.0" full_name="Component els_pkc_psa_driver" category="els_pkc/els_pkc_psa_driver" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClPsaDriver/src" type="src">
        <files mask="mcuxClPsaDriver_Aead.c"/>
        <files mask="mcuxClPsaDriver_Cipher.c"/>
        <files mask="mcuxClPsaDriver_DER_functions.c"/>
        <files mask="mcuxClPsaDriver_export_public_key.c"/>
        <files mask="mcuxClPsaDriver_generate_ecp_key.c"/>
        <files mask="mcuxClPsaDriver_Hash.c"/>
        <files mask="mcuxClPsaDriver_Key.c"/>
        <files mask="mcuxClPsaDriver_Mac.c"/>
        <files mask="mcuxClPsaDriver_Rsa.c"/>
        <files mask="mcuxClPsaDriver_Sign.c"/>
        <files mask="mcuxClPsaDriver_UpdateKeyStatus.c"/>
        <files mask="mcuxClPsaDriver_Verify.c"/>
      </source>
      <source relative_path="src/comps/mcuxClPsaDriver/inc" type="c_include">
        <files mask="mcuxClPsaDriver.h"/>
        <files mask="mcuxClPsaDriver_Constants.h"/>
        <files mask="mcuxClPsaDriver_MemoryConsumption.h"/>
        <files mask="mcuxClPsaDriver_Oracle.h"/>
        <files mask="els_pkc_crypto_primitives.h"/>
        <files mask="els_pkc_crypto_composites.h"/>
      </source>
      <source relative_path="src/comps/mcuxClPsaDriver/inc/internal" type="c_include">
        <files mask="mcuxClPsaDriver_ExternalMacroWrappers.h"/>
        <files mask="mcuxClPsaDriver_Functions.h"/>
        <files mask="mcuxClPsaDriver_Internal.h"/>
        <files mask="mcuxClPsaDriver_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_psa_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPsaDriver/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClPsaDriver/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPsaDriver/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClPsaDriver/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.random.MIMXRT735S" name="els_pkc.random" brief="Component els_pkc.random" version="1.9.0" full_name="Component els_pkc.random" category="els_pkc/els_pkc_random" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.prng.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.random_modes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandom/src" type="src">
        <files mask="mcuxClRandom_DRBG.c"/>
        <files mask="mcuxClRandom_PRNG.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRandom/inc" type="c_include">
        <files mask="mcuxClRandom.h"/>
        <files mask="mcuxClRandom_Constants.h"/>
        <files mask="mcuxClRandom_Functions.h"/>
        <files mask="mcuxClRandom_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClRandom/inc/internal" type="c_include">
        <files mask="mcuxClRandom_Internal_Functions.h"/>
        <files mask="mcuxClRandom_Internal_Memory.h"/>
        <files mask="mcuxClRandom_Internal_Types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_random.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandom/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandom/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandom/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandom/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.random_modes.MIMXRT735S" name="els_pkc.random_modes" brief="Component els_pkc.random_modes" version="1.9.0" full_name="Component els_pkc.random_modes" category="els_pkc/els_pkc_random_modes" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.trng.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandomModes/src" type="src">
        <files mask="mcuxClRandomModes_CtrDrbg_Els.c"/>
        <files mask="mcuxClRandomModes_ElsMode.c"/>
        <files mask="mcuxClRandomModes_PatchMode.c"/>
        <files mask="mcuxClRandomModes_TestMode.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRandomModes/inc" type="c_include">
        <files mask="mcuxClRandomModes.h"/>
        <files mask="mcuxClRandomModes_Constants.h"/>
        <files mask="mcuxClRandomModes_Functions_PatchMode.h"/>
        <files mask="mcuxClRandomModes_Functions_TestMode.h"/>
      </source>
      <source relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include">
        <files mask="mcuxClRandomModes_Internal_SizeDefinitions.h"/>
        <files mask="mcuxClRandomModes_Private_CtrDrbg.h"/>
        <files mask="mcuxClRandomModes_Private_CtrDrbg_BlockCipher.h"/>
        <files mask="mcuxClRandomModes_Private_Drbg.h"/>
        <files mask="mcuxClRandomModes_Private_NormalMode.h"/>
        <files mask="mcuxClRandomModes_Private_PatchMode.h"/>
        <files mask="mcuxClRandomModes_Private_PrDisabled.h"/>
        <files mask="mcuxClRandomModes_Private_TestMode.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_random_modes.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.random_modes_ctr.MIMXRT735S" name="els_pkc.random_modes_ctr" brief="Component els_pkc.random_modes_ctr" version="1.9.0" full_name="Component els_pkc.random_modes_ctr" category="els_pkc/els_pkc_random_modes_ctr" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.aes.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.trng.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandomModes/src" type="src">
        <files mask="mcuxClRandomModes_CtrDrbg.c"/>
        <files mask="mcuxClRandomModes_CtrDrbg_PrDisabled.c"/>
        <files mask="mcuxClRandomModes_NormalMode.c"/>
        <files mask="mcuxClRandomModes_PrDisabled.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_random_modes_ctr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.random_modes_hmacdrbg.MIMXRT735S" name="els_pkc.random_modes_hmacdrbg" brief="Component els_pkc.random_modes_hmacdrbg" version="1.9.0" full_name="Component els_pkc.random_modes_hmacdrbg" category="els_pkc/els_pkc_random_modes_hmacdrbg" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.random_modes.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandomModes/src" type="src">
        <files mask="mcuxClRandomModes_HmacDrbg.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include">
        <files mask="mcuxClRandomModes_Internal_HmacDrbg_Functions.h"/>
        <files mask="mcuxClRandomModes_Private_HmacDrbg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_random_modes_hmacdrbg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRandomModes/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.rsa.MIMXRT735S" name="els_pkc.rsa" brief="Component els_pkc.rsa" version="1.9.0" full_name="Component els_pkc.rsa" category="els_pkc/els_pkc_rsa" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.buffer.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRsa/src" type="src">
        <files mask="mcuxClRsa_ComputeD.c"/>
        <files mask="mcuxClRsa_ComputeD_FUP.c"/>
        <files mask="mcuxClRsa_GenerateProbablePrime.c"/>
        <files mask="mcuxClRsa_getMillerRabinTestIterations.c"/>
        <files mask="mcuxClRsa_KeyGeneration_Crt.c"/>
        <files mask="mcuxClRsa_KeyGeneration_Crt_FUP.c"/>
        <files mask="mcuxClRsa_KeyGeneration_Helper.c"/>
        <files mask="mcuxClRsa_KeyGeneration_Plain.c"/>
        <files mask="mcuxClRsa_Mgf1.c"/>
        <files mask="mcuxClRsa_MillerRabinTest.c"/>
        <files mask="mcuxClRsa_MillerRabinTest_FUP.c"/>
        <files mask="mcuxClRsa_ModInv.c"/>
        <files mask="mcuxClRsa_Pkcs1v15Encode_sign.c"/>
        <files mask="mcuxClRsa_Pkcs1v15Verify.c"/>
        <files mask="mcuxClRsa_PrivateCrt.c"/>
        <files mask="mcuxClRsa_PrivateCrt_FUP.c"/>
        <files mask="mcuxClRsa_PrivatePlain.c"/>
        <files mask="mcuxClRsa_PssEncode.c"/>
        <files mask="mcuxClRsa_PssVerify.c"/>
        <files mask="mcuxClRsa_Public.c"/>
        <files mask="mcuxClRsa_PublicExp.c"/>
        <files mask="mcuxClRsa_RemoveBlinding.c"/>
        <files mask="mcuxClRsa_RemoveBlinding_FUP.c"/>
        <files mask="mcuxClRsa_Sign.c"/>
        <files mask="mcuxClRsa_Sign_NoEMSA.c"/>
        <files mask="mcuxClRsa_TestPQDistance.c"/>
        <files mask="mcuxClRsa_TestPQDistance_FUP.c"/>
        <files mask="mcuxClRsa_TestPrimeCandidate.c"/>
        <files mask="mcuxClRsa_TestPrimeCandidate_FUP.c"/>
        <files mask="mcuxClRsa_Verify.c"/>
        <files mask="mcuxClRsa_VerifyE.c"/>
        <files mask="mcuxClRsa_Verify_NoEMSA.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRsa/inc" type="c_include">
        <files mask="mcuxClRsa.h"/>
        <files mask="mcuxClRsa_ComputeD_FUP.h"/>
        <files mask="mcuxClRsa_Constants.h"/>
        <files mask="mcuxClRsa_Functions.h"/>
        <files mask="mcuxClRsa_KeyGeneration_Crt_FUP.h"/>
        <files mask="mcuxClRsa_MillerRabinTest_FUP.h"/>
        <files mask="mcuxClRsa_PrivateCrt_FUP.h"/>
        <files mask="mcuxClRsa_RemoveBlinding_FUP.h"/>
        <files mask="mcuxClRsa_TestPQDistance_FUP.h"/>
        <files mask="mcuxClRsa_TestPrimeCandidate_FUP.h"/>
        <files mask="mcuxClRsa_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClRsa/inc/internal" type="c_include">
        <files mask="mcuxClRsa_ComputeD_FUP.h"/>
        <files mask="mcuxClRsa_Internal_Functions.h"/>
        <files mask="mcuxClRsa_Internal_Macros.h"/>
        <files mask="mcuxClRsa_Internal_MemoryConsumption.h"/>
        <files mask="mcuxClRsa_Internal_PkcDefs.h"/>
        <files mask="mcuxClRsa_Internal_PkcTypes.h"/>
        <files mask="mcuxClRsa_Internal_Types.h"/>
        <files mask="mcuxClRsa_KeyGeneration_Crt_FUP.h"/>
        <files mask="mcuxClRsa_MillerRabinTest_FUP.h"/>
        <files mask="mcuxClRsa_PrivateCrt_FUP.h"/>
        <files mask="mcuxClRsa_RemoveBlinding_FUP.h"/>
        <files mask="mcuxClRsa_TestPQDistance_FUP.h"/>
        <files mask="mcuxClRsa_TestPrimeCandidate_FUP.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_rsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.rsa_oaep.MIMXRT735S" name="els_pkc.rsa_oaep" brief="Component els_pkc.rsa_oaep" version="1.9.0" full_name="Component els_pkc.rsa_oaep" category="els_pkc/els_pkc_rsa_oaep" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.rsa.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRsa/src" type="src">
        <files mask="mcuxClRsa_KeyTypes.c"/>
        <files mask="mcuxClRsa_ModeConstructors.c"/>
        <files mask="mcuxClRsa_OaepDecode.c"/>
        <files mask="mcuxClRsa_OaepEncode.c"/>
        <files mask="mcuxClRsa_pkcs1v15Decode_decrypt.c"/>
        <files mask="mcuxClRsa_Pkcs1v15Encode_encrypt.c"/>
        <files mask="mcuxClRsa_Util_Decrypt.c"/>
        <files mask="mcuxClRsa_Util_Encrypt.c"/>
      </source>
      <source relative_path="src/comps/mcuxClRsa/inc" type="c_include">
        <files mask="mcuxClRsa_KeyTypes.h"/>
        <files mask="mcuxClRsa_ModeConstructors.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_rsa_oaep.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClRsa/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.session.MIMXRT735S" name="els_pkc.session" brief="Component els_pkc.session" version="1.9.0" full_name="Component els_pkc.session" category="els_pkc/els_pkc_session" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.random.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClSession/src" type="src">
        <files mask="mcuxClSession.c"/>
      </source>
      <source relative_path="src/comps/mcuxClSession/inc" type="c_include">
        <files mask="mcuxClSession.h"/>
        <files mask="mcuxClSession_Functions.h"/>
        <files mask="mcuxClSession_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClSession/inc/internal" type="c_include">
        <files mask="mcuxClSession_Internal.h"/>
        <files mask="mcuxClSession_Internal_EntryExit.h"/>
        <files mask="mcuxClSession_Internal_EntryExit_RegularReturn.h"/>
        <files mask="mcuxClSession_Internal_Functions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_session.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClSession/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClSession/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClSession/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClSession/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.signature.MIMXRT735S" name="els_pkc.signature" brief="Component els_pkc.signature" version="1.9.0" full_name="Component els_pkc.signature" category="els_pkc/els_pkc_signature" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.toolchain.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClSignature/src" type="src">
        <files mask="mcuxClSignature.c"/>
      </source>
      <source relative_path="src/comps/mcuxClSignature/inc" type="c_include">
        <files mask="mcuxClSignature.h"/>
        <files mask="mcuxClSignature_Constants.h"/>
        <files mask="mcuxClSignature_Functions.h"/>
        <files mask="mcuxClSignature_Types.h"/>
      </source>
      <source relative_path="src/comps/mcuxClSignature/inc/internal" type="c_include">
        <files mask="mcuxClSignature_Internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_signature.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClSignature/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClSignature/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClSignature/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClSignature/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.standalone_gdet.MIMXRT735S" name="els_pkc.standalone_gdet" brief="Component els_pkc standalone_gdet" version="1.9.0" full_name="Component els_pkc standalone_dget" category="els_pkc/els_pkc_standalone_gdetr" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els_header_only.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClEls/src" type="src">
        <files mask="mcuxClEls_GlitchDetector.c"/>
      </source>
      <source relative_path="src/comps/mcuxClEls/inc" type="c_include">
        <files mask="mcuxClEls_GlitchDetector.h"/>
      </source>
      <source relative_path="includes" type="c_include">
        <files mask="mcuxClEls_GlitchDetector.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_standalone_gdet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClEls/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.static_lib.mimxrt.MIMXRT735S" name="els_pkc static_lib MIMXRT" brief="Component els_pkc static_lib MIMXRT" version="1.9.0" full_name="Component els_pkc static_lib for MIMXRT" category="els_pkc/static_lib_mimxrt" user_visible="true" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <device_dependency value="MIMXRT735S"/>
      </dependencies>
      <source relative_path="static_library/mimxrt" type="lib">
        <files mask="libclns.a"/>
      </source>
      <source relative_path="static_library/mimxrt" type="other">
        <files mask="libclns.a.libsize"/>
        <files mask="libclns.a.objsize"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_static_lib_mimxrt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.trng.MIMXRT735S" name="els_pkc.trng" brief="Component els_pkc.trng" version="1.9.0" full_name="Component els_pkc.trng" category="els_pkc/els_pkc_trng" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.flow_protection.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.memory.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.pre_processor.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.secure_counter.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClTrng/inc/internal" type="c_include">
        <files mask="mcuxClTrng_Internal.h"/>
        <files mask="mcuxClTrng_Internal_Constants.h"/>
        <files mask="mcuxClTrng_Internal_Functions.h"/>
        <files mask="mcuxClTrng_Internal_SA_TRNG.h"/>
        <files mask="mcuxClTrng_Internal_Types.h"/>
        <files mask="mcuxClTrng_SfrAccess.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_trng.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.trng.type_els.MIMXRT735S" name="els_pkc.trng.type_els" brief="Component els_pkc.trng.type_els" version="1.9.0" full_name="Component els_pkc.trng.type_els" category="els_pkc/els_pkc_trng_type_els" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.els.MIMXRT735S"/>
          <component_dependency value="component.els_pkc.trng.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClRandomModes/src" type="src">
        <files mask="mcuxClRandomModes_NormalMode.c"/>
      </source>
      <source relative_path="src/comps/mcuxClTrng/src" type="src">
        <files mask="mcuxClTrng_ELS.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_trng_type_els.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.els_pkc.trng.type_rng4.MIMXRT735S" name="els_pkc.trng.type_rng4" brief="Component els_pkc.trng.type_rng4" version="1.9.0" full_name="Component els_pkc.trng.type_rng4" category="els_pkc/els_pkc_trng_type_rng4" user_visible="false" type="software_component" package_base_path="components/els_pkc" project_base_path="component/els_pkc">
      <dependencies>
        <all>
          <component_dependency value="component.els_pkc.trng.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="src/comps/mcuxClTrng/src" type="src">
        <files mask="mcuxClTrng_SA_TRNG.c"/>
      </source>
      <source relative_path="src/comps/mcuxClTrng/inc/internal" type="c_include">
        <files mask="mcuxClTrng_SfrAccess.h"/>
        <files mask="mcuxClTrng_Internal_SA_TRNG.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_els_pkc_trng_type_rng4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc" type="c_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc/internal" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc" type="asm_include"/>
        <include_path relative_path="src/comps/mcuxClTrng/inc/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ili9341.MIMXRT735S" name="ili9341" brief="Driver ili9341" version="1.0.2" full_name="Driver ili9341" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ili9341" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.psp27801.MIMXRT735S" name="psp27801" brief="Driver psp27801" version="1.0.0" full_name="Driver psp27801" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/psp27801" project_base_path="oled">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_psp27801.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_psp27801.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT735S" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT735S" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ak4497.MIMXRT735S" name="ak4497" brief="Driver ak4497" version="2.1.2" full_name="Driver ak4497" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/ak4497" project_base_path="codec">
      <defines>
        <define name="CODEC_AK4497_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.ak4497_adapter.MIMXRT735S"/>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ak4497.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ak4497.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42448.MIMXRT735S" name="cs42448" brief="Driver cs42448" version="2.0.1" full_name="Driver cs42448" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42448" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42448_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.cs42448_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42448.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42448.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMXRT735S" name="cs42888" brief="Driver cs42888" version="2.1.3" full_name="Driver cs42888" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42888_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.cs42888_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMXRT735S" name="dialog7212" brief="Driver dialog7212" version="2.3.1" full_name="Driver dialog7212" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <defines>
        <define name="CODEC_DA7212_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.da7212_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm186x.MIMXRT735S" name="pcm186x" brief="Driver pcm186x" version="2.0.1" full_name="Driver pcm186x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm186x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM186X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.pcm186x_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm186x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm186x.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm512x.MIMXRT735S" name="pcm512x" brief="Driver pcm512x" version="2.0.1" full_name="Driver pcm512x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm512x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM512X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.pcm512x_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm512x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm512x.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMXRT735S" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <defines>
        <define name="CODEC_SGTL5000_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.sgtl_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9896.MIMXRT735S" name="tfa9896" brief="Driver tfa9896" version="6.0.2" full_name="Driver tfa9896" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9896" project_base_path="codec">
      <defines>
        <define name="CODEC_TFA9896_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.tfa9896_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_buffer.h"/>
        <files mask="fsl_tfa9896.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hal_registers.c"/>
        <files mask="fsl_tfa9896.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="MIMXRT595595-EVK_TFA9896_SW.pdf"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx.MIMXRT735S" name="tfa9xxx" brief="Driver tfa9xxx" version="2.1.0" full_name="Driver tfa9xxx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <defines>
        <define name="CODEC_TFA9XXX_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.tfa9xxx_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_config_TFA9892N1.h"/>
        <files mask="tfa_config_TFA9894N1.h"/>
        <files mask="tfa_config_TFA9894N2.h"/>
        <files mask="fsl_tfa9xxx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tfa9xxx.c"/>
        <files mask="fsl_tfa9xxx_IMX.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="vas_tfa_drv" type="c_include">
        <files mask="config.h"/>
        <files mask="tfa2_container.h"/>
        <files mask="tfa2_dev.h"/>
        <files mask="tfa2_dsp_fw.h"/>
        <files mask="tfa2_haptic.h"/>
        <files mask="tfa9xxx_parameters.h"/>
        <files mask="tfa_haptic_fw_defs.h"/>
      </source>
      <source relative_path="vas_tfa_drv" type="src">
        <files mask="tfa2_container.c"/>
        <files mask="tfa2_dev.c"/>
        <files mask="tfa2_haptic.c"/>
        <files mask="tfa2_init.c"/>
        <files mask="tfa_container_crc32.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="vas_tfa_drv" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="vas_tfa_drv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx_hal.MIMXRT735S" name="tfa9xxx_hal" brief="Driver tfa9xxx_hal" version="2.1.0" full_name="Driver tfa9xxx_hal" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <component_dependency value="driver.tfa9xxx.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_device_hal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="tfa_device_hal.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8524.MIMXRT735S" name="wm8524" brief="Driver wm8524" version="2.1.1" full_name="Driver wm8524" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8524" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8524_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.wm8524_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMXRT735S" name="wm8904" brief="Driver wm8904" version="2.5.1" full_name="Driver wm8904" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8904_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.wm8904_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMXRT735S" name="wm8960" brief="Driver wm8960" version="2.2.4" full_name="Driver wm8960" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8960_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.wm8960_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMXRT735S" name="wm8962" brief="Driver wm8962" version="2.2.0" full_name="Driver wm8962" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8962" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8962_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT735S"/>
          <component_dependency value="component.codec_i2c.MIMXRT735S"/>
          <component_dependency value="component.wm8962_adapter.MIMXRT735S"/>
          <component_dependency value="driver.codec.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.audio_sai_edma_adapter.MIMXRT735S" name="sai_edma_adapter" brief="Component sai_edma_adapter" version="1.0.0" full_name="Component sai_edma_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/audio" project_base_path="component/audio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.sai_edma.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_audio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_sai.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT735S_CMSIS.MIMXRT735S" name="MIMXRT735S_CMSIS" brief="Device MIMXRT735S_cmsis" version="1.0.0" full_name="Device MIMXRT735S_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT735S" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT735S">
        <files mask="MIMXRT735S_cm33_core0.h"/>
        <files mask="MIMXRT735S_cm33_core0_COMMON.h"/>
        <files mask="MIMXRT735S_cm33_core0_features.h"/>
      </source>
      <source relative_path="periph" type="c_include">
        <files mask="PERI_ADC.h"/>
        <files mask="PERI_AHBSC0.h"/>
        <files mask="PERI_AHBSC3.h"/>
        <files mask="PERI_AHBSC4.h"/>
        <files mask="PERI_CACHE64_CTRL.h"/>
        <files mask="PERI_CACHE64_POLSEL.h"/>
        <files mask="PERI_CDOG.h"/>
        <files mask="PERI_CLKCTL0.h"/>
        <files mask="PERI_CLKCTL1.h"/>
        <files mask="PERI_CLKCTL2.h"/>
        <files mask="PERI_CLKCTL3.h"/>
        <files mask="PERI_CLKCTL4.h"/>
        <files mask="PERI_CMP.h"/>
        <files mask="PERI_CRC.h"/>
        <files mask="PERI_CTIMER.h"/>
        <files mask="PERI_DEBUG_MAILBOX.h"/>
        <files mask="PERI_DMA.h"/>
        <files mask="PERI_ELS.h"/>
        <files mask="PERI_FLEXIO.h"/>
        <files mask="PERI_FREQME.h"/>
        <files mask="PERI_FRO.h"/>
        <files mask="PERI_GDET.h"/>
        <files mask="PERI_GLIKEY.h"/>
        <files mask="PERI_GPIO.h"/>
        <files mask="PERI_I2S.h"/>
        <files mask="PERI_I3C.h"/>
        <files mask="PERI_INPUTMUX0.h"/>
        <files mask="PERI_INPUTMUX1.h"/>
        <files mask="PERI_IOPCTL0.h"/>
        <files mask="PERI_IOPCTL1.h"/>
        <files mask="PERI_IOPCTL2.h"/>
        <files mask="PERI_ITRC.h"/>
        <files mask="PERI_JPEGDEC.h"/>
        <files mask="PERI_JPGDECWRP.h"/>
        <files mask="PERI_LCDIF.h"/>
        <files mask="PERI_LPI2C.h"/>
        <files mask="PERI_LPSPI.h"/>
        <files mask="PERI_LPUART.h"/>
        <files mask="PERI_LP_FLEXCOMM.h"/>
        <files mask="PERI_MIPI_DSI_HOST.h"/>
        <files mask="PERI_MMU.h"/>
        <files mask="PERI_MRT.h"/>
        <files mask="PERI_MU.h"/>
        <files mask="PERI_NIC.h"/>
        <files mask="PERI_OCOTP.h"/>
        <files mask="PERI_OSC32KNP.h"/>
        <files mask="PERI_OSCCA.h"/>
        <files mask="PERI_OSTIMER.h"/>
        <files mask="PERI_PDM.h"/>
        <files mask="PERI_PINT.h"/>
        <files mask="PERI_PKC.h"/>
        <files mask="PERI_PMC.h"/>
        <files mask="PERI_PNGDEC.h"/>
        <files mask="PERI_PUF.h"/>
        <files mask="PERI_PVTS.h"/>
        <files mask="PERI_ROMCP.h"/>
        <files mask="PERI_RSTCTL0.h"/>
        <files mask="PERI_RSTCTL1.h"/>
        <files mask="PERI_RSTCTL2.h"/>
        <files mask="PERI_RSTCTL3.h"/>
        <files mask="PERI_RSTCTL4.h"/>
        <files mask="PERI_RTC.h"/>
        <files mask="PERI_SCT.h"/>
        <files mask="PERI_SDADC.h"/>
        <files mask="PERI_SEMA42.h"/>
        <files mask="PERI_SLEEPCON0.h"/>
        <files mask="PERI_SLEEPCON1.h"/>
        <files mask="PERI_SYSCON0.h"/>
        <files mask="PERI_SYSCON1.h"/>
        <files mask="PERI_SYSCON2.h"/>
        <files mask="PERI_SYSCON3.h"/>
        <files mask="PERI_SYSCON4.h"/>
        <files mask="PERI_SYSPM.h"/>
        <files mask="PERI_TRNG.h"/>
        <files mask="PERI_USB.h"/>
        <files mask="PERI_USBHSDCD.h"/>
        <files mask="PERI_USBNC.h"/>
        <files mask="PERI_USBPHY.h"/>
        <files mask="PERI_USDHC.h"/>
        <files mask="PERI_UTICK.h"/>
        <files mask="PERI_WWDT.h"/>
        <files mask="PERI_XCACHE.h"/>
        <files mask="PERI_XSPI.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core1_MIMXRT735S">
        <files mask="MIMXRT735S_cm33_core1.h"/>
        <files mask="MIMXRT735S_cm33_core1_COMMON.h"/>
        <files mask="MIMXRT735S_cm33_core1_features.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="periph" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="periph" type="asm_include"/>
        <include_path relative_path="../periph" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT735S_system.MIMXRT735S" name="MIMXRT735S_system" brief="Device MIMXRT735S_system" version="1.0.0" full_name="Device MIMXRT735S_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT735S" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT735S_CMSIS.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src" device_cores="cm33_core0_MIMXRT735S">
        <files mask="system_MIMXRT735S_cm33_core0.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT735S">
        <files mask="system_MIMXRT735S_cm33_core0.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_core1_MIMXRT735S">
        <files mask="system_MIMXRT735S_cm33_core1.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core1_MIMXRT735S">
        <files mask="system_MIMXRT735S_cm33_core1.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MIMXRT735S" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="6.1.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm33_core0_MIMXRT735S"/>
            <device_core_dependency value="cm33_core1_MIMXRT735S"/>
          </any_of>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source compiler="compiler_armclang" relative_path="./" type="c_include">
        <files mask="cmsis_armclang.h"/>
      </source>
      <source compiler="compiler_armclang" relative_path="m-profile" type="c_include">
        <files mask="cmsis_armclang_m.h"/>
      </source>
      <source compiler="compiler_armclang compiler_gcc compiler_iar" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source compiler="compiler_iar" relative_path="m-profile" type="c_include">
        <files mask="cmsis_iccarm_m.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="m-profile" type="c_include">
        <files mask="cmsis_gcc_m.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="core_cm33.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="armv8m_mpu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="m-profile" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="m-profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX.MIMXRT735S" name="CMSIS_RTOS2_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <defines>
        <define name="CMSIS_device_header" value="'&quot;fsl_device_registers.h&quot;'"/>
        <define name="RTE_COMPONENTS_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT735S"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_delay.c"/>
        <files mask="rtx_evflags.c"/>
        <files mask="rtx_evr.c"/>
        <files mask="rtx_kernel.c"/>
        <files mask="rtx_memory.c"/>
        <files mask="rtx_mempool.c"/>
        <files mask="rtx_msgqueue.c"/>
        <files mask="rtx_mutex.c"/>
        <files mask="rtx_semaphore.c"/>
        <files mask="rtx_system.c"/>
        <files mask="rtx_thread.c"/>
        <files mask="rtx_timer.c"/>
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source relative_path="Source" type="src" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="os_systick.c"/>
      </source>
      <source toolchain="mdk armgcc mcuxpresso" relative_path="RTX/Source/GCC" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="irq_armv8mml.S"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Source/IAR" type="asm_include" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S">
        <files mask="irq_armv8mml.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX_LIB.MIMXRT735S" name="CMSIS_RTOS2_RTX5_Library" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT735S"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT735S"/>
          <device_dependency value="MIMXRT735S"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="RTX_V8MMF.a"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="RTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" project_relative_path="./" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true" tz="true">
        <files mask="RTX_V8MMF.a"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="RTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" type="lib" device_cores="cm33_core0_MIMXRT735S cm33_core1_MIMXRT735S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX_LIB.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Source" type="asm_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="RISCV_Include_Core.MIMXRT735S" name="RISCV Core Headers" brief="Core headers for RISCV cores" version="1.0.0" full_name="Core headers for RISCV cores" category="Board Support/SDK Project Template" user_visible="true" type="other" package_base_path="arch/riscv/headers" project_base_path="riscv">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT735S"/>
          <device_core_dependency value="ezhv_MIMXRT735S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_riscv.h"/>
        <files mask="core_zv2116.h"/>
        <files mask="riscv_asm.h"/>
        <files mask="riscv_barrier.h"/>
        <files mask="riscv_csr.h"/>
        <files mask="riscv_ezhv_blc.h"/>
        <files mask="riscv_ezhv_dbiu.h"/>
        <files mask="riscv_ezhv_em.h"/>
        <files mask="riscv_ezhv_gpio.h"/>
        <files mask="riscv_interrupt.h"/>
        <files mask="riscv_types.h"/>
        <files mask="riscv_xzbf.h"/>
        <files mask="riscv_xzbranch.h"/>
        <files mask="riscv_xzdspv.h"/>
        <files mask="riscv_xzezhv.h"/>
        <files mask="riscv_xzmsg.h"/>
        <files mask="core_riscv.h"/>
        <files mask="riscv_asm.h"/>
        <files mask="riscv_barrier.h"/>
        <files mask="riscv_csr.h"/>
        <files mask="riscv_interrupt.h"/>
        <files mask="riscv_types.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
