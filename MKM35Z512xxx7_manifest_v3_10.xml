<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MKM35Z512xxx7" name="MKM35Z512xxx7" brief="This is SDK version 2.12.0 manifest file. It describes the content of the MKM35Z512xxx7 and additional settings for tools that support SDK version 2.12.0" format_version="3.10" api_version="2.0.0" configuration="ba7d9731e11472ad6c637581960d2d61" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.10.xsd">
  <!--Timestamp (UTC): 2022-07-15 12:44:00.980053-->
  <!--This manifest is generated based on sdk repo commit: 45d71c921a1dd3e0403549aa377535344ed9bc97-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <ksdk id="MCUXpresso2120" name="MCUXpresso2120" version="2.12.0" revision="epluginsite611 2022-07-14"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.6.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.6.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="twrkm35z75m" name="TWR-KM35Z75M" href="https://www.nxp.com/pip/TWR-KM35Z75M" version="1.0.0" package="MKM35Z512VLQ7">
      <description>Modular Development Platform for Kinetis MKM35Z7 MCUs</description>
      <image path="boards/twrkm35z75m" type="image">
        <files mask="twrkm35z75m.png"/>
      </image>
      <examples>
        <example id="twrkm35z75m_adc16_interrupt" name="adc16_interrupt" brief="The adc16_interrupt example shows how to use interrupt with ADC16 driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the ADC16'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC interrupt would be asserted once the conversion is completed. In ADC ISR, the conversion completed flag would be cleared by reading the conversion result value. Also, the conversion result value is stored, and the ISR counter is increased. These information would be printed when the execution return to the main loop.The point is that the ADC16 interrupt configuration is set when configuring the ADC16's conversion channel. When in software trigger mode, the conversion would be launched by the operation of configuring channel, just like writing aconversion command. So if user wants to generate the interrupt every time the conversion is completed, the channel's configuration with enabling interrupt setting would be used for each conversion." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc16" path="boards/twrkm35z75m/driver_examples/adc16/interrupt">
          <external path="boards/twrkm35z75m/driver_examples/adc16/interrupt" type="xml">
            <files mask="adc16_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_adc16_low_power" name="adc16_low_power" brief="The ADC Low Power demo application demonstrates the usage of the ADC peripheral while in a low power mode. Themicrocontroller is first set to very low power stop (VLPS) mode. Every 500 ms, an interrupt wakes up the ADC module andreads the current temperature of the microcontroller. While the temperature remains within boundaries, both LEDs are on.If the core temperature is higher or lower than average, the LEDs change state respectively." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/adc16_low_power">
          <external path="boards/twrkm35z75m/demo_apps/adc16_low_power" type="xml">
            <files mask="adc16_low_power_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_adc16_low_power_async_dma" name="adc16_low_power_async_dma" brief="The ADC Low Power Async DMA demo application demonstrates the usage of the ADC and DMA peripheral while in a low power mode. Themicrocontroller is first set to very low power stop (VLPS) mode. Every 100 ms, low power timer trigger the ADC module convertvalue on ADC channel. After 16 times(1,6s) the DMA transfer finish interrupt wake up the CPU to process sampled data, print result touser and toggle LED." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/adc16_low_power_async_dma">
          <external path="boards/twrkm35z75m/demo_apps/adc16_low_power_async_dma" type="xml">
            <files mask="adc16_low_power_async_dma_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_adc16_low_power_peripheral" name="adc16_low_power_peripheral" brief="The ADC Low Power demo application demonstrates the usage of the ADC peripheral while in a low power mode. Themicrocontroller is first set to very low power stop (VLPS) mode. Every 500 ms, an interrupt wakes up the ADC module andreads the current temperature of the microcontroller. While the temperature remains within boundaries, both LEDs are on.If the core temperature is higher or lower than average, the LEDs change state respectively. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/adc16_low_power_peripheral">
          <external path="boards/twrkm35z75m/demo_apps/adc16_low_power_peripheral" type="xml">
            <files mask="adc16_low_power_peripheral_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_adc16_polling" name="adc16_polling" brief="The adc16_polling example shows the simplest way to use ADC16 driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the ADC16'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the conversion completed flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement.The auto-calibration is not essential but strongly recommended. It can help to adjust the converter itself and improvethe ADC16's performance." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc16" path="boards/twrkm35z75m/driver_examples/adc16/polling">
          <external path="boards/twrkm35z75m/driver_examples/adc16/polling" type="xml">
            <files mask="adc16_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_adc16_potentiometer" name="adc16_potentiometer" brief="The ADC potentiometer demo application demonstrates how to read the analog value from a hardware potentiometer via theADC peripheral." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/adc16_potentiometer">
          <external path="boards/twrkm35z75m/demo_apps/adc16_potentiometer" type="xml">
            <files mask="adc16_potentiometer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_afe_interrupt" name="afe_interrupt" brief="The AFE Example project is a demonstration program that uses the KSDK software.In this example, the AFE module samples the voltage difference of the EXT_SD_ADP0 and EXT_SD_ADM0 pins." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/afe" path="boards/twrkm35z75m/driver_examples/afe/interrupt">
          <external path="boards/twrkm35z75m/driver_examples/afe/interrupt" type="xml">
            <files mask="afe_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_afe_polling" name="afe_polling" brief="The AFE Example project is a demonstration program that uses the KSDK software.In this example, the AFE module samples the voltage difference of the EXT_SD_ADP0 and EXT_SD_ADM0 pins." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/afe" path="boards/twrkm35z75m/driver_examples/afe/polling">
          <external path="boards/twrkm35z75m/driver_examples/afe/polling" type="xml">
            <files mask="afe_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_afe_qtimer" name="afe_qtimer" brief="The AFE Example project is a demonstration program that uses the KSDK software.In this case the example provide two functions. Measure the voltage difference two pin of thechannel 2 and 3. And monitor AC frequency on two pins of channel 2." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/afe_qtimer">
          <external path="boards/twrkm35z75m/demo_apps/afe_qtimer" type="xml">
            <files mask="afe_qtimer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmp_interrupt" name="cmp_interrupt" brief="The CMP interrupt Example shows how to use interrupt with CMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any CMP interrupt happens, the CMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/cmp" path="boards/twrkm35z75m/driver_examples/cmp/interrupt">
          <external path="boards/twrkm35z75m/driver_examples/cmp/interrupt" type="xml">
            <files mask="cmp_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmp_polling" name="cmp_polling" brief="The CMP polling Example shows the simplest way to use CMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/cmp" path="boards/twrkm35z75m/driver_examples/cmp/polling">
          <external path="boards/twrkm35z75m/driver_examples/cmp/polling" type="xml">
            <files mask="cmp_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_i2c_dma_b2b_transfer_master" name="cmsis_i2c_dma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/twrkm35z75m/cmsis_driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_dma_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_i2c_dma_b2b_transfer_slave" name="cmsis_i2c_dma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/twrkm35z75m/cmsis_driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_dma_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_i2c_int_b2b_transfer_master" name="cmsis_i2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/twrkm35z75m/cmsis_driver_examples/i2c/int_b2b_transfer/master">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/i2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_i2c_int_b2b_transfer_slave" name="cmsis_i2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/twrkm35z75m/cmsis_driver_examples/i2c/int_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/i2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_i2c_read_accel_value_transfer" name="cmsis_i2c_read_accel_value_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_read_accel_value example shows how to use CMSIS I2C driver to communicate with an i2c device: 1. How to use the i2c driver to read a i2c device who_am_I register. 2. How to use the i2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/twrkm35z75m/cmsis_driver_examples/i2c/read_accel_value_transfer">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/i2c/read_accel_value_transfer" type="xml">
            <files mask="cmsis_i2c_read_accel_value_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_spi_dma_b2b_transfer_master" name="cmsis_spi_dma_b2b_transfer_master" brief="The spi_dma_b2b_transfer example shows how to use SPI CMSIS driver in dma way:In this example , we need two boards, one board used as SPI master and another board used as SPI slave.The file 'spi_dma_b2b_transfer_master.c' includes the SPI master code.1. SPI master send/received data to/from SPI slave in dma . " toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/spi" path="boards/twrkm35z75m/cmsis_driver_examples/spi/dma_b2b_transfer/master">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/spi/dma_b2b_transfer/master" type="xml">
            <files mask="cmsis_spi_dma_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_spi_dma_b2b_transfer_slave" name="cmsis_spi_dma_b2b_transfer_slave" brief="The spi_dma_b2b_transfer example shows how to use SPI CMSIS driver in dma way:In this example , we need two boards, one board used as SPI master and another board used as SPI slave.The file 'spi_dma_b2b_transfer_slave.c' includes the SPI slave code.1. SPI master send/received data to/from SPI slave in dma . " toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/spi" path="boards/twrkm35z75m/cmsis_driver_examples/spi/dma_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/spi/dma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_spi_dma_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_spi_interrupt_b2b_transfer_master" name="cmsis_spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_b2b_transfer example shows how to use spi CMSIS driver in interrupt way:In this example , we need two boards, one board used as spi master and another board used as spi slave.The file 'spi_interrupt_b2b_transfer_master.c' includes the spi master code.This example uses the transactional API in spi driver.1. spi master send/received data to/from spi slave in interrupt . " toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/spi" path="boards/twrkm35z75m/cmsis_driver_examples/spi/interrupt_b2b_transfer/master">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/spi/interrupt_b2b_transfer/master" type="xml">
            <files mask="cmsis_spi_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_spi_interrupt_b2b_transfer_slave" name="cmsis_spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_b2b_transfer example shows how to use SPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as SPI master and another board used as SPI slave.The file 'spi_interrupt_b2b_transfer_slave.c' includes the SPI slave code.This example uses the transactional API in SPI driver.1. SPI master send/received data to/from SPI slave in interrupt . " toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/spi" path="boards/twrkm35z75m/cmsis_driver_examples/spi/interrupt_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/spi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="cmsis_spi_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_uart_dma_transfer" name="cmsis_uart_dma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/uart" path="boards/twrkm35z75m/cmsis_driver_examples/uart/dma_transfer">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/uart/dma_transfer" type="xml">
            <files mask="cmsis_uart_dma_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_cmsis_uart_interrupt_transfer" name="cmsis_uart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/uart" path="boards/twrkm35z75m/cmsis_driver_examples/uart/interrupt_transfer">
          <external path="boards/twrkm35z75m/cmsis_driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="cmsis_uart_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/crc" path="boards/twrkm35z75m/driver_examples/crc">
          <external path="boards/twrkm35z75m/driver_examples/crc" type="xml">
            <files mask="crc_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_dma_channel_link" name="dma_channel_link" brief="The DMA wrap transfer example is a simple demonstration program that uses the SDK software.It executes wrap transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example for debugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="boards/twrkm35z75m/driver_examples/dma/channel_link">
          <external path="boards/twrkm35z75m/driver_examples/dma/channel_link" type="xml">
            <files mask="dma_channel_link_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_dma_memory_to_memory" name="dma_memory_to_memory" brief="The DMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example for debugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="boards/twrkm35z75m/driver_examples/dma/memory_to_memory">
          <external path="boards/twrkm35z75m/driver_examples/dma/memory_to_memory" type="xml">
            <files mask="dma_memory_to_memory_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_dma_ring_buffer" name="dma_ring_buffer" brief="The DMA ring buffer example is a simple demonstration program that uses the SDK software.It demostrates how to implement ring buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example for debugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="boards/twrkm35z75m/driver_examples/dma/ring_buffer">
          <external path="boards/twrkm35z75m/driver_examples/dma/ring_buffer" type="xml">
            <files mask="dma_ring_buffer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_dma_wrap_transfer" name="dma_wrap_transfer" brief="The DMA wrap transfer example is a simple demonstration program that uses the SDK software.It executes wrap transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example for debugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="boards/twrkm35z75m/driver_examples/dma/wrap_transfer">
          <external path="boards/twrkm35z75m/driver_examples/dma/wrap_transfer" type="xml">
            <files mask="dma_wrap_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_ewm" name="ewm" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ewm" path="boards/twrkm35z75m/driver_examples/ewm">
          <external path="boards/twrkm35z75m/driver_examples/ewm" type="xml">
            <files mask="ewm_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_fmstr_example_any" name="fmstr_example_any" brief="FreeMASTER example fully configured by MCUXpresso ConfigTools. Serial communication is used by default, but it can be changed easily to CAN or other in the MCUXpresso Peripheral Tool. Also FreeMASTER driver features are configured graphically in this tool. The Pins and Clock Tool are used to configure pin multiplexers and clocks. Just like other FreeMASTER examples, the application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="mcuxpresso" compiler="compiler_gcc" category="FreeMASTER_examples" path="boards/twrkm35z75m/freemaster_examples/fmstr_any">
          <external path="boards/twrkm35z75m/freemaster_examples/fmstr_any" type="xml">
            <files mask="fmstr_example_any_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_fmstr_example_pdbdm" name="fmstr_example_pdbdm" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="mcuxpresso" compiler="compiler_gcc" category="FreeMASTER_examples" path="boards/twrkm35z75m/freemaster_examples/fmstr_pdbdm">
          <external path="boards/twrkm35z75m/freemaster_examples/fmstr_pdbdm" type="xml">
            <files mask="fmstr_example_pdbdm_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_fmstr_example_uart" name="fmstr_example_uart" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="mcuxpresso" compiler="compiler_gcc" category="FreeMASTER_examples" path="boards/twrkm35z75m/freemaster_examples/fmstr_uart">
          <external path="boards/twrkm35z75m/freemaster_examples/fmstr_uart" type="xml">
            <files mask="fmstr_example_uart_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_event">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_generic">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_hello">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_i2c" name="freertos_i2c" brief="The freertos_i2c example shows an application using RTOS tasks with I2C driver:The example supports 2 different connections:On board connection and board to board connection.With one board connection, 2 I2C instances of the same board are used. One i2c instance used as I2C master and another I2C instance used as I2C slave .    Default settings in freertos_i2c.c (in folder boards/&lt;board&gt;/rtos_examples/freertos_i2c) is applied.    Two tasks are created. One task is associated with an I2C master operation and another task deals with I2C slave operation.    1. I2C master task sends data to I2C slave task.    2. I2C master task reads data sent back from I2C slave task.    The transmit data and the receive data of both I2C master task and I2C slave task are printed out on terminal.With board to board connection, one I2C instance on one board is used as I2C master and the I2C instance on other board is used as I2C slave. Tasks are created to run on each board to handle I2C communication.    File freertos_i2c.c should have following definitions:    #define EXAMPLE_CONNECT_I2C BOARD_TO_BOARD    For board used as I2C master:        #define I2C_MASTER_SLAVE isMASTER    For board used as I2C slave:        #define I2C_MASTER_SLAVE isSLAVE" toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_i2c">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_i2c" type="xml">
            <files mask="freertos_i2c_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_lpuart" name="freertos_lpuart" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_lpuart">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_lpuart" type="xml">
            <files mask="freertos_lpuart_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_mutex">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_queue">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_sem">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_spi" name="freertos_spi" brief="The freertos_spi example shows how to use SPI driver in FreeRTOS:In this example , one spi instance is used as SPI master with blocking and another spi instance is used as SPI slave.1. SPI master sends/receives data using task blocking calls to/from SPI slave. (SPI Slave uses interrupt to receive/sendthe data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_spi">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_spi" type="xml">
            <files mask="freertos_spi_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_swtimer">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_tickless">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_tickless" type="xml">
            <files mask="freertos_tickless_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_freertos_uart" name="freertos_uart" brief="The UART example for FreeRTOS demonstrates the possibility to use the UART driver in the RTOS.The example uses single instance of UART IP and writes string into, then reads back chars.After every 4B received, these are sent back on UART." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/twrkm35z75m/rtos_examples/freertos_uart">
          <external path="boards/twrkm35z75m/rtos_examples/freertos_uart" type="xml">
            <files mask="freertos_uart_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_gpio_input_interrupt" name="gpio_input_interrupt" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio" path="boards/twrkm35z75m/driver_examples/gpio/input_interrupt">
          <external path="boards/twrkm35z75m/driver_examples/gpio/input_interrupt" type="xml">
            <files mask="gpio_input_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio" path="boards/twrkm35z75m/driver_examples/gpio/led_output">
          <external path="boards/twrkm35z75m/driver_examples/gpio/led_output" type="xml">
            <files mask="gpio_led_output_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/hello_world">
          <external path="boards/twrkm35z75m/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_i2c_dma_b2b_transfer_master" name="i2c_dma_b2b_transfer_master" brief="The i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/twrkm35z75m/driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/twrkm35z75m/driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="i2c_dma_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_i2c_dma_b2b_transfer_slave" name="i2c_dma_b2b_transfer_slave" brief="The i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/twrkm35z75m/driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="i2c_dma_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_i2c_interrupt_b2b_transfer_master" name="i2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/twrkm35z75m/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="boards/twrkm35z75m/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_i2c_interrupt_b2b_transfer_slave" name="i2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/twrkm35z75m/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_i2c_polling_b2b_transfer_master" name="i2c_polling_b2b_transfer_master" brief="The i2c_polling_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/twrkm35z75m/driver_examples/i2c/polling_b2b_transfer/master">
          <external path="boards/twrkm35z75m/driver_examples/i2c/polling_b2b_transfer/master" type="xml">
            <files mask="i2c_polling_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_i2c_polling_b2b_transfer_slave" name="i2c_polling_b2b_transfer_slave" brief="The i2c_polling_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/twrkm35z75m/driver_examples/i2c/polling_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/driver_examples/i2c/polling_b2b_transfer/slave" type="xml">
            <files mask="i2c_polling_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_i2c_read_accel_value_transfer" name="i2c_read_accel_value_transfer" brief="The i2c_read_accel_value example shows how to use I2C driver to communicate with an i2c device: 1. How to use the i2c driver to read a i2c device who_am_I register. 2. How to use the i2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/twrkm35z75m/driver_examples/i2c/read_accel_value_transfer">
          <external path="boards/twrkm35z75m/driver_examples/i2c/read_accel_value_transfer" type="xml">
            <files mask="i2c_read_accel_value_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_irtc" name="irtc" brief="The IRTC project is a simple demonstration program of the SDK IRTC driver.This example is a low power module that provides time keeping and calendaring functions and additionally providesprotection against tampering, protection against spurious memory/register updates and battery operation." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/irtc" path="boards/twrkm35z75m/driver_examples/irtc">
          <external path="boards/twrkm35z75m/driver_examples/irtc" type="xml">
            <files mask="irtc_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_led_blinky" name="led_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/led_blinky">
          <external path="boards/twrkm35z75m/demo_apps/led_blinky" type="xml">
            <files mask="led_blinky_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_log_bm" name="log_bm" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="mcuxpresso" compiler="compiler_gcc" category="component_examples" path="boards/twrkm35z75m/component_examples/log/bm">
          <external path="boards/twrkm35z75m/component_examples/log/bm" type="xml">
            <files mask="log_bm_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_log_freertos" name="log_freertos" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="mcuxpresso" compiler="compiler_gcc" category="component_examples" path="boards/twrkm35z75m/component_examples/log/freertos">
          <external path="boards/twrkm35z75m/component_examples/log/freertos" type="xml">
            <files mask="log_freertos_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_lptmr" name="lptmr" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lptmr" path="boards/twrkm35z75m/driver_examples/lptmr">
          <external path="boards/twrkm35z75m/driver_examples/lptmr" type="xml">
            <files mask="lptmr_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_lpuart_9bit_interrupt_transfer" name="lpuart_9bit_interrupt_transfer" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/twrkm35z75m/driver_examples/lpuart/9bit_interrupt_transfer">
          <external path="boards/twrkm35z75m/driver_examples/lpuart/9bit_interrupt_transfer" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_lpuart_dma_rb_transfer" name="lpuart_dma_rb_transfer" brief="The lpuart_dma ring buffer example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/twrkm35z75m/driver_examples/lpuart/dma_rb_transfer">
          <external path="boards/twrkm35z75m/driver_examples/lpuart/dma_rb_transfer" type="xml">
            <files mask="lpuart_dma_rb_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_lpuart_dma_transfer" name="lpuart_dma_transfer" brief="The lpuart_dma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/twrkm35z75m/driver_examples/lpuart/dma_transfer">
          <external path="boards/twrkm35z75m/driver_examples/lpuart/dma_transfer" type="xml">
            <files mask="lpuart_dma_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/twrkm35z75m/driver_examples/lpuart/interrupt">
          <external path="boards/twrkm35z75m/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/twrkm35z75m/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/twrkm35z75m/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/twrkm35z75m/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/twrkm35z75m/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/twrkm35z75m/driver_examples/lpuart/polling">
          <external path="boards/twrkm35z75m/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mbedtls_benchmark" name="mbedtls_benchmark" brief="The mbdedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="boards/twrkm35z75m/mbedtls_examples/mbedtls_benchmark">
          <external path="boards/twrkm35z75m/mbedtls_examples/mbedtls_benchmark" type="xml">
            <files mask="mbedtls_benchmark_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mbedtls_selftest" name="mbedtls_selftest" brief="The mbdedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="mcuxpresso" compiler="compiler_gcc" category="mbedtls_examples" path="boards/twrkm35z75m/mbedtls_examples/mbedtls_selftest">
          <external path="boards/twrkm35z75m/mbedtls_examples/mbedtls_selftest" type="xml">
            <files mask="mbedtls_selftest_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mcg_fee_blpe" name="mcg_fee_blpe" brief="The fee_bple example shows how to use MCG driver to change from FEE mode to BLPE mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to Fee mode from default reset mode    Change from FEE -&gt; FBE -&gt; BLPE    Change back BLPE -&gt; FBE -&gt; FEE    Get System clock in FEE mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/twrkm35z75m/driver_examples/mcg/fee_blpe">
          <external path="boards/twrkm35z75m/driver_examples/mcg/fee_blpe" type="xml">
            <files mask="mcg_fee_blpe_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mcg_fee_blpi" name="mcg_fee_blpi" brief="The fee_bpli example shows how to use MCG driver to change from FEE mode to BLPI mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to FEE mode from default reset mode    Change from FEE -&gt; FBI -&gt; BLPI    Change back BLPI -&gt; FBI -&gt; FEE    Get System clock in FEE mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/twrkm35z75m/driver_examples/mcg/fee_blpi">
          <external path="boards/twrkm35z75m/driver_examples/mcg/fee_blpi" type="xml">
            <files mask="mcg_fee_blpi_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mcg_fei_blpi" name="mcg_fei_blpi" brief="The fei_bpli example shows how to use MCG driver to change from FEI mode to BLPI mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to FEI mode from default reset mode    Change mode FEI -&gt; FBI -&gt; BLPI    Change back BLPE -&gt; FBI -&gt; FEI    Get System clock in FEI mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/twrkm35z75m/driver_examples/mcg/fei_blpi">
          <external path="boards/twrkm35z75m/driver_examples/mcg/fei_blpi" type="xml">
            <files mask="mcg_fei_blpi_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mcg_pee_blpe" name="mcg_pee_blpe" brief="The pee_bple example shows how to use MCG driver to change from PEE mode to BLPE mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to PEE mode from default reset mode    Change mode PEE -&gt; PBE -&gt; BLPE    Change back BLPE -&gt; PBE -&gt; PEE    Get System clock in PEE mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/twrkm35z75m/driver_examples/mcg/pee_blpe">
          <external path="boards/twrkm35z75m/driver_examples/mcg/pee_blpe" type="xml">
            <files mask="mcg_pee_blpe_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mcg_pee_blpi" name="mcg_pee_blpi" brief="The pee_bpli example shows how to use MCG driver to change from PEE mode to BLPI mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to PEE mode from default reset mode    Change mode PEE -&gt; PBE -&gt;FBE -&gt; FBI -&gt; BLPI    Change back BLPI -&gt; FBI -&gt; FBE -&gt; PBE -&gt; PEE    Get System clock in PEE mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/twrkm35z75m/driver_examples/mcg/pee_blpi">
          <external path="boards/twrkm35z75m/driver_examples/mcg/pee_blpi" type="xml">
            <files mask="mcg_pee_blpi_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mcg_pei_blpi" name="mcg_pei_blpi" brief="The pei_bpli example shows how to use MCG driver to change from PEI mode to BLPI mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to PEI mode from default reset mode    Change mode PEI -&gt; FBI -&gt; BLPI    Change back BLPI -&gt; FBI -&gt; PEI    Get System clock in PEI mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/twrkm35z75m/driver_examples/mcg/pei_blpi">
          <external path="boards/twrkm35z75m/driver_examples/mcg/pei_blpi" type="xml">
            <files mask="mcg_pei_blpi_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib1ph_test" name="meterlib1ph_test" brief="This example demonstrates use of the metering library in typical one-phase power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib1ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib1ph_test" type="xml">
            <files mask="meterlib1ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib1phkwh_test" name="meterlib1phkwh_test" brief="This example  demonstrates  use  of  the  metering  library  in  active  energy  one-phase  power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib1phkwh_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib1phkwh_test" type="xml">
            <files mask="meterlib1phkwh_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib1phrc_test" name="meterlib1phrc_test" brief="This example demonstrates use of the metering library in typical one-phase power meter application with Rogowski coil sensor." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib1phrc_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib1phrc_test" type="xml">
            <files mask="meterlib1phrc_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib2ph_test" name="meterlib2ph_test" brief="This example demonstrates use of the metering library in typical two-phase power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib2ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib2ph_test" type="xml">
            <files mask="meterlib2ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib2phkwh_test" name="meterlib2phkwh_test" brief="This  example  demonstrates  use  of  the  metering  library  in  active  energy  two-phase  power  meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib2phkwh_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib2phkwh_test" type="xml">
            <files mask="meterlib2phkwh_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib2phrc_test" name="meterlib2phrc_test" brief="This example demonstrates use of the metering library in typical two-phase power meter application with Rogowski coil sensor." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib2phrc_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib2phrc_test" type="xml">
            <files mask="meterlib2phrc_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib3ph_test" name="meterlib3ph_test" brief="This example demonstrates use of the metering library in typical polyphase power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib3ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib3ph_test" type="xml">
            <files mask="meterlib3ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib3phkwh_test" name="meterlib3phkwh_test" brief="This  example  demonstrates  use  of  the  metering  library  in  active  energy  polyphase  power  meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib3phkwh_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib3phkwh_test" type="xml">
            <files mask="meterlib3phkwh_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlib3phrc_test" name="meterlib3phrc_test" brief="This example demonstrates use of the metering library in typical polyphase power meter application with Rogowski coil sensor." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlib3phrc_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlib3phrc_test" type="xml">
            <files mask="meterlib3phrc_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlibFFT1ph_test" name="meterlibFFT1ph_test" brief="This  example  demonstrates  use  of  the  FFT  metering  library  in  the  typical  single-phase  power  meter application with  proportional  current sensor and  with  the  S/W  phase  shift  correction.  AFE  conversion mode (single/continuous) may be selected by the 'AFE_MODE' constant. Number of the FFT samples is set to 32, number of output harmonics is 16 then." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlibFFT1ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlibFFT1ph_test" type="xml">
            <files mask="meterlibFFT1ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlibFFT2ph_test" name="meterlibFFT2ph_test" brief="This  example  demonstrates  use  of  the  FFT  metering  library  in  the  typical  two-phase  power  meter application with derivative current sensor without the S/W phase shift correction. AFE conversion mode (single/continuous) may be selected by the 'AFE_MODE' constant. Number of the FFT samples is set to 64, number of output harmonics is 32 then." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlibFFT2ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlibFFT2ph_test" type="xml">
            <files mask="meterlibFFT2ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterlibFFT3ph_test" name="meterlibFFT3ph_test" brief="This  example  demonstrates  use  of  the  FFT  metering  library  in  the  typical  three-phase  power  meter application with  proportional  current  sensor  and  with  the  S/W  phase  shift  correction.  AFE  conversion mode (single/continuous) may be selected by the 'AFE_MODE' constant. Number of the FFT samples is set to 64, number of output harmonics is 32 then. This example allows to measure the sense of rotation of the 3-ph mains." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterlibFFT3ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterlibFFT3ph_test" type="xml">
            <files mask="meterlibFFT3ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterliblp1ph_test" name="meterliblp1ph_test" brief="This  example  demonstrates  use  of  the  low  power  metering  library  in  typical  one-phase  power  meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterliblp1ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterliblp1ph_test" type="xml">
            <files mask="meterliblp1ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterliblp1phkwh_test" name="meterliblp1phkwh_test" brief="This example demonstrates use of the low power metering library in active energy one-phase power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterliblp1phkwh_test">
          <external path="boards/twrkm35z75m/demo_apps/meterliblp1phkwh_test" type="xml">
            <files mask="meterliblp1phkwh_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterliblp2ph_test" name="meterliblp2ph_test" brief="This example demonstrates use of the low power metering library in typical two-phase power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterliblp2ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterliblp2ph_test" type="xml">
            <files mask="meterliblp2ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterliblp2phkwh_test" name="meterliblp2phkwh_test" brief="This example demonstrates use of the low power metering library in active energy two-phase power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterliblp2phkwh_test">
          <external path="boards/twrkm35z75m/demo_apps/meterliblp2phkwh_test" type="xml">
            <files mask="meterliblp2phkwh_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterliblp3ph_test" name="meterliblp3ph_test" brief="This example demonstrates use of the low power metering library in active energy polyphase power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterliblp3ph_test">
          <external path="boards/twrkm35z75m/demo_apps/meterliblp3ph_test" type="xml">
            <files mask="meterliblp3ph_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_meterliblp3phkwh_test" name="meterliblp3phkwh_test" brief="This example demonstrates use of the low power metering library in active energy polyphase power meter application." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/meterliblp3phkwh_test">
          <external path="boards/twrkm35z75m/demo_apps/meterliblp3phkwh_test" type="xml">
            <files mask="meterliblp3phkwh_test_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mmau" name="mmau" brief="The mmau project is a simple demonstration program that use the MMAU driver:How to use calculate functions to create sine function for the arithmetic computation.In this example, use calculate functions to compute sinusoidal function for various angles." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mmau" path="boards/twrkm35z75m/driver_examples/mmau">
          <external path="boards/twrkm35z75m/driver_examples/mmau" type="xml">
            <files mask="mmau_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_mmcau" name="mmcau" brief="Memory-Mapped Cryptographic Acceleration Unit (MMCAU)This project is a demonstration program that uses the KSDK software for encryption/decryption sampledata using AES-CBC, DES3-CBC and Hash algorithms MD5, SHA1 and SHA256." toolchain="mcuxpresso" compiler="compiler_gcc" category="mmcau_examples" path="boards/twrkm35z75m/mmcau_examples/mmcau_api">
          <external path="boards/twrkm35z75m/mmcau_examples/mmcau_api" type="xml">
            <files mask="mmcau_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_pdb_adc16_trigger" name="pdb_adc16_trigger" brief="The pdb_adc16_trigger example shows how to use the PDB to generate a ADC trigger.Based on the basic counter, to use the ADC trigger, just to enable the ADC trigger's &quot;milestone&quot; and set the user-defined value for it.After the PDB counter is triggered to start, when the counter pass the &quot;milestone&quot;, the ADC's Pre-Trigger would begenerated and sent to the ADC module.In this example, the ADC16 is configured with hardware trigger and conversion complete interrupt enabled.Once it gets the trigger from the PDB, the conversion goes, then the ISR would be executed." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdb" path="boards/twrkm35z75m/driver_examples/pdb/adc16_trigger">
          <external path="boards/twrkm35z75m/driver_examples/pdb/adc16_trigger" type="xml">
            <files mask="pdb_adc16_trigger_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_pdb_delay_interrupt" name="pdb_delay_interrupt" brief="The pdb_delay_interrupt example show how to use the PDB as a general programmable interrupt timer.The PDB is triggered by software, and other external triggers are generated from PDB in this project,so that user can see just a general counter is working with interrupt." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdb" path="boards/twrkm35z75m/driver_examples/pdb/delay_interrupt">
          <external path="boards/twrkm35z75m/driver_examples/pdb/delay_interrupt" type="xml">
            <files mask="pdb_delay_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_pflash" name="pflash" brief="The pflash example shows how to use flash driver to operate program flash:" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/flash" path="boards/twrkm35z75m/driver_examples/flash/pflash">
          <external path="boards/twrkm35z75m/driver_examples/flash/pflash" type="xml">
            <files mask="pflash_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_pit" name="pit" brief="The PIT project is a simple demonstration program of the SDK PIT driver. It sets up the PIThardware block to trigger a periodic interrupt after every 1 second. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/pit" path="boards/twrkm35z75m/driver_examples/pit">
          <external path="boards/twrkm35z75m/driver_examples/pit" type="xml">
            <files mask="pit_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_power_manager" name="power_manager" brief="The Power manager demo application demonstrates the use of power modes in the KSDK. The demo use the notification mechanismand prints the power mode menu through the debug console, where the user can set the MCU to a specific power mode. The usercan also set the wakeup source by following the debug console prompts. The purpose of this demo is to demonstrate theimplementation of a power mode manager. The callback can be registered to the framework. If a power mode transition happens,the callback will be called and user can do something. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/power_manager">
          <external path="boards/twrkm35z75m/demo_apps/power_manager" type="xml">
            <files mask="power_manager_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_power_mode_switch" name="power_mode_switch" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/power_mode_switch">
          <external path="boards/twrkm35z75m/demo_apps/power_mode_switch" type="xml">
            <files mask="power_mode_switch_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_qtmr" name="qtmr" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. Specific features include up/down count,cascading of counters, programmable modulo,count once/repeated, counter preload, compare registers with preload, shared use of input signals, prescaler controls,independent capture/compare, fault input control, programmable input filters, and multichannel synchronization." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/qtmr" path="boards/twrkm35z75m/driver_examples/qtmr">
          <external path="boards/twrkm35z75m/driver_examples/qtmr" type="xml">
            <files mask="qtmr_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_rnga_random" name="rnga_random" brief="The RNGA is a digital integrated circuit capable of generating the 32-bit random numbers. The RNGAExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/rnga" path="boards/twrkm35z75m/driver_examples/rnga/random">
          <external path="boards/twrkm35z75m/driver_examples/rnga/random" type="xml">
            <files mask="rnga_random_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/shell">
          <external path="boards/twrkm35z75m/demo_apps/shell" type="xml">
            <files mask="shell_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_slcd" name="slcd" brief="The SLCD example shows how to use SLCD driver." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/slcd" path="boards/twrkm35z75m/driver_examples/slcd">
          <external path="boards/twrkm35z75m/driver_examples/slcd" type="xml">
            <files mask="slcd_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_slcd_guessnum" name="slcd_guessnum" brief="The SLCD number guess demo application demonstrates the use of the SLCD peripheral and driver.The SLCD number guess demo has two demo displays:1. The first demo is a basic SLCD test, where all numbers and icons are shown one by one on the screen.2. The second demo is the &quot;Number Guess&quot; game. This demo asks the user to input a number. The demo then providesclues to the user to help the user guess the correct number.&quot;Great, xxx you has GOT it!&quot; will be shown on the console, and the victory will be displayed on the LCD screen when theuser successfully guesses the correct number." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/twrkm35z75m/demo_apps/slcd_guessnum">
          <external path="boards/twrkm35z75m/demo_apps/slcd_guessnum" type="xml">
            <files mask="slcd_guessnum_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_spi_dma_b2b_transfer_master" name="spi_dma_b2b_transfer_master" brief="The spi_dma_board2board_master example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/twrkm35z75m/driver_examples/spi/dma_b2b_transfer/master">
          <external path="boards/twrkm35z75m/driver_examples/spi/dma_b2b_transfer/master" type="xml">
            <files mask="spi_dma_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_spi_dma_b2b_transfer_slave" name="spi_dma_b2b_transfer_slave" brief="The spi_dma_board2board_slave example shows how to use spi driver as slave to do board to board transfer with DMA:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/twrkm35z75m/driver_examples/spi/dma_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/driver_examples/spi/dma_b2b_transfer/slave" type="xml">
            <files mask="spi_dma_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_spi_interrupt_b2b_master" name="spi_interrupt_b2b_master" brief="The spi_interrupt_b2b_master example shows how to use spi functional API to do interrupt transfer as a master:In this example, the spi instance as master. Master sends a piece of data to slave, receive data from slave,and checkif the data master received is correct. This example needs to work with spi_interrupt_b2b_slave example." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/twrkm35z75m/driver_examples/spi/interrupt_b2b/master">
          <external path="boards/twrkm35z75m/driver_examples/spi/interrupt_b2b/master" type="xml">
            <files mask="spi_interrupt_b2b_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_spi_interrupt_b2b_slave" name="spi_interrupt_b2b_slave" brief="The spi_interrupt_b2b_slave example shows how to use spi functional API to do interrupt transfer as a slave:In this example, the spi instance as slave. Slave receives data froma master and send a peiece of data to master,and check if the data slave received is correct. This example needs to work with spi_interrupt_b2b_master example." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/twrkm35z75m/driver_examples/spi/interrupt_b2b/slave">
          <external path="boards/twrkm35z75m/driver_examples/spi/interrupt_b2b/slave" type="xml">
            <files mask="spi_interrupt_b2b_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_spi_interrupt_b2b_transfer_master" name="spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_board2board_master example shows how to use spi driver as master to do board to board transfer withinterrupt:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/twrkm35z75m/driver_examples/spi/interrupt_b2b_transfer/master">
          <external path="boards/twrkm35z75m/driver_examples/spi/interrupt_b2b_transfer/master" type="xml">
            <files mask="spi_interrupt_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_spi_interrupt_b2b_transfer_slave" name="spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_board2board_slave example shows how to use spi driver as slave to do board to board transfer with interrupt:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/twrkm35z75m/driver_examples/spi/interrupt_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/driver_examples/spi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="spi_interrupt_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_spi_polling_b2b_transfer_master" name="spi_polling_b2b_transfer_master" brief="The spi_polling_board2board_master example shows how to use spi driver as master to do board to board transfer with polling:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/twrkm35z75m/driver_examples/spi/polling_b2b_transfer/master">
          <external path="boards/twrkm35z75m/driver_examples/spi/polling_b2b_transfer/master" type="xml">
            <files mask="spi_polling_b2b_transfer_master_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_spi_polling_b2b_transfer_slave" name="spi_polling_b2b_transfer_slave" brief="The spi_polling_board2board_slave example shows how to use spi driver as slave to do board to board transfer withpolling:Notice: The SPI slave of this example uses interrupt mode, as there is no polling mode for SPI slave.In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="boards/twrkm35z75m/driver_examples/spi/polling_b2b_transfer/slave">
          <external path="boards/twrkm35z75m/driver_examples/spi/polling_b2b_transfer/slave" type="xml">
            <files mask="spi_polling_b2b_transfer_slave_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_sysmpu" name="sysmpu" brief="The SYSMPU example defines protected/unprotected memory region for the core access.First, the SYSMPU will capture the hardware information and show it on theterminal. Then, a memory region is configured as the non-writable region. Thebus fault interrupt is enabled to report the memory protection interrupt eventfor this non-writable region. If an operation writes to this region, the busfault interrupt happens. Then the bus fault interrupt handler provides aprevention alert by outputting a message on terminal, then the write rightswill be given to this region for core access. After the write access enabled,the writing to the region becomes successful. When the bus fault happen, thedetails of the error information will be captured and printed on the terminal.This example provides the terminal input control to give the example show for several regions access test. Just press any key to the terminal when theterminal show &quot;Press any key to continue&quot;." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/sysmpu" path="boards/twrkm35z75m/driver_examples/sysmpu">
          <external path="boards/twrkm35z75m/driver_examples/sysmpu" type="xml">
            <files mask="sysmpu_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_tower_bootloader" name="tower_bootloader" brief="The tower_bootloader is a bootloader that executes from target flash memory on the Tower platform. The bootloader is a configurable flash programming utility that operates over a serial connection on MCU devices. It enables quick and easy programming of MCU devices through the entire product life cycle, including application development, final product manufacturing, and more.Host-side command line and GUI tools are available to communicate with the bootloader. Users can utilize host tools to upload and/or download application code via the bootloader." toolchain="mcuxpresso" compiler="compiler_gcc" category="bootloader_examples" path="boards/twrkm35z75m/bootloader_examples/tower_bootloader">
          <external path="boards/twrkm35z75m/bootloader_examples/tower_bootloader" type="xml">
            <files mask="tower_bootloader_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_uart_9bit_interrupt_transfer" name="uart_9bit_interrupt_transfer" brief="The uart_9bit_interrupt_transfer example shows how to use uart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one uart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/twrkm35z75m/driver_examples/uart/9bit_interrupt_transfer">
          <external path="boards/twrkm35z75m/driver_examples/uart/9bit_interrupt_transfer" type="xml">
            <files mask="uart_9bit_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_uart_dma_rb_transfer" name="uart_dma_rb_transfer" brief="The uart_dma example shows how to use uart driver with DMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/twrkm35z75m/driver_examples/uart/dma_rb_transfer">
          <external path="boards/twrkm35z75m/driver_examples/uart/dma_rb_transfer" type="xml">
            <files mask="uart_dma_rb_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_uart_dma_transfer" name="uart_dma_transfer" brief="The uart_dma example shows how to use uart driver with DMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/twrkm35z75m/driver_examples/uart/dma_transfer">
          <external path="boards/twrkm35z75m/driver_examples/uart/dma_transfer" type="xml">
            <files mask="uart_dma_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_uart_interrupt" name="uart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/twrkm35z75m/driver_examples/uart/interrupt">
          <external path="boards/twrkm35z75m/driver_examples/uart/interrupt" type="xml">
            <files mask="uart_interrupt_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_uart_interrupt_rb_transfer" name="uart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/twrkm35z75m/driver_examples/uart/interrupt_rb_transfer">
          <external path="boards/twrkm35z75m/driver_examples/uart/interrupt_rb_transfer" type="xml">
            <files mask="uart_interrupt_rb_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_uart_interrupt_transfer" name="uart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/twrkm35z75m/driver_examples/uart/interrupt_transfer">
          <external path="boards/twrkm35z75m/driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="uart_interrupt_transfer_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_uart_polling" name="uart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/twrkm35z75m/driver_examples/uart/polling">
          <external path="boards/twrkm35z75m/driver_examples/uart/polling" type="xml">
            <files mask="uart_polling_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_vref_example" name="vref_example" brief="In this example, the adc16 module is initiealized and used to measure the VREF output voltage. So, it cannot use interal VREF as the reference voltage. Then, user should configure the VREF output pin as the ADC16's sample input. When running the project, it will firstly measure the VREF output voltage within the default (factory) trim value. Then, it will measure the VREF output voltage under different trim value." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/vref" path="boards/twrkm35z75m/driver_examples/vref">
          <external path="boards/twrkm35z75m/driver_examples/vref" type="xml">
            <files mask="vref_example_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_wdog" name="wdog" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 10 times of refreshing the watchdog in None-window mode, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing in Window mode." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/wdog" path="boards/twrkm35z75m/driver_examples/wdog">
          <external path="boards/twrkm35z75m/driver_examples/wdog" type="xml">
            <files mask="wdog_v3_10.xml"/>
          </external>
        </example>
        <example id="twrkm35z75m_xbar" name="xbar" brief="The Xbar project is a simple demonstration program of the SDK Xbar driver.The intended applicationof this module is to provide a flexible crossbar switch function that allows any input to beconnected to any output under user control.It sets up the Xbar hardware block to trigger a periodicinterrupt after every 1 second. When the Xbar interrupt is triggered a message a printed on the UARTterminal." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/xbar" path="boards/twrkm35z75m/driver_examples/xbar">
          <external path="boards/twrkm35z75m/driver_examples/xbar" type="xml">
            <files mask="xbar_v3_10.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MKM35Z512xxx7" name="MKM35Z7" version="1.0.0" full_name="MKM35Z512xxx7" family="KM3x" platform="Kinetis">
      <description>Kinetis KM3x-50–75 MHz Precision Metrology with Segment LCD MCUs based on ARM Cortex-M0+</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <core id="core0_MKM35Z512xxx7" name="core0" fpu="false" type="cm0plus"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_MKM35Z512xxx7" name="PROGRAM_FLASH" addr="00000000" size="00080000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_MKM35Z512xxx7" name="SRAM" addr="1fffc000" size="00010000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="512" ram_size_kb="64"/>
      <package id="MKM35Z512VLQ7" name="MKM35Z512VLQ7"/>
      <package id="MKM35Z512VLL7" name="MKM35Z512VLL7"/>
      <package id="MKM35Z512VLQ7R" name="MKM35Z512VLQ7R"/>
      <package id="MKM35Z512VLL7R" name="MKM35Z512VLL7R"/>
      <evaluation_boards>
        <evaluation_board name="twrkm35z75m"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MKM35Z512xxx7" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MKM35Z512xxx7" name="internal.has_swo" value="false"/>
            <params id="internal.connect.script.debug.mcuxpresso.MKM35Z512xxx7" name="internal.connect.script" value="kinetisconnect.scp"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_MKM35Z512xxx7">
              <driverBinary path="devices/MKM35Z7/mcuxpresso" type="binary">
                <files mask="FTFA_KM.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="flash_security_address" value="0x400"/>
        <linker property="mtb_supported" value="true"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="flash_security_address" value="0x400"/>
        <linker property="mtb_supported" value="true"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.twrkm35z75m.MKM35Z7" name="twrkm35z75m" brief="Board_project_template twrkm35z75m" version="1.0.0" full_name="Board_project_template twrkm35z75m" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/twrkm35z75m/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="platform.drivers.port.MKM35Z7"/>
          <component_dependency value="platform.drivers.gpio.MKM35Z7"/>
          <component_dependency value="platform.drivers.smc.MKM35Z7"/>
          <component_dependency value="platform.drivers.irtc.MKM35Z7"/>
          <component_dependency value="platform.drivers.xbar.MKM35Z7"/>
          <component_dependency value="device.MKM35Z7_startup.MKM35Z7"/>
          <component_dependency value="component.uart_adapter.MKM35Z7"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MKM35Z7"/>
              <component_dependency value="platform.utilities.assert.MKM35Z7"/>
              <component_dependency value="component.serial_manager.MKM35Z7"/>
            </all>
            <all>
              <component_dependency value="utility.debug_console_lite.MKM35Z7"/>
              <component_dependency value="platform.utilities.assert_lite.MKM35Z7"/>
            </all>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Include.MKM35Z7" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.9.0" full_name="CMSIS DSP Library Header" devices="MKM35Z512xxx7" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source exclude="true" relative_path="./" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MKM35Z7" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.9.0" full_name="CMSIS DSP Library Source" devices="MKM35Z512xxx7" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source exclude="true" relative_path="./" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c" hidden="true"/>
        <files mask="arm_abs_q15.c" hidden="true"/>
        <files mask="arm_abs_q31.c" hidden="true"/>
        <files mask="arm_abs_q7.c" hidden="true"/>
        <files mask="arm_add_f32.c" hidden="true"/>
        <files mask="arm_add_q15.c" hidden="true"/>
        <files mask="arm_add_q31.c" hidden="true"/>
        <files mask="arm_add_q7.c" hidden="true"/>
        <files mask="arm_and_u16.c" hidden="true"/>
        <files mask="arm_and_u32.c" hidden="true"/>
        <files mask="arm_and_u8.c" hidden="true"/>
        <files mask="arm_clip_f32.c" hidden="true"/>
        <files mask="arm_clip_q15.c" hidden="true"/>
        <files mask="arm_clip_q31.c" hidden="true"/>
        <files mask="arm_clip_q7.c" hidden="true"/>
        <files mask="arm_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_dot_prod_q7.c" hidden="true"/>
        <files mask="arm_mult_f32.c" hidden="true"/>
        <files mask="arm_mult_q15.c" hidden="true"/>
        <files mask="arm_mult_q31.c" hidden="true"/>
        <files mask="arm_mult_q7.c" hidden="true"/>
        <files mask="arm_negate_f32.c" hidden="true"/>
        <files mask="arm_negate_q15.c" hidden="true"/>
        <files mask="arm_negate_q31.c" hidden="true"/>
        <files mask="arm_negate_q7.c" hidden="true"/>
        <files mask="arm_not_u16.c" hidden="true"/>
        <files mask="arm_not_u32.c" hidden="true"/>
        <files mask="arm_not_u8.c" hidden="true"/>
        <files mask="arm_offset_f32.c" hidden="true"/>
        <files mask="arm_offset_q15.c" hidden="true"/>
        <files mask="arm_offset_q31.c" hidden="true"/>
        <files mask="arm_offset_q7.c" hidden="true"/>
        <files mask="arm_or_u16.c" hidden="true"/>
        <files mask="arm_or_u32.c" hidden="true"/>
        <files mask="arm_or_u8.c" hidden="true"/>
        <files mask="arm_scale_f32.c" hidden="true"/>
        <files mask="arm_scale_q15.c" hidden="true"/>
        <files mask="arm_scale_q31.c" hidden="true"/>
        <files mask="arm_scale_q7.c" hidden="true"/>
        <files mask="arm_shift_q15.c" hidden="true"/>
        <files mask="arm_shift_q31.c" hidden="true"/>
        <files mask="arm_shift_q7.c" hidden="true"/>
        <files mask="arm_sub_f32.c" hidden="true"/>
        <files mask="arm_sub_q15.c" hidden="true"/>
        <files mask="arm_sub_q31.c" hidden="true"/>
        <files mask="arm_sub_q7.c" hidden="true"/>
        <files mask="arm_xor_u16.c" hidden="true"/>
        <files mask="arm_xor_u32.c" hidden="true"/>
        <files mask="arm_xor_u8.c" hidden="true"/>
        <files mask="arm_abs_f16.c" hidden="true"/>
        <files mask="arm_add_f16.c" hidden="true"/>
        <files mask="arm_clip_f16.c" hidden="true"/>
        <files mask="arm_dot_prod_f16.c" hidden="true"/>
        <files mask="arm_mult_f16.c" hidden="true"/>
        <files mask="arm_negate_f16.c" hidden="true"/>
        <files mask="arm_offset_f16.c" hidden="true"/>
        <files mask="arm_scale_f16.c" hidden="true"/>
        <files mask="arm_sub_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c" hidden="true"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c" hidden="true"/>
        <files mask="arm_const_structs.c" hidden="true"/>
        <files mask="arm_mve_tables.c" hidden="true"/>
        <files mask="arm_common_tables_f16.c" hidden="true"/>
        <files mask="arm_const_structs_f16.c" hidden="true"/>
        <files mask="arm_mve_tables_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q15.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q31.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q31.c" hidden="true"/>
        <files mask="arm_cmplx_conj_f16.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_f16.c" hidden="true"/>
        <files mask="arm_cmplx_mag_f16.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_f16.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c" hidden="true"/>
        <files mask="arm_pid_init_q15.c" hidden="true"/>
        <files mask="arm_pid_init_q31.c" hidden="true"/>
        <files mask="arm_pid_reset_f32.c" hidden="true"/>
        <files mask="arm_pid_reset_q15.c" hidden="true"/>
        <files mask="arm_pid_reset_q31.c" hidden="true"/>
        <files mask="arm_sin_cos_f32.c" hidden="true"/>
        <files mask="arm_sin_cos_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c" hidden="true"/>
        <files mask="arm_braycurtis_distance_f32.c" hidden="true"/>
        <files mask="arm_canberra_distance_f32.c" hidden="true"/>
        <files mask="arm_chebyshev_distance_f32.c" hidden="true"/>
        <files mask="arm_cityblock_distance_f32.c" hidden="true"/>
        <files mask="arm_correlation_distance_f32.c" hidden="true"/>
        <files mask="arm_cosine_distance_f32.c" hidden="true"/>
        <files mask="arm_dice_distance.c" hidden="true"/>
        <files mask="arm_euclidean_distance_f32.c" hidden="true"/>
        <files mask="arm_hamming_distance.c" hidden="true"/>
        <files mask="arm_jaccard_distance.c" hidden="true"/>
        <files mask="arm_jensenshannon_distance_f32.c" hidden="true"/>
        <files mask="arm_kulsinski_distance.c" hidden="true"/>
        <files mask="arm_minkowski_distance_f32.c" hidden="true"/>
        <files mask="arm_rogerstanimoto_distance.c" hidden="true"/>
        <files mask="arm_russellrao_distance.c" hidden="true"/>
        <files mask="arm_sokalmichener_distance.c" hidden="true"/>
        <files mask="arm_sokalsneath_distance.c" hidden="true"/>
        <files mask="arm_yule_distance.c" hidden="true"/>
        <files mask="arm_braycurtis_distance_f16.c" hidden="true"/>
        <files mask="arm_canberra_distance_f16.c" hidden="true"/>
        <files mask="arm_chebyshev_distance_f16.c" hidden="true"/>
        <files mask="arm_cityblock_distance_f16.c" hidden="true"/>
        <files mask="arm_correlation_distance_f16.c" hidden="true"/>
        <files mask="arm_cosine_distance_f16.c" hidden="true"/>
        <files mask="arm_euclidean_distance_f16.c" hidden="true"/>
        <files mask="arm_jensenshannon_distance_f16.c" hidden="true"/>
        <files mask="arm_minkowski_distance_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_cos_f32.c" hidden="true"/>
        <files mask="arm_cos_q15.c" hidden="true"/>
        <files mask="arm_cos_q31.c" hidden="true"/>
        <files mask="arm_divide_q15.c" hidden="true"/>
        <files mask="arm_sin_f32.c" hidden="true"/>
        <files mask="arm_sin_q15.c" hidden="true"/>
        <files mask="arm_sin_q31.c" hidden="true"/>
        <files mask="arm_sqrt_q15.c" hidden="true"/>
        <files mask="arm_sqrt_q31.c" hidden="true"/>
        <files mask="arm_vexp_f32.c" hidden="true"/>
        <files mask="arm_vlog_f32.c" hidden="true"/>
        <files mask="arm_vexp_f16.c" hidden="true"/>
        <files mask="arm_vinverse_f16.c" hidden="true"/>
        <files mask="arm_vlog_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_conv_f32.c" hidden="true"/>
        <files mask="arm_conv_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_f32.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_q7.c" hidden="true"/>
        <files mask="arm_conv_q15.c" hidden="true"/>
        <files mask="arm_conv_q31.c" hidden="true"/>
        <files mask="arm_conv_q7.c" hidden="true"/>
        <files mask="arm_correlate_f32.c" hidden="true"/>
        <files mask="arm_correlate_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q31.c" hidden="true"/>
        <files mask="arm_correlate_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_opt_q7.c" hidden="true"/>
        <files mask="arm_correlate_q15.c" hidden="true"/>
        <files mask="arm_correlate_q31.c" hidden="true"/>
        <files mask="arm_correlate_q7.c" hidden="true"/>
        <files mask="arm_fir_decimate_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_q31.c" hidden="true"/>
        <files mask="arm_fir_f32.c" hidden="true"/>
        <files mask="arm_fir_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_init_f32.c" hidden="true"/>
        <files mask="arm_fir_init_q15.c" hidden="true"/>
        <files mask="arm_fir_init_q31.c" hidden="true"/>
        <files mask="arm_fir_init_q7.c" hidden="true"/>
        <files mask="arm_fir_interpolate_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_q31.c" hidden="true"/>
        <files mask="arm_fir_q15.c" hidden="true"/>
        <files mask="arm_fir_q31.c" hidden="true"/>
        <files mask="arm_fir_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_q7.c" hidden="true"/>
        <files mask="arm_iir_lattice_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_iir_lattice_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_q31.c" hidden="true"/>
        <files mask="arm_levinson_durbin_f32.c" hidden="true"/>
        <files mask="arm_levinson_durbin_q31.c" hidden="true"/>
        <files mask="arm_lms_f32.c" hidden="true"/>
        <files mask="arm_lms_init_f32.c" hidden="true"/>
        <files mask="arm_lms_init_q15.c" hidden="true"/>
        <files mask="arm_lms_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_q31.c" hidden="true"/>
        <files mask="arm_lms_q15.c" hidden="true"/>
        <files mask="arm_lms_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c" hidden="true"/>
        <files mask="arm_correlate_f16.c" hidden="true"/>
        <files mask="arm_fir_f16.c" hidden="true"/>
        <files mask="arm_fir_init_f16.c" hidden="true"/>
        <files mask="arm_levinson_durbin_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c" hidden="true"/>
        <files mask="arm_bilinear_interp_q15.c" hidden="true"/>
        <files mask="arm_bilinear_interp_q31.c" hidden="true"/>
        <files mask="arm_bilinear_interp_q7.c" hidden="true"/>
        <files mask="arm_linear_interp_f32.c" hidden="true"/>
        <files mask="arm_linear_interp_q15.c" hidden="true"/>
        <files mask="arm_linear_interp_q31.c" hidden="true"/>
        <files mask="arm_linear_interp_q7.c" hidden="true"/>
        <files mask="arm_spline_interp_f32.c" hidden="true"/>
        <files mask="arm_spline_interp_init_f32.c" hidden="true"/>
        <files mask="arm_bilinear_interp_f16.c" hidden="true"/>
        <files mask="arm_linear_interp_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_mat_add_f32.c" hidden="true"/>
        <files mask="arm_mat_add_q15.c" hidden="true"/>
        <files mask="arm_mat_add_q31.c" hidden="true"/>
        <files mask="arm_mat_cholesky_f32.c" hidden="true"/>
        <files mask="arm_mat_cholesky_f64.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_cmplx_trans_f32.c" hidden="true"/>
        <files mask="arm_mat_cmplx_trans_q15.c" hidden="true"/>
        <files mask="arm_mat_cmplx_trans_q31.c" hidden="true"/>
        <files mask="arm_mat_init_f32.c" hidden="true"/>
        <files mask="arm_mat_init_q15.c" hidden="true"/>
        <files mask="arm_mat_init_q31.c" hidden="true"/>
        <files mask="arm_mat_inverse_f32.c" hidden="true"/>
        <files mask="arm_mat_inverse_f64.c" hidden="true"/>
        <files mask="arm_mat_ldlt_f32.c" hidden="true"/>
        <files mask="arm_mat_ldlt_f64.c" hidden="true"/>
        <files mask="arm_mat_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_mult_f64.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q31.c" hidden="true"/>
        <files mask="arm_mat_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_mult_q7.c" hidden="true"/>
        <files mask="arm_mat_scale_f32.c" hidden="true"/>
        <files mask="arm_mat_scale_q15.c" hidden="true"/>
        <files mask="arm_mat_scale_q31.c" hidden="true"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c" hidden="true"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c" hidden="true"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c" hidden="true"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c" hidden="true"/>
        <files mask="arm_mat_sub_f32.c" hidden="true"/>
        <files mask="arm_mat_sub_f64.c" hidden="true"/>
        <files mask="arm_mat_sub_q15.c" hidden="true"/>
        <files mask="arm_mat_sub_q31.c" hidden="true"/>
        <files mask="arm_mat_trans_f32.c" hidden="true"/>
        <files mask="arm_mat_trans_f64.c" hidden="true"/>
        <files mask="arm_mat_trans_q15.c" hidden="true"/>
        <files mask="arm_mat_trans_q31.c" hidden="true"/>
        <files mask="arm_mat_trans_q7.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_q7.c" hidden="true"/>
        <files mask="arm_mat_add_f16.c" hidden="true"/>
        <files mask="arm_mat_cholesky_f16.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_f16.c" hidden="true"/>
        <files mask="arm_mat_cmplx_trans_f16.c" hidden="true"/>
        <files mask="arm_mat_init_f16.c" hidden="true"/>
        <files mask="arm_mat_inverse_f16.c" hidden="true"/>
        <files mask="arm_mat_mult_f16.c" hidden="true"/>
        <files mask="arm_mat_scale_f16.c" hidden="true"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c" hidden="true"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c" hidden="true"/>
        <files mask="arm_mat_sub_f16.c" hidden="true"/>
        <files mask="arm_mat_trans_f16.c" hidden="true"/>
        <files mask="arm_mat_vec_mult_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c" hidden="true"/>
        <files mask="arm_quaternion_conjugate_f32.c" hidden="true"/>
        <files mask="arm_quaternion_inverse_f32.c" hidden="true"/>
        <files mask="arm_quaternion_norm_f32.c" hidden="true"/>
        <files mask="arm_quaternion_normalize_f32.c" hidden="true"/>
        <files mask="arm_quaternion_product_f32.c" hidden="true"/>
        <files mask="arm_quaternion_product_single_f32.c" hidden="true"/>
        <files mask="arm_rotation2quaternion_f32.c" hidden="true"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c" hidden="true"/>
        <files mask="arm_svm_linear_predict_f32.c" hidden="true"/>
        <files mask="arm_svm_polynomial_init_f32.c" hidden="true"/>
        <files mask="arm_svm_polynomial_predict_f32.c" hidden="true"/>
        <files mask="arm_svm_rbf_init_f32.c" hidden="true"/>
        <files mask="arm_svm_rbf_predict_f32.c" hidden="true"/>
        <files mask="arm_svm_sigmoid_init_f32.c" hidden="true"/>
        <files mask="arm_svm_sigmoid_predict_f32.c" hidden="true"/>
        <files mask="arm_svm_linear_init_f16.c" hidden="true"/>
        <files mask="arm_svm_linear_predict_f16.c" hidden="true"/>
        <files mask="arm_svm_polynomial_init_f16.c" hidden="true"/>
        <files mask="arm_svm_polynomial_predict_f16.c" hidden="true"/>
        <files mask="arm_svm_rbf_init_f16.c" hidden="true"/>
        <files mask="arm_svm_rbf_predict_f16.c" hidden="true"/>
        <files mask="arm_svm_sigmoid_init_f16.c" hidden="true"/>
        <files mask="arm_svm_sigmoid_predict_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c" hidden="true"/>
        <files mask="arm_absmax_q15.c" hidden="true"/>
        <files mask="arm_absmax_q31.c" hidden="true"/>
        <files mask="arm_absmax_q7.c" hidden="true"/>
        <files mask="arm_absmin_f32.c" hidden="true"/>
        <files mask="arm_absmin_q15.c" hidden="true"/>
        <files mask="arm_absmin_q31.c" hidden="true"/>
        <files mask="arm_absmin_q7.c" hidden="true"/>
        <files mask="arm_entropy_f32.c" hidden="true"/>
        <files mask="arm_entropy_f64.c" hidden="true"/>
        <files mask="arm_kullback_leibler_f32.c" hidden="true"/>
        <files mask="arm_kullback_leibler_f64.c" hidden="true"/>
        <files mask="arm_logsumexp_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_logsumexp_f32.c" hidden="true"/>
        <files mask="arm_max_f32.c" hidden="true"/>
        <files mask="arm_max_no_idx_f32.c" hidden="true"/>
        <files mask="arm_max_q15.c" hidden="true"/>
        <files mask="arm_max_q31.c" hidden="true"/>
        <files mask="arm_max_q7.c" hidden="true"/>
        <files mask="arm_mean_f32.c" hidden="true"/>
        <files mask="arm_mean_q15.c" hidden="true"/>
        <files mask="arm_mean_q31.c" hidden="true"/>
        <files mask="arm_mean_q7.c" hidden="true"/>
        <files mask="arm_min_f32.c" hidden="true"/>
        <files mask="arm_min_q15.c" hidden="true"/>
        <files mask="arm_min_q31.c" hidden="true"/>
        <files mask="arm_min_q7.c" hidden="true"/>
        <files mask="arm_power_f32.c" hidden="true"/>
        <files mask="arm_power_q15.c" hidden="true"/>
        <files mask="arm_power_q31.c" hidden="true"/>
        <files mask="arm_power_q7.c" hidden="true"/>
        <files mask="arm_rms_f32.c" hidden="true"/>
        <files mask="arm_rms_q15.c" hidden="true"/>
        <files mask="arm_rms_q31.c" hidden="true"/>
        <files mask="arm_std_f32.c" hidden="true"/>
        <files mask="arm_std_q15.c" hidden="true"/>
        <files mask="arm_std_q31.c" hidden="true"/>
        <files mask="arm_var_f32.c" hidden="true"/>
        <files mask="arm_var_q15.c" hidden="true"/>
        <files mask="arm_var_q31.c" hidden="true"/>
        <files mask="arm_absmax_f16.c" hidden="true"/>
        <files mask="arm_absmin_f16.c" hidden="true"/>
        <files mask="arm_entropy_f16.c" hidden="true"/>
        <files mask="arm_kullback_leibler_f16.c" hidden="true"/>
        <files mask="arm_logsumexp_dot_prod_f16.c" hidden="true"/>
        <files mask="arm_logsumexp_f16.c" hidden="true"/>
        <files mask="arm_max_f16.c" hidden="true"/>
        <files mask="arm_max_no_idx_f16.c" hidden="true"/>
        <files mask="arm_mean_f16.c" hidden="true"/>
        <files mask="arm_min_f16.c" hidden="true"/>
        <files mask="arm_power_f16.c" hidden="true"/>
        <files mask="arm_rms_f16.c" hidden="true"/>
        <files mask="arm_std_f16.c" hidden="true"/>
        <files mask="arm_var_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c" hidden="true"/>
        <files mask="arm_bitonic_sort_f32.c" hidden="true"/>
        <files mask="arm_bubble_sort_f32.c" hidden="true"/>
        <files mask="arm_copy_f32.c" hidden="true"/>
        <files mask="arm_copy_q15.c" hidden="true"/>
        <files mask="arm_copy_q31.c" hidden="true"/>
        <files mask="arm_copy_q7.c" hidden="true"/>
        <files mask="arm_fill_f32.c" hidden="true"/>
        <files mask="arm_fill_q15.c" hidden="true"/>
        <files mask="arm_fill_q31.c" hidden="true"/>
        <files mask="arm_fill_q7.c" hidden="true"/>
        <files mask="arm_float_to_q15.c" hidden="true"/>
        <files mask="arm_float_to_q31.c" hidden="true"/>
        <files mask="arm_float_to_q7.c" hidden="true"/>
        <files mask="arm_heap_sort_f32.c" hidden="true"/>
        <files mask="arm_insertion_sort_f32.c" hidden="true"/>
        <files mask="arm_merge_sort_f32.c" hidden="true"/>
        <files mask="arm_merge_sort_init_f32.c" hidden="true"/>
        <files mask="arm_q15_to_float.c" hidden="true"/>
        <files mask="arm_q15_to_q31.c" hidden="true"/>
        <files mask="arm_q15_to_q7.c" hidden="true"/>
        <files mask="arm_q31_to_float.c" hidden="true"/>
        <files mask="arm_q31_to_q15.c" hidden="true"/>
        <files mask="arm_q31_to_q7.c" hidden="true"/>
        <files mask="arm_q7_to_float.c" hidden="true"/>
        <files mask="arm_q7_to_q15.c" hidden="true"/>
        <files mask="arm_q7_to_q31.c" hidden="true"/>
        <files mask="arm_quick_sort_f32.c" hidden="true"/>
        <files mask="arm_selection_sort_f32.c" hidden="true"/>
        <files mask="arm_sort_f32.c" hidden="true"/>
        <files mask="arm_sort_init_f32.c" hidden="true"/>
        <files mask="arm_weighted_sum_f32.c" hidden="true"/>
        <files mask="arm_barycenter_f16.c" hidden="true"/>
        <files mask="arm_copy_f16.c" hidden="true"/>
        <files mask="arm_f16_to_float.c" hidden="true"/>
        <files mask="arm_f16_to_q15.c" hidden="true"/>
        <files mask="arm_fill_f16.c" hidden="true"/>
        <files mask="arm_float_to_f16.c" hidden="true"/>
        <files mask="arm_q15_to_f16.c" hidden="true"/>
        <files mask="arm_weighted_sum_f16.c" hidden="true"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c" hidden="true"/>
        <files mask="arm_bitreversal2.c" hidden="true"/>
        <files mask="arm_cfft_f32.c" hidden="true"/>
        <files mask="arm_cfft_f64.c" hidden="true"/>
        <files mask="arm_cfft_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_init_f64.c" hidden="true"/>
        <files mask="arm_cfft_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_q15.c" hidden="true"/>
        <files mask="arm_cfft_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix8_f32.c" hidden="true"/>
        <files mask="arm_dct4_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_q15.c" hidden="true"/>
        <files mask="arm_dct4_init_q31.c" hidden="true"/>
        <files mask="arm_dct4_q15.c" hidden="true"/>
        <files mask="arm_dct4_q31.c" hidden="true"/>
        <files mask="arm_rfft_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_f64.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f64.c" hidden="true"/>
        <files mask="arm_rfft_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_init_q15.c" hidden="true"/>
        <files mask="arm_rfft_init_q31.c" hidden="true"/>
        <files mask="arm_rfft_q15.c" hidden="true"/>
        <files mask="arm_rfft_q31.c" hidden="true"/>
        <files mask="arm_bitreversal_f16.c" hidden="true"/>
        <files mask="arm_cfft_f16.c" hidden="true"/>
        <files mask="arm_cfft_init_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix2_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix4_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_f16.c" hidden="true"/>
        <files mask="arm_cfft_radix8_f16.c" hidden="true"/>
        <files mask="arm_rfft_fast_f16.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f16.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="asm_include">
        <files mask="arm_bitreversal2.S" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MKM35Z7" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MKM35Z7" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.1.3" full_name="CMSIS Device API RTOS2" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MKM35Z7" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Common.MKM35Z7" name="CMSIS_Driver_Common" brief="Access to #include Driver_Common.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Common" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MKM35Z7" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MKM35Z7" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MKM35Z7" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MKM35Z7" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MKM35Z7" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MKM35Z7" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MKM35Z7" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MKM35Z7" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MKM35Z7" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MKM35Z7" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB.MKM35Z7" name="CMSIS_Driver_USB_Common" brief="Access to #include Driver_USB.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Common" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MKM35Z7" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MKM35Z7" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MKM35Z7" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" devices="MKM35Z512xxx7" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MKM35Z7" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="5.5.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="core0_MKM35Z512xxx7">
        <files mask="core_cm0plus.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MKM35Z7" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="3.0.0" full_name="CMSIS NN Library Source" devices="MKM35Z512xxx7" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <component_dependency value="CMSIS_DSP_Include.MKM35Z7"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activations_q15.c"/>
        <files mask="arm_nn_activations_q7.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_HWC_q7_fast_nonsquare.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_HWC_q15_basic.c"/>
        <files mask="arm_convolve_HWC_q15_fast.c"/>
        <files mask="arm_convolve_HWC_q15_fast_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_basic.c"/>
        <files mask="arm_convolve_HWC_q7_basic_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_fast.c"/>
        <files mask="arm_convolve_HWC_q7_fast_nonsquare.c"/>
        <files mask="arm_convolve_HWC_q7_RGB.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_u8_basic_ver1.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_depthwise_separable_conv_HWC_q7.c"/>
        <files mask="arm_depthwise_separable_conv_HWC_q7_nonsquare.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_q7_q15.c"/>
        <files mask="arm_nn_mat_mult_kernel_q7_q15_reordered.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16_reordered.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_mat_q7_vec_q15.c"/>
        <files mask="arm_fully_connected_mat_q7_vec_q15_opt.c"/>
        <files mask="arm_fully_connected_q15.c"/>
        <files mask="arm_fully_connected_q15_opt.c"/>
        <files mask="arm_fully_connected_q7.c"/>
        <files mask="arm_fully_connected_q7_opt.c"/>
        <files mask="arm_fully_connected_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_accumulate_q7_to_q15.c"/>
        <files mask="arm_nn_add_q7.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_mult_q15.c"/>
        <files mask="arm_nn_mult_q7.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_no_shift.c"/>
        <files mask="arm_q7_to_q15_reordered_no_shift.c"/>
        <files mask="arm_q7_to_q15_reordered_with_offset.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s8.c"/>
        <files mask="arm_pool_q7_HWC.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_softmax_q15.c"/>
        <files mask="arm_softmax_q7.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_u8.c"/>
        <files mask="arm_softmax_with_batch_q7.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_s8.c"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="CMSIS_files.MKM35Z7" name="CMSIS" brief="CMSIS (Cortex Microcontroller Software Interface Standard)" version="5.8.0" full_name="CMSIS" devices="MKM35Z512xxx7" user_visible="false" type="container" package_base_path="CMSIS" project_base_path="CMSIS">
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio_memory.c"/>
    <files mask="vio.c"/>
  </source>
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_WiFi.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_ETH.h"/>
  </source>
  <source relative_path="Driver/DriverTemplates" type="src">
    <files mask="Driver_SPI.c"/>
    <files mask="Driver_Flash.c"/>
    <files mask="Driver_USART.c"/>
    <files mask="Driver_SAI.c"/>
    <files mask="Driver_Storage.c"/>
    <files mask="Driver_I2C.c"/>
    <files mask="Driver_ETH_PHY.c"/>
    <files mask="Driver_WiFi.c"/>
    <files mask="Driver_ETH_MAC.c"/>
    <files mask="Driver_CAN.c"/>
    <files mask="Driver_MCI.c"/>
    <files mask="Driver_NAND.c"/>
    <files mask="Driver_USBH.c"/>
    <files mask="Driver_USBD.c"/>
  </source>
  <source relative_path="./" type="other">
    <files mask="CMSIS.yml"/>
    <files mask="CMSIS_v2.yml"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="LICENSE.txt"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="src">
    <files mask="arm_absmax_q15.c"/>
    <files mask="arm_var_q15.c"/>
    <files mask="arm_min_q31.c"/>
    <files mask="arm_absmax_f32.c"/>
    <files mask="arm_max_no_idx_f16.c"/>
    <files mask="arm_mean_f32.c"/>
    <files mask="arm_kullback_leibler_f64.c"/>
    <files mask="arm_absmin_f32.c"/>
    <files mask="arm_absmax_q31.c"/>
    <files mask="arm_max_q7.c"/>
    <files mask="arm_max_f32.c"/>
    <files mask="arm_var_f32.c"/>
    <files mask="arm_power_q7.c"/>
    <files mask="arm_absmax_f16.c"/>
    <files mask="arm_rms_f32.c"/>
    <files mask="arm_var_f16.c"/>
    <files mask="arm_max_q31.c"/>
    <files mask="arm_logsumexp_dot_prod_f32.c"/>
    <files mask="arm_max_q15.c"/>
    <files mask="arm_entropy_f32.c"/>
    <files mask="arm_mean_q7.c"/>
    <files mask="arm_absmax_q7.c"/>
    <files mask="arm_logsumexp_dot_prod_f16.c"/>
    <files mask="arm_mean_f16.c"/>
    <files mask="arm_power_f32.c"/>
    <files mask="arm_min_q7.c"/>
    <files mask="arm_rms_f16.c"/>
    <files mask="arm_max_f16.c"/>
    <files mask="arm_max_no_idx_f32.c"/>
    <files mask="arm_std_q15.c"/>
    <files mask="arm_entropy_f64.c"/>
    <files mask="arm_absmin_q31.c"/>
    <files mask="arm_min_f16.c"/>
    <files mask="arm_min_f32.c"/>
    <files mask="arm_logsumexp_f32.c"/>
    <files mask="arm_kullback_leibler_f16.c"/>
    <files mask="arm_min_q15.c"/>
    <files mask="arm_power_f16.c"/>
    <files mask="arm_std_f16.c"/>
    <files mask="arm_entropy_f16.c"/>
    <files mask="arm_logsumexp_f16.c"/>
    <files mask="StatisticsFunctionsF16.c"/>
    <files mask="arm_kullback_leibler_f32.c"/>
    <files mask="arm_absmin_f16.c"/>
    <files mask="StatisticsFunctions.c"/>
    <files mask="arm_std_q31.c"/>
    <files mask="arm_absmin_q15.c"/>
    <files mask="arm_rms_q31.c"/>
    <files mask="arm_mean_q15.c"/>
    <files mask="arm_std_f32.c"/>
    <files mask="arm_power_q15.c"/>
    <files mask="arm_mean_q31.c"/>
    <files mask="arm_absmin_q7.c"/>
    <files mask="arm_rms_q15.c"/>
    <files mask="arm_power_q31.c"/>
    <files mask="arm_var_q31.c"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/InterpolationFunctions" type="src">
    <files mask="arm_linear_interp_q15.c"/>
    <files mask="arm_linear_interp_f16.c"/>
    <files mask="arm_spline_interp_f32.c"/>
    <files mask="arm_bilinear_interp_f32.c"/>
    <files mask="arm_linear_interp_f32.c"/>
    <files mask="arm_bilinear_interp_f16.c"/>
    <files mask="arm_linear_interp_q31.c"/>
    <files mask="arm_spline_interp_init_f32.c"/>
    <files mask="InterpolationFunctions.c"/>
    <files mask="arm_linear_interp_q7.c"/>
    <files mask="InterpolationFunctionsF16.c"/>
    <files mask="arm_bilinear_interp_q15.c"/>
    <files mask="arm_bilinear_interp_q7.c"/>
    <files mask="arm_bilinear_interp_q31.c"/>
  </source>
  <source relative_path="DSP/Source/InterpolationFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/QuaternionMathFunctions" type="src">
    <files mask="arm_quaternion_conjugate_f32.c"/>
    <files mask="arm_quaternion_normalize_f32.c"/>
    <files mask="arm_quaternion_inverse_f32.c"/>
    <files mask="arm_quaternion_product_f32.c"/>
    <files mask="arm_quaternion_product_single_f32.c"/>
    <files mask="arm_rotation2quaternion_f32.c"/>
    <files mask="arm_quaternion2rotation_f32.c"/>
    <files mask="arm_quaternion_norm_f32.c"/>
    <files mask="QuaternionMathFunctions.c"/>
  </source>
  <source relative_path="DSP/Source/QuaternionMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/SVMFunctions" type="src">
    <files mask="SVMFunctionsF16.c"/>
    <files mask="arm_svm_rbf_init_f16.c"/>
    <files mask="arm_svm_linear_init_f32.c"/>
    <files mask="arm_svm_sigmoid_predict_f16.c"/>
    <files mask="arm_svm_polynomial_predict_f32.c"/>
    <files mask="arm_svm_polynomial_predict_f16.c"/>
    <files mask="arm_svm_rbf_predict_f32.c"/>
    <files mask="arm_svm_polynomial_init_f16.c"/>
    <files mask="arm_svm_sigmoid_predict_f32.c"/>
    <files mask="arm_svm_rbf_predict_f16.c"/>
    <files mask="arm_svm_rbf_init_f32.c"/>
    <files mask="arm_svm_sigmoid_init_f32.c"/>
    <files mask="arm_svm_linear_predict_f16.c"/>
    <files mask="arm_svm_sigmoid_init_f16.c"/>
    <files mask="arm_svm_linear_predict_f32.c"/>
    <files mask="arm_svm_polynomial_init_f32.c"/>
    <files mask="arm_svm_linear_init_f16.c"/>
    <files mask="SVMFunctions.c"/>
  </source>
  <source relative_path="DSP/Source/SVMFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="src">
    <files mask="arm_cos_q31.c"/>
    <files mask="FastMathFunctions.c"/>
    <files mask="arm_sin_q31.c"/>
    <files mask="arm_divide_q15.c"/>
    <files mask="FastMathFunctionsF16.c"/>
    <files mask="arm_sqrt_q15.c"/>
    <files mask="arm_cos_q15.c"/>
    <files mask="arm_vlog_f32.c"/>
    <files mask="arm_sin_f32.c"/>
    <files mask="arm_sin_q15.c"/>
    <files mask="arm_vexp_f16.c"/>
    <files mask="arm_vlog_f16.c"/>
    <files mask="arm_cos_f32.c"/>
    <files mask="arm_vexp_f32.c"/>
    <files mask="arm_sqrt_q31.c"/>
    <files mask="arm_vinverse_f16.c"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="src">
    <files mask="arm_cfft_init_f32.c"/>
    <files mask="arm_cfft_radix2_f32.c"/>
    <files mask="arm_rfft_fast_f16.c"/>
    <files mask="arm_cfft_radix8_f32.c"/>
    <files mask="arm_cfft_radix2_q15.c"/>
    <files mask="arm_cfft_init_f16.c"/>
    <files mask="arm_cfft_radix4_init_f32.c"/>
    <files mask="arm_cfft_radix4_init_q15.c"/>
    <files mask="arm_cfft_f64.c"/>
    <files mask="arm_cfft_radix2_init_q15.c"/>
    <files mask="arm_rfft_init_f32.c"/>
    <files mask="arm_rfft_fast_f32.c"/>
    <files mask="arm_cfft_init_q15.c"/>
    <files mask="arm_rfft_init_q31.c"/>
    <files mask="TransformFunctionsF16.c"/>
    <files mask="arm_cfft_init_f64.c"/>
    <files mask="arm_dct4_q15.c"/>
    <files mask="arm_cfft_radix8_f16.c"/>
    <files mask="arm_dct4_init_q31.c"/>
    <files mask="arm_cfft_radix4_f16.c"/>
    <files mask="arm_cfft_radix2_init_f32.c"/>
    <files mask="arm_bitreversal_f16.c"/>
    <files mask="arm_dct4_init_q15.c"/>
    <files mask="arm_dct4_q31.c"/>
    <files mask="arm_rfft_q15.c"/>
    <files mask="arm_cfft_radix4_q31.c"/>
    <files mask="arm_cfft_f16.c"/>
    <files mask="arm_cfft_radix2_init_q31.c"/>
    <files mask="TransformFunctions.c"/>
    <files mask="arm_rfft_fast_init_f64.c"/>
    <files mask="arm_cfft_radix4_q15.c"/>
    <files mask="arm_bitreversal.c"/>
    <files mask="arm_rfft_init_q15.c"/>
    <files mask="arm_rfft_q31.c"/>
    <files mask="arm_cfft_radix2_init_f16.c"/>
    <files mask="arm_cfft_radix2_f16.c"/>
    <files mask="arm_cfft_init_q31.c"/>
    <files mask="arm_bitreversal2.c"/>
    <files mask="arm_rfft_fast_init_f32.c"/>
    <files mask="arm_cfft_radix2_q31.c"/>
    <files mask="arm_dct4_f32.c"/>
    <files mask="arm_cfft_f32.c"/>
    <files mask="arm_rfft_fast_init_f16.c"/>
    <files mask="arm_rfft_f32.c"/>
    <files mask="arm_cfft_radix4_init_f16.c"/>
    <files mask="arm_rfft_fast_f64.c"/>
    <files mask="arm_cfft_radix4_init_q31.c"/>
    <files mask="arm_cfft_q31.c"/>
    <files mask="arm_cfft_q15.c"/>
    <files mask="arm_cfft_radix4_f32.c"/>
    <files mask="arm_dct4_init_f32.c"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="asm_include">
    <files mask="arm_bitreversal2.S"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="src">
    <files mask="arm_iir_lattice_q15.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
    <files mask="arm_iir_lattice_init_q15.c"/>
    <files mask="arm_fir_interpolate_q15.c"/>
    <files mask="arm_correlate_fast_q15.c"/>
    <files mask="arm_lms_norm_init_q15.c"/>
    <files mask="arm_fir_sparse_f32.c"/>
    <files mask="arm_fir_interpolate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
    <files mask="arm_iir_lattice_init_q31.c"/>
    <files mask="arm_fir_decimate_q31.c"/>
    <files mask="arm_fir_interpolate_q31.c"/>
    <files mask="arm_fir_decimate_init_f32.c"/>
    <files mask="arm_correlate_fast_opt_q15.c"/>
    <files mask="arm_biquad_cascade_df1_f16.c"/>
    <files mask="arm_lms_q31.c"/>
    <files mask="arm_lms_init_f32.c"/>
    <files mask="arm_levinson_durbin_f16.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
    <files mask="arm_biquad_cascade_df1_init_f16.c"/>
    <files mask="arm_fir_sparse_q7.c"/>
    <files mask="arm_conv_fast_opt_q15.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
    <files mask="arm_biquad_cascade_df1_init_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
    <files mask="arm_iir_lattice_f32.c"/>
    <files mask="arm_fir_lattice_f32.c"/>
    <files mask="arm_conv_partial_opt_q15.c"/>
    <files mask="arm_iir_lattice_q31.c"/>
    <files mask="arm_correlate_fast_q31.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
    <files mask="arm_conv_f32.c"/>
    <files mask="arm_fir_sparse_q15.c"/>
    <files mask="arm_fir_init_f16.c"/>
    <files mask="arm_fir_sparse_init_q7.c"/>
    <files mask="arm_levinson_durbin_f32.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_f32.c"/>
    <files mask="arm_fir_sparse_init_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f16.c"/>
    <files mask="arm_fir_sparse_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_q15.c"/>
    <files mask="arm_fir_lattice_q15.c"/>
    <files mask="arm_fir_decimate_init_q15.c"/>
    <files mask="arm_conv_partial_fast_opt_q15.c"/>
    <files mask="arm_fir_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
    <files mask="arm_conv_fast_q15.c"/>
    <files mask="arm_fir_fast_q15.c"/>
    <files mask="arm_conv_q7.c"/>
    <files mask="arm_fir_q15.c"/>
    <files mask="arm_correlate_q15.c"/>
    <files mask="arm_lms_init_q15.c"/>
    <files mask="arm_conv_q15.c"/>
    <files mask="arm_conv_partial_q7.c"/>
    <files mask="arm_lms_f32.c"/>
    <files mask="arm_lms_norm_q15.c"/>
    <files mask="arm_fir_sparse_init_f32.c"/>
    <files mask="arm_lms_norm_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_q15.c"/>
    <files mask="arm_conv_partial_fast_q15.c"/>
    <files mask="arm_fir_init_f32.c"/>
    <files mask="arm_fir_decimate_f32.c"/>
    <files mask="FilteringFunctionsF16.c"/>
    <files mask="arm_fir_lattice_init_q15.c"/>
    <files mask="arm_correlate_opt_q15.c"/>
    <files mask="arm_fir_sparse_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f32.c"/>
    <files mask="arm_fir_init_q7.c"/>
    <files mask="arm_fir_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_f32.c"/>
    <files mask="arm_conv_opt_q7.c"/>
    <files mask="arm_lms_init_q31.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
    <files mask="arm_fir_fast_q31.c"/>
    <files mask="arm_conv_partial_f32.c"/>
    <files mask="arm_biquad_cascade_df1_q15.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
    <files mask="arm_lms_norm_q31.c"/>
    <files mask="arm_conv_partial_q15.c"/>
    <files mask="arm_conv_opt_q15.c"/>
    <files mask="arm_fir_decimate_q15.c"/>
    <files mask="arm_iir_lattice_init_f32.c"/>
    <files mask="arm_fir_lattice_init_f32.c"/>
    <files mask="arm_fir_decimate_fast_q31.c"/>
    <files mask="arm_fir_f32.c"/>
    <files mask="arm_fir_decimate_init_q31.c"/>
    <files mask="arm_conv_q31.c"/>
    <files mask="arm_lms_norm_f32.c"/>
    <files mask="arm_conv_partial_fast_q31.c"/>
    <files mask="arm_fir_lattice_init_q31.c"/>
    <files mask="arm_fir_init_q31.c"/>
    <files mask="arm_lms_norm_init_f32.c"/>
    <files mask="arm_correlate_opt_q7.c"/>
    <files mask="arm_fir_lattice_q31.c"/>
    <files mask="arm_conv_partial_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f64.c"/>
    <files mask="arm_biquad_cascade_df1_f32.c"/>
    <files mask="arm_lms_q15.c"/>
    <files mask="arm_correlate_q31.c"/>
    <files mask="arm_correlate_q7.c"/>
    <files mask="arm_fir_q7.c"/>
    <files mask="arm_conv_fast_q31.c"/>
    <files mask="arm_conv_partial_opt_q7.c"/>
    <files mask="arm_fir_decimate_fast_q15.c"/>
    <files mask="arm_fir_f16.c"/>
    <files mask="arm_fir_interpolate_init_q31.c"/>
    <files mask="arm_correlate_f16.c"/>
    <files mask="arm_biquad_cascade_df1_q31.c"/>
    <files mask="FilteringFunctions.c"/>
    <files mask="arm_correlate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
    <files mask="arm_levinson_durbin_q31.c"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="src">
    <files mask="arm_sin_cos_f32.c"/>
    <files mask="ControllerFunctions.c"/>
    <files mask="arm_pid_reset_q31.c"/>
    <files mask="arm_pid_init_q15.c"/>
    <files mask="arm_sin_cos_q31.c"/>
    <files mask="arm_pid_reset_f32.c"/>
    <files mask="arm_pid_reset_q15.c"/>
    <files mask="arm_pid_init_f32.c"/>
    <files mask="arm_pid_init_q31.c"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="src">
    <files mask="arm_mat_ldlt_f32.c"/>
    <files mask="arm_mat_vec_mult_q31.c"/>
    <files mask="arm_mat_mult_f32.c"/>
    <files mask="arm_mat_mult_fast_q31.c"/>
    <files mask="arm_mat_init_q15.c"/>
    <files mask="arm_mat_mult_fast_q15.c"/>
    <files mask="arm_mat_trans_q15.c"/>
    <files mask="arm_mat_mult_f16.c"/>
    <files mask="arm_mat_cmplx_mult_q31.c"/>
    <files mask="arm_mat_mult_q31.c"/>
    <files mask="arm_mat_init_f32.c"/>
    <files mask="arm_mat_inverse_f32.c"/>
    <files mask="arm_mat_trans_f64.c"/>
    <files mask="arm_mat_cmplx_trans_f16.c"/>
    <files mask="arm_mat_init_f16.c"/>
    <files mask="arm_mat_cmplx_trans_q31.c"/>
    <files mask="arm_mat_mult_q7.c"/>
    <files mask="arm_mat_trans_q7.c"/>
    <files mask="arm_mat_mult_f64.c"/>
    <files mask="arm_mat_scale_f16.c"/>
    <files mask="arm_mat_scale_q31.c"/>
    <files mask="arm_mat_vec_mult_f32.c"/>
    <files mask="arm_mat_solve_lower_triangular_f32.c"/>
    <files mask="arm_mat_solve_lower_triangular_f64.c"/>
    <files mask="arm_mat_cmplx_mult_f32.c"/>
    <files mask="arm_mat_solve_lower_triangular_f16.c"/>
    <files mask="arm_mat_sub_q15.c"/>
    <files mask="arm_mat_scale_f32.c"/>
    <files mask="arm_mat_sub_f32.c"/>
    <files mask="arm_mat_add_q31.c"/>
    <files mask="arm_mat_sub_f16.c"/>
    <files mask="arm_mat_add_f32.c"/>
    <files mask="MatrixFunctions.c"/>
    <files mask="MatrixFunctionsF16.c"/>
    <files mask="arm_mat_cholesky_f32.c"/>
    <files mask="arm_mat_vec_mult_q7.c"/>
    <files mask="arm_mat_mult_q15.c"/>
    <files mask="arm_mat_add_f16.c"/>
    <files mask="arm_mat_trans_q31.c"/>
    <files mask="arm_mat_trans_f16.c"/>
    <files mask="arm_mat_cholesky_f64.c"/>
    <files mask="arm_mat_solve_upper_triangular_f16.c"/>
    <files mask="arm_mat_ldlt_f64.c"/>
    <files mask="arm_mat_solve_upper_triangular_f32.c"/>
    <files mask="arm_mat_vec_mult_f16.c"/>
    <files mask="arm_mat_scale_q15.c"/>
    <files mask="arm_mat_cholesky_f16.c"/>
    <files mask="arm_mat_sub_q31.c"/>
    <files mask="arm_mat_cmplx_trans_q15.c"/>
    <files mask="arm_mat_inverse_f64.c"/>
    <files mask="arm_mat_solve_upper_triangular_f64.c"/>
    <files mask="arm_mat_inverse_f16.c"/>
    <files mask="arm_mat_init_q31.c"/>
    <files mask="arm_mat_cmplx_mult_f16.c"/>
    <files mask="arm_mat_sub_f64.c"/>
    <files mask="arm_mat_trans_f32.c"/>
    <files mask="arm_mat_cmplx_mult_q15.c"/>
    <files mask="arm_mat_add_q15.c"/>
    <files mask="arm_mat_cmplx_trans_f32.c"/>
    <files mask="arm_mat_vec_mult_q15.c"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="src">
    <files mask="CommonTablesF16.c"/>
    <files mask="arm_common_tables_f16.c"/>
    <files mask="arm_mve_tables_f16.c"/>
    <files mask="arm_mve_tables.c"/>
    <files mask="arm_const_structs_f16.c"/>
    <files mask="CommonTables.c"/>
    <files mask="arm_common_tables.c"/>
    <files mask="arm_const_structs.c"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="src">
    <files mask="SupportFunctionsF16.c"/>
    <files mask="SupportFunctions.c"/>
    <files mask="arm_copy_f16.c"/>
    <files mask="arm_bubble_sort_f32.c"/>
    <files mask="arm_fill_q7.c"/>
    <files mask="arm_float_to_f16.c"/>
    <files mask="arm_fill_f16.c"/>
    <files mask="arm_barycenter_f16.c"/>
    <files mask="arm_selection_sort_f32.c"/>
    <files mask="arm_sort_init_f32.c"/>
    <files mask="arm_q15_to_q7.c"/>
    <files mask="arm_copy_q15.c"/>
    <files mask="arm_copy_f32.c"/>
    <files mask="arm_q7_to_q15.c"/>
    <files mask="arm_q31_to_q15.c"/>
    <files mask="arm_sort_f32.c"/>
    <files mask="arm_q15_to_f16.c"/>
    <files mask="arm_copy_q7.c"/>
    <files mask="arm_heap_sort_f32.c"/>
    <files mask="arm_q15_to_float.c"/>
    <files mask="arm_weighted_sum_f16.c"/>
    <files mask="arm_merge_sort_init_f32.c"/>
    <files mask="arm_quick_sort_f32.c"/>
    <files mask="arm_q7_to_float.c"/>
    <files mask="arm_float_to_q15.c"/>
    <files mask="arm_bitonic_sort_f32.c"/>
    <files mask="arm_q15_to_q31.c"/>
    <files mask="arm_barycenter_f32.c"/>
    <files mask="arm_fill_f32.c"/>
    <files mask="arm_merge_sort_f32.c"/>
    <files mask="arm_insertion_sort_f32.c"/>
    <files mask="arm_f16_to_float.c"/>
    <files mask="arm_float_to_q7.c"/>
    <files mask="arm_weighted_sum_f32.c"/>
    <files mask="arm_fill_q31.c"/>
    <files mask="arm_f16_to_q15.c"/>
    <files mask="arm_q7_to_q31.c"/>
    <files mask="arm_q31_to_float.c"/>
    <files mask="arm_copy_q31.c"/>
    <files mask="arm_fill_q15.c"/>
    <files mask="arm_q31_to_q7.c"/>
    <files mask="arm_float_to_q31.c"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="src">
    <files mask="arm_cmplx_mult_real_f16.c"/>
    <files mask="arm_cmplx_mag_squared_f32.c"/>
    <files mask="arm_cmplx_mult_cmplx_f16.c"/>
    <files mask="arm_cmplx_conj_f32.c"/>
    <files mask="arm_cmplx_mag_q31.c"/>
    <files mask="arm_cmplx_conj_q31.c"/>
    <files mask="arm_cmplx_dot_prod_f32.c"/>
    <files mask="ComplexMathFunctionsF16.c"/>
    <files mask="arm_cmplx_mag_q15.c"/>
    <files mask="arm_cmplx_mag_f32.c"/>
    <files mask="arm_cmplx_dot_prod_q31.c"/>
    <files mask="arm_cmplx_dot_prod_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q15.c"/>
    <files mask="arm_cmplx_mag_squared_q15.c"/>
    <files mask="arm_cmplx_conj_q15.c"/>
    <files mask="arm_cmplx_dot_prod_f16.c"/>
    <files mask="arm_cmplx_mult_real_q31.c"/>
    <files mask="arm_cmplx_mult_cmplx_f32.c"/>
    <files mask="arm_cmplx_mag_squared_f16.c"/>
    <files mask="ComplexMathFunctions.c"/>
    <files mask="arm_cmplx_mag_squared_q31.c"/>
    <files mask="arm_cmplx_mult_real_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q31.c"/>
    <files mask="arm_cmplx_mult_real_f32.c"/>
    <files mask="arm_cmplx_mag_f16.c"/>
    <files mask="arm_cmplx_conj_f16.c"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/BayesFunctions" type="src">
    <files mask="BayesFunctions.c"/>
    <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
    <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
    <files mask="BayesFunctionsF16.c"/>
  </source>
  <source relative_path="DSP/Source/BayesFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="src">
    <files mask="arm_or_u32.c"/>
    <files mask="arm_clip_q31.c"/>
    <files mask="arm_mult_f32.c"/>
    <files mask="arm_dot_prod_q31.c"/>
    <files mask="arm_sub_f32.c"/>
    <files mask="arm_sub_q15.c"/>
    <files mask="arm_shift_q7.c"/>
    <files mask="arm_clip_f32.c"/>
    <files mask="arm_xor_u16.c"/>
    <files mask="arm_abs_q7.c"/>
    <files mask="arm_mult_f16.c"/>
    <files mask="arm_and_u8.c"/>
    <files mask="arm_abs_q31.c"/>
    <files mask="arm_mult_q31.c"/>
    <files mask="arm_dot_prod_f32.c"/>
    <files mask="arm_or_u16.c"/>
    <files mask="arm_clip_q15.c"/>
    <files mask="arm_clip_q7.c"/>
    <files mask="arm_or_u8.c"/>
    <files mask="arm_offset_q31.c"/>
    <files mask="arm_and_u32.c"/>
    <files mask="arm_clip_f16.c"/>
    <files mask="arm_shift_q15.c"/>
    <files mask="arm_shift_q31.c"/>
    <files mask="arm_negate_q7.c"/>
    <files mask="arm_add_q15.c"/>
    <files mask="arm_not_u16.c"/>
    <files mask="arm_add_q7.c"/>
    <files mask="arm_offset_f32.c"/>
    <files mask="arm_xor_u32.c"/>
    <files mask="arm_dot_prod_q15.c"/>
    <files mask="arm_mult_q7.c"/>
    <files mask="arm_dot_prod_q7.c"/>
    <files mask="arm_abs_f32.c"/>
    <files mask="arm_negate_q15.c"/>
    <files mask="arm_scale_q15.c"/>
    <files mask="arm_not_u8.c"/>
    <files mask="arm_mult_q15.c"/>
    <files mask="arm_add_q31.c"/>
    <files mask="arm_scale_q7.c"/>
    <files mask="arm_xor_u8.c"/>
    <files mask="BasicMathFunctionsF16.c"/>
    <files mask="arm_offset_q7.c"/>
    <files mask="BasicMathFunctions.c"/>
    <files mask="arm_sub_q31.c"/>
    <files mask="arm_offset_f16.c"/>
    <files mask="arm_negate_f16.c"/>
    <files mask="arm_abs_f16.c"/>
    <files mask="arm_scale_f16.c"/>
    <files mask="arm_add_f16.c"/>
    <files mask="arm_sub_q7.c"/>
    <files mask="arm_negate_f32.c"/>
    <files mask="arm_not_u32.c"/>
    <files mask="arm_dot_prod_f16.c"/>
    <files mask="arm_abs_q15.c"/>
    <files mask="arm_scale_f32.c"/>
    <files mask="arm_and_u16.c"/>
    <files mask="arm_sub_f16.c"/>
    <files mask="arm_add_f32.c"/>
    <files mask="arm_offset_q15.c"/>
    <files mask="arm_negate_q31.c"/>
    <files mask="arm_scale_q31.c"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/DistanceFunctions" type="src">
    <files mask="arm_braycurtis_distance_f32.c"/>
    <files mask="arm_rogerstanimoto_distance.c"/>
    <files mask="arm_jensenshannon_distance_f32.c"/>
    <files mask="arm_cityblock_distance_f16.c"/>
    <files mask="arm_cosine_distance_f16.c"/>
    <files mask="arm_chebyshev_distance_f16.c"/>
    <files mask="arm_jaccard_distance.c"/>
    <files mask="arm_minkowski_distance_f32.c"/>
    <files mask="arm_cosine_distance_f32.c"/>
    <files mask="arm_correlation_distance_f32.c"/>
    <files mask="arm_euclidean_distance_f16.c"/>
    <files mask="DistanceFunctions.c"/>
    <files mask="arm_correlation_distance_f16.c"/>
    <files mask="arm_hamming_distance.c"/>
    <files mask="arm_jensenshannon_distance_f16.c"/>
    <files mask="arm_canberra_distance_f32.c"/>
    <files mask="arm_boolean_distance.c"/>
    <files mask="DistanceFunctionsF16.c"/>
    <files mask="arm_minkowski_distance_f16.c"/>
    <files mask="arm_euclidean_distance_f32.c"/>
    <files mask="arm_russellrao_distance.c"/>
    <files mask="arm_kulsinski_distance.c"/>
    <files mask="arm_canberra_distance_f16.c"/>
    <files mask="arm_yule_distance.c"/>
    <files mask="arm_sokalsneath_distance.c"/>
    <files mask="arm_sokalmichener_distance.c"/>
    <files mask="arm_braycurtis_distance_f16.c"/>
    <files mask="arm_cityblock_distance_f32.c"/>
    <files mask="arm_dice_distance.c"/>
    <files mask="arm_chebyshev_distance_f32.c"/>
  </source>
  <source relative_path="DSP/Source/DistanceFunctions" type="c_include">
    <files mask="arm_boolean_distance_template.h"/>
  </source>
  <source relative_path="DSP/Source/DistanceFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
</component>-->
    <component id="COPY_BSD_License.MKM35Z7" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="MKM35Z512xxx7" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.MKM35Z7.MKM35Z7" name="MKM35Z7" brief="Devices_project_template MKM35Z7" version="1.0.0" full_name="Devices_project_template MKM35Z7" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MKM35Z7/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="platform.drivers.clock.MKM35Z7"/>
          <component_dependency value="platform.drivers.port.MKM35Z7"/>
          <component_dependency value="platform.drivers.gpio.MKM35Z7"/>
          <component_dependency value="platform.drivers.smc.MKM35Z7"/>
          <component_dependency value="platform.drivers.irtc.MKM35Z7"/>
          <component_dependency value="device.MKM35Z7_startup.MKM35Z7"/>
          <component_dependency value="component.uart_adapter.MKM35Z7"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MKM35Z7"/>
              <component_dependency value="platform.utilities.assert.MKM35Z7"/>
              <component_dependency value="component.serial_manager.MKM35Z7"/>
            </all>
            <all>
              <component_dependency value="utility.debug_console_lite.MKM35Z7"/>
              <component_dependency value="platform.utilities.assert_lite.MKM35Z7"/>
            </all>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MKM35Z7" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MKM35Z7/template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma.MKM35Z7"/>
          <component_dependency value="platform.drivers.dmamux.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.MKM35Z7" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="MKM35Z512xxx7" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.flash_adapter.MKM35Z7" name="flash_adapter" brief="Component flash_adapter" version="1.0.0" full_name="Component flash_adapter" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="platform.drivers.flash.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flash.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MKM35Z7" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.MKM35Z7" name="log" brief="Component log" version="1.0.0" full_name="Component log" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="utility.debug_console.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.MKM35Z7" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="component.log.MKM35Z7"/>
          <component_dependency value="utility.debug_console.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MKM35Z7" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="component.log.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.MKM35Z7" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="platform.drivers.lptmr.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MKM35Z7" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="platform.drivers.lpuart.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MKM35Z7" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="component.lists.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MKM35Z7" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MKM35Z7" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MKM35Z7" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MKM35Z7" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MKM35Z7" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="component.lists.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MKM35Z7" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="component.lists.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_free_rtos.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pit_adapter.MKM35Z7" name="pit_adapter" brief="Component pit_adapter" version="1.0.0" full_name="Component pit_adapter" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="platform.drivers.pit.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MKM35Z7" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="component.lists.MKM35Z7"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MKM35Z7"/>
            <component_dependency value="component.serial_manager_virtual.MKM35Z7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MKM35Z7" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.uart_adapter.MKM35Z7"/>
          <component_dependency value="component.serial_manager.MKM35Z7"/>
          <any_of>
            <component_dependency value="platform.drivers.uart.MKM35Z7"/>
            <component_dependency value="platform.drivers.lpuart.MKM35Z7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MKM35Z7" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.uart_adapter.MKM35Z7" name="uart_adapter" brief="Component uart_adapter" version="1.0.0" full_name="uart_adapter" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
          <component_dependency value="platform.drivers.uart.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MKM35Z7_CMSIS.MKM35Z7" name="MKM35Z7_CMSIS" brief="Device MKM35Z7_cmsis" version="1.0.0" full_name="Device MKM35Z7_cmsis" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="CMSIS_Include" package_base_path="devices/MKM35Z7" project_base_path="device">
      <dependencies>
        <component_dependency value="CMSIS_Include_core_cm.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="MKM35Z7.h"/>
        <files mask="MKM35Z7_features.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MKM35Z7_debugger.MKM35Z7" name="MKM35Z7_debugger" brief="Device MKM35Z7_debugger" version="1.0.0" full_name="Device MKM35Z7_debugger" devices="MKM35Z512xxx7" user_visible="true" type="debugger" package_base_path="devices/MKM35Z7" project_base_path="MKM35Z7">
      <source relative_path="./" type="xml">
        <files mask="MKM35Z7.xml"/>
      </source>
    </component>
    <component id="platform.devices.MKM35Z7_linker.MKM35Z7" name="MKM35Z7_linker" brief="Device MKM35Z7_linker" version="1.0.0" full_name="Device MKM35Z7_linker" devices="MKM35Z512xxx7" user_visible="true" type="linker" package_base_path="devices/MKM35Z7" project_base_path="MKM35Z7"/>
    <component id="device.MKM35Z7_startup.MKM35Z7" name="MKM35Z7_startup" brief="Device MKM35Z7_startup" version="1.1.0" full_name="Device MKM35Z7_startup" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MKM35Z7" project_base_path="startup">
      <dependencies>
        <component_dependency value="device.MKM35Z7_system.MKM35Z7"/>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c">
        <files mask="startup_mkm35z7.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp">
        <files mask="startup_mkm35z7.cpp"/>
      </source>
    </component>
    <component id="device.MKM35Z7_system.MKM35Z7" name="MKM35Z7_system" brief="Device MKM35Z7_system" version="1.0.0" full_name="Device MKM35Z7_system" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="CMSIS_Include" package_base_path="devices/MKM35Z7" project_base_path="device">
      <dependencies>
        <component_dependency value="device.MKM35Z7_CMSIS.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_MKM35Z7.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_MKM35Z7.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.FreeRTOS.MKM35Z7" name="FreeRTOS documentation" brief="FreeRTOS documentation" version="1.0.0" full_name="FreeRTOS documentation" devices="MKM35Z512xxx7" user_visible="true" type="documentation" package_base_path="docs/FreeRTOS" project_base_path="FreeRTOS">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpressoSDK and FreeRTOS OS.pdf"/>
      </source>
    </component>
    <component id="docs.MKM35Z7.MKM35Z7" name="MKM35Z7" brief="Docs mkm35z7" version="1.0.0" full_name="Docs mkm35z7" devices="MKM35Z512xxx7" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for TWR-KM35Z75M.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for TWR-KM35Z75M.pdf"/>
      </source>
    </component>
    <component id="docs.fmstr.MKM35Z7" name="FreeMASTER" brief="Driver code enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN and BDM/JTAG physical interface." version="3.0.2" full_name="FreeMASTER communication driver" devices="MKM35Z512xxx7" user_visible="true" type="documentation" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <component_dependency value="middleware.fmstr.MKM35Z7"/>
      </dependencies>
    </component>
    <component id="docs.mcu-boot.kinetis.MKM35Z7" name="kinetis" brief="Docs mcu-boot kinetis" version="1.0.0" full_name="Docs mcu-boot kinetis" devices="MKM35Z512xxx7" user_visible="true" type="documentation" package_base_path="docs/mcu-boot" project_base_path="mcu-boot">
      <source relative_path="./" type="doc">
        <files mask="Kinetis MCU Manufacturing Tool User's Guide.pdf"/>
        <files mask="Kinetis Flash Tool User's Guide.pdf"/>
        <files mask="Getting Started with the Flashloader for Kinetis.pdf"/>
        <files mask="MCU Bootloader Demo Applications User's Guide.pdf"/>
        <files mask="MCU Bootloader Reference Manual.pdf"/>
        <files mask="MCU Bootloader Release Notes.pdf"/>
      </source>
    </component>
    <component id="docs.metering.MKM35Z7" name="metering" brief="Docs metering" version="1.0.0" full_name="Docs metering" devices="MKM35Z512xxx7" user_visible="true" type="documentation" package_base_path="docs/metering" project_base_path="metering">
      <source relative_path="./" type="doc">
        <files mask="AN4255.pdf"/>
        <files mask="AN4265.pdf"/>
        <files mask="AN4847.pdf"/>
      </source>
    </component>
    <component id="docs_external.MKM35Z7.MKM35Z7" name="docs_external.MKM35Z7" brief="External documentation for MKM35Z7." version="1.0.0" full_name="External documentation" devices="MKM35Z512xxx7" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="MCUXpresso SDK ChangeLog_MKM35Z7.pdf"/>
        <files mask="MCUXpresso SDK API Reference Manual_MKM35Z7.pdf"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MKM35Z7" type="doc">
        <files mask="dir_3426deb2dd7b86c400852d77edf21315.html"/>
        <files mask="a00163.html"/>
        <files mask="a00021.html"/>
        <files mask="dir_a58638a16d63b3fca53dfe05c0e7858e.html"/>
        <files mask="dir_13e7b449b29780a4af8c8692d20059c8.html"/>
        <files mask="a00012.html"/>
        <files mask="dir_a343a3e9cbb710280ccd0de2056b945d.html"/>
        <files mask="a00041.html"/>
        <files mask="a00019.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="a00006.html"/>
        <files mask="a00033.html"/>
        <files mask="a00004.html"/>
        <files mask="a00008.html"/>
        <files mask="dir_ea982a4a90bbf64c8a612131ad2f0fcb.html"/>
        <files mask="dir_cac61d4c063aa297ebf4006623d62dc6.html"/>
        <files mask="a00010.html"/>
        <files mask="a00009.html"/>
        <files mask="a00034.html"/>
        <files mask="dir_48dd3c62d7c86167056c35ed6b546d27.html"/>
        <files mask="a00020.html"/>
        <files mask="a00027.html"/>
        <files mask="a00042.html"/>
        <files mask="dir_416fc20155a03b7bbc5728a57d236b9f.html"/>
        <files mask="tabs.css"/>
        <files mask="dir_58e102d2449f7b3d87d5edc08313c5d7.html"/>
        <files mask="dir_fa5fdb8d20f935f25433a14a3646651d.html"/>
        <files mask="a00023.html"/>
        <files mask="a00168.html"/>
        <files mask="dir_252e093e644d88ecffac71708c50cbfe.html"/>
        <files mask="a00161.html"/>
        <files mask="a00031.html"/>
        <files mask="dir_0c267f045edb9b0ef64e9a860fd099c4.html"/>
        <files mask="a00015.html"/>
        <files mask="dir_e683f204d6c251cd0e483bc258ef2ba0.html"/>
        <files mask="index.html"/>
        <files mask="dir_848ba48fec923bc3c0bf8c7926036968.html"/>
        <files mask="dir_581c511cdb7e3410adc63f657da77e6e.html"/>
        <files mask="a00048.html"/>
        <files mask="a00170.html"/>
        <files mask="a00045.html"/>
        <files mask="dir_f7e99b515278d57327e2df3b2ab543bb.html"/>
        <files mask="a00162.html"/>
        <files mask="a00036.html"/>
        <files mask="a00017.html"/>
        <files mask="dir_c1bdd455095b450ba05d242eedec49bf.html"/>
        <files mask="a00165.html"/>
        <files mask="a00154.html"/>
        <files mask="a00172.html"/>
        <files mask="a00025.html"/>
        <files mask="dir_4eaab06f456111991ff05c9b9cb737cb.html"/>
        <files mask="dir_83c4f67939b2e50b6dc50fe3fc259b2d.html"/>
        <files mask="dir_ea5f9633cc51d3e2a6a258aee7e636f0.html"/>
        <files mask="a00011.html"/>
        <files mask="dir_c11bbce90795ba4d3b4ccc8cda3c0375.html"/>
        <files mask="a00037.html"/>
        <files mask="a00002.html"/>
        <files mask="a00029.html"/>
        <files mask="dir_b5759f6cd324301c8d375e44421eccc5.html"/>
        <files mask="dir_c938a579b44771c570cc4401caca1213.html"/>
        <files mask="a00175.html"/>
        <files mask="a00039.html"/>
        <files mask="a00169.html"/>
        <files mask="dir_ac7a2beb2464fcf2f50409acf0bc6e08.html"/>
        <files mask="a00171.html"/>
        <files mask="dir_bebc14e255be79244de9e03d794361f1.html"/>
        <files mask="dir_50c0f6d3977876a8fb6acc75ece63018.html"/>
        <files mask="dir_82ab225bc988b5671d0d6db14c68d410.html"/>
        <files mask="dir_27520577c3d33edf81ffa63786490c32.html"/>
        <files mask="dir_07b86ffc266b39efa5bbdc0e9fdb330a.html"/>
        <files mask="dir_4d587534c930721bb7699d438d28eeba.html"/>
        <files mask="a00044.html"/>
        <files mask="a00022.html"/>
        <files mask="dir_fbef74b0821a4a6b9566512e5bbdae93.html"/>
        <files mask="dir_b1c4d21f93a7826ef4aed70b30552b97.html"/>
        <files mask="a00157.html"/>
        <files mask="a00043.html"/>
        <files mask="dir_ab4b5d6843711aca26ae0a84be0c2a08.html"/>
        <files mask="dir_b60bc431cd2d2a4b7e645c1f73116460.html"/>
        <files mask="a00038.html"/>
        <files mask="a00013.html"/>
        <files mask="a00040.html"/>
        <files mask="dir_6856d0327c4a731b994e696b97c35370.html"/>
        <files mask="dir_c5a52a81292cf9a5167198f4f346d6d9.html"/>
        <files mask="a00035.html"/>
        <files mask="dir_a5a4163079caddaa8183e3ba69b405bf.html"/>
        <files mask="doxygen.css"/>
        <files mask="a00156.html"/>
        <files mask="dir_b33ed5b80b075b6e24b0f1f0112a8b04.html"/>
        <files mask="a00160.html"/>
        <files mask="a00024.html"/>
        <files mask="a00028.html"/>
        <files mask="a00167.html"/>
        <files mask="a00174.html"/>
        <files mask="a00047.html"/>
        <files mask="dir_d0b0cea4c1afa919405231e98537b73c.html"/>
        <files mask="dir_409f97388efe006bc3438b95e9edef48.html"/>
        <files mask="dir_c4edd0d3c734e84027d2604f4ae444b4.html"/>
        <files mask="dir_e5df8f928019563db5aab1a9cbbfeae5.html"/>
        <files mask="a00173.html"/>
        <files mask="a00159.html"/>
        <files mask="a00026.html"/>
        <files mask="navtree.css"/>
        <files mask="dir_9108bfa6c83c7c513e3e0128411a10b0.html"/>
        <files mask="dir_e78230b9814187c44d2cfec602885c0a.html"/>
        <files mask="a00155.html"/>
        <files mask="pages.html"/>
        <files mask="a00032.html"/>
        <files mask="a00018.html"/>
        <files mask="a00158.html"/>
        <files mask="a00016.html"/>
        <files mask="dir_5c96277754ed418959ea3b47c456d5c0.html"/>
        <files mask="a00153.html"/>
        <files mask="a00030.html"/>
        <files mask="a00164.html"/>
        <files mask="a00046.html"/>
        <files mask="dir_a595ca013f2e2ca0e9084386b7dcbe2f.html"/>
        <files mask="dir_ce398445e764dfe1c276d90547ea9197.html"/>
        <files mask="modules.html"/>
        <files mask="dir_b07b1803b08e3bfa8752acf7d436415b.html"/>
        <files mask="a00014.html"/>
        <files mask="dir_b38072318156de4984ac57667f7c931f.html"/>
        <files mask="a00166.html"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MKM35Z7" type="script">
        <files mask="a00030.js"/>
        <files mask="a00166.js"/>
        <files mask="a00023.js"/>
        <files mask="a00169.js"/>
        <files mask="a00038.js"/>
        <files mask="navtreeindex9.js"/>
        <files mask="a00014.js"/>
        <files mask="a00036.js"/>
        <files mask="a00008.js"/>
        <files mask="a00028.js"/>
        <files mask="navtreeindex8.js"/>
        <files mask="a00035.js"/>
        <files mask="a00017.js"/>
        <files mask="a00165.js"/>
        <files mask="a00171.js"/>
        <files mask="a00175.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="a00042.js"/>
        <files mask="a00157.js"/>
        <files mask="a00156.js"/>
        <files mask="a00159.js"/>
        <files mask="a00022.js"/>
        <files mask="a00032.js"/>
        <files mask="a00173.js"/>
        <files mask="a00033.js"/>
        <files mask="a00012.js"/>
        <files mask="navtreeindex10.js"/>
        <files mask="navtreeindex5.js"/>
        <files mask="a00029.js"/>
        <files mask="a00021.js"/>
        <files mask="a00041.js"/>
        <files mask="a00034.js"/>
        <files mask="a00039.js"/>
        <files mask="a00015.js"/>
        <files mask="a00167.js"/>
        <files mask="a00010.js"/>
        <files mask="navtreeindex4.js"/>
        <files mask="a00168.js"/>
        <files mask="a00009.js"/>
        <files mask="a00016.js"/>
        <files mask="a00047.js"/>
        <files mask="a00044.js"/>
        <files mask="a00026.js"/>
        <files mask="a00019.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="a00025.js"/>
        <files mask="a00013.js"/>
        <files mask="a00043.js"/>
        <files mask="a00162.js"/>
        <files mask="a00161.js"/>
        <files mask="a00154.js"/>
        <files mask="a00031.js"/>
        <files mask="modules.js"/>
        <files mask="a00027.js"/>
        <files mask="navtreeindex7.js"/>
        <files mask="a00037.js"/>
        <files mask="navtreeindex6.js"/>
        <files mask="a00045.js"/>
        <files mask="resize.js"/>
        <files mask="a00018.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="a00163.js"/>
        <files mask="a00024.js"/>
        <files mask="a00155.js"/>
        <files mask="a00020.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="dynsections.js"/>
        <files mask="a00048.js"/>
        <files mask="a00046.js"/>
        <files mask="a00040.js"/>
        <files mask="navtree.js"/>
        <files mask="a00160.js"/>
        <files mask="navtreeindex11.js"/>
        <files mask="a00011.js"/>
        <files mask="jquery.js"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MKM35Z7/search" type="doc">
        <files mask="typedefs_73.html"/>
        <files mask="functions_75.html"/>
        <files mask="classes_77.html"/>
        <files mask="all_68.html"/>
        <files mask="classes_6c.html"/>
        <files mask="groups_76.html"/>
        <files mask="variables_6f.html"/>
        <files mask="variables_6d.html"/>
        <files mask="all_6c.html"/>
        <files mask="classes_63.html"/>
        <files mask="enums_77.html"/>
        <files mask="classes_61.html"/>
        <files mask="variables_69.html"/>
        <files mask="classes_70.html"/>
        <files mask="groups_67.html"/>
        <files mask="typedefs_66.html"/>
        <files mask="functions_63.html"/>
        <files mask="all_64.html"/>
        <files mask="functions_6d.html"/>
        <files mask="variables_73.html"/>
        <files mask="all_63.html"/>
        <files mask="functions_69.html"/>
        <files mask="functions_6c.html"/>
        <files mask="classes_71.html"/>
        <files mask="typedefs_69.html"/>
        <files mask="enums_70.html"/>
        <files mask="variables_75.html"/>
        <files mask="all_74.html"/>
        <files mask="enums_72.html"/>
        <files mask="enums_6c.html"/>
        <files mask="groups_65.html"/>
        <files mask="typedefs_75.html"/>
        <files mask="enums_78.html"/>
        <files mask="enums_75.html"/>
        <files mask="all_73.html"/>
        <files mask="all_79.html"/>
        <files mask="all_6f.html"/>
        <files mask="pages_74.html"/>
        <files mask="pages_69.html"/>
        <files mask="enums_64.html"/>
        <files mask="search.css"/>
        <files mask="variables_70.html"/>
        <files mask="classes_75.html"/>
        <files mask="variables_6c.html"/>
        <files mask="groups_78.html"/>
        <files mask="variables_68.html"/>
        <files mask="functions_78.html"/>
        <files mask="all_70.html"/>
        <files mask="functions_76.html"/>
        <files mask="classes_66.html"/>
        <files mask="classes_78.html"/>
        <files mask="classes_64.html"/>
        <files mask="functions_6e.html"/>
        <files mask="variables_63.html"/>
        <files mask="enums_65.html"/>
        <files mask="functions_71.html"/>
        <files mask="variables_61.html"/>
        <files mask="groups_75.html"/>
        <files mask="variables_79.html"/>
        <files mask="enums_71.html"/>
        <files mask="all_65.html"/>
        <files mask="all_67.html"/>
        <files mask="functions_65.html"/>
        <files mask="variables_62.html"/>
        <files mask="enums_63.html"/>
        <files mask="classes_69.html"/>
        <files mask="variables_65.html"/>
        <files mask="enums_6d.html"/>
        <files mask="enums_5f.html"/>
        <files mask="all_6e.html"/>
        <files mask="classes_76.html"/>
        <files mask="enums_76.html"/>
        <files mask="classes_6d.html"/>
        <files mask="all_75.html"/>
        <files mask="enums_61.html"/>
        <files mask="groups_64.html"/>
        <files mask="nomatches.html"/>
        <files mask="all_77.html"/>
        <files mask="groups_71.html"/>
        <files mask="groups_66.html"/>
        <files mask="all_62.html"/>
        <files mask="enums_6f.html"/>
        <files mask="groups_6d.html"/>
        <files mask="groups_77.html"/>
        <files mask="enums_67.html"/>
        <files mask="groups_6c.html"/>
        <files mask="enums_69.html"/>
        <files mask="typedefs_6e.html"/>
        <files mask="pages_64.html"/>
        <files mask="functions_66.html"/>
        <files mask="variables_6e.html"/>
        <files mask="all_66.html"/>
        <files mask="groups_69.html"/>
        <files mask="classes_72.html"/>
        <files mask="variables_64.html"/>
        <files mask="variables_66.html"/>
        <files mask="typedefs_6c.html"/>
        <files mask="all_69.html"/>
        <files mask="all_5f.html"/>
        <files mask="groups_73.html"/>
        <files mask="functions_77.html"/>
        <files mask="all_78.html"/>
        <files mask="classes_73.html"/>
        <files mask="classes_5f.html"/>
        <files mask="functions_70.html"/>
        <files mask="functions_64.html"/>
        <files mask="groups_72.html"/>
        <files mask="groups_61.html"/>
        <files mask="enums_66.html"/>
        <files mask="groups_70.html"/>
        <files mask="enums_6e.html"/>
        <files mask="variables_67.html"/>
        <files mask="pages_61.html"/>
        <files mask="all_61.html"/>
        <files mask="groups_6e.html"/>
        <files mask="classes_6e.html"/>
        <files mask="variables_74.html"/>
        <files mask="classes_65.html"/>
        <files mask="all_6b.html"/>
        <files mask="all_71.html"/>
        <files mask="classes_6f.html"/>
        <files mask="variables_77.html"/>
        <files mask="typedefs_64.html"/>
        <files mask="functions_73.html"/>
        <files mask="typedefs_63.html"/>
        <files mask="enumvalues_6b.html"/>
        <files mask="variables_76.html"/>
        <files mask="classes_67.html"/>
        <files mask="functions_67.html"/>
        <files mask="functions_61.html"/>
        <files mask="all_72.html"/>
        <files mask="all_6d.html"/>
        <files mask="all_76.html"/>
        <files mask="enums_73.html"/>
        <files mask="groups_63.html"/>
        <files mask="variables_72.html"/>
        <files mask="functions_72.html"/>
        <files mask="typedefs_70.html"/>
        <files mask="functions_6f.html"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MKM35Z7/search" type="script">
        <files mask="groups_6e.js"/>
        <files mask="classes_70.js"/>
        <files mask="typedefs_75.js"/>
        <files mask="enums_6e.js"/>
        <files mask="groups_65.js"/>
        <files mask="groups_70.js"/>
        <files mask="all_64.js"/>
        <files mask="groups_71.js"/>
        <files mask="enums_67.js"/>
        <files mask="functions_65.js"/>
        <files mask="classes_71.js"/>
        <files mask="variables_6e.js"/>
        <files mask="variables_63.js"/>
        <files mask="functions_67.js"/>
        <files mask="typedefs_70.js"/>
        <files mask="variables_61.js"/>
        <files mask="enumvalues_6b.js"/>
        <files mask="typedefs_69.js"/>
        <files mask="groups_64.js"/>
        <files mask="all_65.js"/>
        <files mask="variables_77.js"/>
        <files mask="variables_67.js"/>
        <files mask="all_67.js"/>
        <files mask="groups_78.js"/>
        <files mask="variables_72.js"/>
        <files mask="functions_77.js"/>
        <files mask="enums_73.js"/>
        <files mask="search.js"/>
        <files mask="functions_6c.js"/>
        <files mask="enums_78.js"/>
        <files mask="classes_69.js"/>
        <files mask="pages_69.js"/>
        <files mask="classes_6c.js"/>
        <files mask="classes_6e.js"/>
        <files mask="classes_65.js"/>
        <files mask="functions_63.js"/>
        <files mask="classes_64.js"/>
        <files mask="classes_6d.js"/>
        <files mask="classes_5f.js"/>
        <files mask="variables_73.js"/>
        <files mask="pages_61.js"/>
        <files mask="variables_75.js"/>
        <files mask="all_6f.js"/>
        <files mask="variables_79.js"/>
        <files mask="all_66.js"/>
        <files mask="all_68.js"/>
        <files mask="enums_77.js"/>
        <files mask="typedefs_6c.js"/>
        <files mask="functions_70.js"/>
        <files mask="all_70.js"/>
        <files mask="all_6b.js"/>
        <files mask="typedefs_6e.js"/>
        <files mask="enums_65.js"/>
        <files mask="typedefs_73.js"/>
        <files mask="typedefs_63.js"/>
        <files mask="groups_63.js"/>
        <files mask="all_77.js"/>
        <files mask="classes_61.js"/>
        <files mask="all_63.js"/>
        <files mask="all_5f.js"/>
        <files mask="groups_61.js"/>
        <files mask="enums_72.js"/>
        <files mask="all_78.js"/>
        <files mask="all_61.js"/>
        <files mask="functions_6f.js"/>
        <files mask="classes_75.js"/>
        <files mask="classes_66.js"/>
        <files mask="enums_63.js"/>
        <files mask="groups_6c.js"/>
        <files mask="variables_64.js"/>
        <files mask="variables_76.js"/>
        <files mask="functions_66.js"/>
        <files mask="all_71.js"/>
        <files mask="enums_5f.js"/>
        <files mask="enums_6d.js"/>
        <files mask="functions_6e.js"/>
        <files mask="functions_61.js"/>
        <files mask="enums_70.js"/>
        <files mask="groups_66.js"/>
        <files mask="variables_69.js"/>
        <files mask="groups_73.js"/>
        <files mask="functions_71.js"/>
        <files mask="all_69.js"/>
        <files mask="variables_6f.js"/>
        <files mask="enums_64.js"/>
        <files mask="all_72.js"/>
        <files mask="all_76.js"/>
        <files mask="typedefs_64.js"/>
        <files mask="classes_77.js"/>
        <files mask="functions_76.js"/>
        <files mask="variables_62.js"/>
        <files mask="all_6e.js"/>
        <files mask="all_73.js"/>
        <files mask="variables_6d.js"/>
        <files mask="variables_74.js"/>
        <files mask="classes_78.js"/>
        <files mask="pages_64.js"/>
        <files mask="enums_61.js"/>
        <files mask="enums_76.js"/>
        <files mask="enums_69.js"/>
        <files mask="all_62.js"/>
        <files mask="enums_6c.js"/>
        <files mask="variables_68.js"/>
        <files mask="variables_6c.js"/>
        <files mask="variables_70.js"/>
        <files mask="classes_76.js"/>
        <files mask="functions_75.js"/>
        <files mask="groups_6d.js"/>
        <files mask="all_75.js"/>
        <files mask="classes_6f.js"/>
        <files mask="groups_76.js"/>
        <files mask="variables_66.js"/>
        <files mask="groups_67.js"/>
        <files mask="classes_72.js"/>
        <files mask="functions_6d.js"/>
        <files mask="all_79.js"/>
        <files mask="groups_75.js"/>
        <files mask="enums_71.js"/>
        <files mask="groups_72.js"/>
        <files mask="functions_69.js"/>
        <files mask="all_6d.js"/>
        <files mask="enums_6f.js"/>
        <files mask="enums_66.js"/>
        <files mask="functions_73.js"/>
        <files mask="enums_75.js"/>
        <files mask="classes_63.js"/>
        <files mask="groups_77.js"/>
        <files mask="groups_69.js"/>
        <files mask="typedefs_66.js"/>
        <files mask="classes_73.js"/>
        <files mask="classes_67.js"/>
        <files mask="pages_74.js"/>
        <files mask="variables_65.js"/>
        <files mask="functions_78.js"/>
        <files mask="functions_72.js"/>
        <files mask="functions_64.js"/>
        <files mask="all_6c.js"/>
        <files mask="all_74.js"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MKM35Z7/search" type="image">
        <files mask="search_r.png"/>
        <files mask="search_l.png"/>
        <files mask="mag_sel.png"/>
        <files mask="close.png"/>
        <files mask="search_m.png"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MKM35Z7" type="image">
        <files mask="ftv2vertline.png"/>
        <files mask="ftv2node.png"/>
        <files mask="tab_b.png"/>
        <files mask="ftv2blank.png"/>
        <files mask="Kinetis_SDK_Block_Diagram.jpg"/>
        <files mask="ftv2plastnode.png"/>
        <files mask="ftv2mo.png"/>
        <files mask="bc_s.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="nav_h.png"/>
        <files mask="fs_logo.gif"/>
        <files mask="debug_console_overview.jpg"/>
        <files mask="tab_a.png"/>
        <files mask="bdwn.png"/>
        <files mask="ftv2folderopen.png"/>
        <files mask="sync_off.png"/>
        <files mask="ftv2mlastnode.png"/>
        <files mask="tab_s.png"/>
        <files mask="ftv2ns.png"/>
        <files mask="ftv2mnode.png"/>
        <files mask="ftv2folderclosed.png"/>
        <files mask="open.png"/>
        <files mask="ftv2doc.png"/>
        <files mask="ftv2lastnode.png"/>
        <files mask="tab_h.png"/>
        <files mask="arm_logo.png"/>
        <files mask="closed.png"/>
        <files mask="ftv2splitbar.png"/>
        <files mask="ftv2pnode.png"/>
        <files mask="ftv2link.png"/>
        <files mask="ftv2cl.png"/>
        <files mask="nav_g.png"/>
        <files mask="sync_on.png"/>
        <files mask="nav_f.png"/>
        <files mask="doxygen.png"/>
      </source>
    </component>
    <component id="platform.drivers.adc16.MKM35Z7" name="adc" brief="ADC16 Driver" version="2.3.0" full_name="ADC16 Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adc16.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc16.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.afe.MKM35Z7" name="afe" brief="AFE Driver" version="2.0.2" full_name="AFE Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_afe.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_afe.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MKM35Z7" name="clock" brief="Clock Driver" version="2.2.1" full_name="Clock Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cmp.MKM35Z7" name="cmp" brief="CMP Driver" version="2.0.2" full_name="CMP Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cmp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_cmsis.MKM35Z7" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.2.0" full_name="I2C CMSIS Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKM35Z7/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c_dma.MKM35Z7"/>
          <component_dependency value="platform.drivers.i2c.MKM35Z7"/>
          <component_dependency value="CMSIS_Driver_Include.I2C.MKM35Z7"/>
          <component_dependency value="RTE_Device.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spi_cmsis.MKM35Z7" name="spi_cmsis" brief="SPI CMSIS Driver" version="2.3.0" full_name="SPI CMSIS Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKM35Z7/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.spi_dma.MKM35Z7"/>
          <component_dependency value="platform.drivers.spi.MKM35Z7"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MKM35Z7"/>
          <component_dependency value="RTE_Device.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_cmsis.MKM35Z7" name="uart_cmsis" brief="UART CMSIS Driver" version="2.1.0" full_name="UART CMSIS Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKM35Z7/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart_dma.MKM35Z7"/>
          <component_dependency value="platform.drivers.uart.MKM35Z7"/>
          <component_dependency value="CMSIS_Driver_Include.USART.MKM35Z7"/>
          <component_dependency value="RTE_Device.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MKM35Z7" name="common" brief="COMMON Driver" version="2.3.2" full_name="COMMON Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MKM35Z7"/>
          <component_dependency value="device.MKM35Z7_CMSIS.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="core0_MKM35Z512xxx7">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="core0_MKM35Z512xxx7">
        <files mask="fsl_common_arm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.crc.MKM35Z7" name="crc" brief="CRC Driver" version="2.0.3" full_name="CRC Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dma.MKM35Z7" name="dma" brief="DMA Driver" version="2.1.1" full_name="DMA Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmamux.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmamux.MKM35Z7" name="dmamux" brief="DMAMUX Driver" version="2.0.5" full_name="DMAMUX Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.MKM35Z7" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flash.MKM35Z7" name="flash" brief="Flash Driver" version="3.0.0" full_name="Flash Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ftfx_adapter.h"/>
        <files mask="fsl_ftfx_utilities.h"/>
        <files mask="fsl_ftfx_features.h"/>
        <files mask="fsl_ftfx_controller.h"/>
        <files mask="fsl_ftfx_flash.h"/>
        <files mask="fsl_ftfx_cache.h"/>
        <files mask="fsl_ftfx_flexnvm.h"/>
        <files mask="fsl_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ftfx_controller.c"/>
        <files mask="fsl_ftfx_flash.c"/>
        <files mask="fsl_ftfx_cache.c"/>
        <files mask="fsl_ftfx_flexnvm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpio.MKM35Z7" name="gpio" brief="GPIO Driver" version="2.6.0" full_name="GPIO Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c.MKM35Z7" name="i2c" brief="I2C Driver" version="2.0.9" full_name="I2C Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_dma.MKM35Z7" name="i2c_dma" brief="I2C Driver" version="2.0.9" full_name="I2C DMA Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c.MKM35Z7"/>
          <component_dependency value="platform.drivers.dma.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_freertos.MKM35Z7" name="i2c_freertos" brief="I2C Driver" version="2.0.9" full_name="I2C FREERTOS Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c.MKM35Z7"/>
          <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.irtc.MKM35Z7" name="rtc" brief="IRTC Driver" version="2.1.1" full_name="IRTC Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_irtc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_irtc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.llwu.MKM35Z7" name="llwu" brief="LLWU Driver" version="2.0.5" full_name="LLWU Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_llwu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_llwu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.MKM35Z7" name="lptmr" brief="LPTMR Driver" version="2.1.1" full_name="LPTMR Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MKM35Z7" name="lpuart" brief="LPUART Driver" version="2.5.3" full_name="LPUART Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_dma.MKM35Z7" name="lpuart_dma" brief="LPUART Driver" version="2.5.2" full_name="LPUART DMA Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MKM35Z7"/>
          <component_dependency value="platform.drivers.dma.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MKM35Z7" name="lpuart_freertos" brief="LPUART Driver" version="2.5.0" full_name="LPUART Freertos Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MKM35Z7"/>
          <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mmau.MKM35Z7" name="mmau" brief="MMAU Driver" version="2.0.1" full_name="MMAU Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mmau.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mmau.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdb.MKM35Z7" name="pdb" brief="PDB Driver" version="2.0.4" full_name="PDB Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pdb.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdb.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pit.MKM35Z7" name="pit" brief="PIT Driver" version="2.0.4" full_name="PIT Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pit.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pmc.MKM35Z7" name="pmc" brief="PMC Driver" version="2.0.3" full_name="PMC Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pmc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pmc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.port.MKM35Z7" name="port" brief="PORT Driver" version="2.3.0" full_name="PORT Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.qtmr_2.MKM35Z7" name="qtmr_2" brief="QTMR Driver" version="2.0.1" full_name="QTMR_2 Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_qtmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_qtmr.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rcm.MKM35Z7" name="rcm" brief="RCM Driver" version="2.0.4" full_name="RCM Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_rcm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rcm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rnga.MKM35Z7" name="rnga" brief="RNGA Driver" version="2.0.2" full_name="RNGA Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_rnga.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rnga.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sim.MKM35Z7" name="sim" brief="SIM Driver" version="2.1.3" full_name="SIM Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sim.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.slcd.MKM35Z7" name="slcd" brief="SLCD Driver" version="2.0.3" full_name="SLCD Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_slcd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_slcd.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.slcd_engine.MKM35Z7" name="slcd_engine" brief="Driver slcd_engine" version="1.0.2" full_name="Driver slcd_engine" devices="MKM35Z512xxx7" user_visible="true" type="software_component" package_base_path="components/slcd_engine" project_base_path="slcd">
      <dependencies>
        <component_dependency value="driver.slcd_gdh_1247wp.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="slcd_engine.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="slcd_engine.h"/>
        <files mask="slcd_panel.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.slcd_gdh_1247wp.MKM35Z7" name="slcd_gdh_1247wp" brief="Driver slcd_gdh_1247wp" version="1.0.1" full_name="Driver slcd_gdh_1247wp" devices="MKM35Z512xxx7" user_visible="true" type="board_component" package_base_path="components/slcd_engine/GDH-1247WP" project_base_path="slcd">
      <defines>
        <define name="SLCD_PANEL_GDH_1247WP_H" value=""/>
      </defines>
      <source relative_path="./" type="src">
        <files mask="GDH-1247WP.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="GDH-1247WP.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smc.MKM35Z7" name="smc" brief="SMC Driver" version="2.0.7" full_name="SMC Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spi.MKM35Z7" name="spi" brief="SPI Driver" version="2.1.1" full_name="SPI Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spi_dma.MKM35Z7" name="spi_dma" brief="SPI Driver" version="2.1.2" full_name="SPI DMA Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.spi.MKM35Z7"/>
          <component_dependency value="platform.drivers.dma.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spi_freertos.MKM35Z7" name="spi_freertos" brief="SPI Driver" version="2.1.1" full_name="SPI FREERTOS Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.spi.MKM35Z7"/>
          <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sysmpu.MKM35Z7" name="sysmpu" brief="SYSMPU Driver" version="2.2.3" full_name="SYSMPU Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sysmpu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sysmpu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart.MKM35Z7" name="uart" brief="UART Driver" version="2.5.1" full_name="UART Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_dma.MKM35Z7" name="uart_dma" brief="UART Driver" version="2.5.0" full_name="UART DMA Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKM35Z7"/>
          <component_dependency value="platform.drivers.dma.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_freertos.MKM35Z7" name="uart_freertos" brief="UART Driver" version="2.5.0" full_name="UART FREERTOS Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKM35Z7"/>
          <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.vref.MKM35Z7" name="vref" brief="VREF Driver" version="2.1.2" full_name="VREF Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_vref.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_vref.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog.MKM35Z7" name="wdog" brief="WDOG Driver" version="2.0.1" full_name="WDOG Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xbar.MKM35Z7" name="xbar" brief="XBAR Driver" version="2.1.0" full_name="XBAR Driver" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="driver" package_base_path="devices/MKM35Z7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xbar.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xbar.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.MKM35Z7" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="MKM35Z512xxx7" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.fmstr.MKM35Z7" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.5" full_name="FreeMASTER communication driver common code" devices="MKM35Z512xxx7" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <source relative_path="src/common" project_relative_path="./" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" project_relative_path="./" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.all_files.MKM35Z7" name="FreeMASTER driver all files" brief="DO NOT ADD THIS TO PROJECT. This component contains all FreeMASTER driver source code files for SDK distribution purpose. Not suitable for project build." version="1.0.0" full_name="FreeMASTER driver all files" devices="MKM35Z512xxx7" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_net.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_net.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
      </source>
      <source relative_path="src/common" type="other">
        <files mask="freemaster_cfg.h.example"/>
      </source>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source relative_path="src/drivers" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="src/drivers/dreg/DSC" type="src">
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_56f800e_flexcan.c"/>
        <files mask="freemaster_56f800e_qsci.c"/>
      </source>
      <source relative_path="src/drivers/dreg/DSC" type="c_include">
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_56f800e_flexcan.h"/>
        <files mask="freemaster_56f800e_qsci.h"/>
      </source>
      <source relative_path="src/drivers/dreg/Kxx" type="src">
        <files mask="freemaster_kxx_uart.c"/>
      </source>
      <source relative_path="src/drivers/dreg/Kxx" type="c_include">
        <files mask="freemaster_kxx_uart.h"/>
      </source>
      <source relative_path="src/drivers/dreg/MPC" type="src">
        <files mask="freemaster_mpc574xp_linflex.c"/>
      </source>
      <source relative_path="src/drivers/dreg/MPC" type="c_include">
        <files mask="freemaster_mpc574xp_linflex.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S12Z" type="src">
        <files mask="freemaster_s12z_mscan.c"/>
        <files mask="freemaster_s12z_sci.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S12Z" type="c_include">
        <files mask="freemaster_s12z_mscan.h"/>
        <files mask="freemaster_s12z_sci.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32G" type="src">
        <files mask="freemaster_s32g274a_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32G" type="c_include">
        <files mask="freemaster_s32g274a_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32K" type="src">
        <files mask="freemaster_s32k144_lpuart.c"/>
        <files mask="freemaster_s32k3xx_lpuart.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32K" type="c_include">
        <files mask="freemaster_s32k144_lpuart.h"/>
        <files mask="freemaster_s32k3xx_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32R" type="src">
        <files mask="freemaster_s32r45_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32R" type="c_include">
        <files mask="freemaster_s32r45_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32S" type="src">
        <files mask="freemaster_s32s247tv_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32S" type="c_include">
        <files mask="freemaster_s32s247tv_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mscan_dsc.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mscan_dsc.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
        <files mask="freemaster_serial_lpuart.c"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
        <files mask="freemaster_serial_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
        <files mask="freemaster_flexcan.c"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
        <files mask="freemaster_flexcan.h"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="src">
        <files mask="freemaster_usb.c"/>
        <files mask="freemaster_usb_device_descriptor.c"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="c_include">
        <files mask="freemaster_usb.h"/>
        <files mask="freemaster_usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
        <files mask="usb_device_descriptor.h"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="src/support/segger_rtt" type="src">
        <files mask="SEGGER_RTT.c"/>
        <files mask="SEGGER_RTT_printf.c"/>
      </source>
      <source relative_path="src/support/segger_rtt" type="c_include">
        <files mask="SEGGER_RTT.h"/>
        <files mask="SEGGER_RTT_Conf.h"/>
      </source>
      <source relative_path="src/support/segger_rtt" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="license" type="doc">
        <files mask="LA_OPT_NXP_Software_License.txt"/>
        <files mask="SW-Content-Register.txt"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="release_notes.txt"/>
        <files mask="serial_protocol_readme.txt"/>
        <files mask="serial_protocol_v4.pdf"/>
        <files mask="user_guide.pdf"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/DSC" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/Kxx" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/MPC" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S12Z" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32G" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32K" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32R" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32S" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include"/>
        <include_path relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include"/>
        <include_path relative_path="src/support/mcuxsdk_usb" type="c_include"/>
        <include_path relative_path="src/support/segger_rtt" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.npw_cfg_gen32le.MKM35Z7" name="FreeMASTER configuration file template" brief="FreeMASTER configuration file template. Contains placeholders and TODOs which need to be filled by user or by using Peripherals ConfigTool." version="1.0.0" full_name="FreeMASTER configuration file template." devices="MKM35Z512xxx7" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="project_template" package_base_path="middleware/freemaster" project_base_path="source">
      <dependencies>
        <component_dependency value="middleware.fmstr.MKM35Z7"/>
      </dependencies>
      <source relative_path="src/template/gen32le" project_relative_path="./" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/template/gen32le" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MKM35Z7" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.5" full_name="FreeMASTER communication driver for 32bit platforms" devices="MKM35Z512xxx7" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MKM35Z7"/>
          <component_dependency value="middleware.fmstr.npw_cfg_gen32le.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" project_relative_path="platforms" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" project_relative_path="drivers" type="src">
        <files mask="freemaster_net_segger_rtt.c"/>
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_net_segger_rtt.h"/>
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" project_relative_path="platforms" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MKM35Z7" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="10.4.3" revision="1" full_name="FreeRTOS kernel" devices="MKM35Z512xxx7" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.extension.MKM35Z7"/>
          <component_dependency value="middleware.freertos-kernel.template.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source toolchain="mcuxpresso" compiler="compiler_gcc" relative_path="portable/GCC/ARM_CM0" type="src" device_cores="core0_MKM35Z512xxx7">
        <files mask="port.c"/>
      </source>
      <source toolchain="mcuxpresso" compiler="compiler_gcc" relative_path="portable/GCC/ARM_CM0" type="c_include" device_cores="core0_MKM35Z512xxx7">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM0" toolchain="mcuxpresso" type="c_include" device_cores="core0_MKM35Z512xxx7"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.armv8m.MKM35Z7" name="FreeRTOS port ARMv8M" brief="FreeRTOS port ARMv8M" version="10.4.3" revision="1" full_name="FreeRTOS port ARMv8M" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
      </dependencies>
      <source relative_path="portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/context" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/heap" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/init" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/macros" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.doc.MKM35Z7" name="Root FreeRTOS documents." brief="FreeRTOS root documents" version="10.4.3" revision="1" full_name="FreeRTOS root documents" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="History.txt"/>
      </source>
      <source relative_path="./" type="other">
        <files mask="GitHub-FreeRTOS-Kernel-Home.url"/>
        <files mask="LICENSE.md"/>
        <files mask="Quick_Start_Guide.url"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="portable/ARMClang" type="doc">
        <files mask="Use-the-GCC-ports.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.MKM35Z7" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="10.4.3" revision="1" full_name="FreeRTOS NXP extension" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MKM35Z7" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="10.4.3" revision="1" full_name="FreeRTOS heap 1" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MKM35Z7" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="10.4.3" revision="1" full_name="FreeRTOS heap 2" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MKM35Z7" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="10.4.3" revision="1" full_name="FreeRTOS heap_3" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MKM35Z7" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="10.4.3" revision="1" full_name="FreeRTOS heap 4" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MKM35Z7" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="10.4.3" revision="1" full_name="FreeRTOS heap 5" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MKM35Z7" name="FreeRTOS MPU wrappers" brief="FreeRTOS MPU wrappers" version="10.4.3" revision="1" full_name="FreeRTOS MPU wrappers" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKM35Z7"/>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.template.MKM35Z7" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="10.4.3" revision="1" full_name="FreeRTOS configuration template" devices="MKM35Z512xxx7" category="Operating System/FreeRTOS kernel" user_visible="false" type="project_template" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <source exclude="true" relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source relative_path="template/ARM_CM0" project_relative_path="../../source" type="c_include" device_cores="core0_MKM35Z512xxx7">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM0" project_relative_path="../../source" type="c_include" device_cores="core0_MKM35Z512xxx7"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.MKM35Z7" name="mbedtls" brief="mbedTLS library" version="2.28.0" full_name="MbedTLS open source SSL library" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.kinetis6.MKM35Z7"/>
          <component_dependency value="middleware.mbedtls.template.MKM35Z7"/>
          <component_dependency value="utility.debug_console.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="config_psa.h"/>
        <files mask="constant_time.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="constant_time.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="mps_reader.c"/>
        <files mask="mps_trace.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
        <files mask="psa_its_file.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_msg.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="ssl_tls13_keys.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="check_crypto_config.h"/>
        <files mask="common.h"/>
        <files mask="constant_time_internal.h"/>
        <files mask="constant_time_invasive.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="mps_common.h"/>
        <files mask="mps_error.h"/>
        <files mask="mps_reader.h"/>
        <files mask="mps_trace.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="ssl_tls13_keys.h"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.empty.MKM35Z7" name="mbedtls_empty" brief="mbedTLS Empty Crypto Accelerators Layer (do not use)" version="2.28.0" full_name="mbedTLS Empty Crypto Accelerators Layer (do not use)" devices="MKM35Z512xxx7" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls"/>
    <component id="middleware.mbedtls.kinetis6.MKM35Z7" name="mbedtls_kinetis" brief="On-chip Kinetis Crypto accelerator" version="2.28.0" full_name="MbedTLS Adaptation for On-chip Kinetis Crypto accelerator" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.MKM35Z7"/>
          <component_dependency value="middleware.mbedtls.port.ksdk.MKM35Z7"/>
          <component_dependency value="platform.drivers.rnga.MKM35Z7"/>
          <component_dependency value="middleware.mmcau.cm0p.MKM35Z7"/>
        </all>
      </dependencies>
    </component>
    <component id="middleware.mbedtls.port.ksdk.MKM35Z7" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.28.0" full_name="MbedTLS MCUX SDK port layer" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.MKM35Z7"/>
          <any_of>
            <component_dependency value="middleware.mbedtls.empty.MKM35Z7"/>
            <component_dependency value="middleware.mbedtls.kinetis6.MKM35Z7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="threading_alt.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.template.MKM35Z7" name="mbedtls_template" brief="mbedTLS Template" version="2.28.0" full_name="mbedTLS Template" devices="MKM35Z512xxx7" user_visible="false" type="project_template" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.unused_files.MKM35Z7" name="unused_files" brief="mbedTLS files unused by projects" version="2.28.0" full_name="MbedTLS unused files" devices="MKM35Z512xxx7" user_visible="false" type="other" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <source exclude="true" relative_path=".github" type="other">
        <files mask="issue_template.md" hidden="true"/>
        <files mask="pull_request_template.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="3rdparty" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="3rdparty" type="asm_include">
        <files mask="Makefile.inc" hidden="true"/>
      </source>
      <source exclude="true" relative_path="ChangeLog.d" type="other">
        <files mask="00README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="configs" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="configs" type="c_include">
        <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
        <files mask="config-mini-tls1_1.h" hidden="true"/>
        <files mask="config-no-entropy.h" hidden="true"/>
        <files mask="config-suite-b.h" hidden="true"/>
        <files mask="config-symmetric-only.h" hidden="true"/>
        <files mask="config-thread.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="docs" type="other">
        <files mask="getting_started.md" hidden="true"/>
        <files mask="use-psa-crypto.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen" type="other">
        <files mask="mbedtls.doxyfile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen/input" type="c_include">
        <files mask="doc_encdec.h" hidden="true"/>
        <files mask="doc_hashing.h" hidden="true"/>
        <files mask="doc_mainpage.h" hidden="true"/>
        <files mask="doc_rng.h" hidden="true"/>
        <files mask="doc_ssltls.h" hidden="true"/>
        <files mask="doc_tcpip.h" hidden="true"/>
        <files mask="doc_x509.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="other">
        <files mask=".gitignore" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="other">
        <files mask=".gitignore" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="src">
        <files mask="crypt_and_hash.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/fuzz" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/fuzz" type="other">
        <files mask="README.md" hidden="true"/>
        <files mask="fuzz_client.options" hidden="true"/>
        <files mask="fuzz_dtlsclient.options" hidden="true"/>
        <files mask="fuzz_dtlsserver.options" hidden="true"/>
        <files mask="fuzz_privkey.options" hidden="true"/>
        <files mask="fuzz_pubkey.options" hidden="true"/>
        <files mask="fuzz_server.options" hidden="true"/>
        <files mask="fuzz_x509crl.options" hidden="true"/>
        <files mask="fuzz_x509crt.options" hidden="true"/>
        <files mask="fuzz_x509csr.options" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/fuzz" type="src">
        <files mask="common.c" hidden="true"/>
        <files mask="fuzz_client.c" hidden="true"/>
        <files mask="fuzz_dtlsclient.c" hidden="true"/>
        <files mask="fuzz_dtlsserver.c" hidden="true"/>
        <files mask="fuzz_privkey.c" hidden="true"/>
        <files mask="fuzz_pubkey.c" hidden="true"/>
        <files mask="fuzz_server.c" hidden="true"/>
        <files mask="fuzz_x509crl.c" hidden="true"/>
        <files mask="fuzz_x509crt.c" hidden="true"/>
        <files mask="fuzz_x509csr.c" hidden="true"/>
        <files mask="onefile.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/fuzz" type="c_include">
        <files mask="common.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="src">
        <files mask="generic_sum.c" hidden="true"/>
        <files mask="hello.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="dh_prime.txt" hidden="true"/>
        <files mask="rsa_priv.txt" hidden="true"/>
        <files mask="rsa_pub.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="src">
        <files mask="dh_client.c" hidden="true"/>
        <files mask="dh_genprime.c" hidden="true"/>
        <files mask="dh_server.c" hidden="true"/>
        <files mask="ecdh_curve25519.c" hidden="true"/>
        <files mask="ecdsa.c" hidden="true"/>
        <files mask="gen_key.c" hidden="true"/>
        <files mask="key_app.c" hidden="true"/>
        <files mask="key_app_writer.c" hidden="true"/>
        <files mask="mpi_demo.c" hidden="true"/>
        <files mask="pk_decrypt.c" hidden="true"/>
        <files mask="pk_encrypt.c" hidden="true"/>
        <files mask="pk_sign.c" hidden="true"/>
        <files mask="pk_verify.c" hidden="true"/>
        <files mask="rsa_decrypt.c" hidden="true"/>
        <files mask="rsa_encrypt.c" hidden="true"/>
        <files mask="rsa_genkey.c" hidden="true"/>
        <files mask="rsa_sign.c" hidden="true"/>
        <files mask="rsa_sign_pss.c" hidden="true"/>
        <files mask="rsa_verify.c" hidden="true"/>
        <files mask="rsa_verify_pss.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="src">
        <files mask="gen_entropy.c" hidden="true"/>
        <files mask="gen_random_ctr_drbg.c" hidden="true"/>
        <files mask="gen_random_havege.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="src">
        <files mask="dtls_client.c" hidden="true"/>
        <files mask="dtls_server.c" hidden="true"/>
        <files mask="mini_client.c" hidden="true"/>
        <files mask="ssl_client1.c" hidden="true"/>
        <files mask="ssl_client2.c" hidden="true"/>
        <files mask="ssl_context_info.c" hidden="true"/>
        <files mask="ssl_fork_server.c" hidden="true"/>
        <files mask="ssl_mail_client.c" hidden="true"/>
        <files mask="ssl_pthread_server.c" hidden="true"/>
        <files mask="ssl_server.c" hidden="true"/>
        <files mask="ssl_server2.c" hidden="true"/>
        <files mask="ssl_test_common_source.c" hidden="true"/>
        <files mask="ssl_test_lib.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="c_include">
        <files mask="ssl_test_lib.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="src">
        <files mask="benchmark.c" hidden="true"/>
        <files mask="dlopen.c" hidden="true"/>
        <files mask="query_compile_time_config.c" hidden="true"/>
        <files mask="query_config.c" hidden="true"/>
        <files mask="selftest.c" hidden="true"/>
        <files mask="udp_proxy.c" hidden="true"/>
        <files mask="zeroize.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="script">
        <files mask="dlopen_demo.sh" hidden="true"/>
        <files mask="generate_cpp_dummy_build.sh" hidden="true"/>
        <files mask="udp_proxy_wrapper.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="c_include">
        <files mask="query_config.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="src">
        <files mask="pem2der.c" hidden="true"/>
        <files mask="strerror.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="src">
        <files mask="cert_app.c" hidden="true"/>
        <files mask="cert_req.c" hidden="true"/>
        <files mask="cert_write.c" hidden="true"/>
        <files mask="crl_app.c" hidden="true"/>
        <files mask="load_roots.c" hidden="true"/>
        <files mask="req_app.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="script">
        <files mask="abi_check.py" hidden="true"/>
        <files mask="apidoc_full.sh" hidden="true"/>
        <files mask="assemble_changelog.py" hidden="true"/>
        <files mask="bump_version.sh" hidden="true"/>
        <files mask="config.py" hidden="true"/>
        <files mask="ecc-heap.sh" hidden="true"/>
        <files mask="footprint.sh" hidden="true"/>
        <files mask="generate_psa_constants.py" hidden="true"/>
        <files mask="memory.sh" hidden="true"/>
        <files mask="min_requirements.py" hidden="true"/>
        <files mask="output_env.sh" hidden="true"/>
        <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
        <files mask="windows_msbuild.bat" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="doc">
        <files mask="ci.requirements.txt" hidden="true"/>
        <files mask="maintainer.requirements.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="other">
        <files mask="config.pl" hidden="true"/>
        <files mask="find-mem-leak.cocci" hidden="true"/>
        <files mask="generate_errors.pl" hidden="true"/>
        <files mask="generate_features.pl" hidden="true"/>
        <files mask="generate_query_config.pl" hidden="true"/>
        <files mask="generate_visualc_files.pl" hidden="true"/>
        <files mask="massif_max.pl" hidden="true"/>
        <files mask="rename.pl" hidden="true"/>
        <files mask="rm-calloc-cast.cocci" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="other">
        <files mask="error.fmt" hidden="true"/>
        <files mask="query_config.fmt" hidden="true"/>
        <files mask="version_features.fmt" hidden="true"/>
        <files mask="vs2010-app-template.vcxproj" hidden="true"/>
        <files mask="vs2010-main-template.vcxproj" hidden="true"/>
        <files mask="vs2010-sln-template.sln" hidden="true"/>
        <files mask="vs6-app-template.dsp" hidden="true"/>
        <files mask="vs6-main-template.dsp" hidden="true"/>
        <files mask="vs6-workspace-template.dsw" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="doc">
        <files mask="rename-1.3-2.0.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/mbedtls_dev" type="script">
        <files mask="asymmetric_key_data.py" hidden="true"/>
        <files mask="c_build_helper.py" hidden="true"/>
        <files mask="crypto_knowledge.py" hidden="true"/>
        <files mask="macro_collector.py" hidden="true"/>
        <files mask="psa_storage.py" hidden="true"/>
        <files mask="test_case.py" hidden="true"/>
        <files mask="typing_util.py" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/.jenkins" type="other">
        <files mask="Jenkinsfile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="hash_file_1" hidden="true"/>
        <files mask="hash_file_2" hidden="true"/>
        <files mask="hash_file_3" hidden="true"/>
        <files mask="hash_file_4" hidden="true"/>
        <files mask="hash_file_5" hidden="true"/>
        <files mask="mpi_10" hidden="true"/>
        <files mask="mpi_too_big" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir3" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir4" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="script">
        <files mask="pre-commit.sh" hidden="true"/>
        <files mask="pre-push.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="script">
        <files mask="all-in-docker.sh" hidden="true"/>
        <files mask="all.sh" hidden="true"/>
        <files mask="analyze_outcomes.py" hidden="true"/>
        <files mask="basic-build-test.sh" hidden="true"/>
        <files mask="basic-in-docker.sh" hidden="true"/>
        <files mask="check-generated-files.sh" hidden="true"/>
        <files mask="check-python-files.sh" hidden="true"/>
        <files mask="check_files.py" hidden="true"/>
        <files mask="check_names.py" hidden="true"/>
        <files mask="check_test_cases.py" hidden="true"/>
        <files mask="docker_env.sh" hidden="true"/>
        <files mask="doxygen.sh" hidden="true"/>
        <files mask="generate-afl-tests.sh" hidden="true"/>
        <files mask="generate_psa_tests.py" hidden="true"/>
        <files mask="generate_test_code.py" hidden="true"/>
        <files mask="list-identifiers.sh" hidden="true"/>
        <files mask="list_internal_identifiers.py" hidden="true"/>
        <files mask="psa_collect_statuses.py" hidden="true"/>
        <files mask="scripts_path.py" hidden="true"/>
        <files mask="set_psa_test_dependencies.py" hidden="true"/>
        <files mask="test_config_script.py" hidden="true"/>
        <files mask="test_generate_test_code.py" hidden="true"/>
        <files mask="test_psa_compliance.py" hidden="true"/>
        <files mask="test_psa_constant_names.py" hidden="true"/>
        <files mask="travis-log-failure.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="other">
        <files mask="check-doxy-blocks.pl" hidden="true"/>
        <files mask="curves.pl" hidden="true"/>
        <files mask="depends-hashes.pl" hidden="true"/>
        <files mask="depends-pkalgs.pl" hidden="true"/>
        <files mask="gen_ctr_drbg.pl" hidden="true"/>
        <files mask="gen_gcm_decrypt.pl" hidden="true"/>
        <files mask="gen_gcm_encrypt.pl" hidden="true"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
        <files mask="key-exchanges.pl" hidden="true"/>
        <files mask="recursion.pl" hidden="true"/>
        <files mask="run-test-suites.pl" hidden="true"/>
        <files mask="tcp_client.pl" hidden="true"/>
        <files mask="test-ref-configs.pl" hidden="true"/>
        <files mask="test_zeroize.gdb" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/src" type="src">
        <files mask="asn1_helpers.c" hidden="true"/>
        <files mask="fake_external_rng_for_test.c" hidden="true"/>
        <files mask="helpers.c" hidden="true"/>
        <files mask="psa_crypto_helpers.c" hidden="true"/>
        <files mask="psa_exercise_key.c" hidden="true"/>
        <files mask="random.c" hidden="true"/>
        <files mask="threading_helpers.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/suites" type="other">
        <files mask="helpers.function" hidden="true"/>
        <files mask="host_test.function" hidden="true"/>
        <files mask="main_test.function" hidden="true"/>
        <files mask="test_suite_aes.cbc.data" hidden="true"/>
        <files mask="test_suite_aes.cfb.data" hidden="true"/>
        <files mask="test_suite_aes.ecb.data" hidden="true"/>
        <files mask="test_suite_aes.function" hidden="true"/>
        <files mask="test_suite_aes.ofb.data" hidden="true"/>
        <files mask="test_suite_aes.rest.data" hidden="true"/>
        <files mask="test_suite_aes.xts.data" hidden="true"/>
        <files mask="test_suite_all.data" hidden="true"/>
        <files mask="test_suite_all.function" hidden="true"/>
        <files mask="test_suite_arc4.data" hidden="true"/>
        <files mask="test_suite_arc4.function" hidden="true"/>
        <files mask="test_suite_aria.data" hidden="true"/>
        <files mask="test_suite_aria.function" hidden="true"/>
        <files mask="test_suite_asn1parse.data" hidden="true"/>
        <files mask="test_suite_asn1parse.function" hidden="true"/>
        <files mask="test_suite_asn1write.data" hidden="true"/>
        <files mask="test_suite_asn1write.function" hidden="true"/>
        <files mask="test_suite_base64.data" hidden="true"/>
        <files mask="test_suite_base64.function" hidden="true"/>
        <files mask="test_suite_blowfish.data" hidden="true"/>
        <files mask="test_suite_blowfish.function" hidden="true"/>
        <files mask="test_suite_camellia.data" hidden="true"/>
        <files mask="test_suite_camellia.function" hidden="true"/>
        <files mask="test_suite_ccm.data" hidden="true"/>
        <files mask="test_suite_ccm.function" hidden="true"/>
        <files mask="test_suite_chacha20.data" hidden="true"/>
        <files mask="test_suite_chacha20.function" hidden="true"/>
        <files mask="test_suite_chachapoly.data" hidden="true"/>
        <files mask="test_suite_chachapoly.function" hidden="true"/>
        <files mask="test_suite_cipher.aes.data" hidden="true"/>
        <files mask="test_suite_cipher.arc4.data" hidden="true"/>
        <files mask="test_suite_cipher.aria.data" hidden="true"/>
        <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
        <files mask="test_suite_cipher.camellia.data" hidden="true"/>
        <files mask="test_suite_cipher.ccm.data" hidden="true"/>
        <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
        <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
        <files mask="test_suite_cipher.des.data" hidden="true"/>
        <files mask="test_suite_cipher.function" hidden="true"/>
        <files mask="test_suite_cipher.gcm.data" hidden="true"/>
        <files mask="test_suite_cipher.misc.data" hidden="true"/>
        <files mask="test_suite_cipher.nist_kw.data" hidden="true"/>
        <files mask="test_suite_cipher.null.data" hidden="true"/>
        <files mask="test_suite_cipher.padding.data" hidden="true"/>
        <files mask="test_suite_cmac.data" hidden="true"/>
        <files mask="test_suite_cmac.function" hidden="true"/>
        <files mask="test_suite_ctr_drbg.data" hidden="true"/>
        <files mask="test_suite_ctr_drbg.function" hidden="true"/>
        <files mask="test_suite_debug.data" hidden="true"/>
        <files mask="test_suite_debug.function" hidden="true"/>
        <files mask="test_suite_des.data" hidden="true"/>
        <files mask="test_suite_des.function" hidden="true"/>
        <files mask="test_suite_dhm.data" hidden="true"/>
        <files mask="test_suite_dhm.function" hidden="true"/>
        <files mask="test_suite_ecdh.data" hidden="true"/>
        <files mask="test_suite_ecdh.function" hidden="true"/>
        <files mask="test_suite_ecdsa.data" hidden="true"/>
        <files mask="test_suite_ecdsa.function" hidden="true"/>
        <files mask="test_suite_ecjpake.data" hidden="true"/>
        <files mask="test_suite_ecjpake.function" hidden="true"/>
        <files mask="test_suite_ecp.data" hidden="true"/>
        <files mask="test_suite_ecp.function" hidden="true"/>
        <files mask="test_suite_entropy.data" hidden="true"/>
        <files mask="test_suite_entropy.function" hidden="true"/>
        <files mask="test_suite_error.data" hidden="true"/>
        <files mask="test_suite_error.function" hidden="true"/>
        <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
        <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
        <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
        <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
        <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
        <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
        <files mask="test_suite_gcm.camellia.data" hidden="true"/>
        <files mask="test_suite_gcm.function" hidden="true"/>
        <files mask="test_suite_gcm.misc.data" hidden="true"/>
        <files mask="test_suite_hkdf.data" hidden="true"/>
        <files mask="test_suite_hkdf.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
        <files mask="test_suite_md.data" hidden="true"/>
        <files mask="test_suite_md.function" hidden="true"/>
        <files mask="test_suite_mdx.data" hidden="true"/>
        <files mask="test_suite_mdx.function" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
        <files mask="test_suite_mpi.data" hidden="true"/>
        <files mask="test_suite_mpi.function" hidden="true"/>
        <files mask="test_suite_mps.data" hidden="true"/>
        <files mask="test_suite_mps.function" hidden="true"/>
        <files mask="test_suite_net.data" hidden="true"/>
        <files mask="test_suite_net.function" hidden="true"/>
        <files mask="test_suite_nist_kw.data" hidden="true"/>
        <files mask="test_suite_nist_kw.function" hidden="true"/>
        <files mask="test_suite_oid.data" hidden="true"/>
        <files mask="test_suite_oid.function" hidden="true"/>
        <files mask="test_suite_pem.data" hidden="true"/>
        <files mask="test_suite_pem.function" hidden="true"/>
        <files mask="test_suite_pk.data" hidden="true"/>
        <files mask="test_suite_pk.function" hidden="true"/>
        <files mask="test_suite_pkcs12.data" hidden="true"/>
        <files mask="test_suite_pkcs12.function" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
        <files mask="test_suite_pkcs5.data" hidden="true"/>
        <files mask="test_suite_pkcs5.function" hidden="true"/>
        <files mask="test_suite_pkparse.data" hidden="true"/>
        <files mask="test_suite_pkparse.function" hidden="true"/>
        <files mask="test_suite_pkwrite.data" hidden="true"/>
        <files mask="test_suite_pkwrite.function" hidden="true"/>
        <files mask="test_suite_poly1305.data" hidden="true"/>
        <files mask="test_suite_poly1305.function" hidden="true"/>
        <files mask="test_suite_psa_crypto.data" hidden="true"/>
        <files mask="test_suite_psa_crypto.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_attributes.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_attributes.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_driver_wrappers.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_driver_wrappers.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_entropy.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_entropy.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_generate_key.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_generate_key.generated.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_hash.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_hash.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_init.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_init.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_metadata.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_metadata.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_not_supported.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_not_supported.generated.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_not_supported.misc.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_persistent_key.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_persistent_key.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_se_driver_hal.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_se_driver_hal.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_se_driver_hal_mocks.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_se_driver_hal_mocks.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_slot_management.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_slot_management.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_storage_format.current.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_storage_format.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_storage_format.misc.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_storage_format.v0.data" hidden="true"/>
        <files mask="test_suite_psa_its.data" hidden="true"/>
        <files mask="test_suite_psa_its.function" hidden="true"/>
        <files mask="test_suite_random.data" hidden="true"/>
        <files mask="test_suite_random.function" hidden="true"/>
        <files mask="test_suite_rsa.data" hidden="true"/>
        <files mask="test_suite_rsa.function" hidden="true"/>
        <files mask="test_suite_shax.data" hidden="true"/>
        <files mask="test_suite_shax.function" hidden="true"/>
        <files mask="test_suite_ssl.data" hidden="true"/>
        <files mask="test_suite_ssl.function" hidden="true"/>
        <files mask="test_suite_timing.data" hidden="true"/>
        <files mask="test_suite_timing.function" hidden="true"/>
        <files mask="test_suite_version.data" hidden="true"/>
        <files mask="test_suite_version.function" hidden="true"/>
        <files mask="test_suite_x509parse.data" hidden="true"/>
        <files mask="test_suite_x509parse.function" hidden="true"/>
        <files mask="test_suite_x509write.data" hidden="true"/>
        <files mask="test_suite_x509write.function" hidden="true"/>
        <files mask="test_suite_xtea.data" hidden="true"/>
        <files mask="test_suite_xtea.function" hidden="true"/>
      </source>
      <source exclude="true" relative_path="visualc/VS2010" type="other">
        <files mask="benchmark.vcxproj" hidden="true"/>
        <files mask="cert_app.vcxproj" hidden="true"/>
        <files mask="cert_req.vcxproj" hidden="true"/>
        <files mask="cert_write.vcxproj" hidden="true"/>
        <files mask="crl_app.vcxproj" hidden="true"/>
        <files mask="crypt_and_hash.vcxproj" hidden="true"/>
        <files mask="crypto_examples.vcxproj" hidden="true"/>
        <files mask="dh_client.vcxproj" hidden="true"/>
        <files mask="dh_genprime.vcxproj" hidden="true"/>
        <files mask="dh_server.vcxproj" hidden="true"/>
        <files mask="dtls_client.vcxproj" hidden="true"/>
        <files mask="dtls_server.vcxproj" hidden="true"/>
        <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
        <files mask="ecdsa.vcxproj" hidden="true"/>
        <files mask="gen_entropy.vcxproj" hidden="true"/>
        <files mask="gen_key.vcxproj" hidden="true"/>
        <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
        <files mask="gen_random_havege.vcxproj" hidden="true"/>
        <files mask="generic_sum.vcxproj" hidden="true"/>
        <files mask="hello.vcxproj" hidden="true"/>
        <files mask="key_app.vcxproj" hidden="true"/>
        <files mask="key_app_writer.vcxproj" hidden="true"/>
        <files mask="key_ladder_demo.vcxproj" hidden="true"/>
        <files mask="load_roots.vcxproj" hidden="true"/>
        <files mask="mbedTLS.sln" hidden="true"/>
        <files mask="mbedTLS.vcxproj" hidden="true"/>
        <files mask="mini_client.vcxproj" hidden="true"/>
        <files mask="mpi_demo.vcxproj" hidden="true"/>
        <files mask="pem2der.vcxproj" hidden="true"/>
        <files mask="pk_decrypt.vcxproj" hidden="true"/>
        <files mask="pk_encrypt.vcxproj" hidden="true"/>
        <files mask="pk_sign.vcxproj" hidden="true"/>
        <files mask="pk_verify.vcxproj" hidden="true"/>
        <files mask="psa_constant_names.vcxproj" hidden="true"/>
        <files mask="query_compile_time_config.vcxproj" hidden="true"/>
        <files mask="req_app.vcxproj" hidden="true"/>
        <files mask="rsa_decrypt.vcxproj" hidden="true"/>
        <files mask="rsa_encrypt.vcxproj" hidden="true"/>
        <files mask="rsa_genkey.vcxproj" hidden="true"/>
        <files mask="rsa_sign.vcxproj" hidden="true"/>
        <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
        <files mask="rsa_verify.vcxproj" hidden="true"/>
        <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
        <files mask="selftest.vcxproj" hidden="true"/>
        <files mask="ssl_client1.vcxproj" hidden="true"/>
        <files mask="ssl_client2.vcxproj" hidden="true"/>
        <files mask="ssl_context_info.vcxproj" hidden="true"/>
        <files mask="ssl_fork_server.vcxproj" hidden="true"/>
        <files mask="ssl_mail_client.vcxproj" hidden="true"/>
        <files mask="ssl_server.vcxproj" hidden="true"/>
        <files mask="ssl_server2.vcxproj" hidden="true"/>
        <files mask="strerror.vcxproj" hidden="true"/>
        <files mask="udp_proxy.vcxproj" hidden="true"/>
        <files mask="zeroize.vcxproj" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="BRANCHES.md" hidden="true"/>
        <files mask="BUGS.md" hidden="true"/>
        <files mask="CONTRIBUTING.md" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="SECURITY.md" hidden="true"/>
        <files mask="SUPPORT.md" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.meta" hidden="true"/>
        <files mask="ChangeLog" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="dco.txt" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="script">
        <files mask="DartConfiguration.tcl" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm7_headers.MKM35Z7" name="CMSIS_cm7_headers" brief="CMSIS cm7 headers" version="2.8.0" full_name="Middleware mcu-boot cmsis_cm7_headers" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <source toolchain="mcuxpresso" relative_path="./" type="c_include">
        <files mask="mpu_armv7.h"/>
        <files mask="core_cm7.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.MKM35Z7_sources.MKM35Z7" name="MCUBOOT_MKM35Z7_sources" brief="MCUBOOT MKM35Z7 sources" version="1.0.0" full_name="Middleware mcu-boot mkm35z7_sources" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="MKM35Z7">
      <source relative_path="targets/MKM35Z7/src" project_relative_path="./" type="c_include">
        <files mask="bootloader_config.h"/>
        <files mask="peripherals_pinmux.h"/>
        <files mask="target_config.h"/>
      </source>
      <source relative_path="targets/MKM35Z7/src" project_relative_path="./" type="src">
        <files mask="bl_clock_config_MKM35Z7.c"/>
        <files mask="hardware_init_MKM35Z7.c"/>
        <files mask="memory_map_MKM35Z7.c"/>
        <files mask="bl_peripherals_MKM35Z7.c"/>
      </source>
      <source relative_path="targets/common/src" project_relative_path="./" type="src">
        <files mask="pinmux_utility_common.c"/>
        <files mask="bl_i2c_irq_config_common.c"/>
        <files mask="bl_uart_irq_config_common.c"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="../source/bootloader/src" type="src">
        <files mask="uart_peripheral_interface.c"/>
        <files mask="spi_peripheral_interface.c"/>
        <files mask="i2c_peripheral_interface.c"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="../source/memory/src" type="src">
        <files mask="sram_init_cm0plus.c"/>
      </source>
      <include_paths>
        <include_path relative_path="targets/MKM35Z7/src" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.MKM35Z7_startup.MKM35Z7" name="MCUBOOT_MKM35Z7_startup" brief="MCUBOOT MKM35Z7 startup sources" version="1.0.0" full_name="Middleware mcu-boot mkm35z7_startup" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="mcu-boot">
      <source toolchain="mcuxpresso" relative_path="targets/MKM35Z7/src/startup/gcc" project_relative_path="../startup" type="asm_include">
        <files mask="startup_MKM35Z7.S"/>
      </source>
      <source relative_path="../../devices/MKM35Z7" project_relative_path="../device" type="c_include">
        <files mask="system_MKM35Z7.h"/>
      </source>
      <source relative_path="../../devices/MKM35Z7" project_relative_path="../device" type="src">
        <files mask="system_MKM35Z7.c"/>
      </source>
      <include_paths>
        <include_path relative_path="../../devices/MKM35Z7" project_relative_path="../device" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.bootsources.MKM35Z7" name="MCUBOOT_common_sources" brief="Bootloader common sources" version="2.7.0" full_name="Middleware mcu-boot bootsources" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/autobaud" project_relative_path="autobaud" type="c_include">
        <files mask="autobaud.h"/>
      </source>
      <source relative_path="src/autobaud/src" project_relative_path="autobaud" type="src">
        <files mask="autobaud_irq.c"/>
      </source>
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="bl_peripheral_interface.h"/>
        <files mask="bl_user_entry.h"/>
        <files mask="bl_version.h"/>
        <files mask="bootloader.h"/>
        <files mask="bl_command.h"/>
        <files mask="bl_context.h"/>
        <files mask="bl_peripheral.h"/>
        <files mask="bl_shutdown_cleanup.h"/>
        <files mask="bl_irq_common.h"/>
        <files mask="bl_app_crc_check.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader/src" type="src">
        <files mask="bl_user_entry.c"/>
        <files mask="bl_main.c"/>
        <files mask="bl_context.c"/>
        <files mask="bl_exception_handler.c"/>
        <files mask="bl_tree_root.c"/>
        <files mask="bl_command.c"/>
        <files mask="bl_shutdown_cleanup.c"/>
        <files mask="bl_app_crc_check.c"/>
        <files mask="bl_misc.c"/>
      </source>
      <source relative_path="src/crc" project_relative_path="crc" type="c_include">
        <files mask="crc16.h"/>
        <files mask="crc32.h"/>
      </source>
      <source relative_path="src/crc/src" project_relative_path="crc" type="src">
        <files mask="crc16.c"/>
        <files mask="crc32.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_common.h"/>
      </source>
      <source relative_path="src/memory" project_relative_path="memory" type="c_include">
        <files mask="memory.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="sram_init.h"/>
        <files mask="normal_memory.h"/>
        <files mask="pattern_fill.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="memory.c"/>
        <files mask="normal_memory.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="src/memory/src" project_relative_path="memory/src" type="asm_include">
        <files mask="pattern_fill_gcc.S"/>
      </source>
      <source relative_path="src/startup" project_relative_path="../startup" type="c_include">
        <files mask="ar_asm_macros.h"/>
      </source>
      <source relative_path="src/packet" project_relative_path="packet" type="c_include">
        <files mask="command_packet.h"/>
        <files mask="serial_packet.h"/>
      </source>
      <source relative_path="src/packet/src" project_relative_path="packet/src" type="src">
        <files mask="serial_packet.c"/>
      </source>
      <source relative_path="src/property" project_relative_path="property" type="c_include">
        <files mask="property.h"/>
      </source>
      <source relative_path="src/sbloader" project_relative_path="sbloader" type="c_include">
        <files mask="sbloader.h"/>
        <files mask="sb_file_format.h"/>
      </source>
      <source relative_path="src/sbloader/src" project_relative_path="sbloader/src" type="src">
        <files mask="sbloader.c"/>
      </source>
      <source relative_path="src/utilities" project_relative_path="utilities" type="c_include">
        <files mask="fsl_rtos_abstraction.h"/>
        <files mask="fsl_assert.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source relative_path="src/utilities/src" project_relative_path="utilities/src" type="src">
        <files mask="fsl_assert.c"/>
        <files mask="fsl_rtos_abstraction.c"/>
        <files mask="debug_util.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/autobaud" project_relative_path="autobaud" type="c_include"/>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
        <include_path relative_path="src/crc" project_relative_path="crc" type="c_include"/>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/memory" project_relative_path="memory" type="c_include"/>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="c_include"/>
        <include_path relative_path="src/packet" project_relative_path="packet" type="c_include"/>
        <include_path relative_path="src/property" project_relative_path="property" type="c_include"/>
        <include_path relative_path="src/sbloader" project_relative_path="sbloader" type="c_include"/>
        <include_path relative_path="src/utilities" project_relative_path="utilities" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.bootsources_kinetis.MKM35Z7" name="MCUBOOT_kinetis_sources" brief="Bootloader sources for Kinetis devices" version="2.7.0" full_name="Middleware mcu-boot bootsources_kinetis" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/smc" project_relative_path="drivers/smc" type="src">
        <files mask="smc.c"/>
      </source>
      <source relative_path="src/drivers/smc" project_relative_path="drivers/smc" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="flash_memory.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="flash_memory.c"/>
      </source>
      <source relative_path="src/property/src" project_relative_path="property/src" type="src">
        <files mask="property_kinetis.c"/>
      </source>
      <source relative_path="src/utilities" project_relative_path="utilities" type="c_include">
        <files mask="kinetis_family.h"/>
      </source>
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="bl_reliable_update.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader/src" type="src">
        <files mask="bl_reliable_update.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/smc" project_relative_path="drivers/smc" type="c_include"/>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
        <include_path relative_path="src/utilities" project_relative_path="utilities" type="c_include"/>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds.MKM35Z7" name="MCUBOOT_microseconds_sysclk" brief="MCUBOOT microseconds sysclk" version="1.0.0" full_name="Middleware mcu-boot drv_microseconds" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source relative_path="src/drivers/microseconds/src" project_relative_path="drivers/microseconds" type="src">
        <files mask="microseconds_sysclk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds_pit.MKM35Z7" name="MCUBOOT_microseconds_pit" brief="MCUBOOT microseconds pit" version="1.0.0" full_name="Middleware mcu-boot drv_microseconds_pit" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source relative_path="src/drivers/microseconds/src" project_relative_path="drivers/microseconds" type="src">
        <files mask="microseconds_pit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.kinetis_files.MKM35Z7" name="kinetis_files" brief="kinetis files" version="2.7.0" full_name="Middleware mcu-boot kinetis_files" devices="MKM35Z512xxx7" user_visible="false" type="other" package_base_path="middleware/mcu-boot" project_base_path="middleware">
      <source exclude="true" relative_path="apps/led_demo/src" project_relative_path="mcu-boot" type="src">
        <files mask="milliseconds_delay.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="apps/led_demo/src" project_relative_path="mcu-boot" type="other">
        <files mask="led_demo.bd" hidden="true"/>
      </source>
      <source relative_path="apps/led_demo/src" project_relative_path="mcu-boot" type="c_include">
        <files mask="milliseconds_delay.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel" project_relative_path="mcu-boot" type="other">
        <files mask="MfgTool2.exe" hidden="true"/>
        <files mask="MfgToolLib.dll" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel" project_relative_path="mcu-boot" type="configuration">
        <files mask="UICfg.ini" hidden="true"/>
        <files mask="cfg.ini" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/Kinetis Bootloader" project_relative_path="mcu-boot" type="configuration">
        <files mask="player.ini" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/Kinetis Bootloader/OS Firmware" project_relative_path="mcu-boot" type="xml">
        <files mask="ucl2(for HEX).xml" hidden="true"/>
        <files mask="ucl2(for SB).xml" hidden="true"/>
        <files mask="ucl2(for SRecord).xml" hidden="true"/>
        <files mask="ucl2(for binary).xml" hidden="true"/>
        <files mask="ucl2.xml" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/Kinetis Bootloader/OS Firmware/files" project_relative_path="mcu-boot" type="other">
        <files mask="simple.bd" hidden="true"/>
        <files mask="simple.hex" hidden="true"/>
        <files mask="simple.sb" hidden="true"/>
        <files mask="simple.srec" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/Kinetis Bootloader/OS Firmware/files" project_relative_path="mcu-boot" type="doc">
        <files mask="Readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool" project_relative_path="mcu-boot" type="other">
        <files mask="KinetisFlashTool.sln" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool/KinetisFlashTool" project_relative_path="mcu-boot" type="src">
        <files mask="Bootloader.cpp" hidden="true"/>
        <files mask="BootloaderConfigDlg.cpp" hidden="true"/>
        <files mask="ConfigDlg.cpp" hidden="true"/>
        <files mask="FlashDlg.cpp" hidden="true"/>
        <files mask="HistoryData.cpp" hidden="true"/>
        <files mask="KinetisFlashTool.cpp" hidden="true"/>
        <files mask="KinetisFlashToolDlg.cpp" hidden="true"/>
        <files mask="SerialList.cpp" hidden="true"/>
        <files mask="UpdateDlg.cpp" hidden="true"/>
        <files mask="stdafx.cpp" hidden="true"/>
        <files mask="utility.cpp" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool/KinetisFlashTool" project_relative_path="mcu-boot" type="c_include">
        <files mask="Bootloader.h" hidden="true"/>
        <files mask="BootloaderConfigDlg.h" hidden="true"/>
        <files mask="BootloaderConfigText.h" hidden="true"/>
        <files mask="ConfigDlg.h" hidden="true"/>
        <files mask="FlashDlg.h" hidden="true"/>
        <files mask="HistoryData.h" hidden="true"/>
        <files mask="KinetisFlashTool.h" hidden="true"/>
        <files mask="KinetisFlashToolDlg.h" hidden="true"/>
        <files mask="SerialList.h" hidden="true"/>
        <files mask="UpdateDlg.h" hidden="true"/>
        <files mask="resource.h" hidden="true"/>
        <files mask="stdafx.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
        <files mask="utility.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool/KinetisFlashTool" project_relative_path="mcu-boot" type="other">
        <files mask="KinetisFlashTool.rc" hidden="true"/>
        <files mask="KinetisFlashTool.vcxproj" hidden="true"/>
        <files mask="KinetisFlashTool.vcxproj.filters" hidden="true"/>
        <files mask="KinetisFlashTool.vcxproj.user" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool/KinetisFlashTool/res" project_relative_path="mcu-boot" type="other">
        <files mask="Freescale.ico" hidden="true"/>
        <files mask="KinetisFlashTool.rc2" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/KinetisFlashTool/win" project_relative_path="mcu-boot" type="other">
        <files mask="KinetisFlashTool.exe" hidden="true"/>
        <files mask="blfwkdll.dll" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.loadersources.MKM35Z7" name="MCUBOOT_loader_loader_sources" brief="Flashloader_loader sources" version="2.7.0" full_name="Middleware mcu-boot loadersources" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="flashloader_image.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader" type="src">
        <files mask="bl_flashloader.c"/>
        <files mask="bl_exception_handler.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_common.h"/>
      </source>
      <source relative_path="src/utilities" project_relative_path="utilities" type="c_include">
        <files mask="fsl_assert.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source relative_path="src/utilities/src" project_relative_path="utilities/src" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/utilities" project_relative_path="utilities" type="c_include"/>
        <include_path relative_path="src/include" project_relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.postaction.MKM35Z7" name="MCUBOOT_postaction_scripts" brief="Postaction scripts for flashloader" version="1.0.0" full_name="Middleware mcu-boot postaction" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="postaction">
      <source toolchain="mcuxpresso" exclude="true" relative_path="bin" project_relative_path="./" type="script">
        <files mask="elf.py"/>
        <files mask="create_fl_image_mcux.py"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.src_startup.MKM35Z7" name="MCUBOOT_startup_sources" brief="Bootloader startup sources" version="1.0.0" full_name="Middleware mcu-boot src_startup" devices="MKM35Z512xxx7" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/startup" project_relative_path="../startup" type="src">
        <files mask="startup.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_core.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.metering.files.MKM35Z7" name="unused_files" brief="Middleware metering files" version="1.0.0" full_name="Middleware metering files" devices="MKM35Z512xxx7" user_visible="false" type="other" package_base_path="middleware/metering" project_base_path="metering"/>
    <component id="middleware.metering_fraclib.MKM35Z7" name="metering_fraclib" brief="Fraclib Library" version="1.0.0" full_name="Middleware metering fraclib" devices="MKM35Z512xxx7" user_visible="true" type="middleware" package_base_path="middleware/metering" project_base_path="fraclib">
      <source toolchain="mcuxpresso" relative_path="fraclib" project_relative_path="./" type="lib" device_cores="core0_MKM35Z512xxx7">
        <files mask="libfrac_cm0p_mmau_gcc.a"/>
      </source>
      <source relative_path="fraclib/inc/cm0p_mmau" project_relative_path="./" type="c_include" device_cores="core0_MKM35Z512xxx7">
        <files mask="fraclib_inlines.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="fraclib/inc/cm0p_mmau/gcc" project_relative_path="./" type="c_include" device_cores="core0_MKM35Z512xxx7">
        <files mask="mmau.h"/>
      </source>
      <source relative_path="fraclib/inc" project_relative_path="./" type="c_include">
        <files mask="fraclib.h"/>
        <files mask="types.h"/>
      </source>
      <include_paths>
        <include_path relative_path="fraclib/inc/cm0p_mmau" project_relative_path="./" type="c_include" device_cores="core0_MKM35Z512xxx7"/>
        <include_path relative_path="fraclib/inc/cm0p_mmau/gcc" project_relative_path="./" toolchain="mcuxpresso" type="c_include" device_cores="core0_MKM35Z512xxx7"/>
        <include_path relative_path="fraclib/inc" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.metering_fftlib.MKM35Z7" name="metering_fftlib" brief="FFT Library" version="1.0.0" full_name="Middleware metering meterfft" devices="MKM35Z512xxx7" user_visible="true" type="middleware" package_base_path="middleware/metering" project_base_path="meterlibFFT">
      <dependencies>
        <component_dependency value="middleware.metering_fraclib.MKM35Z7"/>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="meterlibFFT" project_relative_path="./" type="lib" device_cores="core0_MKM35Z512xxx7">
        <files mask="libmeterFFT_cm0p_mmau_gcc.a"/>
      </source>
      <source relative_path="meterlibFFT/inc" project_relative_path="./" type="c_include">
        <files mask="meterlibfft.h"/>
      </source>
      <source relative_path="meterlibFFT/inc/metering" project_relative_path="./" type="c_include">
        <files mask="metering.h"/>
      </source>
      <source relative_path="meterlibFFT/inc/math" project_relative_path="./" type="c_include">
        <files mask="SIN_LUT1024.h"/>
        <files mask="ATAN_LUT2048.h"/>
      </source>
      <source relative_path="meterlibFFT/inc/FFT" project_relative_path="./" type="c_include">
        <files mask="fft.h"/>
      </source>
      <include_paths>
        <include_path relative_path="meterlibFFT/inc" project_relative_path="./" type="c_include"/>
        <include_path relative_path="meterlibFFT/inc/metering" project_relative_path="./" type="c_include"/>
        <include_path relative_path="meterlibFFT/inc/math" project_relative_path="./" type="c_include"/>
        <include_path relative_path="meterlibFFT/inc/FFT" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.metering_meterlib.MKM35Z7" name="metering_meterlib" brief="Meterlib Library" version="1.0.0" full_name="Middleware metering meterlib" devices="MKM35Z512xxx7" user_visible="true" type="middleware" package_base_path="middleware/metering" project_base_path="meterlib">
      <dependencies>
        <component_dependency value="middleware.metering_fraclib.MKM35Z7"/>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="meterlib" project_relative_path="./" type="lib" device_cores="core0_MKM35Z512xxx7">
        <files mask="libmeter_cm0p_mmau_gcc.a"/>
      </source>
      <source relative_path="meterlib/inc" project_relative_path="./" type="c_include">
        <files mask="meterlib.h"/>
      </source>
      <include_paths>
        <include_path relative_path="meterlib/inc" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.metering_meterliblp.MKM35Z7" name="metering_meterliblp" brief="Meterliblp Library" version="1.0.0" full_name="Middleware metering meterliblp" devices="MKM35Z512xxx7" user_visible="true" type="middleware" package_base_path="middleware/metering" project_base_path="meterliblp">
      <dependencies>
        <component_dependency value="middleware.metering_fraclib.MKM35Z7"/>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="meterliblp" project_relative_path="./" type="lib" device_cores="core0_MKM35Z512xxx7">
        <files mask="libmeterlp_cm0p_mmau_gcc.a"/>
      </source>
      <source relative_path="meterliblp/inc" project_relative_path="./" type="c_include">
        <files mask="meterliblp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="meterliblp/inc" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mmcau.cm0p.MKM35Z7" name="mmcau_cm0p" brief="MMCAU library for ARM Cortex M0+ core" version="2.0.2" full_name="Kinetis MMCAU security function library for Arm Cortex-M0+" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Security/MMCAU library" user_visible="true" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <all>
          <component_dependency value="middleware.mmcau.common_files.MKM35Z7"/>
          <component_dependency value="platform.drivers.clock.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="asm-cm0p" type="lib">
        <files mask="lib_mmcau-cm0p.a"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mmcau.common_files.MKM35Z7" name="mmcau" brief="MMCAU common library source files" version="2.0.3" full_name="Kinetis MMCAU common source files" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" category="Security/MMCAU library" user_visible="true" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cau_api.h"/>
        <files mask="fsl_mmcau.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mmcau.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mmcau.mmcau_files.MKM35Z7" name="mmcau" brief="MMCAU security function library source files" version="2.0.2" full_name="Kinetis MMCAU security function library source files" devices="MKM35Z512xxx7" category="Security/MMCAU library" user_visible="false" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="README.txt"/>
      </source>
      <source relative_path="asm-cm0p/src" type="other" device_cores="core0_MKM35Z512xxx7">
        <files mask="cau2_defines.hdr"/>
      </source>
      <source relative_path="asm-cm0p/src" type="asm_include" device_cores="core0_MKM35Z512xxx7">
        <files mask="mmcau_aes_functions.s"/>
        <files mask="mmcau_des_functions.s"/>
        <files mask="mmcau_md5_functions.s"/>
        <files mask="mmcau_sha1_functions.s"/>
        <files mask="mmcau_sha256_functions.s"/>
      </source>
    </component>
    <component id="middleware.mmcau.unused_files.MKM35Z7" name="unused_files" brief="MMCAU files unused by projects" version="2.0.2" full_name="MMCAU library unused files" devices="MKM35Z512xxx7" user_visible="false" type="other" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <source exclude="true" relative_path="doxygen" type="other">
        <files mask="fsl_mmcau.dox" hidden="true"/>
      </source>
    </component>
    <component id="middleware.rtcesl.cm0p.MKM35Z7" name="rtcesl" brief="Real Time Control Embedded Software Library for CM0 core" version="1.1.0" full_name="Middleware rtcesl cm0" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="middleware" package_base_path="middleware/rtcesl" project_base_path="rtcesl">
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/AMCLIB/Include" type="c_include">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQHw_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvABHw_A32.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/GDFLIB/Include" type="c_include">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_A32_Asmi.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/GFLIB/Include" type="c_include">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_AtanYX_F32.h"/>
        <files mask="GFLIB_AtanYXHw_F32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRampHw_A32.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRampHw_A32.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F16_Asmi.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_F32_Asmi.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_SqrtHw_F16.h"/>
        <files mask="GFLIB_SqrtHw_F16_Asmi.h"/>
        <files mask="GFLIB_SqrtHw_F32.h"/>
        <files mask="GFLIB_SqrtHw_F32_Asmi.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_VectorLimit1_F16.h"/>
        <files mask="GFLIB_VectorLimit1Hw_F16.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/GMCLIB/Include" type="c_include">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_DTCompLut1D_F16.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16.h"/>
        <files mask="GMCLIB_ElimDcBusRipHw_A32.h"/>
        <files mask="GMCLIB_ElimDcBusRipHw_F16.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/MLIB/Include" type="c_include">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_A32_Asmi.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add4_F16.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F16_Asmi.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_BiShift_F32_Asmi.h"/>
        <files mask="MLIB_Clb_F16_Asmi.h"/>
        <files mask="MLIB_Clb_F32_Asmi.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Div_A32_Asm.h"/>
        <files mask="MLIB_Div_F16_Asm.h"/>
        <files mask="MLIB_Div_F32_Asm.h"/>
        <files mask="MLIB_Div1Q_A32_Asm.h"/>
        <files mask="MLIB_Div1Q_F16_Asm.h"/>
        <files mask="MLIB_Div1Q_F32_Asm.h"/>
        <files mask="MLIB_DivHw_A32_Asm.h"/>
        <files mask="MLIB_DivHw_F16_Asm.h"/>
        <files mask="MLIB_DivHw_F32.h"/>
        <files mask="MLIB_DivHw_F32_Asm.h"/>
        <files mask="MLIB_DivHw1Q_A32_Asm.h"/>
        <files mask="MLIB_DivHw1Q_F16_Asm.h"/>
        <files mask="MLIB_DivHw1Q_F32_Asm.h"/>
        <files mask="MLIB_Log2_U16_Asmi.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F16.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asm.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_A32_Asmi.h"/>
        <files mask="MLIB_MacRnd_F16.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_MMDVSQ.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_A32_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F16.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asm.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_A32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F16.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Rcp_A32_Asm.h"/>
        <files mask="MLIB_Rcp1Q_A32_Asm.h"/>
        <files mask="MLIB_RcpHw_A32_Asm.h"/>
        <files mask="MLIB_RcpHw1Q_A32_Asmi.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_A32_Asmi.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_F16.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/PCLIB/Include" type="c_include">
        <files mask="pclib.h"/>
        <files mask="PCLIB_Ctrl2P2Z_F16.h"/>
        <files mask="PCLIB_Ctrl3P3Z_F16.h"/>
        <files mask="PCLIB_CtrlPI_F16.h"/>
        <files mask="PCLIB_CtrlPIandLPFilter_F16.h"/>
        <files mask="PCLIB_CtrlPID_F16.h"/>
        <files mask="pclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/AMCLIB" type="lib">
        <files mask="libAMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/GFLIB" type="lib">
        <files mask="libGFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/GDFLIB" type="lib">
        <files mask="libGDFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/GMCLIB" type="lib">
        <files mask="libGMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/MLIB" type="lib">
        <files mask="libMLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM0_RTCESL_4.7.1_MCUX/PCLIB" type="lib">
        <files mask="libPCLIB.a"/>
      </source>
      <source relative_path="CM0_RTCESL_4.7.1_doc" type="doc">
        <files mask="CM0AMCLIBUG.pdf" hidden="true"/>
        <files mask="CM0GDFLIBUG.pdf" hidden="true"/>
        <files mask="CM0GFLIBUG.pdf" hidden="true"/>
        <files mask="CM0GMCLIBUG.pdf" hidden="true"/>
        <files mask="CM0MLIBUG.pdf" hidden="true"/>
        <files mask="CM0PCLIBUG.pdf" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="CM0_RTCESL_4.7.1_MCUX/AMCLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM0_RTCESL_4.7.1_MCUX/GDFLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM0_RTCESL_4.7.1_MCUX/GFLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM0_RTCESL_4.7.1_MCUX/GMCLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM0_RTCESL_4.7.1_MCUX/MLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM0_RTCESL_4.7.1_MCUX/PCLIB/Include" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MKM35Z7" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.0" full_name="Utilities miscellaneous" devices="MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="devices/MKM35Z7/utilities" project_base_path="utilities"/>
    <component id="platform.utilities.assert.MKM35Z7" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="devices/MKM35Z7/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.MKM35Z7" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="devices/MKM35Z7/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MKM35Z7" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="devices/MKM35Z7/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MKM35Z7" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="devices/MKM35Z7/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.uart_adapter.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.notifier.MKM35Z7" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="devices/MKM35Z7/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKM35Z7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MKM35Z7" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="MKM35Z512xxx7" device_cores="core0_MKM35Z512xxx7" user_visible="true" type="utilities" package_base_path="devices/MKM35Z7/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MKM35Z7"/>
          <component_dependency value="component.lists.MKM35Z7"/>
          <component_dependency value="platform.drivers.common.MKM35Z7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
