<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MKV31F256xxx12" name="MKV31F256xxx12" brief="This is SDK version 2.10.0 manifest file. It describes the content of the MKV31F256xxx12 and additional settings for tools that support SDK version 2.10.0" format_version="3.8" api_version="2.0.0" configuration="acf95ce1b5b45e4361ca4c8fa9898393" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.8.xsd">
  <!--Timestamp (UTC): 2021-07-16 09:55:04.036173-->
  <!--This manifest is generated based on sdk repo commit: fc8f976ec0bcffe5ca58bba20b19cf331786bbce-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="hvpkv31f120m"/>
    <definition extID="twrkv31f120m"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso2100" name="MCUXpresso2100" version="2.10.0" revision="Epluginsite 479 2021-07-15"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.4.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.4.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="frdmkv31f" name="FRDM-KV31F" href="https://www.nxp.com/pip/FRDM-KV31F" version="1.0.0" package="MKV31F512VLL12">
      <description>Freedom Development Platform for Kinetis KV3x Family MCUs</description>
      <image path="boards/frdmkv31f" type="image">
        <files mask="frdmkv31f.png"/>
      </image>
      <examples>
        <example id="frdmkv31f_adc16_continuous_edma" name="adc16_continuous_edma" brief="The ADC16 continuous EDMA demo application demonstrates the usage of the ADC and EDMA peripheral while in a continuous mode. TheADC16 is first set to continuous mode. In continuous convert configuration, only the initial rising-edge to launch continuous conversions isobserved, and until conversion is aborted, the ADC16 continues to do conversions on the same SCn register that initiated the conversion. EDMA request will be asserted during an ADC16 conversion complete event noted when any of the SC1n[COCO] flags is asserted. EDMA will transferADC16 results to memory and if users press any key, demo will average ADC16 results stored in memory and print average on the terminal.  " toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc16" path="boards/frdmkv31f/driver_examples/adc16/continuous_edma">
          <external path="boards/frdmkv31f/driver_examples/adc16/continuous_edma" type="xml">
            <files mask="adc16_continuous_edma_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_adc16_interrupt" name="adc16_interrupt" brief="The adc16_interrupt example shows how to use interrupt with ADC16 driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the ADC16'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC interrupt would be asserted once the conversion is completed. In ADC ISR, the conversion completed flag would be cleared by reading the conversion result value. Also, the conversion result value is stored, and the ISR counter is increased. These information would be printed when the execution return to the main loop.The point is that the ADC16 interrupt configuration is set when configuring the ADC16's conversion channel. When in software trigger mode, the conversion would be launched by the operation of configuring channel, just like writing aconversion command. So if user wants to generate the interrupt every time the conversion is completed, the channel's configuration with enabling interrupt setting would be used for each conversion." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc16" path="boards/frdmkv31f/driver_examples/adc16/interrupt">
          <external path="boards/frdmkv31f/driver_examples/adc16/interrupt" type="xml">
            <files mask="adc16_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_adc16_low_power_async_edma" name="adc16_low_power_async_edma" brief="The ADC Low Power Async DMA demo application demonstrates the usage of the ADC and DMA peripheral while in a low power mode. Themicrocontroller is first set to very low power stop (VLPS) mode. Every 100 ms, low power timer trigger the ADC module convertvalue on ADC channel. After 16 times(1,6s) the DMA transfer finish interrupt wake up the CPU to process sampled data, print result touser and toggle LED." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/adc16_low_power_async_edma">
          <external path="boards/frdmkv31f/demo_apps/adc16_low_power_async_edma" type="xml">
            <files mask="adc16_low_power_async_edma_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_adc16_low_power_async_edma_peripheral" name="adc16_low_power_async_edma_peripheral" brief="The ADC Low Power Async DMA demo application demonstrates the usage of the ADC and DMA peripheral while in a low power mode. Themicrocontroller is first set to very low power stop (VLPS) mode. Every 100 ms, low power timer trigger the ADC module convertvalue on ADC channel. After 16 times(1,6s) the DMA transfer finish interrupt wake up the CPU to process sampled data, print result touser and toggle LED." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/adc16_low_power_async_edma_peripheral">
          <external path="boards/frdmkv31f/demo_apps/adc16_low_power_async_edma_peripheral" type="xml">
            <files mask="adc16_low_power_async_edma_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_adc16_low_power_peripheral" name="adc16_low_power_peripheral" brief="The ADC Low Power demo application demonstrates the usage of the ADC peripheral while in a low power mode. Themicrocontroller is first set to very low power stop (VLPS) mode. Every 500 ms, an interrupt wakes up the ADC module andreads the current temperature of the microcontroller. While the temperature remains within boundaries, both LEDs are on.If the core temperature is higher or lower than average, the LEDs change state respectively. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/adc16_low_power_peripheral">
          <external path="boards/frdmkv31f/demo_apps/adc16_low_power_peripheral" type="xml">
            <files mask="adc16_low_power_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_adc16_polling" name="adc16_polling" brief="The adc16_polling example shows the simplest way to use ADC16 driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the ADC16'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the conversion completed flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement.The auto-calibration is not essential but strongly recommended. It can help to adjust the converter itself and improvethe ADC16's performance." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc16" path="boards/frdmkv31f/driver_examples/adc16/polling">
          <external path="boards/frdmkv31f/driver_examples/adc16/polling" type="xml">
            <files mask="adc16_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_bubble_peripheral" name="bubble_peripheral" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/bubble_peripheral">
          <external path="boards/frdmkv31f/demo_apps/bubble_peripheral" type="xml">
            <files mask="bubble_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmp_interrupt" name="cmp_interrupt" brief="The CMP interrupt Example shows how to use interrupt with CMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any CMP interrupt happens, the CMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/cmp" path="boards/frdmkv31f/driver_examples/cmp/interrupt">
          <external path="boards/frdmkv31f/driver_examples/cmp/interrupt" type="xml">
            <files mask="cmp_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmp_polling" name="cmp_polling" brief="The CMP polling Example shows the simplest way to use CMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/cmp" path="boards/frdmkv31f/driver_examples/cmp/polling">
          <external path="boards/frdmkv31f/driver_examples/cmp/polling" type="xml">
            <files mask="cmp_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_dspi_edma_b2b_transfer_master" name="cmsis_dspi_edma_b2b_transfer_master" brief="The dspi_edma_b2b_transfer example shows how to use DSPI CMSIS driver in edma way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_edma_b2b_transfer_master.c' includes the DSPI master code.1. DSPI master send/received data to/from DSPI slave in edma . " toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/dspi" path="boards/frdmkv31f/cmsis_driver_examples/dspi/edma_b2b_transfer/master">
          <external path="boards/frdmkv31f/cmsis_driver_examples/dspi/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_dspi_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_dspi_edma_b2b_transfer_slave" name="cmsis_dspi_edma_b2b_transfer_slave" brief="The dspi_edma_b2b_transfer example shows how to use DSPI CMSIS driver in edma way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_edma_b2b_transfer_slave.c' includes the DSPI slave code.1. DSPI master send/received data to/from DSPI slave in edma . " toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/dspi" path="boards/frdmkv31f/cmsis_driver_examples/dspi/edma_b2b_transfer/slave">
          <external path="boards/frdmkv31f/cmsis_driver_examples/dspi/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_dspi_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_dspi_int_b2b_transfer_master" name="cmsis_dspi_int_b2b_transfer_master" brief="The dspi_int_b2b_transfer example shows how to use DSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_int_b2b_transfer_master.c' includes the DSPI master code.This example uses the transactional API in DSPI driver.1. DSPI master send/received data to/from DSPI slave in interrupt . " toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/dspi" path="boards/frdmkv31f/cmsis_driver_examples/dspi/int_b2b_transfer/master">
          <external path="boards/frdmkv31f/cmsis_driver_examples/dspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_dspi_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_dspi_int_b2b_transfer_slave" name="cmsis_dspi_int_b2b_transfer_slave" brief="The dspi_int_b2b_transfer example shows how to use DSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_int_b2b_transfer_slave.c' includes the DSPI slave code.This example uses the transactional API in DSPI driver.1. DSPI master send/received data to/from DSPI slave in interrupt . " toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/dspi" path="boards/frdmkv31f/cmsis_driver_examples/dspi/int_b2b_transfer/slave">
          <external path="boards/frdmkv31f/cmsis_driver_examples/dspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_dspi_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_i2c_edma_b2b_transfer_master" name="cmsis_i2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/frdmkv31f/cmsis_driver_examples/i2c/edma_b2b_transfer/master">
          <external path="boards/frdmkv31f/cmsis_driver_examples/i2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_i2c_edma_b2b_transfer_slave" name="cmsis_i2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a EDMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/frdmkv31f/cmsis_driver_examples/i2c/edma_b2b_transfer/slave">
          <external path="boards/frdmkv31f/cmsis_driver_examples/i2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_i2c_int_b2b_transfer_master" name="cmsis_i2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/frdmkv31f/cmsis_driver_examples/i2c/int_b2b_transfer/master">
          <external path="boards/frdmkv31f/cmsis_driver_examples/i2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_i2c_int_b2b_transfer_slave" name="cmsis_i2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/frdmkv31f/cmsis_driver_examples/i2c/int_b2b_transfer/slave">
          <external path="boards/frdmkv31f/cmsis_driver_examples/i2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_i2c_read_accel_value_transfer" name="cmsis_i2c_read_accel_value_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_read_accel_value example shows how to use CMSIS I2C driver to communicate with an i2c device: 1. How to use the i2c driver to read a i2c device who_am_I register. 2. How to use the i2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/i2c" path="boards/frdmkv31f/cmsis_driver_examples/i2c/read_accel_value_transfer">
          <external path="boards/frdmkv31f/cmsis_driver_examples/i2c/read_accel_value_transfer" type="xml">
            <files mask="cmsis_i2c_read_accel_value_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="boards/frdmkv31f/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="boards/frdmkv31f/cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="boards/frdmkv31f/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="boards/frdmkv31f/cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_uart_edma_transfer" name="cmsis_uart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/uart" path="boards/frdmkv31f/cmsis_driver_examples/uart/edma_transfer">
          <external path="boards/frdmkv31f/cmsis_driver_examples/uart/edma_transfer" type="xml">
            <files mask="cmsis_uart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_cmsis_uart_interrupt_transfer" name="cmsis_uart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="cmsis_driver_examples/uart" path="boards/frdmkv31f/cmsis_driver_examples/uart/interrupt_transfer">
          <external path="boards/frdmkv31f/cmsis_driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="cmsis_uart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/crc" path="boards/frdmkv31f/driver_examples/crc">
          <external path="boards/frdmkv31f/driver_examples/crc" type="xml">
            <files mask="crc_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dac_adc_peripheral" name="dac_adc_peripheral" brief="The DAC / ADC demo application demonstrates the use of the DAC and ADC peripherals. This application demonstrates how toconfigure the DAC and set the output on the DAC. This demo also demonstrates how to configure the ADC in 'Blocking Mode'and how to read ADC values." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/dac_adc_peripheral">
          <external path="boards/frdmkv31f/demo_apps/dac_adc_peripheral" type="xml">
            <files mask="dac_adc_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dac_basic" name="dac_basic" brief="The dac_basic example shows how to use DAC module simply as the general DAC converter.When the DAC's buffer feature is not enabled, the first item of the buffer is used as the DAC output data register.The converter would always output the value of the first item. In this example, it gets the value from terminal,outputs the DAC output voltage through DAC output pin." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac" path="boards/frdmkv31f/driver_examples/dac/basic">
          <external path="boards/frdmkv31f/driver_examples/dac/basic" type="xml">
            <files mask="dac_basic_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dac_buffer_interrupt" name="dac_buffer_interrupt" brief="The dac_buffer_interrupt example shows how to use DAC buffer with interrupts.When the DAC's buffer feature is enabled, user can benefit from the automation of updating DAC output by hardware/software trigger. As we know, the DAC converter outputs the value of item pointed by current read pointer. Once the buffer is triggered by software or hardware, the buffer's read pointer would move automatically as the work mode is set,like normal (cycle) mode, swing mode, one-time-scan mode or FIFO mode.In this example, it captures the user's type-in operation from terminal and does the software trigger to the buffer.The terminal would also display the log that shows the current buffer pointer's position with buffer events." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac" path="boards/frdmkv31f/driver_examples/dac/buffer_interrupt">
          <external path="boards/frdmkv31f/driver_examples/dac/buffer_interrupt" type="xml">
            <files mask="dac_buffer_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dac_continuous_pdb_edma" name="dac_continuous_pdb_edma" brief="The demo shows how to use the PDB to generate a DAC trigger and use the DMA to transfer data into DAC buffer.In this example, DAC is first set to normal buffer mode. PDB is as DAC hardware trigger source and DMA would work when DAC read pointer is zero. When run the example, the DAC is triggered by PDB and the read pointer increases by one,every time the trigger occurs. When the read pointer reaches the upper limit, it goes to zero directly in the next trigger event.while read pointer goes to zero, DMA request will be triggered and transfer data into DAC buffer. The user should probethe DAC output with a oscilloscope to see the Half-sine signal." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dac" path="boards/frdmkv31f/driver_examples/dac/continuous_pdb_edma">
          <external path="boards/frdmkv31f/driver_examples/dac/continuous_pdb_edma" type="xml">
            <files mask="dac_continuous_pdb_edma_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_edma_b2b_transfer_master" name="dspi_edma_b2b_transfer_master" brief="The dspi_edma_b2b_transfer example shows how to use DSPI driver in edma way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_edma_b2b_transfer_master.c' includes the DSPI master code.1. DSPI master send/received data to/from DSPI slave in edma . (DSPI Slave using edma to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/edma_b2b_transfer/master">
          <external path="boards/frdmkv31f/driver_examples/dspi/edma_b2b_transfer/master" type="xml">
            <files mask="dspi_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_edma_b2b_transfer_slave" name="dspi_edma_b2b_transfer_slave" brief="The dspi_edma_b2b_transfer example shows how to use DSPI driver in edma way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_edma_b2b_transfer_slave.c' includes the DSPI slave code.1. DSPI master send/received data to/from DSPI slave in edma . (DSPI Slave using edma to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/edma_b2b_transfer/slave">
          <external path="boards/frdmkv31f/driver_examples/dspi/edma_b2b_transfer/slave" type="xml">
            <files mask="dspi_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_half_duplex_edma_master" name="dspi_half_duplex_edma_master" brief="The dspi_half_duplex_edma_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sendsa piece of data to slave, and receive a piece of data from slave. This example checks if the data received fromslave is correct.Besides, master will transfer in EDMA way. " toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/edma/master">
          <external path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/edma/master" type="xml">
            <files mask="dspi_half_duplex_edma_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_half_duplex_edma_slave" name="dspi_half_duplex_edma_slave" brief="The dspi_half_duplex_edma_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses edma mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the begain address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/edma/slave">
          <external path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/edma/slave" type="xml">
            <files mask="dspi_half_duplex_edma_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_half_duplex_int_master" name="dspi_half_duplex_int_master" brief="The dspi_half_duplex_int_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct.Besides, master will transfer in interrupt way. " toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/int/master">
          <external path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/int/master" type="xml">
            <files mask="dspi_half_duplex_int_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_half_duplex_int_slave" name="dspi_half_duplex_int_slave" brief="The dspi_half_duplex_int_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses interrupt mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the begain address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/int/slave">
          <external path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/int/slave" type="xml">
            <files mask="dspi_half_duplex_int_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_half_duplex_polling_master" name="dspi_half_duplex_polling_master" brief="The dspi_half_duplex_polling_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends apiece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct. Besides, master will transfer in polling way. " toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/polling/master">
          <external path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/polling/master" type="xml">
            <files mask="dspi_half_duplex_polling_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_half_duplex_polling_slave" name="dspi_half_duplex_polling_slave" brief="The dspi_half_duplex_polling_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses interrupt mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/polling/slave">
          <external path="boards/frdmkv31f/driver_examples/dspi/half_duplex_transfer/polling/slave" type="xml">
            <files mask="dspi_half_duplex_polling_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_interrupt" name="dspi_interrupt" brief="The dspi_interrupt example shows how to use DSPI driver in interrupt way:In this example , one dspi instance used as DSPI master and another dspi instance used as DSPI slave in the same board.This example does not use the transactional API in DSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. DSPI master send/received data to/from DSPI slave in interrupt . (DSPI Slave using interrupt to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/interrupt">
          <external path="boards/frdmkv31f/driver_examples/dspi/interrupt" type="xml">
            <files mask="dspi_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_interrupt_b2b_master" name="dspi_interrupt_b2b_master" brief="The dspi_interrupt_b2b example shows how to use DSPI driver in interrupt way:In this example , we need two boards , one board used as DSPI master and another board used as DSPI slave.The file 'dspi_interrupt_b2b_master.c' includes the DSPI master code.This example does not use the transactional API in DSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. DSPI master send/received data to/from DSPI slave in interrupt . (DSPI Slave using interrupt to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/interrupt_b2b/master">
          <external path="boards/frdmkv31f/driver_examples/dspi/interrupt_b2b/master" type="xml">
            <files mask="dspi_interrupt_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_interrupt_b2b_slave" name="dspi_interrupt_b2b_slave" brief="The dspi_interrupt_b2b example shows how to use DSPI driver in interrupt way:In this example , we need two boards , one board used as DSPI master and another board used as DSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the DSPI slave code.This example does not use the transactional API in DSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. DSPI master send/received data to/from DSPI slave in interrupt . (DSPI Slave using interrupt to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/interrupt_b2b/slave">
          <external path="boards/frdmkv31f/driver_examples/dspi/interrupt_b2b/slave" type="xml">
            <files mask="dspi_interrupt_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_interrupt_b2b_transfer_master" name="dspi_interrupt_b2b_transfer_master" brief="The dspi_interrupt_b2b_transfer example shows how to use DSPI driver in interrupt way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_interrupt_b2b_transfer_master.c' includes the DSPI master code.This example uses the transactional API in DSPI driver.1. DSPI master send/received data to/from DSPI slave in interrupt . (DSPI Slave using interrupt to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/interrupt_b2b_transfer/master">
          <external path="boards/frdmkv31f/driver_examples/dspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="dspi_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_interrupt_b2b_transfer_slave" name="dspi_interrupt_b2b_transfer_slave" brief="The dspi_interrupt_b2b_transfer example shows how to use DSPI driver in interrupt way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_interrupt_b2b_transfer_slave.c' includes the DSPI slave code.This example uses the transactional API in DSPI driver.1. DSPI master send/received data to/from DSPI slave in interrupt . (DSPI Slave using interrupt to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/interrupt_b2b_transfer/slave">
          <external path="boards/frdmkv31f/driver_examples/dspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="dspi_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_polling_b2b_transfer_master" name="dspi_polling_b2b_transfer_master" brief="The dspi_polling_b2b_transfer example shows how to use DSPI driver in polling way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_polling_b2b_transfer_master.c' includes the DSPI master code.1. DSPI master send/received data to/from DSPI slave in polling . (DSPI Slave using interrupt to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/polling_b2b_transfer/master">
          <external path="boards/frdmkv31f/driver_examples/dspi/polling_b2b_transfer/master" type="xml">
            <files mask="dspi_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_dspi_polling_b2b_transfer_slave" name="dspi_polling_b2b_transfer_slave" brief="The dspi_polling_b2b_transfer example shows how to use DSPI driver in polling way:In this example , we need two boards, one board used as DSPI master and another board used as DSPI slave.The file 'dspi_polling_b2b_transfer_slave.c' includes the DSPI slave code.1. DSPI master send/received data to/from DSPI slave in polling . (DSPI Slave using interrupt to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/dspi" path="boards/frdmkv31f/driver_examples/dspi/polling_b2b_transfer/slave">
          <external path="boards/frdmkv31f/driver_examples/dspi/polling_b2b_transfer/slave" type="xml">
            <files mask="dspi_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ecompass_peripheral" name="ecompass_peripheral" brief="The E-Compass demo application demonstrates the use of the FXOS8700 sensor. The tilt-compensated algorithm calculatesall three angles (pitch, roll, and yaw or compass heading). You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/ecompass_peripheral">
          <external path="boards/frdmkv31f/demo_apps/ecompass_peripheral" type="xml">
            <files mask="ecompass_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_edma_channel_link" name="edma_channel_link" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma" path="boards/frdmkv31f/driver_examples/edma/channel_link">
          <external path="boards/frdmkv31f/driver_examples/edma/channel_link" type="xml">
            <files mask="edma_channel_link_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_edma_interleave_transfer" name="edma_interleave_transfer" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma" path="boards/frdmkv31f/driver_examples/edma/interleave_transfer">
          <external path="boards/frdmkv31f/driver_examples/edma/interleave_transfer" type="xml">
            <files mask="edma_interleave_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_edma_memory_to_memory" name="edma_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma" path="boards/frdmkv31f/driver_examples/edma/memory_to_memory">
          <external path="boards/frdmkv31f/driver_examples/edma/memory_to_memory" type="xml">
            <files mask="edma_memory_to_memory_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_edma_ping_pong_transfer" name="edma_ping_pong_transfer" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma" path="boards/frdmkv31f/driver_examples/edma/ping_pong_transfer">
          <external path="boards/frdmkv31f/driver_examples/edma/ping_pong_transfer" type="xml">
            <files mask="edma_ping_pong_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_edma_scatter_gather" name="edma_scatter_gather" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma" path="boards/frdmkv31f/driver_examples/edma/scatter_gather">
          <external path="boards/frdmkv31f/driver_examples/edma/scatter_gather" type="xml">
            <files mask="edma_scatter_gather_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_edma_wrap_transfer" name="edma_wrap_transfer" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/edma" path="boards/frdmkv31f/driver_examples/edma/wrap_transfer">
          <external path="boards/frdmkv31f/driver_examples/edma/wrap_transfer" type="xml">
            <files mask="edma_wrap_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ewm" name="ewm" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ewm" path="boards/frdmkv31f/driver_examples/ewm">
          <external path="boards/frdmkv31f/driver_examples/ewm" type="xml">
            <files mask="ewm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_flashloader" name="flashloader" brief="The flashloader is a bootloader that executes from target RAM memory on the platform. The bootloader is a configurable flash programming utility that operates over a serial connection on MCU devices. It enables quick and easy programming of MCU devices through the entire product life cycle, including application development, final product manufacturing, and more.Host-side command line and GUI tools are available to communicate with the bootloader. Users can utilize host tools to upload and/or download application code via the bootloader." toolchain="mcuxpresso" compiler="compiler_gcc" category="bootloader_examples" path="boards/frdmkv31f/bootloader_examples/flashloader">
          <external path="boards/frdmkv31f/bootloader_examples/flashloader" type="xml">
            <files mask="flashloader_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_flashloader_loader" name="flashloader_loader" brief="The flashloader_loader is a bootstrap loader that executes from flash memory on either the Freedom or Tower platform. This loader copies an image of the flashloader into RAM, then executes the flashloader from RAM. The flashloader_loader project uses the output of the flashloader build to create the flashloader image to load into RAM. Therefore, the flashloader project must be built before building the flashloader_loader project. Also, install Python27 for successful flashloader image generation." toolchain="mcuxpresso" compiler="compiler_gcc" category="bootloader_examples" path="boards/frdmkv31f/bootloader_examples/flashloader_loader">
          <external path="boards/frdmkv31f/bootloader_examples/flashloader_loader" type="xml">
            <files mask="flashloader_loader_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_fmstr_example_any" name="fmstr_example_any" brief="FreeMASTER example fully configured by MCUXpresso ConfigTools. Serial communication is used by default, but it can be changed easily to CAN or other in the MCUXpresso Peripheral Tool. Also FreeMASTER driver features are configured graphically in this tool. The Pins and Clock Tool are used to configure pin multiplexers and clocks. Just like other FreeMASTER examples, the application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="mcuxpresso" compiler="compiler_gcc" category="FreeMASTER_examples" path="boards/frdmkv31f/freemaster_examples/fmstr_any">
          <external path="boards/frdmkv31f/freemaster_examples/fmstr_any" type="xml">
            <files mask="fmstr_example_any_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_fmstr_example_pdbdm" name="fmstr_example_pdbdm" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="mcuxpresso" compiler="compiler_gcc" category="FreeMASTER_examples" path="boards/frdmkv31f/freemaster_examples/fmstr_pdbdm">
          <external path="boards/frdmkv31f/freemaster_examples/fmstr_pdbdm" type="xml">
            <files mask="fmstr_example_pdbdm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_fmstr_example_uart" name="fmstr_example_uart" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="mcuxpresso" compiler="compiler_gcc" category="FreeMASTER_examples" path="boards/frdmkv31f/freemaster_examples/fmstr_uart">
          <external path="boards/frdmkv31f/freemaster_examples/fmstr_uart" type="xml">
            <files mask="fmstr_example_uart_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freedom_bootloader" name="freedom_bootloader" brief="The freedom_bootloader is a bootloader that executes from target flash memory on the Freedom platform. The bootloader is a configurable flash programming utility that operates over a serial connection on MCU devices. It enables quick and easy programming of MCU devices through the entire product life cycle, including application development, final product manufacturing, and more.Host-side command line and GUI tools are available to communicate with the bootloader. Users can utilize host tools to upload and/or download application code via the bootloader." toolchain="mcuxpresso" compiler="compiler_gcc" category="bootloader_examples" path="boards/frdmkv31f/bootloader_examples/freedom_bootloader">
          <external path="boards/frdmkv31f/bootloader_examples/freedom_bootloader" type="xml">
            <files mask="freedom_bootloader_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_dspi" name="freertos_dspi" brief="The freertos_dspi example shows how to use DSPI driver in FreeRTOS:In this example , one dspi instance used as DSPI master with blocking and another dspi instance used as DSPI slave .1. DSPI master sends/receives data using task blocking calls to/from DSPI slave. (DSPI Slave uses interrupt to receive/send the data)" toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_dspi">
          <external path="boards/frdmkv31f/rtos_examples/freertos_dspi" type="xml">
            <files mask="freertos_dspi_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_event">
          <external path="boards/frdmkv31f/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_generic">
          <external path="boards/frdmkv31f/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_hello">
          <external path="boards/frdmkv31f/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_i2c" name="freertos_i2c" brief="The freertos_i2c example shows an application using RTOS tasks with I2C driver:The example supports 2 different connections:On board connection and board to board connection.With one board connection, 2 I2C instances of the same board are used. One i2c instance used as I2C master and another I2C instance used as I2C slave .    Default settings in freertos_i2c.c (in folder boards/&lt;board&gt;/rtos_examples/freertos_i2c) is applied.    Two tasks are created. One task is associated with an I2C master operation and another task deals with I2C slave operation.    1. I2C master task sends data to I2C slave task.    2. I2C master task reads data sent back from I2C slave task.    The transmit data and the receive data of both I2C master task and I2C slave task are printed out on terminal.With board to board connection, one I2C instance on one board is used as I2C master and the I2C instance on other board is used as I2C slave. Tasks are created to run on each board to handle I2C communication.    File freertos_i2c.c should have following definitions:    #define EXAMPLE_CONNECT_I2C BOARD_TO_BOARD    For board used as I2C master:        #define I2C_MASTER_SLAVE isMASTER    For board used as I2C slave:        #define I2C_MASTER_SLAVE isSLAVE" toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_i2c">
          <external path="boards/frdmkv31f/rtos_examples/freertos_i2c" type="xml">
            <files mask="freertos_i2c_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_lpuart" name="freertos_lpuart" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_lpuart">
          <external path="boards/frdmkv31f/rtos_examples/freertos_lpuart" type="xml">
            <files mask="freertos_lpuart_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_mutex">
          <external path="boards/frdmkv31f/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_queue">
          <external path="boards/frdmkv31f/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_sem">
          <external path="boards/frdmkv31f/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_swtimer">
          <external path="boards/frdmkv31f/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_tickless">
          <external path="boards/frdmkv31f/rtos_examples/freertos_tickless" type="xml">
            <files mask="freertos_tickless_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_freertos_uart" name="freertos_uart" brief="The UART example for FreeRTOS demonstrates the possibility to use the UART driver in the RTOS.The example uses single instance of UART IP and writes string into, then reads back chars.After every 4B received, these are sent back on UART." toolchain="mcuxpresso" compiler="compiler_gcc" category="rtos_examples" path="boards/frdmkv31f/rtos_examples/freertos_uart">
          <external path="boards/frdmkv31f/rtos_examples/freertos_uart" type="xml">
            <files mask="freertos_uart_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_combine_pwm" name="ftm_combine_pwm" brief="The FTM project is a demonstration program of generating a combined PWM signal by the SDK FTM driver. It sets up the FTMhardware block to output PWM signals on two TPM channels. The example also shows the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the FTM pins, the user will see a change in LED brightness.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="boards/frdmkv31f/driver_examples/ftm/combine_pwm">
          <external path="boards/frdmkv31f/driver_examples/ftm/combine_pwm" type="xml">
            <files mask="ftm_combine_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_dual_edge_capture" name="ftm_dual_edge_capture" brief="The FTM project is a demonstration program of the SDK FTM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a FTM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="boards/frdmkv31f/driver_examples/ftm/dual_edge_capture">
          <external path="boards/frdmkv31f/driver_examples/ftm/dual_edge_capture" type="xml">
            <files mask="ftm_dual_edge_capture_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_input_capture" name="ftm_input_capture" brief="The FTM project is a demonstration program of the SDK FTM driver's input capture feature.The example sets up a FTM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="boards/frdmkv31f/driver_examples/ftm/input_capture">
          <external path="boards/frdmkv31f/driver_examples/ftm/input_capture" type="xml">
            <files mask="ftm_input_capture_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_output_compare" name="ftm_output_compare" brief="The FTM project is a demonstration program of the SDK FTM driver's output compare feature.It sets up one FTM channel to toggle the output when a match occurs with the channel value. The usershould probe the FTM output with a oscilloscope to see the signal toggling." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="boards/frdmkv31f/driver_examples/ftm/output_compare">
          <external path="boards/frdmkv31f/driver_examples/ftm/output_compare" type="xml">
            <files mask="ftm_output_compare_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_pwm_twochannel" name="ftm_pwm_twochannel" brief="The FTM pwm two channel Example project is a demonstration program that uses the KSDK software to generate a square pulse PWM on 2 channel to control the LED brightness.- FTM generates a PWM with the increasing and decreasing duty cycle.- LED brightness is increasing and then dimming. This is a continuous process." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="boards/frdmkv31f/driver_examples/ftm/pwm_twochannel">
          <external path="boards/frdmkv31f/driver_examples/ftm/pwm_twochannel" type="xml">
            <files mask="ftm_pwm_twochannel_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_quad_decoder" name="ftm_quad_decoder" brief="This demo describes the usage of Quad Decoder feature in FTM module, which can be used to count the position of decoder.An external decoder is used to generate the PHA and PHB's signal. These two signals are feed to the FTM pins with Quad Decoder feature (FTMx_QD_PHA and FTMx_QD_PHB). Then, the counter value and direction would be displayed in terminal window predically." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/ftm_quad_decoder">
          <external path="boards/frdmkv31f/demo_apps/ftm_quad_decoder" type="xml">
            <files mask="ftm_quad_decoder_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_quad_decoder_peripheral" name="ftm_quad_decoder_peripheral" brief="This demo describes the usage of Quad Decoder feature in FTM module, which can be used to count the position of decoder.An external decoder is used to generate the PHA and PHB's signal. These two signals are feed to the FTM pins with Quad Decoder feature (FTMx_QD_PHA and FTMx_QD_PHB). Then, the counter value and direction would be displayed in terminal window predically. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/ftm_quad_decoder_peripheral">
          <external path="boards/frdmkv31f/demo_apps/ftm_quad_decoder_peripheral" type="xml">
            <files mask="ftm_quad_decoder_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_simple_pwm" name="ftm_simple_pwm" brief="The FTM project is a simple demonstration program of the SDK FTM driver. It sets up the FTMhardware block to output a center-aligned PWM signal. The PWM dutycycle is periodically updated.On boards that have an LED connected to the FTM pins, the user will see a change in LED brightness." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="boards/frdmkv31f/driver_examples/ftm/simple_pwm">
          <external path="boards/frdmkv31f/driver_examples/ftm/simple_pwm" type="xml">
            <files mask="ftm_simple_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_ftm_timer" name="ftm_timer" brief="The FTM project is a simple demonstration program of the SDK FTM driver to use FTM as a timer.It sets up the FTM hardware block to trigger an interrupt every 1 millisecond.When the FTM interrupt is triggered a message a printed on the UART terminal." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/ftm" path="boards/frdmkv31f/driver_examples/ftm/timer">
          <external path="boards/frdmkv31f/driver_examples/ftm/timer" type="xml">
            <files mask="ftm_timer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_gpio_input_interrupt" name="gpio_input_interrupt" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio" path="boards/frdmkv31f/driver_examples/gpio/input_interrupt">
          <external path="boards/frdmkv31f/driver_examples/gpio/input_interrupt" type="xml">
            <files mask="gpio_input_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio" path="boards/frdmkv31f/driver_examples/gpio/led_output">
          <external path="boards/frdmkv31f/driver_examples/gpio/led_output" type="xml">
            <files mask="gpio_led_output_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/hello_world">
          <external path="boards/frdmkv31f/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_i2c_edma_b2b_transfer_master" name="i2c_edma_b2b_transfer_master" brief="The i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/frdmkv31f/driver_examples/i2c/edma_b2b_transfer/master">
          <external path="boards/frdmkv31f/driver_examples/i2c/edma_b2b_transfer/master" type="xml">
            <files mask="i2c_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_i2c_edma_b2b_transfer_slave" name="i2c_edma_b2b_transfer_slave" brief="The i2c_edma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a EDMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/frdmkv31f/driver_examples/i2c/edma_b2b_transfer/slave">
          <external path="boards/frdmkv31f/driver_examples/i2c/edma_b2b_transfer/slave" type="xml">
            <files mask="i2c_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_i2c_interrupt" name="i2c_interrupt" brief="The i2c_functional_interrupt example shows how to use I2C functional driver to build a interrupt based application:In this example , one i2c instance used as I2C master and another i2c instance used as I2C slave .1. I2C master send data to I2C slave in interrupt . (I2C Slave using interrupt to receive the data)2. I2C master read data from I2C slave in interrupt . (I2C Slave using interrupt to send the data)3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/frdmkv31f/driver_examples/i2c/interrupt">
          <external path="boards/frdmkv31f/driver_examples/i2c/interrupt" type="xml">
            <files mask="i2c_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_i2c_interrupt_b2b_transfer_master" name="i2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/frdmkv31f/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="boards/frdmkv31f/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_i2c_interrupt_b2b_transfer_slave" name="i2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/frdmkv31f/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="boards/frdmkv31f/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_i2c_polling_b2b_transfer_master" name="i2c_polling_b2b_transfer_master" brief="The i2c_polling_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/frdmkv31f/driver_examples/i2c/polling_b2b_transfer/master">
          <external path="boards/frdmkv31f/driver_examples/i2c/polling_b2b_transfer/master" type="xml">
            <files mask="i2c_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_i2c_polling_b2b_transfer_slave" name="i2c_polling_b2b_transfer_slave" brief="The i2c_polling_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/frdmkv31f/driver_examples/i2c/polling_b2b_transfer/slave">
          <external path="boards/frdmkv31f/driver_examples/i2c/polling_b2b_transfer/slave" type="xml">
            <files mask="i2c_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_i2c_read_accel_value_transfer" name="i2c_read_accel_value_transfer" brief="The i2c_read_accel_value example shows how to use I2C driver to communicate with an i2c device: 1. How to use the i2c driver to read a i2c device who_am_I register. 2. How to use the i2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="boards/frdmkv31f/driver_examples/i2c/read_accel_value_transfer">
          <external path="boards/frdmkv31f/driver_examples/i2c/read_accel_value_transfer" type="xml">
            <files mask="i2c_read_accel_value_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_led_blinky" name="led_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/led_blinky">
          <external path="boards/frdmkv31f/demo_apps/led_blinky" type="xml">
            <files mask="led_blinky_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_log_bm" name="log_bm" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="mcuxpresso" compiler="compiler_gcc" category="component_examples" path="boards/frdmkv31f/component_examples/log/bm">
          <external path="boards/frdmkv31f/component_examples/log/bm" type="xml">
            <files mask="log_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_log_freertos" name="log_freertos" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="mcuxpresso" compiler="compiler_gcc" category="component_examples" path="boards/frdmkv31f/component_examples/log/freertos">
          <external path="boards/frdmkv31f/component_examples/log/freertos" type="xml">
            <files mask="log_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_lptmr" name="lptmr" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lptmr" path="boards/frdmkv31f/driver_examples/lptmr">
          <external path="boards/frdmkv31f/driver_examples/lptmr" type="xml">
            <files mask="lptmr_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_lpuart_9bit_interrupt_transfer" name="lpuart_9bit_interrupt_transfer" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmkv31f/driver_examples/lpuart/9bit_interrupt_transfer">
          <external path="boards/frdmkv31f/driver_examples/lpuart/9bit_interrupt_transfer" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_lpuart_edma_rb_transfer" name="lpuart_edma_rb_transfer" brief="The lpuart_edma Ring Buffer Example project is to demonstrate usage of the KSDK lpuart driver." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmkv31f/driver_examples/lpuart/edma_rb_transfer">
          <external path="boards/frdmkv31f/driver_examples/lpuart/edma_rb_transfer" type="xml">
            <files mask="lpuart_edma_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmkv31f/driver_examples/lpuart/edma_transfer">
          <external path="boards/frdmkv31f/driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmkv31f/driver_examples/lpuart/interrupt">
          <external path="boards/frdmkv31f/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmkv31f/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/frdmkv31f/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmkv31f/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/frdmkv31f/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmkv31f/driver_examples/lpuart/polling">
          <external path="boards/frdmkv31f/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_mc_pmsm" name="mc_pmsm" brief="This example demonstrates the control of the PMSM." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/mc_pmsm/pmsm_snsless">
          <external path="boards/frdmkv31f/demo_apps/mc_pmsm/pmsm_snsless" type="xml">
            <files mask="mc_pmsm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_mc_pmsm_reg_init" name="mc_pmsm_reg_init" brief="This example demonstrates the control of the PMSM." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/mc_pmsm/pmsm_snsless_reg_init">
          <external path="boards/frdmkv31f/demo_apps/mc_pmsm/pmsm_snsless_reg_init" type="xml">
            <files mask="mc_pmsm_reg_init_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_mcg_fee_blpe" name="mcg_fee_blpe" brief="The fee_bple example shows how to use MCG driver to change from FEE mode to BLPE mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to Fee mode from default reset mode    Change from FEE -&gt; FBE -&gt; BLPE    Change back BLPE -&gt; FBE -&gt; FEE    Get System clock in FEE mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/frdmkv31f/driver_examples/mcg/fee_blpe">
          <external path="boards/frdmkv31f/driver_examples/mcg/fee_blpe" type="xml">
            <files mask="mcg_fee_blpe_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_mcg_fee_blpi" name="mcg_fee_blpi" brief="The fee_bpli example shows how to use MCG driver to change from FEE mode to BLPI mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to FEE mode from default reset mode    Change from FEE -&gt; FBI -&gt; BLPI    Change back BLPI -&gt; FBI -&gt; FEE    Get System clock in FEE mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/frdmkv31f/driver_examples/mcg/fee_blpi">
          <external path="boards/frdmkv31f/driver_examples/mcg/fee_blpi" type="xml">
            <files mask="mcg_fee_blpi_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_mcg_fei_blpi" name="mcg_fei_blpi" brief="The fei_bpli example shows how to use MCG driver to change from FEI mode to BLPI mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to FEI mode from default reset mode    Change mode FEI -&gt; FBI -&gt; BLPI    Change back BLPE -&gt; FBI -&gt; FEI    Get System clock in FEI mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/frdmkv31f/driver_examples/mcg/fei_blpi">
          <external path="boards/frdmkv31f/driver_examples/mcg/fei_blpi" type="xml">
            <files mask="mcg_fei_blpi_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_mcg_pee_blpe" name="mcg_pee_blpe" brief="The pee_bple example shows how to use MCG driver to change from PEE mode to BLPE mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to PEE mode from default reset mode    Change mode PEE -&gt; PBE -&gt; BLPE    Change back BLPE -&gt; PBE -&gt; PEE    Get System clock in PEE mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/frdmkv31f/driver_examples/mcg/pee_blpe">
          <external path="boards/frdmkv31f/driver_examples/mcg/pee_blpe" type="xml">
            <files mask="mcg_pee_blpe_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_mcg_pee_blpi" name="mcg_pee_blpi" brief="The pee_bpli example shows how to use MCG driver to change from PEE mode to BLPI mode: 1. How to use the mode functions for MCG mode switch. 2. How to use the frequency functions to get current MCG frequency. 3. Work flow    Boot to PEE mode from default reset mode    Change mode PEE -&gt; PBE -&gt;FBE -&gt; FBI -&gt; BLPI    Change back BLPI -&gt; FBI -&gt; FBE -&gt; PBE -&gt; PEE    Get System clock in PEE mode to blink LEDIn this example, because the debug console's clock frequency may change,so the example running information is not output from debug console. Here theLED blinks to show that the example finished successfully." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/mcg" path="boards/frdmkv31f/driver_examples/mcg/pee_blpi">
          <external path="boards/frdmkv31f/driver_examples/mcg/pee_blpi" type="xml">
            <files mask="mcg_pee_blpi_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_pdb_adc16_trigger" name="pdb_adc16_trigger" brief="The pdb_adc16_trigger example shows how to use the PDB to generate a ADC trigger.Based on the basic counter, to use the ADC trigger, just to enable the ADC trigger's &quot;milestone&quot; and set the user-defined value for it.After the PDB counter is triggered to start, when the counter pass the &quot;milestone&quot;, the ADC's Pre-Trigger would begenerated and sent to the ADC module.In this example, the ADC16 is configured with hardware trigger and conversion complete interrupt enabled.Once it gets the trigger from the PDB, the conversion goes, then the ISR would be executed." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdb" path="boards/frdmkv31f/driver_examples/pdb/adc16_trigger">
          <external path="boards/frdmkv31f/driver_examples/pdb/adc16_trigger" type="xml">
            <files mask="pdb_adc16_trigger_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_pdb_dac_trigger" name="pdb_dac_trigger" brief="The pdb_dac_trigger example shows how to use the PDB to generate a DAC trigger.Based on the basic counter, to use the DAC trigger, just to enable the DAC trigger's &quot;milestone&quot; and set the user-defined value for it.The DAC's &quot;milestone&quot; is called as &quot;interval&quot;. Multiple DAC trigger intervals can be included into one PDB counter's cycle.DAC trigger's counter would reset after the trigger is created and start counting again to the interval value.In this example, the DAC is configured with hardware buffer enabled in normal work mode. Once it gets the trigger from the PDB, the buffer read pointer increases." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdb" path="boards/frdmkv31f/driver_examples/pdb/dac_trigger">
          <external path="boards/frdmkv31f/driver_examples/pdb/dac_trigger" type="xml">
            <files mask="pdb_dac_trigger_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_pdb_delay_interrupt" name="pdb_delay_interrupt" brief="The pdb_delay_interrupt example show how to use the PDB as a general programmable interrupt timer.The PDB is triggered by software, and other external triggers are generated from PDB in this project,so that user can see just a general counter is working with interrupt." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/pdb" path="boards/frdmkv31f/driver_examples/pdb/delay_interrupt">
          <external path="boards/frdmkv31f/driver_examples/pdb/delay_interrupt" type="xml">
            <files mask="pdb_delay_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_pflash" name="pflash" brief="The pflash example shows how to use flash driver to operate program flash:" toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/flash" path="boards/frdmkv31f/driver_examples/flash/pflash">
          <external path="boards/frdmkv31f/driver_examples/flash/pflash" type="xml">
            <files mask="pflash_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_pit" name="pit" brief="The PIT project is a simple demonstration program of the SDK PIT driver. It sets up the PIThardware block to trigger a periodic interrupt after every 1 second. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/pit" path="boards/frdmkv31f/driver_examples/pit">
          <external path="boards/frdmkv31f/driver_examples/pit" type="xml">
            <files mask="pit_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_power_manager" name="power_manager" brief="The Power manager demo application demonstrates the use of power modes in the KSDK. The demo use the notification mechanismand prints the power mode menu through the debug console, where the user can set the MCU to a specific power mode. The usercan also set the wakeup source by following the debug console prompts. The purpose of this demo is to demonstrate theimplementation of a power mode manager. The callback can be registered to the framework. If a power mode transition happens,the callback will be called and user can do something. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/power_manager">
          <external path="boards/frdmkv31f/demo_apps/power_manager" type="xml">
            <files mask="power_manager_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_power_mode_switch" name="power_mode_switch" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/power_mode_switch">
          <external path="boards/frdmkv31f/demo_apps/power_mode_switch" type="xml">
            <files mask="power_mode_switch_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_rnga_random" name="rnga_random" brief="The RNGA is a digital integrated circuit capable of generating the 32-bit random numbers. The RNGAExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/rnga" path="boards/frdmkv31f/driver_examples/rnga/random">
          <external path="boards/frdmkv31f/driver_examples/rnga/random" type="xml">
            <files mask="rnga_random_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="boards/frdmkv31f/demo_apps/shell">
          <external path="boards/frdmkv31f/demo_apps/shell" type="xml">
            <files mask="shell_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_uart_edma_rb_transfer" name="uart_edma_rb_transfer" brief="The uart_edma ring buffer example shows how to use uart driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/frdmkv31f/driver_examples/uart/edma_rb_transfer">
          <external path="boards/frdmkv31f/driver_examples/uart/edma_rb_transfer" type="xml">
            <files mask="uart_edma_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_uart_edma_transfer" name="uart_edma_transfer" brief="The uart_edma example shows how to use uart driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/frdmkv31f/driver_examples/uart/edma_transfer">
          <external path="boards/frdmkv31f/driver_examples/uart/edma_transfer" type="xml">
            <files mask="uart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_uart_interrupt" name="uart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/frdmkv31f/driver_examples/uart/interrupt">
          <external path="boards/frdmkv31f/driver_examples/uart/interrupt" type="xml">
            <files mask="uart_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_uart_interrupt_rb_transfer" name="uart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/frdmkv31f/driver_examples/uart/interrupt_rb_transfer">
          <external path="boards/frdmkv31f/driver_examples/uart/interrupt_rb_transfer" type="xml">
            <files mask="uart_interrupt_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_uart_interrupt_transfer" name="uart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/frdmkv31f/driver_examples/uart/interrupt_transfer">
          <external path="boards/frdmkv31f/driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="uart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_uart_polling" name="uart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/uart" path="boards/frdmkv31f/driver_examples/uart/polling">
          <external path="boards/frdmkv31f/driver_examples/uart/polling" type="xml">
            <files mask="uart_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmkv31f_wdog" name="wdog" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 10 times of refreshing the watchdog in None-window mode, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing in Window mode." toolchain="mcuxpresso" compiler="compiler_gcc" category="driver_examples/wdog" path="boards/frdmkv31f/driver_examples/wdog">
          <external path="boards/frdmkv31f/driver_examples/wdog" type="xml">
            <files mask="wdog_v3_8.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MKV31F512xxx12" name="MKV31F51212" version="1.0.0" full_name="MKV31F512xxx12" family="KV3x" platform="Kinetis">
      <description>Kinetis KV3x-100–120 MHz,  Advanced 3ph FOC / Sensorless Motor Control MCUs based on ARM Cortex-M4</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <core id="core0_MKV31F512xxx12" name="core0" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_MKV31F512xxx12" name="PROGRAM_FLASH" addr="00000000" size="00080000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_UPPER_MKV31F512xxx12" name="SRAM_UPPER" addr="20000000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MKV31F512xxx12" name="SRAM_LOWER" addr="1fff8000" size="00008000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="512" ram_size_kb="96"/>
      <package id="MKV31F512VLL12" name="MKV31F512VLL12"/>
      <package id="MKV31F512VLH12" name="MKV31F512VLH12"/>
      <evaluation_boards>
        <evaluation_board name="frdmkv31f"/>
        <evaluation_board name="hvpkv31f120m"/>
        <evaluation_board name="twrkv31f120m"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MKV31F512xxx12" name="internal.wiretype" value="SWD*,JTAG"/>
            <params id="internal.has_swo.release.MKV31F512xxx12" name="internal.has_swo" value="true"/>
            <params id="internal.connect.script.debug.mcuxpresso.MKV31F512xxx12" name="internal.connect.script" value="kinetisconnect.scp"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_MKV31F512xxx12">
              <driverBinary path="devices/MKV31F51212/mcuxpresso" type="binary">
                <files mask="FTFA_2K.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="flash_security_address" value="0x400"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="flash_security_address" value="0x400"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
    <device id="MKV31F256xxx12" name="MKV31F25612" version="1.0.0" full_name="MKV31F256xxx12" family="KV3x" platform="Kinetis">
      <description>Kinetis KV3x-100–120 MHz,  Advanced 3ph FOC / Sensorless Motor Control MCUs based on ARM Cortex-M4</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <core id="core0_MKV31F256xxx12" name="core0" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_MKV31F256xxx12" name="PROGRAM_FLASH" addr="00000000" size="00040000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_UPPER_MKV31F256xxx12" name="SRAM_UPPER" addr="20000000" size="00008000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MKV31F256xxx12" name="SRAM_LOWER" addr="1fffc000" size="00004000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="256" ram_size_kb="48"/>
      <package id="MKV31F256VLH12" name="MKV31F256VLH12"/>
      <package id="MKV31F256VLL12" name="MKV31F256VLL12"/>
      <evaluation_boards>
        <evaluation_board name="frdmkv31f"/>
        <evaluation_board name="twrkv31f120m"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MKV31F256xxx12" name="internal.wiretype" value="SWD*,JTAG"/>
            <params id="internal.has_swo.release.MKV31F256xxx12" name="internal.has_swo" value="true"/>
            <params id="internal.connect.script.debug.mcuxpresso.MKV31F256xxx12" name="internal.connect.script" value="kinetisconnect.scp"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_MKV31F256xxx12">
              <driverBinary path="devices/MKV31F25612/mcuxpresso" type="binary">
                <files mask="FTFA_2K.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="flash_security_address" value="0x400"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="flash_security_address" value="0x400"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="CMSIS_DSP_Library.MKV31F51212" name="CMSIS_DSP_Library" brief="CMSIS-DSP Library for Cortex-M, SC000, and SC300" version="1.7.0" full_name="CMSIS DSP Library" devices="MKV31F512xxx12" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="Lib/GCC" project_relative_path="./" type="lib" device_cores="core0_MKV31F512xxx12">
        <files mask="libarm_cortexM4lf_math.a"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MKV31F51212" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library for Cortex-M, SC000, and SC300" version="1.7.0" full_name="CMSIS DSP Library Source" devices="MKV31F512xxx12" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c" hidden="true"/>
        <files mask="arm_abs_q15.c" hidden="true"/>
        <files mask="arm_abs_q31.c" hidden="true"/>
        <files mask="arm_abs_q7.c" hidden="true"/>
        <files mask="arm_add_f32.c" hidden="true"/>
        <files mask="arm_add_q15.c" hidden="true"/>
        <files mask="arm_add_q31.c" hidden="true"/>
        <files mask="arm_add_q7.c" hidden="true"/>
        <files mask="arm_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_dot_prod_q7.c" hidden="true"/>
        <files mask="arm_mult_f32.c" hidden="true"/>
        <files mask="arm_mult_q15.c" hidden="true"/>
        <files mask="arm_mult_q31.c" hidden="true"/>
        <files mask="arm_mult_q7.c" hidden="true"/>
        <files mask="arm_negate_f32.c" hidden="true"/>
        <files mask="arm_negate_q15.c" hidden="true"/>
        <files mask="arm_negate_q31.c" hidden="true"/>
        <files mask="arm_negate_q7.c" hidden="true"/>
        <files mask="arm_offset_f32.c" hidden="true"/>
        <files mask="arm_offset_q15.c" hidden="true"/>
        <files mask="arm_offset_q31.c" hidden="true"/>
        <files mask="arm_offset_q7.c" hidden="true"/>
        <files mask="arm_scale_f32.c" hidden="true"/>
        <files mask="arm_scale_q15.c" hidden="true"/>
        <files mask="arm_scale_q31.c" hidden="true"/>
        <files mask="arm_scale_q7.c" hidden="true"/>
        <files mask="arm_shift_q15.c" hidden="true"/>
        <files mask="arm_shift_q31.c" hidden="true"/>
        <files mask="arm_shift_q7.c" hidden="true"/>
        <files mask="arm_sub_f32.c" hidden="true"/>
        <files mask="arm_sub_q15.c" hidden="true"/>
        <files mask="arm_sub_q31.c" hidden="true"/>
        <files mask="arm_sub_q7.c" hidden="true"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c" hidden="true"/>
        <files mask="arm_const_structs.c" hidden="true"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q15.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q31.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c" hidden="true"/>
        <files mask="arm_pid_init_q15.c" hidden="true"/>
        <files mask="arm_pid_init_q31.c" hidden="true"/>
        <files mask="arm_pid_reset_f32.c" hidden="true"/>
        <files mask="arm_pid_reset_q15.c" hidden="true"/>
        <files mask="arm_pid_reset_q31.c" hidden="true"/>
        <files mask="arm_sin_cos_f32.c" hidden="true"/>
        <files mask="arm_sin_cos_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_cos_f32.c" hidden="true"/>
        <files mask="arm_cos_q15.c" hidden="true"/>
        <files mask="arm_cos_q31.c" hidden="true"/>
        <files mask="arm_sin_f32.c" hidden="true"/>
        <files mask="arm_sin_q15.c" hidden="true"/>
        <files mask="arm_sin_q31.c" hidden="true"/>
        <files mask="arm_sqrt_q15.c" hidden="true"/>
        <files mask="arm_sqrt_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_conv_f32.c" hidden="true"/>
        <files mask="arm_conv_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_f32.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_q7.c" hidden="true"/>
        <files mask="arm_conv_q15.c" hidden="true"/>
        <files mask="arm_conv_q31.c" hidden="true"/>
        <files mask="arm_conv_q7.c" hidden="true"/>
        <files mask="arm_correlate_f32.c" hidden="true"/>
        <files mask="arm_correlate_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q31.c" hidden="true"/>
        <files mask="arm_correlate_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_opt_q7.c" hidden="true"/>
        <files mask="arm_correlate_q15.c" hidden="true"/>
        <files mask="arm_correlate_q31.c" hidden="true"/>
        <files mask="arm_correlate_q7.c" hidden="true"/>
        <files mask="arm_fir_decimate_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_q31.c" hidden="true"/>
        <files mask="arm_fir_f32.c" hidden="true"/>
        <files mask="arm_fir_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_init_f32.c" hidden="true"/>
        <files mask="arm_fir_init_q15.c" hidden="true"/>
        <files mask="arm_fir_init_q31.c" hidden="true"/>
        <files mask="arm_fir_init_q7.c" hidden="true"/>
        <files mask="arm_fir_interpolate_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_q31.c" hidden="true"/>
        <files mask="arm_fir_q15.c" hidden="true"/>
        <files mask="arm_fir_q31.c" hidden="true"/>
        <files mask="arm_fir_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_q7.c" hidden="true"/>
        <files mask="arm_iir_lattice_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_iir_lattice_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_q31.c" hidden="true"/>
        <files mask="arm_lms_f32.c" hidden="true"/>
        <files mask="arm_lms_init_f32.c" hidden="true"/>
        <files mask="arm_lms_init_q15.c" hidden="true"/>
        <files mask="arm_lms_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_q31.c" hidden="true"/>
        <files mask="arm_lms_q15.c" hidden="true"/>
        <files mask="arm_lms_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_mat_add_f32.c" hidden="true"/>
        <files mask="arm_mat_add_q15.c" hidden="true"/>
        <files mask="arm_mat_add_q31.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_init_f32.c" hidden="true"/>
        <files mask="arm_mat_init_q15.c" hidden="true"/>
        <files mask="arm_mat_init_q31.c" hidden="true"/>
        <files mask="arm_mat_inverse_f32.c" hidden="true"/>
        <files mask="arm_mat_inverse_f64.c" hidden="true"/>
        <files mask="arm_mat_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q31.c" hidden="true"/>
        <files mask="arm_mat_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_scale_f32.c" hidden="true"/>
        <files mask="arm_mat_scale_q15.c" hidden="true"/>
        <files mask="arm_mat_scale_q31.c" hidden="true"/>
        <files mask="arm_mat_sub_f32.c" hidden="true"/>
        <files mask="arm_mat_sub_q15.c" hidden="true"/>
        <files mask="arm_mat_sub_q31.c" hidden="true"/>
        <files mask="arm_mat_trans_f32.c" hidden="true"/>
        <files mask="arm_mat_trans_q15.c" hidden="true"/>
        <files mask="arm_mat_trans_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_max_f32.c" hidden="true"/>
        <files mask="arm_max_q15.c" hidden="true"/>
        <files mask="arm_max_q31.c" hidden="true"/>
        <files mask="arm_max_q7.c" hidden="true"/>
        <files mask="arm_mean_f32.c" hidden="true"/>
        <files mask="arm_mean_q15.c" hidden="true"/>
        <files mask="arm_mean_q31.c" hidden="true"/>
        <files mask="arm_mean_q7.c" hidden="true"/>
        <files mask="arm_min_f32.c" hidden="true"/>
        <files mask="arm_min_q15.c" hidden="true"/>
        <files mask="arm_min_q31.c" hidden="true"/>
        <files mask="arm_min_q7.c" hidden="true"/>
        <files mask="arm_power_f32.c" hidden="true"/>
        <files mask="arm_power_q15.c" hidden="true"/>
        <files mask="arm_power_q31.c" hidden="true"/>
        <files mask="arm_power_q7.c" hidden="true"/>
        <files mask="arm_rms_f32.c" hidden="true"/>
        <files mask="arm_rms_q15.c" hidden="true"/>
        <files mask="arm_rms_q31.c" hidden="true"/>
        <files mask="arm_std_f32.c" hidden="true"/>
        <files mask="arm_std_q15.c" hidden="true"/>
        <files mask="arm_std_q31.c" hidden="true"/>
        <files mask="arm_var_f32.c" hidden="true"/>
        <files mask="arm_var_q15.c" hidden="true"/>
        <files mask="arm_var_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_copy_f32.c" hidden="true"/>
        <files mask="arm_copy_q15.c" hidden="true"/>
        <files mask="arm_copy_q31.c" hidden="true"/>
        <files mask="arm_copy_q7.c" hidden="true"/>
        <files mask="arm_fill_f32.c" hidden="true"/>
        <files mask="arm_fill_q15.c" hidden="true"/>
        <files mask="arm_fill_q31.c" hidden="true"/>
        <files mask="arm_fill_q7.c" hidden="true"/>
        <files mask="arm_float_to_q15.c" hidden="true"/>
        <files mask="arm_float_to_q31.c" hidden="true"/>
        <files mask="arm_float_to_q7.c" hidden="true"/>
        <files mask="arm_q15_to_float.c" hidden="true"/>
        <files mask="arm_q15_to_q31.c" hidden="true"/>
        <files mask="arm_q15_to_q7.c" hidden="true"/>
        <files mask="arm_q31_to_float.c" hidden="true"/>
        <files mask="arm_q31_to_q15.c" hidden="true"/>
        <files mask="arm_q31_to_q7.c" hidden="true"/>
        <files mask="arm_q7_to_float.c" hidden="true"/>
        <files mask="arm_q7_to_q15.c" hidden="true"/>
        <files mask="arm_q7_to_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c" hidden="true"/>
        <files mask="arm_bitreversal2.c" hidden="true"/>
        <files mask="arm_cfft_f32.c" hidden="true"/>
        <files mask="arm_cfft_q15.c" hidden="true"/>
        <files mask="arm_cfft_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix8_f32.c" hidden="true"/>
        <files mask="arm_dct4_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_q15.c" hidden="true"/>
        <files mask="arm_dct4_init_q31.c" hidden="true"/>
        <files mask="arm_dct4_q15.c" hidden="true"/>
        <files mask="arm_dct4_q31.c" hidden="true"/>
        <files mask="arm_rfft_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_init_q15.c" hidden="true"/>
        <files mask="arm_rfft_init_q31.c" hidden="true"/>
        <files mask="arm_rfft_q15.c" hidden="true"/>
        <files mask="arm_rfft_q31.c" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MKV31F51212" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.1" full_name="CMSIS Device API OSTick" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MKV31F51212" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.1.3" full_name="CMSIS Device API RTOS2" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MKV31F51212" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver CAN" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Common.MKV31F51212" name="CMSIS_Driver_Common" brief="Access to #include Driver_Common.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Common" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MKV31F51212" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet Common" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MKV31F51212" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet MAC" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MKV31F51212" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet PHY" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MKV31F51212" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Flash" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MKV31F51212" name="NXP_CMSIS_Driver_GPIO" brief="NXP Standardized GPIO Driver aligned with CMSIS style." version="2.0.0" full_name="NXP CMSIS Driver GPIO" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MKV31F51212" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver I2C" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MKV31F51212" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver MCI" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MKV31F51212" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver NAND" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MKV31F51212" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.1.0" full_name="CMSIS Driver SAI" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MKV31F51212" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver SPI" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MKV31F51212" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USART" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB.MKV31F51212" name="CMSIS_Driver_USB_Common" brief="Access to #include Driver_USB.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Common" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MKV31F51212" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Device" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MKV31F51212" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Host" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MKV31F51212" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.0.0" full_name="CMSIS Driver WiFi" devices="MKV31F512xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MKV31F51212" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="5.3.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="core0_MKV31F512xxx12">
        <files mask="core_cm4.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="CMSIS_files.MKV31F51212" name="CMSIS" brief="CMSIS (Cortex Microcontroller Software Interface Standard)" version="5.6.0" full_name="CMSIS" devices="MKV31F512xxx12" user_visible="false" type="container" package_base_path="CMSIS" project_base_path="CMSIS">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_WiFi.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/DriverTemplates" type="src">
    <files mask="Driver_SPI.c"/>
    <files mask="Driver_Flash.c"/>
    <files mask="Driver_USART.c"/>
    <files mask="Driver_SAI.c"/>
    <files mask="Driver_Storage.c"/>
    <files mask="Driver_I2C.c"/>
    <files mask="Driver_ETH_PHY.c"/>
    <files mask="Driver_ETH_MAC.c"/>
    <files mask="Driver_CAN.c"/>
    <files mask="Driver_MCI.c"/>
    <files mask="Driver_USBH.c"/>
    <files mask="Driver_USBD.c"/>
  </source>
  <source relative_path="./" type="other">
    <files mask="CMSIS.yml"/>
    <files mask="CMSIS_v2.yml"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="LICENSE.txt"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="src">
    <files mask="arm_var_q15.c"/>
    <files mask="arm_min_q31.c"/>
    <files mask="arm_mean_f32.c"/>
    <files mask="arm_max_q7.c"/>
    <files mask="arm_max_f32.c"/>
    <files mask="arm_var_f32.c"/>
    <files mask="arm_power_q7.c"/>
    <files mask="arm_rms_f32.c"/>
    <files mask="arm_max_q31.c"/>
    <files mask="arm_max_q15.c"/>
    <files mask="arm_mean_q7.c"/>
    <files mask="arm_power_f32.c"/>
    <files mask="arm_min_q7.c"/>
    <files mask="arm_std_q15.c"/>
    <files mask="arm_min_f32.c"/>
    <files mask="arm_min_q15.c"/>
    <files mask="StatisticsFunctions.c"/>
    <files mask="arm_std_q31.c"/>
    <files mask="arm_rms_q31.c"/>
    <files mask="arm_mean_q15.c"/>
    <files mask="arm_std_f32.c"/>
    <files mask="arm_power_q15.c"/>
    <files mask="arm_mean_q31.c"/>
    <files mask="arm_rms_q15.c"/>
    <files mask="arm_power_q31.c"/>
    <files mask="arm_var_q31.c"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="src">
    <files mask="arm_cos_q31.c"/>
    <files mask="FastMathFunctions.c"/>
    <files mask="arm_sin_q31.c"/>
    <files mask="arm_sqrt_q15.c"/>
    <files mask="arm_cos_q15.c"/>
    <files mask="arm_sin_f32.c"/>
    <files mask="arm_sin_q15.c"/>
    <files mask="arm_cos_f32.c"/>
    <files mask="arm_sqrt_q31.c"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="src">
    <files mask="arm_cfft_radix2_f32.c"/>
    <files mask="arm_cfft_radix8_f32.c"/>
    <files mask="arm_cfft_radix2_q15.c"/>
    <files mask="arm_cfft_radix4_init_f32.c"/>
    <files mask="arm_cfft_radix4_init_q15.c"/>
    <files mask="arm_cfft_radix2_init_q15.c"/>
    <files mask="arm_rfft_init_f32.c"/>
    <files mask="arm_rfft_fast_f32.c"/>
    <files mask="arm_rfft_init_q31.c"/>
    <files mask="arm_dct4_q15.c"/>
    <files mask="arm_dct4_init_q31.c"/>
    <files mask="arm_cfft_radix2_init_f32.c"/>
    <files mask="arm_dct4_init_q15.c"/>
    <files mask="arm_dct4_q31.c"/>
    <files mask="arm_rfft_q15.c"/>
    <files mask="arm_cfft_radix4_q31.c"/>
    <files mask="arm_cfft_radix2_init_q31.c"/>
    <files mask="TransformFunctions.c"/>
    <files mask="arm_cfft_radix4_q15.c"/>
    <files mask="arm_bitreversal.c"/>
    <files mask="arm_rfft_init_q15.c"/>
    <files mask="arm_rfft_q31.c"/>
    <files mask="arm_bitreversal2.c"/>
    <files mask="arm_rfft_fast_init_f32.c"/>
    <files mask="arm_cfft_radix2_q31.c"/>
    <files mask="arm_dct4_f32.c"/>
    <files mask="arm_cfft_f32.c"/>
    <files mask="arm_rfft_f32.c"/>
    <files mask="arm_cfft_radix4_init_q31.c"/>
    <files mask="arm_cfft_q31.c"/>
    <files mask="arm_cfft_q15.c"/>
    <files mask="arm_cfft_radix4_f32.c"/>
    <files mask="arm_dct4_init_f32.c"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="asm_include">
    <files mask="arm_bitreversal2.S"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="src">
    <files mask="arm_iir_lattice_q15.c"/>
    <files mask="arm_iir_lattice_init_q15.c"/>
    <files mask="arm_fir_interpolate_q15.c"/>
    <files mask="arm_correlate_fast_q15.c"/>
    <files mask="arm_lms_norm_init_q15.c"/>
    <files mask="arm_fir_sparse_f32.c"/>
    <files mask="arm_fir_interpolate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
    <files mask="arm_iir_lattice_init_q31.c"/>
    <files mask="arm_fir_decimate_q31.c"/>
    <files mask="arm_fir_interpolate_q31.c"/>
    <files mask="arm_fir_decimate_init_f32.c"/>
    <files mask="arm_correlate_fast_opt_q15.c"/>
    <files mask="arm_lms_q31.c"/>
    <files mask="arm_lms_init_f32.c"/>
    <files mask="arm_fir_sparse_q7.c"/>
    <files mask="arm_conv_fast_opt_q15.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
    <files mask="arm_biquad_cascade_df1_init_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
    <files mask="arm_iir_lattice_f32.c"/>
    <files mask="arm_fir_lattice_f32.c"/>
    <files mask="arm_conv_partial_opt_q15.c"/>
    <files mask="arm_iir_lattice_q31.c"/>
    <files mask="arm_correlate_fast_q31.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
    <files mask="arm_conv_f32.c"/>
    <files mask="arm_fir_sparse_q15.c"/>
    <files mask="arm_fir_sparse_init_q7.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_f32.c"/>
    <files mask="arm_fir_sparse_init_q31.c"/>
    <files mask="arm_fir_sparse_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_q15.c"/>
    <files mask="arm_fir_lattice_q15.c"/>
    <files mask="arm_fir_decimate_init_q15.c"/>
    <files mask="arm_conv_partial_fast_opt_q15.c"/>
    <files mask="arm_fir_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
    <files mask="arm_conv_fast_q15.c"/>
    <files mask="arm_fir_fast_q15.c"/>
    <files mask="arm_conv_q7.c"/>
    <files mask="arm_fir_q15.c"/>
    <files mask="arm_correlate_q15.c"/>
    <files mask="arm_lms_init_q15.c"/>
    <files mask="arm_conv_q15.c"/>
    <files mask="arm_conv_partial_q7.c"/>
    <files mask="arm_lms_f32.c"/>
    <files mask="arm_lms_norm_q15.c"/>
    <files mask="arm_fir_sparse_init_f32.c"/>
    <files mask="arm_lms_norm_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_q15.c"/>
    <files mask="arm_conv_partial_fast_q15.c"/>
    <files mask="arm_fir_init_f32.c"/>
    <files mask="arm_fir_decimate_f32.c"/>
    <files mask="arm_fir_lattice_init_q15.c"/>
    <files mask="arm_correlate_opt_q15.c"/>
    <files mask="arm_fir_sparse_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f32.c"/>
    <files mask="arm_fir_init_q7.c"/>
    <files mask="arm_fir_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_f32.c"/>
    <files mask="arm_conv_opt_q7.c"/>
    <files mask="arm_lms_init_q31.c"/>
    <files mask="arm_fir_fast_q31.c"/>
    <files mask="arm_conv_partial_f32.c"/>
    <files mask="arm_biquad_cascade_df1_q15.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
    <files mask="arm_lms_norm_q31.c"/>
    <files mask="arm_conv_partial_q15.c"/>
    <files mask="arm_conv_opt_q15.c"/>
    <files mask="arm_fir_decimate_q15.c"/>
    <files mask="arm_iir_lattice_init_f32.c"/>
    <files mask="arm_fir_lattice_init_f32.c"/>
    <files mask="arm_fir_decimate_fast_q31.c"/>
    <files mask="arm_fir_f32.c"/>
    <files mask="arm_fir_decimate_init_q31.c"/>
    <files mask="arm_conv_q31.c"/>
    <files mask="arm_lms_norm_f32.c"/>
    <files mask="arm_conv_partial_fast_q31.c"/>
    <files mask="arm_fir_lattice_init_q31.c"/>
    <files mask="arm_fir_init_q31.c"/>
    <files mask="arm_lms_norm_init_f32.c"/>
    <files mask="arm_correlate_opt_q7.c"/>
    <files mask="arm_fir_lattice_q31.c"/>
    <files mask="arm_conv_partial_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f64.c"/>
    <files mask="arm_biquad_cascade_df1_f32.c"/>
    <files mask="arm_lms_q15.c"/>
    <files mask="arm_correlate_q31.c"/>
    <files mask="arm_correlate_q7.c"/>
    <files mask="arm_fir_q7.c"/>
    <files mask="arm_conv_fast_q31.c"/>
    <files mask="arm_conv_partial_opt_q7.c"/>
    <files mask="arm_fir_decimate_fast_q15.c"/>
    <files mask="arm_fir_interpolate_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_q31.c"/>
    <files mask="FilteringFunctions.c"/>
    <files mask="arm_correlate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="src">
    <files mask="arm_sin_cos_f32.c"/>
    <files mask="ControllerFunctions.c"/>
    <files mask="arm_pid_reset_q31.c"/>
    <files mask="arm_pid_init_q15.c"/>
    <files mask="arm_sin_cos_q31.c"/>
    <files mask="arm_pid_reset_f32.c"/>
    <files mask="arm_pid_reset_q15.c"/>
    <files mask="arm_pid_init_f32.c"/>
    <files mask="arm_pid_init_q31.c"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="src">
    <files mask="arm_mat_mult_f32.c"/>
    <files mask="arm_mat_mult_fast_q31.c"/>
    <files mask="arm_mat_init_q15.c"/>
    <files mask="arm_mat_mult_fast_q15.c"/>
    <files mask="arm_mat_trans_q15.c"/>
    <files mask="arm_mat_cmplx_mult_q31.c"/>
    <files mask="arm_mat_mult_q31.c"/>
    <files mask="arm_mat_init_f32.c"/>
    <files mask="arm_mat_inverse_f32.c"/>
    <files mask="arm_mat_scale_q31.c"/>
    <files mask="arm_mat_cmplx_mult_f32.c"/>
    <files mask="arm_mat_sub_q15.c"/>
    <files mask="arm_mat_scale_f32.c"/>
    <files mask="arm_mat_sub_f32.c"/>
    <files mask="arm_mat_add_q31.c"/>
    <files mask="arm_mat_add_f32.c"/>
    <files mask="MatrixFunctions.c"/>
    <files mask="arm_mat_mult_q15.c"/>
    <files mask="arm_mat_trans_q31.c"/>
    <files mask="arm_mat_scale_q15.c"/>
    <files mask="arm_mat_sub_q31.c"/>
    <files mask="arm_mat_inverse_f64.c"/>
    <files mask="arm_mat_init_q31.c"/>
    <files mask="arm_mat_trans_f32.c"/>
    <files mask="arm_mat_cmplx_mult_q15.c"/>
    <files mask="arm_mat_add_q15.c"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="src">
    <files mask="CommonTables.c"/>
    <files mask="arm_common_tables.c"/>
    <files mask="arm_const_structs.c"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="src">
    <files mask="SupportFunctions.c"/>
    <files mask="arm_fill_q7.c"/>
    <files mask="arm_q15_to_q7.c"/>
    <files mask="arm_copy_q15.c"/>
    <files mask="arm_copy_f32.c"/>
    <files mask="arm_q7_to_q15.c"/>
    <files mask="arm_q31_to_q15.c"/>
    <files mask="arm_copy_q7.c"/>
    <files mask="arm_q15_to_float.c"/>
    <files mask="arm_q7_to_float.c"/>
    <files mask="arm_float_to_q15.c"/>
    <files mask="arm_q15_to_q31.c"/>
    <files mask="arm_fill_f32.c"/>
    <files mask="arm_float_to_q7.c"/>
    <files mask="arm_fill_q31.c"/>
    <files mask="arm_q7_to_q31.c"/>
    <files mask="arm_q31_to_float.c"/>
    <files mask="arm_copy_q31.c"/>
    <files mask="arm_fill_q15.c"/>
    <files mask="arm_q31_to_q7.c"/>
    <files mask="arm_float_to_q31.c"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="src">
    <files mask="arm_cmplx_mag_squared_f32.c"/>
    <files mask="arm_cmplx_conj_f32.c"/>
    <files mask="arm_cmplx_mag_q31.c"/>
    <files mask="arm_cmplx_conj_q31.c"/>
    <files mask="arm_cmplx_dot_prod_f32.c"/>
    <files mask="arm_cmplx_mag_q15.c"/>
    <files mask="arm_cmplx_mag_f32.c"/>
    <files mask="arm_cmplx_dot_prod_q31.c"/>
    <files mask="arm_cmplx_dot_prod_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q15.c"/>
    <files mask="arm_cmplx_mag_squared_q15.c"/>
    <files mask="arm_cmplx_conj_q15.c"/>
    <files mask="arm_cmplx_mult_real_q31.c"/>
    <files mask="arm_cmplx_mult_cmplx_f32.c"/>
    <files mask="ComplexMathFunctions.c"/>
    <files mask="arm_cmplx_mag_squared_q31.c"/>
    <files mask="arm_cmplx_mult_real_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q31.c"/>
    <files mask="arm_cmplx_mult_real_f32.c"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="src">
    <files mask="arm_mult_f32.c"/>
    <files mask="arm_dot_prod_q31.c"/>
    <files mask="arm_sub_f32.c"/>
    <files mask="arm_sub_q15.c"/>
    <files mask="arm_shift_q7.c"/>
    <files mask="arm_abs_q7.c"/>
    <files mask="arm_abs_q31.c"/>
    <files mask="arm_mult_q31.c"/>
    <files mask="arm_dot_prod_f32.c"/>
    <files mask="arm_offset_q31.c"/>
    <files mask="arm_shift_q15.c"/>
    <files mask="arm_shift_q31.c"/>
    <files mask="arm_negate_q7.c"/>
    <files mask="arm_add_q15.c"/>
    <files mask="arm_add_q7.c"/>
    <files mask="arm_offset_f32.c"/>
    <files mask="arm_dot_prod_q15.c"/>
    <files mask="arm_mult_q7.c"/>
    <files mask="arm_dot_prod_q7.c"/>
    <files mask="arm_abs_f32.c"/>
    <files mask="arm_negate_q15.c"/>
    <files mask="arm_scale_q15.c"/>
    <files mask="arm_mult_q15.c"/>
    <files mask="arm_add_q31.c"/>
    <files mask="arm_scale_q7.c"/>
    <files mask="arm_offset_q7.c"/>
    <files mask="BasicMathFunctions.c"/>
    <files mask="arm_sub_q31.c"/>
    <files mask="arm_sub_q7.c"/>
    <files mask="arm_negate_f32.c"/>
    <files mask="arm_abs_q15.c"/>
    <files mask="arm_scale_f32.c"/>
    <files mask="arm_add_f32.c"/>
    <files mask="arm_offset_q15.c"/>
    <files mask="arm_negate_q31.c"/>
    <files mask="arm_scale_q31.c"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
</component>-->
    <component id="COPY_BSD_License.MKV31F51212" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="MKV31F512xxx12" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.MKV31F51212.MKV31F51212" name="MKV31F51212" brief="Devices_project_template MKV31F51212" version="1.0.0" full_name="Devices_project_template MKV31F51212" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MKV31F51212/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKV31F51212"/>
          <component_dependency value="component.uart_adapter.MKV31F51212"/>
          <component_dependency value="platform.drivers.port.MKV31F51212"/>
          <component_dependency value="platform.drivers.gpio.MKV31F51212"/>
          <component_dependency value="platform.drivers.smc.MKV31F51212"/>
          <component_dependency value="device.MKV31F51212_startup.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.clock.MKV31F51212"/>
          <component_dependency value="platform.drivers.i2c.MKV31F51212"/>
          <component_dependency value="platform.drivers.adc16.MKV31F51212"/>
          <component_dependency value="platform.drivers.ftm.MKV31F51212"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MKV31F51212"/>
              <component_dependency value="component.serial_manager.MKV31F51212"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MKV31F51212"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MKV31F51212" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MKV31F51212/template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MKV31F51212"/>
          <component_dependency value="platform.drivers.dmamux.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.MKV31F51212" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="MKV31F512xxx12" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.button.MKV31F51212" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.timer_manager.MKV31F51212"/>
          <component_dependency value="component.gpio_adapter.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MKV31F51212" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.osa.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.crc_adapter.MKV31F51212" name="crc_adapter" brief="Component crc_adapter" version="1.0.0" full_name="Component crc_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.crc.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.flash_adapter.MKV31F51212" name="flash_adapter" brief="Component flash_adapter" version="1.0.0" full_name="Component flash_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.flash.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flash.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.ftm_adapter.MKV31F51212" name="ftm_adapter" brief="Component ftm_adapter" version="1.0.0" full_name="Component ftm_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.ftm.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ftm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.gpio_adapter.MKV31F51212" name="gpio_adapter" brief="Component gpio_adapter" version="1.0.0" full_name="Component gpio_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpio.MKV31F51212"/>
          <component_dependency value="platform.drivers.port.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.led.MKV31F51212" name="led" brief="Component led" version="1.0.0" full_name="Component led" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.timer_manager.MKV31F51212"/>
          <component_dependency value="component.gpio_adapter.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MKV31F51212" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.MKV31F51212" name="log" brief="Component log" version="1.0.0" full_name="Component log" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="utility.debug_console.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.MKV31F51212" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.log.MKV31F51212"/>
          <component_dependency value="utility.debug_console.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MKV31F51212" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.log.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.MKV31F51212" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.lptmr.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MKV31F51212" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.lpuart.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_dma_adapter.MKV31F51212" name="lpuart_dma_adapter" brief="Component lpuart_dma_adapter" version="1.0.0" full_name="lpuart_dma_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <defines>
        <define name="HAL_UART_DMA_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MKV31F51212"/>
          <component_dependency value="component.timer_manager.MKV31F51212"/>
          <component_dependency value="platform.drivers.lpuart_edma.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MKV31F51212" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MKV31F51212" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MKV31F51212" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MKV31F51212" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MKV31F51212" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MKV31F51212" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MKV31F51212" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MKV31F51212" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MKV31F51212" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_free_rtos.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_thread.MKV31F51212" name="osa thread" brief="Component osa thread" version="1.0.0" full_name="Component osa thread" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
        <files mask="fsl_os_abstraction_threadx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_threadx.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MKV31F51212" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="utility.debug_console.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pit_adapter.MKV31F51212" name="pit_adapter" brief="Component pit_adapter" version="1.0.0" full_name="Component pit_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.pit.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_ftm_adapter.MKV31F51212" name="pwm_ftm_adapter" brief="Component pwm_ftm_adapter" version="1.0.0" full_name="Component pwm_ftm_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.ftm.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_ftm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.rnga_adapter.MKV31F51212" name="rnga_adapter" brief="Component rnga_adapter" version="1.0.0" full_name="Component rnga_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.rnga.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rnga.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MKV31F51212" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MKV31F51212"/>
            <component_dependency value="component.serial_manager_swo.MKV31F51212"/>
            <component_dependency value="component.serial_manager_virtual.MKV31F51212"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MKV31F51212" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.serial_manager.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MKV31F51212" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.uart_adapter.MKV31F51212"/>
          <component_dependency value="component.serial_manager.MKV31F51212"/>
          <any_of>
            <component_dependency value="platform.drivers.uart.MKV31F51212"/>
            <component_dependency value="platform.drivers.lpuart.MKV31F51212"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MKV31F51212" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.MKV31F51212" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MKV31F51212" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MKV31F51212" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
          <any_of>
            <component_dependency value="component.ftm_adapter.MKV31F51212"/>
            <component_dependency value="component.pit_adapter.MKV31F51212"/>
            <component_dependency value="component.lptmr_adapter.MKV31F51212"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.uart_adapter.MKV31F51212" name="uart_adapter" brief="Component uart_adapter" version="1.0.0" full_name="uart_adapter" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.uart.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MKV31F51212_CMSIS.MKV31F51212" name="MKV31F51212_CMSIS" brief="Device MKV31F51212_cmsis" version="1.0.0" full_name="Device MKV31F51212_cmsis" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="CMSIS_Include" package_base_path="devices/MKV31F51212" project_base_path="device">
      <dependencies>
        <component_dependency value="CMSIS_Include_core_cm.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="MKV31F51212.h"/>
        <files mask="MKV31F51212_features.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MKV31F51212_debugger.MKV31F51212" name="MKV31F51212_debugger" brief="Device MKV31F51212_debugger" version="1.0.0" full_name="Device MKV31F51212_debugger" devices="MKV31F512xxx12" user_visible="true" type="debugger" package_base_path="devices/MKV31F51212" project_base_path="MKV31F51212">
      <source relative_path="./" type="xml">
        <files mask="MKV31F51212.xml"/>
      </source>
    </component>
    <component id="platform.devices.MKV31F51212_linker.MKV31F51212" name="MKV31F51212_linker" brief="Device MKV31F51212_linker" version="1.0.0" full_name="Device MKV31F51212_linker" devices="MKV31F512xxx12" user_visible="true" type="linker" package_base_path="devices/MKV31F51212" project_base_path="MKV31F51212"/>
    <component id="device.MKV31F51212_startup.MKV31F51212" name="MKV31F51212_startup" brief="Device MKV31F51212_startup" version="1.1.0" full_name="Device MKV31F51212_startup" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MKV31F51212" project_base_path="startup">
      <dependencies>
        <component_dependency value="device.MKV31F51212_system.MKV31F51212"/>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c">
        <files mask="startup_mkv31f51212.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp">
        <files mask="startup_mkv31f51212.cpp"/>
      </source>
    </component>
    <component id="device.MKV31F51212_system.MKV31F51212" name="MKV31F51212_system" brief="Device MKV31F51212_system" version="1.0.0" full_name="Device MKV31F51212_system" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="CMSIS_Include" package_base_path="devices/MKV31F51212" project_base_path="device">
      <dependencies>
        <component_dependency value="device.MKV31F51212_CMSIS.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_MKV31F51212.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_MKV31F51212.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.MKV31F51212.MKV31F51212" name="MKV31F51212" brief="Docs mkv31f51212" version="1.0.0" full_name="Docs mkv31f51212" devices="MKV31F512xxx12" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for FRDM-KV31F.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for HVP-KV31F120M.pdf"/>
      </source>
    </component>
    <component id="platform.drivers.adc16.MKV31F51212" name="adc" brief="ADC16 Driver" version="2.2.0" full_name="ADC16 Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adc16.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc16.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MKV31F51212" name="clock" brief="Clock Driver" version="2.5.1" full_name="Clock Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cmp.MKV31F51212" name="cmp" brief="CMP Driver" version="2.0.2" full_name="CMP Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cmp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dspi_cmsis.MKV31F51212" name="dspi_cmsis" brief="DSPI CMSIS Driver" version="2.3.0" full_name="DSPI CMSIS Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKV31F51212/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dspi_edma.MKV31F51212"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MKV31F51212"/>
          <component_dependency value="RTE_Device.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dspi_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_cmsis.MKV31F51212" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.2.0" full_name="I2C CMSIS Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKV31F51212/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c_edma.MKV31F51212"/>
          <component_dependency value="platform.drivers.i2c.MKV31F51212"/>
          <component_dependency value="CMSIS_Driver_Include.I2C.MKV31F51212"/>
          <component_dependency value="RTE_Device.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MKV31F51212" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.2.0" full_name="LPUART CMSIS Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKV31F51212/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart_edma.MKV31F51212"/>
          <component_dependency value="platform.drivers.lpuart.MKV31F51212"/>
          <component_dependency value="CMSIS_Driver_Include.USART.MKV31F51212"/>
          <component_dependency value="RTE_Device.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_cmsis.MKV31F51212" name="uart_cmsis" brief="UART CMSIS Driver" version="2.1.0" full_name="UART CMSIS Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKV31F51212/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart_edma.MKV31F51212"/>
          <component_dependency value="platform.drivers.uart.MKV31F51212"/>
          <component_dependency value="CMSIS_Driver_Include.USART.MKV31F51212"/>
          <component_dependency value="RTE_Device.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MKV31F51212" name="common" brief="COMMON Driver" version="2.3.0" full_name="COMMON Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MKV31F51212"/>
          <component_dependency value="device.MKV31F51212_CMSIS.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="core0_MKV31F512xxx12">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="core0_MKV31F512xxx12">
        <files mask="fsl_common_arm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.crc.MKV31F51212" name="crc" brief="CRC Driver" version="2.0.3" full_name="CRC Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dac.MKV31F51212" name="dac" brief="DAC Driver" version="2.0.2" full_name="DAC Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dac.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dac.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmamux.MKV31F51212" name="dmamux" brief="DMAMUX Driver" version="2.0.5" full_name="DMAMUX Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dspi.MKV31F51212" name="dspi" brief="DSPI Driver" version="2.2.4" full_name="DSPI Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dspi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dspi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dspi_edma.MKV31F51212" name="dspi_edma" brief="DSPI Driver" version="2.2.4" full_name="DSPI_EDMA Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dspi.MKV31F51212"/>
          <component_dependency value="platform.drivers.edma.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dspi_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dspi_freertos.MKV31F51212" name="dspi_freertos" brief="DSPI Driver" version="2.2.4" full_name="DSPI Freertos Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dspi.MKV31F51212"/>
          <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dspi_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma.MKV31F51212" name="edma" brief="EDMA Driver" version="2.4.2" full_name="EDMA Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.dmamux.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.MKV31F51212" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flash.MKV31F51212" name="flash" brief="Flash Driver" version="3.0.0" full_name="Flash Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ftfx_adapter.h"/>
        <files mask="fsl_ftfx_utilities.h"/>
        <files mask="fsl_ftfx_features.h"/>
        <files mask="fsl_ftfx_controller.h"/>
        <files mask="fsl_ftfx_flash.h"/>
        <files mask="fsl_ftfx_cache.h"/>
        <files mask="fsl_ftfx_flexnvm.h"/>
        <files mask="fsl_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ftfx_controller.c"/>
        <files mask="fsl_ftfx_flash.c"/>
        <files mask="fsl_ftfx_cache.c"/>
        <files mask="fsl_ftfx_flexnvm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexbus.MKV31F51212" name="flexbus" brief="FLEXBUS Driver" version="2.1.1" full_name="FLEXBUS Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexbus.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexbus.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ftm.MKV31F51212" name="ftm" brief="FTM Driver" version="2.4.1" full_name="FTM Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ftm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ftm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MKV31F51212" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="board_component" package_base_path="components/fxos8700cq" project_base_path="accel">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpio.MKV31F51212" name="gpio" brief="GPIO Driver" version="2.5.3" full_name="GPIO Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c.MKV31F51212" name="i2c" brief="I2C Driver" version="2.0.9" full_name="I2C Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_edma.MKV31F51212" name="i2c_edma" brief="I2C Driver" version="2.0.9" full_name="I2C EDMA Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c.MKV31F51212"/>
          <component_dependency value="platform.drivers.edma.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_freertos.MKV31F51212" name="i2c_freertos" brief="I2C Driver" version="2.0.9" full_name="I2C FREERTOS Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c.MKV31F51212"/>
          <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.llwu.MKV31F51212" name="llwu" brief="LLWU Driver" version="2.0.5" full_name="LLWU Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_llwu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_llwu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.MKV31F51212" name="lptmr" brief="LPTMR Driver" version="2.1.1" full_name="LPTMR Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MKV31F51212" name="lpuart" brief="LPUART Driver" version="2.5.1" full_name="LPUART Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MKV31F51212" name="lpuart_edma" brief="LPUART Driver" version="2.5.0" full_name="LPUART Edma Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MKV31F51212"/>
          <component_dependency value="platform.drivers.lpuart.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MKV31F51212" name="lpuart_freertos" brief="LPUART Driver" version="2.5.0" full_name="LPUART Freertos Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MKV31F51212"/>
          <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdb.MKV31F51212" name="pdb" brief="PDB Driver" version="2.0.4" full_name="PDB Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pdb.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdb.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pit.MKV31F51212" name="pit" brief="PIT Driver" version="2.0.4" full_name="PIT Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pit.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pmc.MKV31F51212" name="pmc" brief="PMC Driver" version="2.0.3" full_name="PMC Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pmc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pmc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.port.MKV31F51212" name="port" brief="PORT Driver" version="2.2.0" full_name="PORT Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rcm.MKV31F51212" name="rcm" brief="RCM Driver" version="2.0.4" full_name="RCM Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_rcm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rcm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rnga.MKV31F51212" name="rnga" brief="RNGA Driver" version="2.0.2" full_name="RNGA Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_rnga.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rnga.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sim.MKV31F51212" name="sim" brief="SIM Driver" version="2.1.3" full_name="SIM Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sim.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smc.MKV31F51212" name="smc" brief="SMC Driver" version="2.0.7" full_name="SMC Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart.MKV31F51212" name="uart" brief="UART Driver" version="2.5.1" full_name="UART Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_edma.MKV31F51212" name="uart_edma" brief="UART Driver" version="2.5.0" full_name="UART EDMA Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKV31F51212"/>
          <component_dependency value="platform.drivers.edma.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_freertos.MKV31F51212" name="uart_freertos" brief="UART Driver" version="2.5.0" full_name="UART FREERTOS Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKV31F51212"/>
          <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.vref.MKV31F51212" name="vref" brief="VREF Driver" version="2.1.2" full_name="VREF Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_vref.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_vref.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog.MKV31F51212" name="wdog" brief="WDOG Driver" version="2.0.1" full_name="WDOG Driver" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F51212/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.MKV31F51212" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="MKV31F512xxx12" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.fatfs.MKV31F51212" name="fatfs" brief="FatFs" version="0.14" full_name="FAT File System stack" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <any_of>
          <all>
            <component_dependency value="middleware.fatfs.template_ram.MKV31F51212"/>
            <component_dependency value="middleware.fatfs.ram.MKV31F51212"/>
          </all>
          <all>
            <component_dependency value="middleware.fatfs.template_sdspi.MKV31F51212"/>
            <component_dependency value="middleware.fatfs.sdspi.MKV31F51212"/>
          </all>
        </any_of>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MKV31F51212" name="ram" brief="FatFs_RAM" version="0.14" full_name="Fatfs RAM layer" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MKV31F51212"/>
          <component_dependency value="middleware.fatfs.template_ram.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sdspi.MKV31F51212" name="sdspi" brief="FatFs_SDSPI" version="0.14" full_name="Fatfs SDSPI layer" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MKV31F51212"/>
          <component_dependency value="middleware.fatfs.template_sdspi.MKV31F51212"/>
          <component_dependency value="middleware.sdmmc.sdspi.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.dspi.MKV31F51212"/>
          <component_dependency value="platform.drivers.gpio.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sdspi_disk" type="src">
        <files mask="fsl_sdspi_disk.c"/>
      </source>
      <source relative_path="source/fsl_sdspi_disk" type="c_include">
        <files mask="fsl_sdspi_disk.h"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sdspi_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MKV31F51212" name="fatfs_mmc" brief="FatFs template MMC" version="0.14" full_name="FatFs template configuration for MMC disk" devices="MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/mmc" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MKV31F51212" name="fatfs_nand" brief="FatFs template NAND" version="0.14" full_name="FatFs template configuration for NAND disk" devices="MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/nand" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MKV31F51212" name="fatfs_ram" brief="FatFs template RAM" version="0.14" full_name="FatFs template configuration for RAM disk" devices="MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/ram" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MKV31F51212" name="fatfs_sd" brief="FatFs template SD" version="0.14" full_name="FatFs template configuration for SD disk" devices="MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/sd/fatfs" project_base_path="source">
      <include_paths>
        <include_path relative_path="template/sd" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MKV31F51212" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.14" full_name="FatFs template configuration for SDSPI disk" devices="MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/sdspi" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MKV31F51212" name="fatfs_usb" brief="FatFs template USB" version="0.14" full_name="FatFs template configuration for USB disk" devices="MKV31F512xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/usb" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.unused_files.MKV31F51212" name="unused_files" brief="fatfs files unused by projects" version="0.14" full_name="fatfs unused" devices="MKV31F512xxx12" user_visible="false" type="other" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents" type="doc">
        <files mask="00index_e.html" hidden="true"/>
        <files mask="css_e.css" hidden="true"/>
        <files mask="updates.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/doc" type="doc">
        <files mask="appnote.html" hidden="true"/>
        <files mask="chdir.html" hidden="true"/>
        <files mask="chdrive.html" hidden="true"/>
        <files mask="chmod.html" hidden="true"/>
        <files mask="close.html" hidden="true"/>
        <files mask="closedir.html" hidden="true"/>
        <files mask="config.html" hidden="true"/>
        <files mask="dinit.html" hidden="true"/>
        <files mask="dioctl.html" hidden="true"/>
        <files mask="dread.html" hidden="true"/>
        <files mask="dstat.html" hidden="true"/>
        <files mask="dwrite.html" hidden="true"/>
        <files mask="eof.html" hidden="true"/>
        <files mask="error.html" hidden="true"/>
        <files mask="expand.html" hidden="true"/>
        <files mask="fattime.html" hidden="true"/>
        <files mask="fdisk.html" hidden="true"/>
        <files mask="filename.html" hidden="true"/>
        <files mask="findfirst.html" hidden="true"/>
        <files mask="findnext.html" hidden="true"/>
        <files mask="forward.html" hidden="true"/>
        <files mask="getcwd.html" hidden="true"/>
        <files mask="getfree.html" hidden="true"/>
        <files mask="getlabel.html" hidden="true"/>
        <files mask="gets.html" hidden="true"/>
        <files mask="lseek.html" hidden="true"/>
        <files mask="mkdir.html" hidden="true"/>
        <files mask="mkfs.html" hidden="true"/>
        <files mask="mount.html" hidden="true"/>
        <files mask="open.html" hidden="true"/>
        <files mask="opendir.html" hidden="true"/>
        <files mask="printf.html" hidden="true"/>
        <files mask="putc.html" hidden="true"/>
        <files mask="puts.html" hidden="true"/>
        <files mask="rc.html" hidden="true"/>
        <files mask="read.html" hidden="true"/>
        <files mask="readdir.html" hidden="true"/>
        <files mask="rename.html" hidden="true"/>
        <files mask="sdir.html" hidden="true"/>
        <files mask="setcp.html" hidden="true"/>
        <files mask="setlabel.html" hidden="true"/>
        <files mask="sfatfs.html" hidden="true"/>
        <files mask="sfile.html" hidden="true"/>
        <files mask="sfileinfo.html" hidden="true"/>
        <files mask="size.html" hidden="true"/>
        <files mask="stat.html" hidden="true"/>
        <files mask="sync.html" hidden="true"/>
        <files mask="tell.html" hidden="true"/>
        <files mask="truncate.html" hidden="true"/>
        <files mask="unlink.html" hidden="true"/>
        <files mask="utime.html" hidden="true"/>
        <files mask="write.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="src">
        <files mask="app1.c" hidden="true"/>
        <files mask="app2.c" hidden="true"/>
        <files mask="app3.c" hidden="true"/>
        <files mask="app4.c" hidden="true"/>
        <files mask="app5.c" hidden="true"/>
        <files mask="app6.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="image">
        <files mask="f1.png" hidden="true"/>
        <files mask="f2.png" hidden="true"/>
        <files mask="f3.png" hidden="true"/>
        <files mask="f4.png" hidden="true"/>
        <files mask="f5.png" hidden="true"/>
        <files mask="f6.png" hidden="true"/>
        <files mask="f7.png" hidden="true"/>
        <files mask="funcs.png" hidden="true"/>
        <files mask="layers.png" hidden="true"/>
        <files mask="layers1.png" hidden="true"/>
        <files mask="layers2.png" hidden="true"/>
        <files mask="layers3.png" hidden="true"/>
        <files mask="modules.png" hidden="true"/>
        <files mask="rwtest1.png" hidden="true"/>
        <files mask="rwtest2.png" hidden="true"/>
        <files mask="rwtest3.png" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="archive">
        <files mask="mkfatimg.zip" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="other">
        <files mask="mkfs.xlsx" hidden="true"/>
      </source>
      <source exclude="true" relative_path="source" type="doc">
        <files mask="00history.txt" hidden="true"/>
        <files mask="00readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="source" type="c_include">
        <files mask="ffconf_template.h" hidden="true"/>
      </source>
    </component>
    <component id="middleware.fmstr.MKV31F51212" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.4" full_name="FreeMASTER communication driver common code" devices="MKV31F512xxx12" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <source relative_path="src/common" project_relative_path="./" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" project_relative_path="./" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.all_files.MKV31F51212" name="FreeMASTER driver all files" brief="DO NOT ADD THIS TO PROJECT. This component contains all FreeMASTER driver source code files for SDK distribution purpose. Not suitable for project build." version="1.0.0" full_name="FreeMASTER driver all files" devices="MKV31F512xxx12" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_net.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_net.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
      </source>
      <source relative_path="src/common" type="other">
        <files mask="freemaster_cfg.h.example"/>
      </source>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source relative_path="src/drivers" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="src/drivers/dreg/DSC" type="src">
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_56f800e_flexcan.c"/>
        <files mask="freemaster_56f800e_qsci.c"/>
      </source>
      <source relative_path="src/drivers/dreg/DSC" type="c_include">
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_56f800e_flexcan.h"/>
        <files mask="freemaster_56f800e_qsci.h"/>
      </source>
      <source relative_path="src/drivers/dreg/Kxx" type="src">
        <files mask="freemaster_kxx_uart.c"/>
      </source>
      <source relative_path="src/drivers/dreg/Kxx" type="c_include">
        <files mask="freemaster_kxx_uart.h"/>
      </source>
      <source relative_path="src/drivers/dreg/MPC" type="src">
        <files mask="freemaster_mpc574xp_linflex.c"/>
      </source>
      <source relative_path="src/drivers/dreg/MPC" type="c_include">
        <files mask="freemaster_mpc574xp_linflex.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S12Z" type="src">
        <files mask="freemaster_s12z_mscan.c"/>
        <files mask="freemaster_s12z_sci.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S12Z" type="c_include">
        <files mask="freemaster_s12z_mscan.h"/>
        <files mask="freemaster_s12z_sci.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32G" type="src">
        <files mask="freemaster_s32g274a_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32G" type="c_include">
        <files mask="freemaster_s32g274a_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32K" type="src">
        <files mask="freemaster_s32k144_lpuart.c"/>
        <files mask="freemaster_s32k344_lpuart.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32K" type="c_include">
        <files mask="freemaster_s32k144_lpuart.h"/>
        <files mask="freemaster_s32k344_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32R" type="src">
        <files mask="freemaster_s32r45_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32R" type="c_include">
        <files mask="freemaster_s32r45_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32S" type="src">
        <files mask="freemaster_s32s247tv_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32S" type="c_include">
        <files mask="freemaster_s32s247tv_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mcan.c"/>
        <files mask="freemaster_mscan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mcan.h"/>
        <files mask="freemaster_mscan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
        <files mask="freemaster_serial_lpuart.c"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
        <files mask="freemaster_serial_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
        <files mask="freemaster_flexcan.c"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
        <files mask="freemaster_flexcan.h"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="src">
        <files mask="freemaster_usb.c"/>
        <files mask="freemaster_usb_device_descriptor.c"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="c_include">
        <files mask="freemaster_usb.h"/>
        <files mask="freemaster_usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
        <files mask="usb_device_descriptor.h"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="license" type="doc">
        <files mask="LA_OPT_NXP_Software_License.txt"/>
        <files mask="SW-Content-Register.txt"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="release_notes.txt"/>
        <files mask="serial_protocol_readme.txt"/>
        <files mask="serial_protocol_v4.pdf"/>
        <files mask="user_guide.pdf"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/DSC" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/Kxx" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/MPC" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S12Z" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32G" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32K" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32R" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32S" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include"/>
        <include_path relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include"/>
        <include_path relative_path="src/support/mcuxsdk_usb" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MKV31F51212" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.4" full_name="FreeMASTER communication driver for 32bit platforms" devices="MKV31F512xxx12" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <component_dependency value="middleware.fmstr.MKV31F51212"/>
      </dependencies>
      <source relative_path="src/platforms/gen32le" project_relative_path="platforms" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" project_relative_path="drivers" type="src">
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" project_relative_path="platforms" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.template_cfg_gen32le.MKV31F51212" name="FreeMASTER configuration file template" brief="FreeMASTER configuration file template. Contains placeholders and TODOs which need to be filled by user or by using Peripherals ConfigTool." version="1.0.0" full_name="FreeMASTER configuration file template." devices="MKV31F512xxx12" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="source">
      <dependencies>
        <component_dependency value="middleware.fmstr.MKV31F51212"/>
      </dependencies>
      <source relative_path="src/template/gen32le" project_relative_path="./" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/template/gen32le" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MKV31F51212" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="202012.00.0" full_name="FreeRTOS kernel" devices="MKV31F512xxx12" user_visible="true" type="OS" package_base_path="rtos/freertos" project_base_path="freertos">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.extension.MKV31F51212"/>
          <component_dependency value="middleware.freertos-kernel.template.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="freertos_kernel" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source toolchain="mcuxpresso" compiler="compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM4F" type="src" device_cores="core0_MKV31F512xxx12">
        <files mask="port.c"/>
      </source>
      <source toolchain="mcuxpresso" compiler="compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM4F" type="c_include" device_cores="core0_MKV31F512xxx12">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="freertos_kernel/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM4F" toolchain="mcuxpresso" type="c_include" device_cores="core0_MKV31F512xxx12"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.armv8m.MKV31F51212" name="FreeRTOS port ARMv8M" brief="FreeRTOS port ARMv8M" version="202012.00.0" full_name="FreeRTOS port ARMv8M" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.doc.MKV31F51212" name="FreeRTOS doc" brief="FreeRTOS doc" version="202012.00.0" full_name="FreeRTOS doc" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="doc" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
        <files mask="mainpage.txt"/>
      </source>
      <source relative_path="doc/config" type="other">
        <files mask="ble"/>
        <files mask="common"/>
        <files mask="https"/>
        <files mask="main"/>
        <files mask="ota"/>
        <files mask="platform"/>
        <files mask="posix"/>
        <files mask="secure_sockets"/>
        <files mask="wifi"/>
      </source>
      <source relative_path="doc/config/html" type="doc">
        <files mask="footer.html"/>
        <files mask="header.html"/>
        <files mask="style.css"/>
      </source>
      <source relative_path="doc/config" type="xml">
        <files mask="layout_library.xml"/>
        <files mask="layout_main.xml"/>
      </source>
      <source relative_path="doc/extra_files/https" type="doc">
        <files mask="gettysburg.txt"/>
      </source>
      <source relative_path="doc/freertos_port_qual" type="doc">
        <files mask="FreeRTOS_Porting_Guide.pdf"/>
        <files mask="FreeRTOS_Qualification_Guide.pdf"/>
      </source>
      <source relative_path="doc" type="script">
        <files mask="generate_doc.sh"/>
      </source>
      <source relative_path="doc" type="other">
        <files mask="guidance.md"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="doc/guide" type="doc">
        <files mask="building.txt"/>
        <files mask="developer.txt"/>
        <files mask="style.txt"/>
      </source>
      <source relative_path="doc/lib" type="doc">
        <files mask="ble.txt"/>
        <files mask="https.txt"/>
        <files mask="platform.txt"/>
        <files mask="posix.txt"/>
        <files mask="secure_sockets.txt"/>
        <files mask="wifi.txt"/>
      </source>
      <source relative_path="doc/plantuml" type="other">
        <files mask="https_client_async_callback_order.pu"/>
        <files mask="RecyclableJobStatus.pu"/>
        <files mask="StaticJobStatus.pu"/>
        <files mask="taskpool_design_typicaloperation.pu"/>
      </source>
      <source relative_path="doc/plantuml" type="xml">
        <files mask="https_client_async_workflow.xml"/>
        <files mask="https_client_sync_workflow.xml"/>
      </source>
      <source relative_path="doc/plantuml/images" type="image">
        <files mask="BLE-architecture.png"/>
        <files mask="blediagram.png"/>
        <files mask="https_client_async_callback_order.png"/>
        <files mask="https_client_async_workflow.png"/>
        <files mask="https_client_sync_workflow.png"/>
        <files mask="mqtt_demo.png"/>
        <files mask="mqtt_design_typicaloperation.png"/>
        <files mask="RecyclableJobStatus.png"/>
        <files mask="shadow_demo.png"/>
        <files mask="StaticJobStatus.png"/>
        <files mask="taskpool_design_typicaloperation.png"/>
      </source>
      <source relative_path="doc/user_guide" type="doc">
        <files mask="global_config.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.MKV31F51212" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="202012.00.0" full_name="FreeRTOS NXP extension" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MKV31F51212" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="202012.00.0" full_name="FreeRTOS heap 1" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MKV31F51212" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="202012.00.0" full_name="FreeRTOS heap 2" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MKV31F51212" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="202012.00.0" full_name="FreeRTOS heap_3" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MKV31F51212" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="202012.00.0" full_name="FreeRTOS heap 4" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MKV31F51212" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="202012.00.0" full_name="FreeRTOS heap 5" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MKV31F51212" name="FreeRTOS MPU wrappers" brief="FreeRTOS MPU wrappers" version="202012.00.0" full_name="FreeRTOS MPU wrappers" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F51212"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.root_doc.MKV31F51212" name="Root FreeRTOS documents." brief="FreeRTOS root documents" version="202012.00.0" full_name="FreeRTOS root documents" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="CHANGELOG.md"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="directories.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.template.MKV31F51212" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="202012.00.0" full_name="FreeRTOS configuration template" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="project_template" package_base_path="rtos/freertos" project_base_path="freertos">
      <source exclude="true" relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source relative_path="template/ARM_CM4F" type="c_include" device_cores="core0_MKV31F512xxx12">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM4F" type="c_include" device_cores="core0_MKV31F512xxx12"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.unused.MKV31F51212" name="FreeRTOS unused" brief="FreeRTOS unused" version="202012.00.0" full_name="FreeRTOS unused" devices="MKV31F512xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="CODE_OF_CONDUCT.md"/>
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="freertos_kernel" type="other">
        <files mask="GitHub-FreeRTOS-Kernel-Home.url"/>
        <files mask="LICENSE.md"/>
        <files mask="Quick_Start_Guide.url"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="freertos_kernel" type="doc">
        <files mask="History.txt"/>
      </source>
      <source relative_path="freertos_kernel/include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMClang" type="doc">
        <files mask="Use-the-GCC-ports.txt"/>
      </source>
    </component>
    <component id="middleware.mc_acim.float.MKV31F51212" name="mc_acim" brief="ACIM control middleware, floating point implementation." version="2.10.0" full_name="Middleware motor_control-acim" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <source relative_path="acim/mc_algorithms" type="src">
        <files mask="acim_control.c"/>
      </source>
      <source relative_path="acim/mc_algorithms" type="c_include">
        <files mask="acim_control.h"/>
      </source>
      <source relative_path="acim/mc_state_machine" type="src">
        <files mask="m1_sm_ref_sol.c"/>
      </source>
      <source relative_path="acim/mc_state_machine" type="c_include">
        <files mask="m1_sm_ref_sol.h"/>
      </source>
      <source relative_path="acim/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="acim/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="acim/mc_identification/src_common" type="c_include">
        <files mask="mid_def.h"/>
        <files mask="mid_sm_ctrl.h"/>
        <files mask="mid_sm_states.h"/>
      </source>
      <source relative_path="acim/mc_identification/src_common" type="src">
        <files mask="mid_sm_ctrl.c"/>
        <files mask="mid_sm_states.c"/>
      </source>
      <source relative_path="acim/mc_identification/src_routines" type="c_include">
        <files mask="blocked_test.h"/>
        <files mask="calc_acim.h"/>
        <files mask="calc_power.h"/>
        <files mask="mech_measure.h"/>
        <files mask="noload_test.h"/>
        <files mask="pwrstg_characteristic.h"/>
        <files mask="rs_measure.h"/>
      </source>
      <source relative_path="acim/mc_identification/src_routines" type="src">
        <files mask="blocked_test.c"/>
        <files mask="calc_acim.c"/>
        <files mask="calc_power.c"/>
        <files mask="mech_measure.c"/>
        <files mask="noload_test.c"/>
        <files mask="pwrstg_characteristic.c"/>
        <files mask="rs_measure.c"/>
      </source>
      <source relative_path="acim" type="c_include">
        <files mask="fm_tsa_acim.h"/>
      </source>
      <source relative_path="acim" type="src">
        <files mask="fm_tsa_acim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="acim/mc_algorithms" type="c_include"/>
        <include_path relative_path="acim/mc_state_machine" type="c_include"/>
        <include_path relative_path="acim/state_machine" type="c_include"/>
        <include_path relative_path="acim/mc_identification/src_common" type="c_include"/>
        <include_path relative_path="acim/mc_identification/src_routines" type="c_include"/>
        <include_path relative_path="acim/mc_drivers" type="c_include"/>
        <include_path relative_path="acim" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_enc.float.MKV31F51212" name="mc_pmsm" brief="PMSM control with encoder middleware, floating point implementation." version="2.10.0" full_name="Middleware motor_control-pmsm enc" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <component_dependency value="middleware.motor_control_pmsm_float.template.MKV31F51212"/>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="src">
        <files mask="hall_calib.c"/>
        <files mask="ke_measure.c"/>
        <files mask="ls_measure.c"/>
        <files mask="mech_measure.c"/>
        <files mask="mid_auxiliary.c"/>
        <files mask="mid_sm_ctrl.c"/>
        <files mask="mid_sm_states.c"/>
        <files mask="pp_measure.c"/>
        <files mask="pwrstg_characteristic.c"/>
        <files mask="rs_measure.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="c_include">
        <files mask="hall_calib.h"/>
        <files mask="ke_measure.h"/>
        <files mask="ls_measure.h"/>
        <files mask="mech_measure.h"/>
        <files mask="mid_auxiliary.h"/>
        <files mask="mid_def.h"/>
        <files mask="mid_sm_ctrl.h"/>
        <files mask="mid_sm_states.h"/>
        <files mask="pp_measure.h"/>
        <files mask="pwrstg_characteristic.h"/>
        <files mask="rs_measure.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_snsless_enc.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless_enc.h"/>
        <files mask="sm_common_enc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_identification" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_drivers" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_snsless.float.MKV31F51212" name="PMSM sensorless control floating-point version files" brief="Common PMSM control middleware code, floating point implementation." version="2.10.0" full_name="PMSM sensorless control middleware" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="Motor Control/PMSM sensorless control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <component_dependency value="middleware.motor_control_pmsm_float.template.MKV31F51212"/>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="src">
        <files mask="hall_calib.c"/>
        <files mask="ke_measure.c"/>
        <files mask="ls_measure.c"/>
        <files mask="mech_measure.c"/>
        <files mask="mid_auxiliary.c"/>
        <files mask="mid_sm_ctrl.c"/>
        <files mask="mid_sm_states.c"/>
        <files mask="pp_measure.c"/>
        <files mask="pwrstg_characteristic.c"/>
        <files mask="rs_measure.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="c_include">
        <files mask="hall_calib.h"/>
        <files mask="ke_measure.h"/>
        <files mask="ls_measure.h"/>
        <files mask="mech_measure.h"/>
        <files mask="mid_auxiliary.h"/>
        <files mask="mid_def.h"/>
        <files mask="mid_sm_ctrl.h"/>
        <files mask="mid_sm_states.h"/>
        <files mask="pp_measure.h"/>
        <files mask="pwrstg_characteristic.h"/>
        <files mask="rs_measure.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_snsless.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless.h"/>
        <files mask="sm_common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_identification" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.mc_drivers_adc16_ftm_float.MKV31F51212" name="PMSM sensorless control drivers floating-point" brief="PMSM sensorless control for adc16 ftm based MCUs" version="2.10.0" full_name="PMSM sensorless control for ftm and adc16 based MCUs" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="Motor Control/PMSM sensorless control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <source relative_path="pmsm/pmsm_float/mc_drivers" type="src">
        <files mask="mcdrv_adc_adc16.c"/>
        <files mask="mcdrv_pwm3ph_ftm.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_drivers" type="c_include">
        <files mask="mcdrv_adc_adc16.h"/>
        <files mask="mcdrv_pwm3ph_ftm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_float.template.MKV31F51212" name="PMSM sensorless control config files templates floating-point" brief="PMSM sensorless control configuration files" version="2.10.0" full_name="PMSM sensorless control cfg templastes" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="false" type="project_template" package_base_path="middleware/motor_control" project_base_path="source">
      <source relative_path="pmsm/pmsm_float/mc_cfg_template" project_relative_path="./" type="c_include">
        <files mask="m1_pmsm_appconfig.h"/>
        <files mask="mc_periph_init.h"/>
        <files mask="char_pwrstg.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_cfg_template" project_relative_path="./" type="src">
        <files mask="mc_periph_init.c"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_cfg_template" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_float.tsa.MKV31F51212" name="PMSM sensorless control TSA floating-point" brief="FreeMASTER TSA table for PMSM sensorless control floating-point" version="2.10.0" full_name="FreeMASTER TSA table for PMSM sensorless control floating-point" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="Motor Control/PMSM sensorless control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <component_dependency value="middleware.fmstr.MKV31F51212"/>
      </dependencies>
      <source relative_path="pmsm/pmsm_float" type="c_include">
        <files mask="fm_tsa_pmsm.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float" type="src">
        <files mask="fm_tsa_pmsm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.rtcesl.cm4f.MKV31F51212" name="rtcesl" brief="Real Time Control Embedded Software Library for CM4F core" version="1.1.0" full_name="Middleware rtcesl cm4f" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="middleware" package_base_path="middleware/rtcesl" project_base_path="rtcesl">
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/AMCLIB/Include" type="c_include">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/GDFLIB/Include" type="c_include">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/GFLIB/Include" type="c_include">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/GMCLIB/Include" type="c_include">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/MLIB/Include" type="c_include">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/AMCLIB" type="lib">
        <files mask="libAMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/GFLIB" type="lib">
        <files mask="libGFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/GDFLIB" type="lib">
        <files mask="libGDFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/GMCLIB" type="lib">
        <files mask="libGMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="CM4F_RTCESL_4.6.2_MCUX/MLIB" type="lib">
        <files mask="libMLIB.a"/>
      </source>
      <source relative_path="CM4F_RTCESL_4.6.2_doc" type="doc">
        <files mask="CM4FAMCLIBUG.pdf" hidden="true"/>
        <files mask="CM4FGDFLIBUG.pdf" hidden="true"/>
        <files mask="CM4FGFLIBUG.pdf" hidden="true"/>
        <files mask="CM4FGMCLIBUG.pdf" hidden="true"/>
        <files mask="CM4FMLIBUG.pdf" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="CM4F_RTCESL_4.6.2_MCUX/AMCLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM4F_RTCESL_4.6.2_MCUX/GDFLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM4F_RTCESL_4.6.2_MCUX/GFLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM4F_RTCESL_4.6.2_MCUX/GMCLIB/Include" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="CM4F_RTCESL_4.6.2_MCUX/MLIB/Include" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MKV31F51212" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" devices="MKV31F512xxx12" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="common" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" project_relative_path="src" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <include_paths>
        <include_path relative_path="common" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MKV31F51212" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" devices="MKV31F512xxx12" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="template/sdhc" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MKV31F51212" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" devices="MKV31F512xxx12" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="template/sdif" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdspi.MKV31F51212" name="sdspi" brief="Middleware sdmmc sdspi" version="2.2.1" full_name="SDMMC sdspi stack" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <component_dependency value="platform.drivers.dspi.MKV31F51212"/>
      </dependencies>
      <source relative_path="sdspi" project_relative_path="src" type="src">
        <files mask="fsl_sdspi.c"/>
      </source>
      <source relative_path="sdspi" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdspi.h"/>
      </source>
      <source relative_path="common" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
      <source relative_path="sdspi" project_relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="sdspi" project_relative_path="inc" type="c_include"/>
        <include_path relative_path="common" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MKV31F51212" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" devices="MKV31F512xxx12" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="template/usdhc" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MKV31F51212" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F51212/utilities" project_base_path="utilities"/>
    <component id="platform.utilities.assert.MKV31F51212" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F51212/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.MKV31F51212" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F51212/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MKV31F51212" name="debug_console" brief="Utility debug_console" version="1.0.0" full_name="Utility debug_console" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F51212/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MKV31F51212" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F51212/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.uart_adapter.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.notifier.MKV31F51212" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F51212/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F51212"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MKV31F51212" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F51212/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MKV31F51212"/>
          <component_dependency value="component.lists.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="project_template.frdmkv31f.MKV31F51212" name="frdmkv31f" brief="Board_project_template frdmkv31f" version="1.0.0" full_name="Board_project_template frdmkv31f" devices="MKV31F512xxx12" device_cores="core0_MKV31F512xxx12" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/frdmkv31f/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKV31F51212"/>
          <component_dependency value="component.uart_adapter.MKV31F51212"/>
          <component_dependency value="platform.drivers.port.MKV31F51212"/>
          <component_dependency value="platform.drivers.common.MKV31F51212"/>
          <component_dependency value="platform.drivers.gpio.MKV31F51212"/>
          <component_dependency value="platform.drivers.smc.MKV31F51212"/>
          <component_dependency value="device.MKV31F51212_startup.MKV31F51212"/>
          <component_dependency value="platform.drivers.i2c.MKV31F51212"/>
          <component_dependency value="platform.drivers.ftm.MKV31F51212"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MKV31F51212"/>
              <component_dependency value="component.serial_manager.MKV31F51212"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MKV31F51212"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm7_headers.MKV31F51212" name="CMSIS_cm7_headers" brief="CMSIS cm7 headers" version="2.8.0" full_name="Middleware mcu-boot cmsis_cm7_headers" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <source toolchain="mcuxpresso" relative_path="./" type="c_include">
        <files mask="mpu_armv7.h"/>
        <files mask="core_cm7.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.MKV31F51212_sources.MKV31F51212" name="MCUBOOT_MKV31F51212_sources" brief="MCUBOOT MKV31F51212 sources" version="1.0.0" full_name="Middleware mcu-boot mkv31f51212_sources" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="MKV31F51212">
      <source relative_path="targets/MKV31F51212/src" project_relative_path="./" type="c_include">
        <files mask="bootloader_config.h"/>
        <files mask="peripherals_pinmux.h"/>
        <files mask="target_config.h"/>
      </source>
      <source relative_path="targets/MKV31F51212/src" project_relative_path="./" type="src">
        <files mask="bl_clock_config_MKV31F51212.c"/>
        <files mask="hardware_init_MKV31F51212.c"/>
        <files mask="memory_map_MKV31F51212.c"/>
        <files mask="bl_peripherals_MKV31F51212.c"/>
      </source>
      <source relative_path="targets/common/src" project_relative_path="./" type="src">
        <files mask="pinmux_utility_common.c"/>
        <files mask="bl_dspi_irq_config_common.c"/>
        <files mask="bl_i2c_irq_config_common.c"/>
        <files mask="bl_uart_irq_config_common.c"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="../source/bootloader/src" type="src">
        <files mask="scuart_peripheral_interface.c"/>
        <files mask="dspi_peripheral_interface.c"/>
        <files mask="i2c_peripheral_interface.c"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="../source/memory/src" type="src">
        <files mask="sram_init_cm4.c"/>
      </source>
      <include_paths>
        <include_path relative_path="targets/MKV31F51212/src" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.MKV31F51212_startup.MKV31F51212" name="MCUBOOT_MKV31F51212_startup" brief="MCUBOOT MKV31F51212 startup sources" version="1.0.0" full_name="Middleware mcu-boot mkv31f51212_startup" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="mcu-boot">
      <source toolchain="mcuxpresso" relative_path="src/startup" project_relative_path="../startup" type="asm_include">
        <files mask="crt0_gcc.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="targets/MKV31F51212/src/startup/gcc" project_relative_path="../startup" type="asm_include">
        <files mask="startup_MKV31F51212.S"/>
      </source>
      <source relative_path="../../devices/MKV31F51212" project_relative_path="../device" type="c_include">
        <files mask="system_MKV31F51212.h"/>
      </source>
      <source relative_path="../../devices/MKV31F51212" project_relative_path="../device" type="src">
        <files mask="system_MKV31F51212.c"/>
      </source>
      <include_paths>
        <include_path relative_path="../../devices/MKV31F51212" project_relative_path="../device" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.bootsources.MKV31F51212" name="MCUBOOT_common_sources" brief="Bootloader common sources" version="2.7.0" full_name="Middleware mcu-boot bootsources" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/autobaud" project_relative_path="autobaud" type="c_include">
        <files mask="autobaud.h"/>
      </source>
      <source relative_path="src/autobaud/src" project_relative_path="autobaud" type="src">
        <files mask="autobaud_irq.c"/>
      </source>
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="bl_peripheral_interface.h"/>
        <files mask="bl_user_entry.h"/>
        <files mask="bl_version.h"/>
        <files mask="bootloader.h"/>
        <files mask="bl_command.h"/>
        <files mask="bl_context.h"/>
        <files mask="bl_peripheral.h"/>
        <files mask="bl_shutdown_cleanup.h"/>
        <files mask="bl_irq_common.h"/>
        <files mask="bl_app_crc_check.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader/src" type="src">
        <files mask="bl_user_entry.c"/>
        <files mask="bl_main.c"/>
        <files mask="bl_context.c"/>
        <files mask="bl_exception_handler.c"/>
        <files mask="bl_tree_root.c"/>
        <files mask="bl_command.c"/>
        <files mask="bl_shutdown_cleanup.c"/>
        <files mask="bl_app_crc_check.c"/>
        <files mask="bl_misc.c"/>
      </source>
      <source relative_path="src/crc" project_relative_path="crc" type="c_include">
        <files mask="crc16.h"/>
        <files mask="crc32.h"/>
      </source>
      <source relative_path="src/crc/src" project_relative_path="crc" type="src">
        <files mask="crc16.c"/>
        <files mask="crc32.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_common.h"/>
      </source>
      <source relative_path="src/memory" project_relative_path="memory" type="c_include">
        <files mask="memory.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="sram_init.h"/>
        <files mask="normal_memory.h"/>
        <files mask="pattern_fill.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="memory.c"/>
        <files mask="normal_memory.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="src/memory/src" project_relative_path="memory/src" type="asm_include">
        <files mask="pattern_fill_gcc.S"/>
      </source>
      <source relative_path="src/startup" project_relative_path="../startup" type="c_include">
        <files mask="ar_asm_macros.h"/>
      </source>
      <source relative_path="src/packet" project_relative_path="packet" type="c_include">
        <files mask="command_packet.h"/>
        <files mask="serial_packet.h"/>
      </source>
      <source relative_path="src/packet/src" project_relative_path="packet/src" type="src">
        <files mask="serial_packet.c"/>
      </source>
      <source relative_path="src/property" project_relative_path="property" type="c_include">
        <files mask="property.h"/>
      </source>
      <source relative_path="src/sbloader" project_relative_path="sbloader" type="c_include">
        <files mask="sbloader.h"/>
        <files mask="sb_file_format.h"/>
      </source>
      <source relative_path="src/sbloader/src" project_relative_path="sbloader/src" type="src">
        <files mask="sbloader.c"/>
      </source>
      <source relative_path="src/utilities" project_relative_path="utilities" type="c_include">
        <files mask="fsl_rtos_abstraction.h"/>
        <files mask="fsl_assert.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source relative_path="src/utilities/src" project_relative_path="utilities/src" type="src">
        <files mask="fsl_assert.c"/>
        <files mask="fsl_rtos_abstraction.c"/>
        <files mask="debug_util.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/autobaud" project_relative_path="autobaud" type="c_include"/>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
        <include_path relative_path="src/crc" project_relative_path="crc" type="c_include"/>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/memory" project_relative_path="memory" type="c_include"/>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="c_include"/>
        <include_path relative_path="src/packet" project_relative_path="packet" type="c_include"/>
        <include_path relative_path="src/property" project_relative_path="property" type="c_include"/>
        <include_path relative_path="src/sbloader" project_relative_path="sbloader" type="c_include"/>
        <include_path relative_path="src/utilities" project_relative_path="utilities" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.bootsources_kinetis.MKV31F51212" name="MCUBOOT_kinetis_sources" brief="Bootloader sources for Kinetis devices" version="2.7.0" full_name="Middleware mcu-boot bootsources_kinetis" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/smc" project_relative_path="drivers/smc" type="src">
        <files mask="smc.c"/>
      </source>
      <source relative_path="src/drivers/smc" project_relative_path="drivers/smc" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="flash_memory.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="flash_memory.c"/>
      </source>
      <source relative_path="src/property/src" project_relative_path="property/src" type="src">
        <files mask="property_kinetis.c"/>
      </source>
      <source relative_path="src/utilities" project_relative_path="utilities" type="c_include">
        <files mask="kinetis_family.h"/>
      </source>
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="bl_reliable_update.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader/src" type="src">
        <files mask="bl_reliable_update.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/smc" project_relative_path="drivers/smc" type="c_include"/>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
        <include_path relative_path="src/utilities" project_relative_path="utilities" type="c_include"/>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds.MKV31F51212" name="MCUBOOT_microseconds_sysclk" brief="MCUBOOT microseconds sysclk" version="1.0.0" full_name="Middleware mcu-boot drv_microseconds" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source relative_path="src/drivers/microseconds/src" project_relative_path="drivers/microseconds" type="src">
        <files mask="microseconds_sysclk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds_pit.MKV31F51212" name="MCUBOOT_microseconds_pit" brief="MCUBOOT microseconds pit" version="1.0.0" full_name="Middleware mcu-boot drv_microseconds_pit" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source relative_path="src/drivers/microseconds/src" project_relative_path="drivers/microseconds" type="src">
        <files mask="microseconds_pit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.kinetis_files.MKV31F51212" name="kinetis_files" brief="kinetis files" version="2.7.0" full_name="Middleware mcu-boot kinetis_files" devices="MKV31F512xxx12" user_visible="false" type="other" package_base_path="middleware/mcu-boot" project_base_path="middleware">
      <source exclude="true" relative_path="apps/led_demo/src" project_relative_path="mcu-boot" type="src">
        <files mask="milliseconds_delay.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="apps/led_demo/src" project_relative_path="mcu-boot" type="other">
        <files mask="led_demo.bd" hidden="true"/>
      </source>
      <source relative_path="apps/led_demo/src" project_relative_path="mcu-boot" type="c_include">
        <files mask="milliseconds_delay.h" hidden="true"/>
      </source>
      <source relative_path="bin" project_relative_path="mcu-boot" type="script">
        <files mask="create_fl_image.py" hidden="true"/>
        <files mask="create_fl_image_mdk.py" hidden="true"/>
        <files mask="create_fl_image_mcux.py" hidden="true"/>
        <files mask="elf.py" hidden="true"/>
        <files mask="create_flashloader_image.bat" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel" project_relative_path="mcu-boot" type="other">
        <files mask="MfgTool2.exe" hidden="true"/>
        <files mask="MfgToolLib.dll" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel" project_relative_path="mcu-boot" type="configuration">
        <files mask="UICfg.ini" hidden="true"/>
        <files mask="cfg.ini" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/Kinetis Bootloader" project_relative_path="mcu-boot" type="configuration">
        <files mask="player.ini" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/Kinetis Bootloader/OS Firmware" project_relative_path="mcu-boot" type="xml">
        <files mask="ucl2(for HEX).xml" hidden="true"/>
        <files mask="ucl2(for SB).xml" hidden="true"/>
        <files mask="ucl2(for SRecord).xml" hidden="true"/>
        <files mask="ucl2(for binary).xml" hidden="true"/>
        <files mask="ucl2.xml" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/Kinetis Bootloader/OS Firmware/files" project_relative_path="mcu-boot" type="other">
        <files mask="simple.bd" hidden="true"/>
        <files mask="simple.hex" hidden="true"/>
        <files mask="simple.sb" hidden="true"/>
        <files mask="simple.srec" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/Kinetis Bootloader/OS Firmware/files" project_relative_path="mcu-boot" type="doc">
        <files mask="Readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool" project_relative_path="mcu-boot" type="other">
        <files mask="KinetisFlashTool.sln" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool/KinetisFlashTool" project_relative_path="mcu-boot" type="src">
        <files mask="Bootloader.cpp" hidden="true"/>
        <files mask="BootloaderConfigDlg.cpp" hidden="true"/>
        <files mask="ConfigDlg.cpp" hidden="true"/>
        <files mask="FlashDlg.cpp" hidden="true"/>
        <files mask="HistoryData.cpp" hidden="true"/>
        <files mask="KinetisFlashTool.cpp" hidden="true"/>
        <files mask="KinetisFlashToolDlg.cpp" hidden="true"/>
        <files mask="SerialList.cpp" hidden="true"/>
        <files mask="UpdateDlg.cpp" hidden="true"/>
        <files mask="stdafx.cpp" hidden="true"/>
        <files mask="utility.cpp" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool/KinetisFlashTool" project_relative_path="mcu-boot" type="c_include">
        <files mask="Bootloader.h" hidden="true"/>
        <files mask="BootloaderConfigDlg.h" hidden="true"/>
        <files mask="BootloaderConfigText.h" hidden="true"/>
        <files mask="ConfigDlg.h" hidden="true"/>
        <files mask="FlashDlg.h" hidden="true"/>
        <files mask="HistoryData.h" hidden="true"/>
        <files mask="KinetisFlashTool.h" hidden="true"/>
        <files mask="KinetisFlashToolDlg.h" hidden="true"/>
        <files mask="SerialList.h" hidden="true"/>
        <files mask="UpdateDlg.h" hidden="true"/>
        <files mask="resource.h" hidden="true"/>
        <files mask="stdafx.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
        <files mask="utility.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool/KinetisFlashTool" project_relative_path="mcu-boot" type="other">
        <files mask="KinetisFlashTool.rc" hidden="true"/>
        <files mask="KinetisFlashTool.vcxproj" hidden="true"/>
        <files mask="KinetisFlashTool.vcxproj.filters" hidden="true"/>
        <files mask="KinetisFlashTool.vcxproj.user" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/KinetisFlashTool/KinetisFlashTool/res" project_relative_path="mcu-boot" type="other">
        <files mask="Freescale.ico" hidden="true"/>
        <files mask="KinetisFlashTool.rc2" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/KinetisFlashTool/win" project_relative_path="mcu-boot" type="other">
        <files mask="KinetisFlashTool.exe" hidden="true"/>
        <files mask="blfwkdll.dll" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.loadersources.MKV31F51212" name="MCUBOOT_loader_loader_sources" brief="Flashloader_loader sources" version="2.7.0" full_name="Middleware mcu-boot loadersources" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="flashloader_image.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader" type="src">
        <files mask="bl_flashloader.c"/>
        <files mask="bl_exception_handler.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_common.h"/>
      </source>
      <source relative_path="src/utilities" project_relative_path="utilities" type="c_include">
        <files mask="fsl_assert.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source relative_path="src/utilities/src" project_relative_path="utilities/src" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/utilities" project_relative_path="utilities" type="c_include"/>
        <include_path relative_path="src/include" project_relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.postaction.MKV31F51212" name="MCUBOOT_postaction_scripts" brief="Postaction scripts for flashloader" version="1.0.0" full_name="Middleware mcu-boot postaction" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="postaction">
      <source toolchain="mcuxpresso" exclude="true" relative_path="bin" project_relative_path="./" type="script">
        <files mask="elf.py"/>
        <files mask="create_fl_image_mcux.py"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.src_startup.MKV31F51212" name="MCUBOOT_startup_sources" brief="Bootloader startup sources" version="1.0.0" full_name="Middleware mcu-boot src_startup" devices="MKV31F512xxx12" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/startup" project_relative_path="../startup" type="src">
        <files mask="startup.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_core.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Library.MKV31F25612" name="CMSIS_DSP_Library" brief="CMSIS-DSP Library for Cortex-M, SC000, and SC300" version="1.7.0" full_name="CMSIS DSP Library" devices="MKV31F256xxx12" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="Lib/GCC" project_relative_path="./" type="lib" device_cores="core0_MKV31F256xxx12">
        <files mask="libarm_cortexM4lf_math.a"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MKV31F25612" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library for Cortex-M, SC000, and SC300" version="1.7.0" full_name="CMSIS DSP Library Source" devices="MKV31F256xxx12" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c" hidden="true"/>
        <files mask="arm_abs_q15.c" hidden="true"/>
        <files mask="arm_abs_q31.c" hidden="true"/>
        <files mask="arm_abs_q7.c" hidden="true"/>
        <files mask="arm_add_f32.c" hidden="true"/>
        <files mask="arm_add_q15.c" hidden="true"/>
        <files mask="arm_add_q31.c" hidden="true"/>
        <files mask="arm_add_q7.c" hidden="true"/>
        <files mask="arm_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_dot_prod_q7.c" hidden="true"/>
        <files mask="arm_mult_f32.c" hidden="true"/>
        <files mask="arm_mult_q15.c" hidden="true"/>
        <files mask="arm_mult_q31.c" hidden="true"/>
        <files mask="arm_mult_q7.c" hidden="true"/>
        <files mask="arm_negate_f32.c" hidden="true"/>
        <files mask="arm_negate_q15.c" hidden="true"/>
        <files mask="arm_negate_q31.c" hidden="true"/>
        <files mask="arm_negate_q7.c" hidden="true"/>
        <files mask="arm_offset_f32.c" hidden="true"/>
        <files mask="arm_offset_q15.c" hidden="true"/>
        <files mask="arm_offset_q31.c" hidden="true"/>
        <files mask="arm_offset_q7.c" hidden="true"/>
        <files mask="arm_scale_f32.c" hidden="true"/>
        <files mask="arm_scale_q15.c" hidden="true"/>
        <files mask="arm_scale_q31.c" hidden="true"/>
        <files mask="arm_scale_q7.c" hidden="true"/>
        <files mask="arm_shift_q15.c" hidden="true"/>
        <files mask="arm_shift_q31.c" hidden="true"/>
        <files mask="arm_shift_q7.c" hidden="true"/>
        <files mask="arm_sub_f32.c" hidden="true"/>
        <files mask="arm_sub_q15.c" hidden="true"/>
        <files mask="arm_sub_q31.c" hidden="true"/>
        <files mask="arm_sub_q7.c" hidden="true"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c" hidden="true"/>
        <files mask="arm_const_structs.c" hidden="true"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q15.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q31.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c" hidden="true"/>
        <files mask="arm_pid_init_q15.c" hidden="true"/>
        <files mask="arm_pid_init_q31.c" hidden="true"/>
        <files mask="arm_pid_reset_f32.c" hidden="true"/>
        <files mask="arm_pid_reset_q15.c" hidden="true"/>
        <files mask="arm_pid_reset_q31.c" hidden="true"/>
        <files mask="arm_sin_cos_f32.c" hidden="true"/>
        <files mask="arm_sin_cos_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_cos_f32.c" hidden="true"/>
        <files mask="arm_cos_q15.c" hidden="true"/>
        <files mask="arm_cos_q31.c" hidden="true"/>
        <files mask="arm_sin_f32.c" hidden="true"/>
        <files mask="arm_sin_q15.c" hidden="true"/>
        <files mask="arm_sin_q31.c" hidden="true"/>
        <files mask="arm_sqrt_q15.c" hidden="true"/>
        <files mask="arm_sqrt_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_conv_f32.c" hidden="true"/>
        <files mask="arm_conv_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_f32.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_q7.c" hidden="true"/>
        <files mask="arm_conv_q15.c" hidden="true"/>
        <files mask="arm_conv_q31.c" hidden="true"/>
        <files mask="arm_conv_q7.c" hidden="true"/>
        <files mask="arm_correlate_f32.c" hidden="true"/>
        <files mask="arm_correlate_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q31.c" hidden="true"/>
        <files mask="arm_correlate_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_opt_q7.c" hidden="true"/>
        <files mask="arm_correlate_q15.c" hidden="true"/>
        <files mask="arm_correlate_q31.c" hidden="true"/>
        <files mask="arm_correlate_q7.c" hidden="true"/>
        <files mask="arm_fir_decimate_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_q31.c" hidden="true"/>
        <files mask="arm_fir_f32.c" hidden="true"/>
        <files mask="arm_fir_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_init_f32.c" hidden="true"/>
        <files mask="arm_fir_init_q15.c" hidden="true"/>
        <files mask="arm_fir_init_q31.c" hidden="true"/>
        <files mask="arm_fir_init_q7.c" hidden="true"/>
        <files mask="arm_fir_interpolate_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_q31.c" hidden="true"/>
        <files mask="arm_fir_q15.c" hidden="true"/>
        <files mask="arm_fir_q31.c" hidden="true"/>
        <files mask="arm_fir_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_q7.c" hidden="true"/>
        <files mask="arm_iir_lattice_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_iir_lattice_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_q31.c" hidden="true"/>
        <files mask="arm_lms_f32.c" hidden="true"/>
        <files mask="arm_lms_init_f32.c" hidden="true"/>
        <files mask="arm_lms_init_q15.c" hidden="true"/>
        <files mask="arm_lms_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_q31.c" hidden="true"/>
        <files mask="arm_lms_q15.c" hidden="true"/>
        <files mask="arm_lms_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_mat_add_f32.c" hidden="true"/>
        <files mask="arm_mat_add_q15.c" hidden="true"/>
        <files mask="arm_mat_add_q31.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_init_f32.c" hidden="true"/>
        <files mask="arm_mat_init_q15.c" hidden="true"/>
        <files mask="arm_mat_init_q31.c" hidden="true"/>
        <files mask="arm_mat_inverse_f32.c" hidden="true"/>
        <files mask="arm_mat_inverse_f64.c" hidden="true"/>
        <files mask="arm_mat_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q31.c" hidden="true"/>
        <files mask="arm_mat_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_scale_f32.c" hidden="true"/>
        <files mask="arm_mat_scale_q15.c" hidden="true"/>
        <files mask="arm_mat_scale_q31.c" hidden="true"/>
        <files mask="arm_mat_sub_f32.c" hidden="true"/>
        <files mask="arm_mat_sub_q15.c" hidden="true"/>
        <files mask="arm_mat_sub_q31.c" hidden="true"/>
        <files mask="arm_mat_trans_f32.c" hidden="true"/>
        <files mask="arm_mat_trans_q15.c" hidden="true"/>
        <files mask="arm_mat_trans_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_max_f32.c" hidden="true"/>
        <files mask="arm_max_q15.c" hidden="true"/>
        <files mask="arm_max_q31.c" hidden="true"/>
        <files mask="arm_max_q7.c" hidden="true"/>
        <files mask="arm_mean_f32.c" hidden="true"/>
        <files mask="arm_mean_q15.c" hidden="true"/>
        <files mask="arm_mean_q31.c" hidden="true"/>
        <files mask="arm_mean_q7.c" hidden="true"/>
        <files mask="arm_min_f32.c" hidden="true"/>
        <files mask="arm_min_q15.c" hidden="true"/>
        <files mask="arm_min_q31.c" hidden="true"/>
        <files mask="arm_min_q7.c" hidden="true"/>
        <files mask="arm_power_f32.c" hidden="true"/>
        <files mask="arm_power_q15.c" hidden="true"/>
        <files mask="arm_power_q31.c" hidden="true"/>
        <files mask="arm_power_q7.c" hidden="true"/>
        <files mask="arm_rms_f32.c" hidden="true"/>
        <files mask="arm_rms_q15.c" hidden="true"/>
        <files mask="arm_rms_q31.c" hidden="true"/>
        <files mask="arm_std_f32.c" hidden="true"/>
        <files mask="arm_std_q15.c" hidden="true"/>
        <files mask="arm_std_q31.c" hidden="true"/>
        <files mask="arm_var_f32.c" hidden="true"/>
        <files mask="arm_var_q15.c" hidden="true"/>
        <files mask="arm_var_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_copy_f32.c" hidden="true"/>
        <files mask="arm_copy_q15.c" hidden="true"/>
        <files mask="arm_copy_q31.c" hidden="true"/>
        <files mask="arm_copy_q7.c" hidden="true"/>
        <files mask="arm_fill_f32.c" hidden="true"/>
        <files mask="arm_fill_q15.c" hidden="true"/>
        <files mask="arm_fill_q31.c" hidden="true"/>
        <files mask="arm_fill_q7.c" hidden="true"/>
        <files mask="arm_float_to_q15.c" hidden="true"/>
        <files mask="arm_float_to_q31.c" hidden="true"/>
        <files mask="arm_float_to_q7.c" hidden="true"/>
        <files mask="arm_q15_to_float.c" hidden="true"/>
        <files mask="arm_q15_to_q31.c" hidden="true"/>
        <files mask="arm_q15_to_q7.c" hidden="true"/>
        <files mask="arm_q31_to_float.c" hidden="true"/>
        <files mask="arm_q31_to_q15.c" hidden="true"/>
        <files mask="arm_q31_to_q7.c" hidden="true"/>
        <files mask="arm_q7_to_float.c" hidden="true"/>
        <files mask="arm_q7_to_q15.c" hidden="true"/>
        <files mask="arm_q7_to_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c" hidden="true"/>
        <files mask="arm_bitreversal2.c" hidden="true"/>
        <files mask="arm_cfft_f32.c" hidden="true"/>
        <files mask="arm_cfft_q15.c" hidden="true"/>
        <files mask="arm_cfft_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix8_f32.c" hidden="true"/>
        <files mask="arm_dct4_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_q15.c" hidden="true"/>
        <files mask="arm_dct4_init_q31.c" hidden="true"/>
        <files mask="arm_dct4_q15.c" hidden="true"/>
        <files mask="arm_dct4_q31.c" hidden="true"/>
        <files mask="arm_rfft_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_init_q15.c" hidden="true"/>
        <files mask="arm_rfft_init_q31.c" hidden="true"/>
        <files mask="arm_rfft_q15.c" hidden="true"/>
        <files mask="arm_rfft_q31.c" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MKV31F25612" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.1" full_name="CMSIS Device API OSTick" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MKV31F25612" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.1.3" full_name="CMSIS Device API RTOS2" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MKV31F25612" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver CAN" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Common.MKV31F25612" name="CMSIS_Driver_Common" brief="Access to #include Driver_Common.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Common" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MKV31F25612" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet Common" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MKV31F25612" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet MAC" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MKV31F25612" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet PHY" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MKV31F25612" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Flash" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MKV31F25612" name="NXP_CMSIS_Driver_GPIO" brief="NXP Standardized GPIO Driver aligned with CMSIS style." version="2.0.0" full_name="NXP CMSIS Driver GPIO" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MKV31F25612" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver I2C" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MKV31F25612" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver MCI" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MKV31F25612" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver NAND" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MKV31F25612" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.1.0" full_name="CMSIS Driver SAI" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MKV31F25612" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver SPI" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MKV31F25612" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USART" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB.MKV31F25612" name="CMSIS_Driver_USB_Common" brief="Access to #include Driver_USB.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Common" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MKV31F25612" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Device" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MKV31F25612" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Host" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MKV31F25612" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.0.0" full_name="CMSIS Driver WiFi" devices="MKV31F256xxx12" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MKV31F25612" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="5.3.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="core0_MKV31F256xxx12">
        <files mask="core_cm4.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="CMSIS_files.MKV31F25612" name="CMSIS" brief="CMSIS (Cortex Microcontroller Software Interface Standard)" version="5.6.0" full_name="CMSIS" devices="MKV31F256xxx12" user_visible="false" type="container" package_base_path="CMSIS" project_base_path="CMSIS">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_WiFi.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/DriverTemplates" type="src">
    <files mask="Driver_SPI.c"/>
    <files mask="Driver_Flash.c"/>
    <files mask="Driver_USART.c"/>
    <files mask="Driver_SAI.c"/>
    <files mask="Driver_Storage.c"/>
    <files mask="Driver_I2C.c"/>
    <files mask="Driver_ETH_PHY.c"/>
    <files mask="Driver_ETH_MAC.c"/>
    <files mask="Driver_CAN.c"/>
    <files mask="Driver_MCI.c"/>
    <files mask="Driver_USBH.c"/>
    <files mask="Driver_USBD.c"/>
  </source>
  <source relative_path="./" type="other">
    <files mask="CMSIS.yml"/>
    <files mask="CMSIS_v2.yml"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="LICENSE.txt"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="src">
    <files mask="arm_var_q15.c"/>
    <files mask="arm_min_q31.c"/>
    <files mask="arm_mean_f32.c"/>
    <files mask="arm_max_q7.c"/>
    <files mask="arm_max_f32.c"/>
    <files mask="arm_var_f32.c"/>
    <files mask="arm_power_q7.c"/>
    <files mask="arm_rms_f32.c"/>
    <files mask="arm_max_q31.c"/>
    <files mask="arm_max_q15.c"/>
    <files mask="arm_mean_q7.c"/>
    <files mask="arm_power_f32.c"/>
    <files mask="arm_min_q7.c"/>
    <files mask="arm_std_q15.c"/>
    <files mask="arm_min_f32.c"/>
    <files mask="arm_min_q15.c"/>
    <files mask="StatisticsFunctions.c"/>
    <files mask="arm_std_q31.c"/>
    <files mask="arm_rms_q31.c"/>
    <files mask="arm_mean_q15.c"/>
    <files mask="arm_std_f32.c"/>
    <files mask="arm_power_q15.c"/>
    <files mask="arm_mean_q31.c"/>
    <files mask="arm_rms_q15.c"/>
    <files mask="arm_power_q31.c"/>
    <files mask="arm_var_q31.c"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="src">
    <files mask="arm_cos_q31.c"/>
    <files mask="FastMathFunctions.c"/>
    <files mask="arm_sin_q31.c"/>
    <files mask="arm_sqrt_q15.c"/>
    <files mask="arm_cos_q15.c"/>
    <files mask="arm_sin_f32.c"/>
    <files mask="arm_sin_q15.c"/>
    <files mask="arm_cos_f32.c"/>
    <files mask="arm_sqrt_q31.c"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="src">
    <files mask="arm_cfft_radix2_f32.c"/>
    <files mask="arm_cfft_radix8_f32.c"/>
    <files mask="arm_cfft_radix2_q15.c"/>
    <files mask="arm_cfft_radix4_init_f32.c"/>
    <files mask="arm_cfft_radix4_init_q15.c"/>
    <files mask="arm_cfft_radix2_init_q15.c"/>
    <files mask="arm_rfft_init_f32.c"/>
    <files mask="arm_rfft_fast_f32.c"/>
    <files mask="arm_rfft_init_q31.c"/>
    <files mask="arm_dct4_q15.c"/>
    <files mask="arm_dct4_init_q31.c"/>
    <files mask="arm_cfft_radix2_init_f32.c"/>
    <files mask="arm_dct4_init_q15.c"/>
    <files mask="arm_dct4_q31.c"/>
    <files mask="arm_rfft_q15.c"/>
    <files mask="arm_cfft_radix4_q31.c"/>
    <files mask="arm_cfft_radix2_init_q31.c"/>
    <files mask="TransformFunctions.c"/>
    <files mask="arm_cfft_radix4_q15.c"/>
    <files mask="arm_bitreversal.c"/>
    <files mask="arm_rfft_init_q15.c"/>
    <files mask="arm_rfft_q31.c"/>
    <files mask="arm_bitreversal2.c"/>
    <files mask="arm_rfft_fast_init_f32.c"/>
    <files mask="arm_cfft_radix2_q31.c"/>
    <files mask="arm_dct4_f32.c"/>
    <files mask="arm_cfft_f32.c"/>
    <files mask="arm_rfft_f32.c"/>
    <files mask="arm_cfft_radix4_init_q31.c"/>
    <files mask="arm_cfft_q31.c"/>
    <files mask="arm_cfft_q15.c"/>
    <files mask="arm_cfft_radix4_f32.c"/>
    <files mask="arm_dct4_init_f32.c"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="asm_include">
    <files mask="arm_bitreversal2.S"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="src">
    <files mask="arm_iir_lattice_q15.c"/>
    <files mask="arm_iir_lattice_init_q15.c"/>
    <files mask="arm_fir_interpolate_q15.c"/>
    <files mask="arm_correlate_fast_q15.c"/>
    <files mask="arm_lms_norm_init_q15.c"/>
    <files mask="arm_fir_sparse_f32.c"/>
    <files mask="arm_fir_interpolate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
    <files mask="arm_iir_lattice_init_q31.c"/>
    <files mask="arm_fir_decimate_q31.c"/>
    <files mask="arm_fir_interpolate_q31.c"/>
    <files mask="arm_fir_decimate_init_f32.c"/>
    <files mask="arm_correlate_fast_opt_q15.c"/>
    <files mask="arm_lms_q31.c"/>
    <files mask="arm_lms_init_f32.c"/>
    <files mask="arm_fir_sparse_q7.c"/>
    <files mask="arm_conv_fast_opt_q15.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
    <files mask="arm_biquad_cascade_df1_init_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
    <files mask="arm_iir_lattice_f32.c"/>
    <files mask="arm_fir_lattice_f32.c"/>
    <files mask="arm_conv_partial_opt_q15.c"/>
    <files mask="arm_iir_lattice_q31.c"/>
    <files mask="arm_correlate_fast_q31.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
    <files mask="arm_conv_f32.c"/>
    <files mask="arm_fir_sparse_q15.c"/>
    <files mask="arm_fir_sparse_init_q7.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_f32.c"/>
    <files mask="arm_fir_sparse_init_q31.c"/>
    <files mask="arm_fir_sparse_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_q15.c"/>
    <files mask="arm_fir_lattice_q15.c"/>
    <files mask="arm_fir_decimate_init_q15.c"/>
    <files mask="arm_conv_partial_fast_opt_q15.c"/>
    <files mask="arm_fir_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
    <files mask="arm_conv_fast_q15.c"/>
    <files mask="arm_fir_fast_q15.c"/>
    <files mask="arm_conv_q7.c"/>
    <files mask="arm_fir_q15.c"/>
    <files mask="arm_correlate_q15.c"/>
    <files mask="arm_lms_init_q15.c"/>
    <files mask="arm_conv_q15.c"/>
    <files mask="arm_conv_partial_q7.c"/>
    <files mask="arm_lms_f32.c"/>
    <files mask="arm_lms_norm_q15.c"/>
    <files mask="arm_fir_sparse_init_f32.c"/>
    <files mask="arm_lms_norm_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_q15.c"/>
    <files mask="arm_conv_partial_fast_q15.c"/>
    <files mask="arm_fir_init_f32.c"/>
    <files mask="arm_fir_decimate_f32.c"/>
    <files mask="arm_fir_lattice_init_q15.c"/>
    <files mask="arm_correlate_opt_q15.c"/>
    <files mask="arm_fir_sparse_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f32.c"/>
    <files mask="arm_fir_init_q7.c"/>
    <files mask="arm_fir_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_f32.c"/>
    <files mask="arm_conv_opt_q7.c"/>
    <files mask="arm_lms_init_q31.c"/>
    <files mask="arm_fir_fast_q31.c"/>
    <files mask="arm_conv_partial_f32.c"/>
    <files mask="arm_biquad_cascade_df1_q15.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
    <files mask="arm_lms_norm_q31.c"/>
    <files mask="arm_conv_partial_q15.c"/>
    <files mask="arm_conv_opt_q15.c"/>
    <files mask="arm_fir_decimate_q15.c"/>
    <files mask="arm_iir_lattice_init_f32.c"/>
    <files mask="arm_fir_lattice_init_f32.c"/>
    <files mask="arm_fir_decimate_fast_q31.c"/>
    <files mask="arm_fir_f32.c"/>
    <files mask="arm_fir_decimate_init_q31.c"/>
    <files mask="arm_conv_q31.c"/>
    <files mask="arm_lms_norm_f32.c"/>
    <files mask="arm_conv_partial_fast_q31.c"/>
    <files mask="arm_fir_lattice_init_q31.c"/>
    <files mask="arm_fir_init_q31.c"/>
    <files mask="arm_lms_norm_init_f32.c"/>
    <files mask="arm_correlate_opt_q7.c"/>
    <files mask="arm_fir_lattice_q31.c"/>
    <files mask="arm_conv_partial_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f64.c"/>
    <files mask="arm_biquad_cascade_df1_f32.c"/>
    <files mask="arm_lms_q15.c"/>
    <files mask="arm_correlate_q31.c"/>
    <files mask="arm_correlate_q7.c"/>
    <files mask="arm_fir_q7.c"/>
    <files mask="arm_conv_fast_q31.c"/>
    <files mask="arm_conv_partial_opt_q7.c"/>
    <files mask="arm_fir_decimate_fast_q15.c"/>
    <files mask="arm_fir_interpolate_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_q31.c"/>
    <files mask="FilteringFunctions.c"/>
    <files mask="arm_correlate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="src">
    <files mask="arm_sin_cos_f32.c"/>
    <files mask="ControllerFunctions.c"/>
    <files mask="arm_pid_reset_q31.c"/>
    <files mask="arm_pid_init_q15.c"/>
    <files mask="arm_sin_cos_q31.c"/>
    <files mask="arm_pid_reset_f32.c"/>
    <files mask="arm_pid_reset_q15.c"/>
    <files mask="arm_pid_init_f32.c"/>
    <files mask="arm_pid_init_q31.c"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="src">
    <files mask="arm_mat_mult_f32.c"/>
    <files mask="arm_mat_mult_fast_q31.c"/>
    <files mask="arm_mat_init_q15.c"/>
    <files mask="arm_mat_mult_fast_q15.c"/>
    <files mask="arm_mat_trans_q15.c"/>
    <files mask="arm_mat_cmplx_mult_q31.c"/>
    <files mask="arm_mat_mult_q31.c"/>
    <files mask="arm_mat_init_f32.c"/>
    <files mask="arm_mat_inverse_f32.c"/>
    <files mask="arm_mat_scale_q31.c"/>
    <files mask="arm_mat_cmplx_mult_f32.c"/>
    <files mask="arm_mat_sub_q15.c"/>
    <files mask="arm_mat_scale_f32.c"/>
    <files mask="arm_mat_sub_f32.c"/>
    <files mask="arm_mat_add_q31.c"/>
    <files mask="arm_mat_add_f32.c"/>
    <files mask="MatrixFunctions.c"/>
    <files mask="arm_mat_mult_q15.c"/>
    <files mask="arm_mat_trans_q31.c"/>
    <files mask="arm_mat_scale_q15.c"/>
    <files mask="arm_mat_sub_q31.c"/>
    <files mask="arm_mat_inverse_f64.c"/>
    <files mask="arm_mat_init_q31.c"/>
    <files mask="arm_mat_trans_f32.c"/>
    <files mask="arm_mat_cmplx_mult_q15.c"/>
    <files mask="arm_mat_add_q15.c"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="src">
    <files mask="CommonTables.c"/>
    <files mask="arm_common_tables.c"/>
    <files mask="arm_const_structs.c"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="src">
    <files mask="SupportFunctions.c"/>
    <files mask="arm_fill_q7.c"/>
    <files mask="arm_q15_to_q7.c"/>
    <files mask="arm_copy_q15.c"/>
    <files mask="arm_copy_f32.c"/>
    <files mask="arm_q7_to_q15.c"/>
    <files mask="arm_q31_to_q15.c"/>
    <files mask="arm_copy_q7.c"/>
    <files mask="arm_q15_to_float.c"/>
    <files mask="arm_q7_to_float.c"/>
    <files mask="arm_float_to_q15.c"/>
    <files mask="arm_q15_to_q31.c"/>
    <files mask="arm_fill_f32.c"/>
    <files mask="arm_float_to_q7.c"/>
    <files mask="arm_fill_q31.c"/>
    <files mask="arm_q7_to_q31.c"/>
    <files mask="arm_q31_to_float.c"/>
    <files mask="arm_copy_q31.c"/>
    <files mask="arm_fill_q15.c"/>
    <files mask="arm_q31_to_q7.c"/>
    <files mask="arm_float_to_q31.c"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="src">
    <files mask="arm_cmplx_mag_squared_f32.c"/>
    <files mask="arm_cmplx_conj_f32.c"/>
    <files mask="arm_cmplx_mag_q31.c"/>
    <files mask="arm_cmplx_conj_q31.c"/>
    <files mask="arm_cmplx_dot_prod_f32.c"/>
    <files mask="arm_cmplx_mag_q15.c"/>
    <files mask="arm_cmplx_mag_f32.c"/>
    <files mask="arm_cmplx_dot_prod_q31.c"/>
    <files mask="arm_cmplx_dot_prod_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q15.c"/>
    <files mask="arm_cmplx_mag_squared_q15.c"/>
    <files mask="arm_cmplx_conj_q15.c"/>
    <files mask="arm_cmplx_mult_real_q31.c"/>
    <files mask="arm_cmplx_mult_cmplx_f32.c"/>
    <files mask="ComplexMathFunctions.c"/>
    <files mask="arm_cmplx_mag_squared_q31.c"/>
    <files mask="arm_cmplx_mult_real_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q31.c"/>
    <files mask="arm_cmplx_mult_real_f32.c"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="src">
    <files mask="arm_mult_f32.c"/>
    <files mask="arm_dot_prod_q31.c"/>
    <files mask="arm_sub_f32.c"/>
    <files mask="arm_sub_q15.c"/>
    <files mask="arm_shift_q7.c"/>
    <files mask="arm_abs_q7.c"/>
    <files mask="arm_abs_q31.c"/>
    <files mask="arm_mult_q31.c"/>
    <files mask="arm_dot_prod_f32.c"/>
    <files mask="arm_offset_q31.c"/>
    <files mask="arm_shift_q15.c"/>
    <files mask="arm_shift_q31.c"/>
    <files mask="arm_negate_q7.c"/>
    <files mask="arm_add_q15.c"/>
    <files mask="arm_add_q7.c"/>
    <files mask="arm_offset_f32.c"/>
    <files mask="arm_dot_prod_q15.c"/>
    <files mask="arm_mult_q7.c"/>
    <files mask="arm_dot_prod_q7.c"/>
    <files mask="arm_abs_f32.c"/>
    <files mask="arm_negate_q15.c"/>
    <files mask="arm_scale_q15.c"/>
    <files mask="arm_mult_q15.c"/>
    <files mask="arm_add_q31.c"/>
    <files mask="arm_scale_q7.c"/>
    <files mask="arm_offset_q7.c"/>
    <files mask="BasicMathFunctions.c"/>
    <files mask="arm_sub_q31.c"/>
    <files mask="arm_sub_q7.c"/>
    <files mask="arm_negate_f32.c"/>
    <files mask="arm_abs_q15.c"/>
    <files mask="arm_scale_f32.c"/>
    <files mask="arm_add_f32.c"/>
    <files mask="arm_offset_q15.c"/>
    <files mask="arm_negate_q31.c"/>
    <files mask="arm_scale_q31.c"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
</component>-->
    <component id="COPY_BSD_License.MKV31F25612" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="MKV31F256xxx12" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.MKV31F25612.MKV31F25612" name="MKV31F25612" brief="Devices_project_template MKV31F25612" version="1.0.0" full_name="Devices_project_template MKV31F25612" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MKV31F25612/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKV31F25612"/>
          <component_dependency value="component.uart_adapter.MKV31F25612"/>
          <component_dependency value="platform.drivers.port.MKV31F25612"/>
          <component_dependency value="platform.drivers.gpio.MKV31F25612"/>
          <component_dependency value="platform.drivers.smc.MKV31F25612"/>
          <component_dependency value="device.MKV31F25612_startup.MKV31F25612"/>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.clock.MKV31F25612"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MKV31F25612"/>
              <component_dependency value="component.serial_manager.MKV31F25612"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MKV31F25612"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MKV31F25612" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MKV31F25612/template" project_base_path="board">
      <dependencies>
        <component_dependency value="platform.drivers.edma.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.MKV31F25612" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="MKV31F256xxx12" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.button.MKV31F25612" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.timer_manager.MKV31F25612"/>
          <component_dependency value="component.gpio_adapter.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MKV31F25612" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.osa.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.crc_adapter.MKV31F25612" name="crc_adapter" brief="Component crc_adapter" version="1.0.0" full_name="Component crc_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.crc.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.flash_adapter.MKV31F25612" name="flash_adapter" brief="Component flash_adapter" version="1.0.0" full_name="Component flash_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.flash.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flash.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.ftm_adapter.MKV31F25612" name="ftm_adapter" brief="Component ftm_adapter" version="1.0.0" full_name="Component ftm_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.ftm.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ftm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.gpio_adapter.MKV31F25612" name="gpio_adapter" brief="Component gpio_adapter" version="1.0.0" full_name="Component gpio_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpio.MKV31F25612"/>
          <component_dependency value="platform.drivers.port.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.led.MKV31F25612" name="led" brief="Component led" version="1.0.0" full_name="Component led" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.timer_manager.MKV31F25612"/>
          <component_dependency value="component.gpio_adapter.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MKV31F25612" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.MKV31F25612" name="log" brief="Component log" version="1.0.0" full_name="Component log" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="utility.debug_console.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.MKV31F25612" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.log.MKV31F25612"/>
          <component_dependency value="utility.debug_console.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MKV31F25612" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.log.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.MKV31F25612" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.lptmr.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MKV31F25612" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.lpuart.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_dma_adapter.MKV31F25612" name="lpuart_dma_adapter" brief="Component lpuart_dma_adapter" version="1.0.0" full_name="lpuart_dma_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <defines>
        <define name="HAL_UART_DMA_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MKV31F25612"/>
          <component_dependency value="component.timer_manager.MKV31F25612"/>
          <component_dependency value="platform.drivers.lpuart_edma.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MKV31F25612" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MKV31F25612" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MKV31F25612" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MKV31F25612" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MKV31F25612" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MKV31F25612" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MKV31F25612" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MKV31F25612" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MKV31F25612" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_free_rtos.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_thread.MKV31F25612" name="osa thread" brief="Component osa thread" version="1.0.0" full_name="Component osa thread" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
        <files mask="fsl_os_abstraction_threadx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_threadx.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MKV31F25612" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="utility.debug_console.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pit_adapter.MKV31F25612" name="pit_adapter" brief="Component pit_adapter" version="1.0.0" full_name="Component pit_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.pit.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_ftm_adapter.MKV31F25612" name="pwm_ftm_adapter" brief="Component pwm_ftm_adapter" version="1.0.0" full_name="Component pwm_ftm_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.ftm.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_ftm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.rnga_adapter.MKV31F25612" name="rnga_adapter" brief="Component rnga_adapter" version="1.0.0" full_name="Component rnga_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.rnga.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rnga.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MKV31F25612" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MKV31F25612"/>
            <component_dependency value="component.serial_manager_swo.MKV31F25612"/>
            <component_dependency value="component.serial_manager_virtual.MKV31F25612"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MKV31F25612" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.serial_manager.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MKV31F25612" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.uart_adapter.MKV31F25612"/>
          <component_dependency value="component.serial_manager.MKV31F25612"/>
          <any_of>
            <component_dependency value="platform.drivers.uart.MKV31F25612"/>
            <component_dependency value="platform.drivers.lpuart.MKV31F25612"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MKV31F25612" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MKV31F25612"/>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.MKV31F25612" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MKV31F25612" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MKV31F25612" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
          <any_of>
            <component_dependency value="component.ftm_adapter.MKV31F25612"/>
            <component_dependency value="component.pit_adapter.MKV31F25612"/>
            <component_dependency value="component.lptmr_adapter.MKV31F25612"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.uart_adapter.MKV31F25612" name="uart_adapter" brief="Component uart_adapter" version="1.0.0" full_name="uart_adapter" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.uart.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MKV31F25612_CMSIS.MKV31F25612" name="MKV31F25612_CMSIS" brief="Device MKV31F25612_cmsis" version="1.0.0" full_name="Device MKV31F25612_cmsis" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="CMSIS_Include" package_base_path="devices/MKV31F25612" project_base_path="device">
      <dependencies>
        <component_dependency value="CMSIS_Include_core_cm.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="MKV31F25612.h"/>
        <files mask="MKV31F25612_features.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MKV31F25612_debugger.MKV31F25612" name="MKV31F25612_debugger" brief="Device MKV31F25612_debugger" version="1.0.0" full_name="Device MKV31F25612_debugger" devices="MKV31F256xxx12" user_visible="true" type="debugger" package_base_path="devices/MKV31F25612" project_base_path="MKV31F25612">
      <source relative_path="./" type="xml">
        <files mask="MKV31F25612.xml"/>
      </source>
    </component>
    <component id="platform.devices.MKV31F25612_linker.MKV31F25612" name="MKV31F25612_linker" brief="Device MKV31F25612_linker" version="1.0.0" full_name="Device MKV31F25612_linker" devices="MKV31F256xxx12" user_visible="true" type="linker" package_base_path="devices/MKV31F25612" project_base_path="MKV31F25612"/>
    <component id="device.MKV31F25612_startup.MKV31F25612" name="MKV31F25612_startup" brief="Device MKV31F25612_startup" version="1.1.0" full_name="Device MKV31F25612_startup" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MKV31F25612" project_base_path="startup">
      <dependencies>
        <component_dependency value="device.MKV31F25612_system.MKV31F25612"/>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c">
        <files mask="startup_mkv31f25612.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp">
        <files mask="startup_mkv31f25612.cpp"/>
      </source>
    </component>
    <component id="device.MKV31F25612_system.MKV31F25612" name="MKV31F25612_system" brief="Device MKV31F25612_system" version="1.0.0" full_name="Device MKV31F25612_system" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="CMSIS_Include" package_base_path="devices/MKV31F25612" project_base_path="device">
      <dependencies>
        <component_dependency value="device.MKV31F25612_CMSIS.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_MKV31F25612.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_MKV31F25612.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.adc16.MKV31F25612" name="adc" brief="ADC16 Driver" version="2.2.0" full_name="ADC16 Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adc16.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc16.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MKV31F25612" name="clock" brief="Clock Driver" version="2.5.1" full_name="Clock Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cmp.MKV31F25612" name="cmp" brief="CMP Driver" version="2.0.2" full_name="CMP Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cmp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dspi_cmsis.MKV31F25612" name="dspi_cmsis" brief="DSPI CMSIS Driver" version="2.3.0" full_name="DSPI CMSIS Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKV31F25612/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dspi_edma.MKV31F25612"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MKV31F25612"/>
          <component_dependency value="RTE_Device.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dspi_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_cmsis.MKV31F25612" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.2.0" full_name="I2C CMSIS Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKV31F25612/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c_edma.MKV31F25612"/>
          <component_dependency value="platform.drivers.i2c.MKV31F25612"/>
          <component_dependency value="CMSIS_Driver_Include.I2C.MKV31F25612"/>
          <component_dependency value="RTE_Device.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MKV31F25612" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.2.0" full_name="LPUART CMSIS Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKV31F25612/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart_edma.MKV31F25612"/>
          <component_dependency value="platform.drivers.lpuart.MKV31F25612"/>
          <component_dependency value="CMSIS_Driver_Include.USART.MKV31F25612"/>
          <component_dependency value="RTE_Device.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_cmsis.MKV31F25612" name="uart_cmsis" brief="UART CMSIS Driver" version="2.1.0" full_name="UART CMSIS Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="CMSIS_driver" package_base_path="devices/MKV31F25612/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart_edma.MKV31F25612"/>
          <component_dependency value="platform.drivers.uart.MKV31F25612"/>
          <component_dependency value="CMSIS_Driver_Include.USART.MKV31F25612"/>
          <component_dependency value="RTE_Device.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MKV31F25612" name="common" brief="COMMON Driver" version="2.3.0" full_name="COMMON Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MKV31F25612"/>
          <component_dependency value="device.MKV31F25612_CMSIS.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="core0_MKV31F256xxx12">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="core0_MKV31F256xxx12">
        <files mask="fsl_common_arm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.crc.MKV31F25612" name="crc" brief="CRC Driver" version="2.0.3" full_name="CRC Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dac.MKV31F25612" name="dac" brief="DAC Driver" version="2.0.2" full_name="DAC Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dac.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dac.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmamux.MKV31F25612" name="dmamux" brief="DMAMUX Driver" version="2.0.5" full_name="DMAMUX Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dspi.MKV31F25612" name="dspi" brief="DSPI Driver" version="2.2.4" full_name="DSPI Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dspi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dspi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dspi_edma.MKV31F25612" name="dspi_edma" brief="DSPI Driver" version="2.2.4" full_name="DSPI_EDMA Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dspi.MKV31F25612"/>
          <component_dependency value="platform.drivers.edma.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dspi_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dspi_freertos.MKV31F25612" name="dspi_freertos" brief="DSPI Driver" version="2.2.4" full_name="DSPI Freertos Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dspi.MKV31F25612"/>
          <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dspi_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma.MKV31F25612" name="edma" brief="EDMA Driver" version="2.4.2" full_name="EDMA Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.dmamux.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.MKV31F25612" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flash.MKV31F25612" name="flash" brief="Flash Driver" version="3.0.0" full_name="Flash Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ftfx_adapter.h"/>
        <files mask="fsl_ftfx_utilities.h"/>
        <files mask="fsl_ftfx_features.h"/>
        <files mask="fsl_ftfx_controller.h"/>
        <files mask="fsl_ftfx_flash.h"/>
        <files mask="fsl_ftfx_cache.h"/>
        <files mask="fsl_ftfx_flexnvm.h"/>
        <files mask="fsl_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ftfx_controller.c"/>
        <files mask="fsl_ftfx_flash.c"/>
        <files mask="fsl_ftfx_cache.c"/>
        <files mask="fsl_ftfx_flexnvm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ftm.MKV31F25612" name="ftm" brief="FTM Driver" version="2.4.1" full_name="FTM Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ftm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ftm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpio.MKV31F25612" name="gpio" brief="GPIO Driver" version="2.5.3" full_name="GPIO Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c.MKV31F25612" name="i2c" brief="I2C Driver" version="2.0.9" full_name="I2C Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_edma.MKV31F25612" name="i2c_edma" brief="I2C Driver" version="2.0.9" full_name="I2C EDMA Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c.MKV31F25612"/>
          <component_dependency value="platform.drivers.edma.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2c_freertos.MKV31F25612" name="i2c_freertos" brief="I2C Driver" version="2.0.9" full_name="I2C FREERTOS Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i2c.MKV31F25612"/>
          <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.llwu.MKV31F25612" name="llwu" brief="LLWU Driver" version="2.0.5" full_name="LLWU Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_llwu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_llwu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.MKV31F25612" name="lptmr" brief="LPTMR Driver" version="2.1.1" full_name="LPTMR Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MKV31F25612" name="lpuart" brief="LPUART Driver" version="2.5.1" full_name="LPUART Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MKV31F25612" name="lpuart_edma" brief="LPUART Driver" version="2.5.0" full_name="LPUART Edma Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MKV31F25612"/>
          <component_dependency value="platform.drivers.lpuart.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MKV31F25612" name="lpuart_freertos" brief="LPUART Driver" version="2.5.0" full_name="LPUART Freertos Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MKV31F25612"/>
          <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdb.MKV31F25612" name="pdb" brief="PDB Driver" version="2.0.4" full_name="PDB Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pdb.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdb.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pit.MKV31F25612" name="pit" brief="PIT Driver" version="2.0.4" full_name="PIT Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pit.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pmc.MKV31F25612" name="pmc" brief="PMC Driver" version="2.0.3" full_name="PMC Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pmc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pmc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.port.MKV31F25612" name="port" brief="PORT Driver" version="2.2.0" full_name="PORT Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rcm.MKV31F25612" name="rcm" brief="RCM Driver" version="2.0.4" full_name="RCM Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_rcm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rcm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rnga.MKV31F25612" name="rnga" brief="RNGA Driver" version="2.0.2" full_name="RNGA Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_rnga.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rnga.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sim.MKV31F25612" name="sim" brief="SIM Driver" version="2.1.3" full_name="SIM Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sim.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smc.MKV31F25612" name="smc" brief="SMC Driver" version="2.0.7" full_name="SMC Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart.MKV31F25612" name="uart" brief="UART Driver" version="2.5.1" full_name="UART Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_edma.MKV31F25612" name="uart_edma" brief="UART Driver" version="2.5.0" full_name="UART EDMA Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKV31F25612"/>
          <component_dependency value="platform.drivers.edma.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.uart_freertos.MKV31F25612" name="uart_freertos" brief="UART Driver" version="2.5.0" full_name="UART FREERTOS Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.uart.MKV31F25612"/>
          <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.vref.MKV31F25612" name="vref" brief="VREF Driver" version="2.1.2" full_name="VREF Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_vref.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_vref.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog.MKV31F25612" name="wdog" brief="WDOG Driver" version="2.0.1" full_name="WDOG Driver" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="driver" package_base_path="devices/MKV31F25612/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.MKV31F25612" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="MKV31F256xxx12" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.fatfs.MKV31F25612" name="fatfs" brief="FatFs" version="0.14" full_name="FAT File System stack" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <any_of>
          <all>
            <component_dependency value="middleware.fatfs.template_ram.MKV31F25612"/>
            <component_dependency value="middleware.fatfs.ram.MKV31F25612"/>
          </all>
          <all>
            <component_dependency value="middleware.fatfs.template_sdspi.MKV31F25612"/>
            <component_dependency value="middleware.fatfs.sdspi.MKV31F25612"/>
          </all>
        </any_of>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MKV31F25612" name="ram" brief="FatFs_RAM" version="0.14" full_name="Fatfs RAM layer" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MKV31F25612"/>
          <component_dependency value="middleware.fatfs.template_ram.MKV31F25612"/>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sdspi.MKV31F25612" name="sdspi" brief="FatFs_SDSPI" version="0.14" full_name="Fatfs SDSPI layer" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MKV31F25612"/>
          <component_dependency value="middleware.fatfs.template_sdspi.MKV31F25612"/>
          <component_dependency value="middleware.sdmmc.sdspi.MKV31F25612"/>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
          <component_dependency value="platform.drivers.dspi.MKV31F25612"/>
          <component_dependency value="platform.drivers.gpio.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sdspi_disk" type="src">
        <files mask="fsl_sdspi_disk.c"/>
      </source>
      <source relative_path="source/fsl_sdspi_disk" type="c_include">
        <files mask="fsl_sdspi_disk.h"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sdspi_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MKV31F25612" name="fatfs_mmc" brief="FatFs template MMC" version="0.14" full_name="FatFs template configuration for MMC disk" devices="MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/mmc" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MKV31F25612" name="fatfs_nand" brief="FatFs template NAND" version="0.14" full_name="FatFs template configuration for NAND disk" devices="MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/nand" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MKV31F25612" name="fatfs_ram" brief="FatFs template RAM" version="0.14" full_name="FatFs template configuration for RAM disk" devices="MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/ram" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MKV31F25612" name="fatfs_sd" brief="FatFs template SD" version="0.14" full_name="FatFs template configuration for SD disk" devices="MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/sd/fatfs" project_base_path="source">
      <include_paths>
        <include_path relative_path="template/sd" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MKV31F25612" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.14" full_name="FatFs template configuration for SDSPI disk" devices="MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/sdspi" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MKV31F25612" name="fatfs_usb" brief="FatFs template USB" version="0.14" full_name="FatFs template configuration for USB disk" devices="MKV31F256xxx12" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template/usb" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.unused_files.MKV31F25612" name="unused_files" brief="fatfs files unused by projects" version="0.14" full_name="fatfs unused" devices="MKV31F256xxx12" user_visible="false" type="other" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents" type="doc">
        <files mask="00index_e.html" hidden="true"/>
        <files mask="css_e.css" hidden="true"/>
        <files mask="updates.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/doc" type="doc">
        <files mask="appnote.html" hidden="true"/>
        <files mask="chdir.html" hidden="true"/>
        <files mask="chdrive.html" hidden="true"/>
        <files mask="chmod.html" hidden="true"/>
        <files mask="close.html" hidden="true"/>
        <files mask="closedir.html" hidden="true"/>
        <files mask="config.html" hidden="true"/>
        <files mask="dinit.html" hidden="true"/>
        <files mask="dioctl.html" hidden="true"/>
        <files mask="dread.html" hidden="true"/>
        <files mask="dstat.html" hidden="true"/>
        <files mask="dwrite.html" hidden="true"/>
        <files mask="eof.html" hidden="true"/>
        <files mask="error.html" hidden="true"/>
        <files mask="expand.html" hidden="true"/>
        <files mask="fattime.html" hidden="true"/>
        <files mask="fdisk.html" hidden="true"/>
        <files mask="filename.html" hidden="true"/>
        <files mask="findfirst.html" hidden="true"/>
        <files mask="findnext.html" hidden="true"/>
        <files mask="forward.html" hidden="true"/>
        <files mask="getcwd.html" hidden="true"/>
        <files mask="getfree.html" hidden="true"/>
        <files mask="getlabel.html" hidden="true"/>
        <files mask="gets.html" hidden="true"/>
        <files mask="lseek.html" hidden="true"/>
        <files mask="mkdir.html" hidden="true"/>
        <files mask="mkfs.html" hidden="true"/>
        <files mask="mount.html" hidden="true"/>
        <files mask="open.html" hidden="true"/>
        <files mask="opendir.html" hidden="true"/>
        <files mask="printf.html" hidden="true"/>
        <files mask="putc.html" hidden="true"/>
        <files mask="puts.html" hidden="true"/>
        <files mask="rc.html" hidden="true"/>
        <files mask="read.html" hidden="true"/>
        <files mask="readdir.html" hidden="true"/>
        <files mask="rename.html" hidden="true"/>
        <files mask="sdir.html" hidden="true"/>
        <files mask="setcp.html" hidden="true"/>
        <files mask="setlabel.html" hidden="true"/>
        <files mask="sfatfs.html" hidden="true"/>
        <files mask="sfile.html" hidden="true"/>
        <files mask="sfileinfo.html" hidden="true"/>
        <files mask="size.html" hidden="true"/>
        <files mask="stat.html" hidden="true"/>
        <files mask="sync.html" hidden="true"/>
        <files mask="tell.html" hidden="true"/>
        <files mask="truncate.html" hidden="true"/>
        <files mask="unlink.html" hidden="true"/>
        <files mask="utime.html" hidden="true"/>
        <files mask="write.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="src">
        <files mask="app1.c" hidden="true"/>
        <files mask="app2.c" hidden="true"/>
        <files mask="app3.c" hidden="true"/>
        <files mask="app4.c" hidden="true"/>
        <files mask="app5.c" hidden="true"/>
        <files mask="app6.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="image">
        <files mask="f1.png" hidden="true"/>
        <files mask="f2.png" hidden="true"/>
        <files mask="f3.png" hidden="true"/>
        <files mask="f4.png" hidden="true"/>
        <files mask="f5.png" hidden="true"/>
        <files mask="f6.png" hidden="true"/>
        <files mask="f7.png" hidden="true"/>
        <files mask="funcs.png" hidden="true"/>
        <files mask="layers.png" hidden="true"/>
        <files mask="layers1.png" hidden="true"/>
        <files mask="layers2.png" hidden="true"/>
        <files mask="layers3.png" hidden="true"/>
        <files mask="modules.png" hidden="true"/>
        <files mask="rwtest1.png" hidden="true"/>
        <files mask="rwtest2.png" hidden="true"/>
        <files mask="rwtest3.png" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="archive">
        <files mask="mkfatimg.zip" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="other">
        <files mask="mkfs.xlsx" hidden="true"/>
      </source>
      <source exclude="true" relative_path="source" type="doc">
        <files mask="00history.txt" hidden="true"/>
        <files mask="00readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="source" type="c_include">
        <files mask="ffconf_template.h" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.MKV31F25612" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="202012.00.0" full_name="FreeRTOS kernel" devices="MKV31F256xxx12" user_visible="true" type="OS" package_base_path="rtos/freertos" project_base_path="freertos">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.extension.MKV31F25612"/>
          <component_dependency value="middleware.freertos-kernel.template.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="freertos_kernel" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source toolchain="mcuxpresso" compiler="compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM4F" type="src" device_cores="core0_MKV31F256xxx12">
        <files mask="port.c"/>
      </source>
      <source toolchain="mcuxpresso" compiler="compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM4F" type="c_include" device_cores="core0_MKV31F256xxx12">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="freertos_kernel/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM4F" toolchain="mcuxpresso" type="c_include" device_cores="core0_MKV31F256xxx12"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.armv8m.MKV31F25612" name="FreeRTOS port ARMv8M" brief="FreeRTOS port ARMv8M" version="202012.00.0" full_name="FreeRTOS port ARMv8M" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.doc.MKV31F25612" name="FreeRTOS doc" brief="FreeRTOS doc" version="202012.00.0" full_name="FreeRTOS doc" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="doc" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
        <files mask="mainpage.txt"/>
      </source>
      <source relative_path="doc/config" type="other">
        <files mask="ble"/>
        <files mask="common"/>
        <files mask="https"/>
        <files mask="main"/>
        <files mask="ota"/>
        <files mask="platform"/>
        <files mask="posix"/>
        <files mask="secure_sockets"/>
        <files mask="wifi"/>
      </source>
      <source relative_path="doc/config/html" type="doc">
        <files mask="footer.html"/>
        <files mask="header.html"/>
        <files mask="style.css"/>
      </source>
      <source relative_path="doc/config" type="xml">
        <files mask="layout_library.xml"/>
        <files mask="layout_main.xml"/>
      </source>
      <source relative_path="doc/extra_files/https" type="doc">
        <files mask="gettysburg.txt"/>
      </source>
      <source relative_path="doc/freertos_port_qual" type="doc">
        <files mask="FreeRTOS_Porting_Guide.pdf"/>
        <files mask="FreeRTOS_Qualification_Guide.pdf"/>
      </source>
      <source relative_path="doc" type="script">
        <files mask="generate_doc.sh"/>
      </source>
      <source relative_path="doc" type="other">
        <files mask="guidance.md"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="doc/guide" type="doc">
        <files mask="building.txt"/>
        <files mask="developer.txt"/>
        <files mask="style.txt"/>
      </source>
      <source relative_path="doc/lib" type="doc">
        <files mask="ble.txt"/>
        <files mask="https.txt"/>
        <files mask="platform.txt"/>
        <files mask="posix.txt"/>
        <files mask="secure_sockets.txt"/>
        <files mask="wifi.txt"/>
      </source>
      <source relative_path="doc/plantuml" type="other">
        <files mask="https_client_async_callback_order.pu"/>
        <files mask="RecyclableJobStatus.pu"/>
        <files mask="StaticJobStatus.pu"/>
        <files mask="taskpool_design_typicaloperation.pu"/>
      </source>
      <source relative_path="doc/plantuml" type="xml">
        <files mask="https_client_async_workflow.xml"/>
        <files mask="https_client_sync_workflow.xml"/>
      </source>
      <source relative_path="doc/plantuml/images" type="image">
        <files mask="BLE-architecture.png"/>
        <files mask="blediagram.png"/>
        <files mask="https_client_async_callback_order.png"/>
        <files mask="https_client_async_workflow.png"/>
        <files mask="https_client_sync_workflow.png"/>
        <files mask="mqtt_demo.png"/>
        <files mask="mqtt_design_typicaloperation.png"/>
        <files mask="RecyclableJobStatus.png"/>
        <files mask="shadow_demo.png"/>
        <files mask="StaticJobStatus.png"/>
        <files mask="taskpool_design_typicaloperation.png"/>
      </source>
      <source relative_path="doc/user_guide" type="doc">
        <files mask="global_config.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.MKV31F25612" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="202012.00.0" full_name="FreeRTOS NXP extension" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MKV31F25612" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="202012.00.0" full_name="FreeRTOS heap 1" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MKV31F25612" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="202012.00.0" full_name="FreeRTOS heap 2" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MKV31F25612" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="202012.00.0" full_name="FreeRTOS heap_3" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MKV31F25612" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="202012.00.0" full_name="FreeRTOS heap 4" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MKV31F25612" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="202012.00.0" full_name="FreeRTOS heap 5" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MKV31F25612" name="FreeRTOS MPU wrappers" brief="FreeRTOS MPU wrappers" version="202012.00.0" full_name="FreeRTOS MPU wrappers" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MKV31F25612"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.root_doc.MKV31F25612" name="Root FreeRTOS documents." brief="FreeRTOS root documents" version="202012.00.0" full_name="FreeRTOS root documents" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="CHANGELOG.md"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="directories.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.template.MKV31F25612" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="202012.00.0" full_name="FreeRTOS configuration template" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="project_template" package_base_path="rtos/freertos" project_base_path="freertos">
      <source exclude="true" relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source relative_path="template/ARM_CM4F" type="c_include" device_cores="core0_MKV31F256xxx12">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM4F" type="c_include" device_cores="core0_MKV31F256xxx12"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.unused.MKV31F25612" name="FreeRTOS unused" brief="FreeRTOS unused" version="202012.00.0" full_name="FreeRTOS unused" devices="MKV31F256xxx12" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="CODE_OF_CONDUCT.md"/>
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="freertos_kernel" type="other">
        <files mask="GitHub-FreeRTOS-Kernel-Home.url"/>
        <files mask="LICENSE.md"/>
        <files mask="Quick_Start_Guide.url"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="freertos_kernel" type="doc">
        <files mask="History.txt"/>
      </source>
      <source relative_path="freertos_kernel/include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMClang" type="doc">
        <files mask="Use-the-GCC-ports.txt"/>
      </source>
    </component>
    <component id="middleware.sdmmc.common.MKV31F25612" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" devices="MKV31F256xxx12" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="common" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" project_relative_path="src" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <include_paths>
        <include_path relative_path="common" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MKV31F25612" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" devices="MKV31F256xxx12" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="template/sdhc" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MKV31F25612" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" devices="MKV31F256xxx12" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="template/sdif" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdspi.MKV31F25612" name="sdspi" brief="Middleware sdmmc sdspi" version="2.2.1" full_name="SDMMC sdspi stack" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <component_dependency value="platform.drivers.dspi.MKV31F25612"/>
      </dependencies>
      <source relative_path="sdspi" project_relative_path="src" type="src">
        <files mask="fsl_sdspi.c"/>
      </source>
      <source relative_path="sdspi" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdspi.h"/>
      </source>
      <source relative_path="common" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
      <source relative_path="sdspi" project_relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="sdspi" project_relative_path="inc" type="c_include"/>
        <include_path relative_path="common" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MKV31F25612" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" devices="MKV31F256xxx12" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="template/usdhc" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MKV31F25612" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F25612/utilities" project_base_path="utilities"/>
    <component id="platform.utilities.assert.MKV31F25612" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F25612/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.MKV31F25612" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F25612/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MKV31F25612" name="debug_console" brief="Utility debug_console" version="1.0.0" full_name="Utility debug_console" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F25612/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MKV31F25612"/>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MKV31F25612" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F25612/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.uart_adapter.MKV31F25612"/>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.notifier.MKV31F25612" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F25612/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.MKV31F25612"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MKV31F25612" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="MKV31F256xxx12" device_cores="core0_MKV31F256xxx12" user_visible="true" type="utilities" package_base_path="devices/MKV31F25612/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MKV31F25612"/>
          <component_dependency value="component.lists.MKV31F25612"/>
          <component_dependency value="platform.drivers.common.MKV31F25612"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
