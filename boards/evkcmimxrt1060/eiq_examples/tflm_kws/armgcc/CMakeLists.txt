# CROSS COMPILER SETTING
SET(CMAKE_SYSTEM_NAME Generic)
CMAKE_MINIMUM_REQUIRED (VERSION 3.10.0)

# THE VERSION NUMBER
SET (MCUXPRESSO_CMAKE_FORMAT_MAJOR_VERSION 2)
SET (MCUXPRESSO_CMAKE_FORMAT_MINOR_VERSION 0)

include(ide_overrides.cmake OPTIONAL)

if(CMAKE_SCRIPT_MODE_FILE)
  message("${MCUXPRESSO_CMAKE_FORMAT_MAJOR_VERSION}")
  return()
endif()


# ENABLE ASM
ENABLE_LANGUAGE(ASM)

SET(CMAKE_STATIC_LIBRARY_PREFIX)
SET(CMAKE_STATIC_LIBRARY_SUFFIX)

SET(CMAKE_EXECUTABLE_LIBRARY_PREFIX)
SET(CMAKE_EXECUTABLE_LIBRARY_SUFFIX)

# CURRENT DIRECTORY
SET(ProjDirPath ${CMAKE_CURRENT_SOURCE_DIR})

SET(EXECUTABLE_OUTPUT_PATH ${ProjDirPath}/${CMAKE_BUILD_TYPE})
SET(LIBRARY_OUTPUT_PATH ${ProjDirPath}/${CMAKE_BUILD_TYPE})


project(tflm_kws)

set(MCUX_BUILD_TYPES flexspi_nor_sdram_release flexspi_nor_sdram_debug)

set(MCUX_SDK_PROJECT_NAME tflm_kws.elf)

if (NOT DEFINED SdkRootDirPath)
    SET(SdkRootDirPath ${ProjDirPath}/../../../../..)
endif()

include(${ProjDirPath}/flags.cmake)

include(${ProjDirPath}/config.cmake)

add_executable(${MCUX_SDK_PROJECT_NAME} 
"${ProjDirPath}/../pin_mux.c"
"${ProjDirPath}/../pin_mux.h"
"${ProjDirPath}/../source/demo_info.h"
"${ProjDirPath}/../source/model/get_top_n.cpp"
"${ProjDirPath}/../source/model/get_top_n.h"
"${ProjDirPath}/../source/model/model.h"
"${ProjDirPath}/../source/model/output_postproc.h"
"${ProjDirPath}/../source/audio/audio.h"
"${ProjDirPath}/../source/audio/kws_mfcc.cpp"
"${ProjDirPath}/../source/audio/kws_mfcc.hpp"
"${ProjDirPath}/../source/audio/mfcc.cpp"
"${ProjDirPath}/../source/audio/mfcc.hpp"
"${ProjDirPath}/../source/model/model.cpp"
"${ProjDirPath}/../source/model/output_postproc.cpp"
"${ProjDirPath}/../source/audio_data.h"
"${ProjDirPath}/../source/demo_config.h"
"${ProjDirPath}/../source/demo_info.cpp"
"${ProjDirPath}/../source/labels.h"
"${ProjDirPath}/../source/main.cpp"
"${ProjDirPath}/../source/model/model_data.h"
"${ProjDirPath}/../source/model/model_ds_cnn_ops_micro.cpp"
"${ProjDirPath}/../source/audio/audio_capture.cpp"
"${ProjDirPath}/../source/audio/eiq_audio_worker.h"
"${ProjDirPath}/../source/audio/eiq_micro.h"
"${ProjDirPath}/../source/audio/eiq_micro_conf.h"
"${ProjDirPath}/../source/audio/eiq_speaker.h"
"${ProjDirPath}/../source/audio/eiq_speaker_conf.h"
"${ProjDirPath}/../source/audio/eiq_audio_worker.c"
"${ProjDirPath}/../source/audio/eiq_micro.c"
"${ProjDirPath}/../source/audio/eiq_speaker.c"
"${ProjDirPath}/../source/audio/eiq_speaker_conf.c"
"${ProjDirPath}/../source/timer.h"
"${ProjDirPath}/../source/timer.c"
"${ProjDirPath}/../board_init.c"
"${ProjDirPath}/../board_init.h"
"${ProjDirPath}/../board.c"
"${ProjDirPath}/../board.h"
"${ProjDirPath}/../source/common/eiq_common.h"
"${ProjDirPath}/../source/common/eiq_iui.h"
"${ProjDirPath}/../source/common/eiq_iworker.h"
"${ProjDirPath}/../clock_config.c"
"${ProjDirPath}/../clock_config.h"
"${ProjDirPath}/../dcd.c"
"${ProjDirPath}/../dcd.h"
)

target_include_directories(${MCUX_SDK_PROJECT_NAME} PRIVATE
    ${ProjDirPath}/..
    ${ProjDirPath}/../source
    ${ProjDirPath}/../source/audio
    ${ProjDirPath}/../source/model
    ${ProjDirPath}/../source/common
)


include(${SdkRootDirPath}/devices/MIMXRT1062/all_lib_device.cmake)

IF(NOT DEFINED TARGET_LINK_SYSTEM_LIBRARIES)  
    SET(TARGET_LINK_SYSTEM_LIBRARIES "-lm -lc -lgcc -lnosys")  
ENDIF()  

TARGET_LINK_LIBRARIES(${MCUX_SDK_PROJECT_NAME} PRIVATE -Wl,--start-group)

target_link_libraries(${MCUX_SDK_PROJECT_NAME} PRIVATE ${TARGET_LINK_SYSTEM_LIBRARIES})

TARGET_LINK_LIBRARIES(${MCUX_SDK_PROJECT_NAME} PRIVATE -Wl,--end-group)

set_target_properties(${MCUX_SDK_PROJECT_NAME} PROPERTIES ADDITIONAL_CLEAN_FILES "output.map")

