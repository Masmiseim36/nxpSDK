$version 6.60

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,70,240,110>
unit Core
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,110,240,150>
unit Resources
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,150,240,190>
unit Graphics
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,190,240,230>
unit Effects
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,230,240,270>
unit Views
{
  attr Directory = $Mosaic;
}

$rect <40,270,240,310>
unit Templates
{
  attr Directory = $Mosaic;
}

// The 'default' Language. Each project has to contain at least one language brick \
// called 'Default'
$rect <540,70,740,110>
language Default;

// The unit of the application class
$rect <40,390,240,430>
unit Application
{
  attr Directory = .\;
}

$rect <40,430,240,470>
unit BrickGame
{
  attr Directory = .\;
}

// Mosaic Framework
note group Note1
{
  attr Bounds = <20,20,260,330>;
}

// Profile Configuration
note group Note2
{
  attr Bounds = <270,20,510,130>;
}

// Languages
note group Note3
{
  attr Bounds = <520,20,760,130>;
}

// Project Units
note group Note5
{
  attr Bounds = <20,340,260,490>;
}

// The sample application 'BrickGame' implements a classic "paddle and ball" game.
//
// In the game, a couple of brick rows are arranged in the upper part of the screen. \
// A ball travels across the screen, bouncing off the top and side walls of the screen. \
// When a brick is hit, the ball bounces away and the brick is destroyed. The player \
// loses a turn when the ball touches the bottom of the screen. To prevent this from \
// happening, the player has a movable paddle to bounce the ball upward, keeping \
// it in play.
//
// This demo game is implemented for a screen size of 480x272 pixel.
//
// You can double-click on the 'BrickGame' brick to open the unit within the Composer \
// and to analyze the implementation.
//
// To start the game within the Prototyper, press 'Ctrl'+'F5'.
note legend Note
{
  attr Bounds = <270,140,760,490>;
}

// IMPORTANT NOTE:
//
// This game example is ONLY for teaching and demonstration purposes and provided \
// as sample code!
//
// It is your responsibility to clarify the legal and IPR aspects if you intend to \
// use the game or parts of it within your development, your project or any commercial \
// product.
note group Note4
{
  attr Bounds = <20,500,760,680>;
}

// This is a profile member for the project. This profile controls the code generation \
// for the target system.
$rect <290,70,490,110>
profile iMX_RT : NXP.iMX_RT.RGB565
{
  attr ScreenOrientation = Normal;
  attr ScreenSize = <480,272>;
  attr Optimization = High;
  attr ApplicationClass = Application::Application;
  attr FormatOfBitmapResources = Compressed;
  attr FormatOfStringConstants = Compressed;
  attr OutputDirectory = ..\GeneratedCode;
  attr CleanOutputDirectories = true;

  $rect <10,10,154,50>
  macro Author = "Dipl. Ing. Paul Banach and Dipl. Ing. Manfred Schweyer, Copyright (C) TARA Systems GmbH";

  $rect <10,60,210,100>
  macro AnimateBackground = true;
}
