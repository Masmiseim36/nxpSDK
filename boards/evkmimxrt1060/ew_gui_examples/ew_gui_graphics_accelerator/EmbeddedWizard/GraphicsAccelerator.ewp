$version 6.60

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,70,240,110>
unit Core
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,110,240,150>
unit Resources
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,150,240,190>
unit Graphics
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,190,240,230>
unit Effects
{
  attr Directory = $Mosaic;
}

// This unit is a part of the Embedded Wizard class library 'Mosaic20'
$rect <40,230,240,270>
unit Views
{
  attr Directory = $Mosaic;
}

$rect <40,270,240,310>
unit WidgetSet
{
  attr Directory = $Mosaic;
}

$rect <40,310,240,350>
unit Templates
{
  attr Directory = $Mosaic\;
}

// The 'default' Language. Each project has to contain at least one language brick \
// called 'Default'
$rect <540,70,740,110>
language Default;

// The unit of the application class
$rect <40,420,240,470>
unit Application
{
  attr Directory = .\;
}

$rect <40,460,240,510>
unit Accelerator
{
  attr Directory = .\;
}

$rect <40,500,240,550>
unit GraphicsSystem
{
  attr Directory = .\;
}

// Mosaic Framework
note group Note1
{
  attr Bounds = <20,20,260,370>;
}

// Profile Configuration
note group Note2
{
  attr Bounds = <270,20,510,130>;
}

// Languages
note group Note3
{
  attr Bounds = <520,20,760,130>;
}

// Project Units
note group Note5
{
  attr Bounds = <20,380,260,560>;
}

// Welcome to the example 'GraphicsAccelerator'!
//
// The intention of this example is to demonstrate the graphics performance. For \
// this purpose, a set of basic drawing operations are executed permanently and continuously: \
// As a result, an endless stream of drawing instructions is produced...
// In case that the graphics hardware provides a graphics accelerator, it can be \
// switched on/off to demonstrate the advantage of a graphics accelerator.
// The user can choose the current graphics operation and switch on/off the usage \
// of the graphics acclerator (if available).
//
// The resulting framerate (in fps) and the resulting CPU load (in percent) will \
// be shown.
//
// You can double-click on the 'Accelerator' brick to open the unit within the Composer \
// and to analyze the implementation.
//
// To start the application within the Prototyper, press 'Ctrl'+'F5'.
note legend Note6
{
  attr Bounds = <270,140,760,500>;
}

// This is a profile member for the project. This profile controls the code generation \
// for the target system.
$rect <290,70,490,110>
profile iMX_RT : NXP.iMX_RT.RGB565
{
  attr ScreenOrientation = Normal;
  attr ScreenSize = <480,272>;
  attr Optimization = High;
  attr ApplicationClass = Application::Application;
  attr FormatOfBitmapResources = Compressed;
  attr FormatOfStringConstants = Compressed;
  attr OutputDirectory = ..\GeneratedCode;
  attr CleanOutputDirectories = true;
  attr Verbose = false;

  $rect <10,10,154,50>
  macro Author = "Dipl. Ing. Paul Banach and Dipl. Ing. Manfred Schweyer, Copyright (C) TARA Systems GmbH";

  $rect <10,60,210,100>
  macro NoOfRectFill = 20;

  $rect <10,110,210,150>
  macro NoOfRectBlend = 0;

  $rect <10,160,210,200>
  macro NoOfRGB565Bmp = 10;

  $rect <10,210,210,250>
  macro NoOfNativeBmp = 10;

  $rect <10,260,210,300>
  macro NoOfRGB565BmpOpacity = 10;

  $rect <10,310,210,350>
  macro NoOfNativeBmpOpacity = 10;

  $rect <10,360,210,400>
  macro NoOfAlpha8Bmp = 0;
}
