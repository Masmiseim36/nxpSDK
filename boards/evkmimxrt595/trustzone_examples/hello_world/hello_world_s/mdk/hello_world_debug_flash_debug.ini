FUNC void FlashInit (void) 
{
    //Configure FLEXSPI PinMux
    _WDWORD(0x400040C8, 0x00000141);
    _WDWORD(0x400040CC, 0x00000141);
    _WDWORD(0x400040D0, 0x00000141);
    _WDWORD(0x400040D4, 0x00000141);
    _WDWORD(0x400040D8, 0x00000141);
    _WDWORD(0x400040DC, 0x00000141);
    _WDWORD(0x400040E0, 0x00000141);
    _WDWORD(0x400040E4, 0x00000141);
    _WDWORD(0x400040E8, 0x00000141);
    _WDWORD(0x400040EC, 0x00000141);
    _WDWORD(0x400040F0, 0x00000151);
    _WDWORD(0x400040F4, 0x00000141);

    //Disable CACHE and enable FLEXSPI RAM
    _WDWORD(0x40033800, 0); //CACHE64_CTRL0->CCR = 0;
    _WDWORD(0x4003301C, 0); //CACHE64_POLSEL0->POLSEL = 0;
    _WDWORD(0x40135030, 0x101);//PMC->MEMSEQCTRL = 0x101U;
    _WDWORD(0x40002630, 0x10000);//SYSCTL0->PDRUNCFG0_CLR = SYSCTL0_PDRUNCFG0_FFRO_PD_MASK;
    _WDWORD(0x40002634, 0xC);//Flexspi SRAM APD/PPD
    _WDWORD(0x40002638, 0xFFFFFFFF);//PDRUNCFG2,3 CLR
    _WDWORD(0x4000263C, 0xFFFFFFFF);

    _WDWORD(0x4013500C, _RDWORD(0x4013500C) | 0x1); // PMC CTRL APPLYCFG
    while(_RDWORD(0x40135004) & 0x1)  //Wait PMC update done
    {
    }

    //Set CPU run with FRO192M
    _WDWORD(0x40001110, 0x1F);   // FRODIVOEN Enable FRO clock
    _WDWORD(0x40001430, 0x3);    // MAINCLKSELA
    _WDWORD(0x40001434, 0);      // MAINCLKSELB

    //Set FLEXSPI clock to FRO192M
    _WDWORD(0x40001620, 0x3);      // CLKCTL0->FLEXSPI0FCLKSEL = 3

    _WDWORD(0x40001040, 0x10000);   // CLKCTL0->PSCCTL0_SET = CLKCTL0_PSCCTL0_SET_FLEXSPI0_OTFAD_MASK;
    _WDWORD(0x40000070, 0x10000);   // RSTCTL0->PRSTCTL0_CLR = RSTCTL0_PRSTCTL0_CLR_FLEXSPI0_OTFAD_MASK;
    
    _WDWORD(0x40134000, 0xFFFFA030); // FLEXSPI0->MCR0
    _WDWORD(0x40134004, 0xFFFFFFFF); // FLEXSPI0->MCR0
    _WDWORD(0x40134008, 0x200001F7); // FLEXSPI0->MCR2
    _WDWORD(0x4013400C, 0x00000078); // FLEXSPI0->AHBCR
    _WDWORD(0x40134020, 0x80000000); // FELXSPI0->AHBRXBUF0CR0
    _WDWORD(0x40134024, 0x80000000); // FELXSPI0->AHBRXBUF0CR1
    _WDWORD(0x40134028, 0x80000000); // FELXSPI0->AHBRXBUF0CR2
    _WDWORD(0x4013402C, 0x80000000); // FELXSPI0->AHBRXBUF0CR3
    _WDWORD(0x40134030, 0x80000000); // FELXSPI0->AHBRXBUF0CR4
    _WDWORD(0x40134034, 0x80000000); // FELXSPI0->AHBRXBUF0CR5
    _WDWORD(0x40134038, 0x80000000); // FELXSPI0->AHBRXBUF0CR6
    _WDWORD(0x4013403C, 0x80000000); // FELXSPI0->AHBRXBUF0CR7
    _WDWORD(0x40134064, 0x0); // FELXSPI0->FLASHA2CR0
    _WDWORD(0x40134068, 0x0); // FELXSPI0->FLASHB1CR0
    _WDWORD(0x4013406C, 0x0); // FELXSPI0->FLASHB2CR0
    _WDWORD(0x40134080, 0x900); // FELXSPI->FLASHA1CR2
    _WDWORD(0x40134084, 0x900); // FELXSPI->FLASHA2CR2
    _WDWORD(0x40134088, 0x900); // FELXSPI->FLASHB1CR2
    _WDWORD(0x4013408C, 0x900); // FELXSPI->FLASHB2CR2
    _WDWORD(0x40134094, 0x3); // FELXSPI0->FLSHCR4
    _WDWORD(0x401340A4, 0x10000); // FELXSPI0->IPCR1
    _WDWORD(0x401340BC, 0x1C); // FELXSPI0->IPTXFCR
    _WDWORD(0x401340C0, 0x79); // FELXSPI0->DLLCRA
    _WDWORD(0x401340C4, 0x100); // FELXSPI0->DLLCRB
    _WDWORD(0x401340E0, 0x3); 
    _WDWORD(0x401340E4, 0x0); // FELXSPI0->STS1
    _WDWORD(0x401340E8, 0x1763); // FELXSPI0->STS2
        
    // Config look up table
    _WDWORD(0x40134018, 0x5AF05AF0);
    _WDWORD(0x4013401C, 0x2);
    _WDWORD(0x40134200, 0x871187EE);
    _WDWORD(0x40134204, 0xB3048B20);
    _WDWORD(0x40134208, 0xA704);
    // Set AHB Write triggered Command to stop
    _WDWORD(0x40134290, 0x00000000);
    _WDWORD(0x40134018, 0x5AF05AF0);
    _WDWORD(0x4013401C, 0x1);
    
    _WDWORD(0x40134000, _RDWORD(0x40134000) | 0x1); // Software Reset
    while((_RDWORD(0x40134000) & 0x1) != 0);
}
FUNC void Setup (void) 
{
    FlashInit();
    SP = _RDWORD(0x08001000);          // Setup Stack Pointer
    PC = _RDWORD(0x08001004);          // Setup Program Counter
    _WDWORD(0xE000ED08, 0x08001000);   // Setup Vector Table Offset Register
}

FUNC void OnResetExec(void)
{
    Setup();
}

LOAD ".\\flash_debug\\hello_world_s.out" INCREMENTAL
LOAD "..\\..\\hello_world_ns\\mdk\\flash_debug\\hello_world_ns.out" INCREMENTAL

Setup();                             // Setup for Running
