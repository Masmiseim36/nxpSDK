<?xml version="1.0" encoding="UTF-8"?>
<ksdk:examples xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd manifest.xsd">
  <externalDefinitions>
    <definition extID="hifi4_MIMXRT685S"/>
    <definition extID="component.usart_adapter.MIMXRT685S"/>
    <definition extID="platform.drivers.flexcomm_usart.MIMXRT685S"/>
    <definition extID="utility.debug_console_lite.MIMXRT685S"/>
    <definition extID="platform.utilities.assert_lite.MIMXRT685S"/>
    <definition extID="platform.drivers.dmic.MIMXRT685S"/>
    <definition extID="platform.drivers.dmic_dma.MIMXRT685S"/>
    <definition extID="platform.drivers.flexcomm_i2s.MIMXRT685S"/>
    <definition extID="platform.drivers.flexcomm_i2s_dma.MIMXRT685S"/>
    <definition extID="platform.drivers.inputmux.MIMXRT685S"/>
    <definition extID="platform.drivers.inputmux_connections.MIMXRT685S"/>
    <definition extID="platform.drivers.lpc_dma.MIMXRT685S"/>
    <definition extID="platform.drivers.lpc_gpio.MIMXRT685S"/>
    <definition extID="platform.drivers.lpc_iopctl.MIMXRT685S"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.third_party.fft2d.MIMXRT685S"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.binary.MIMXRT685S"/>
    <definition extID="platform.utilities.misc_utilities.MIMXRT685S"/>
    <definition extID="platform.drivers.common.MIMXRT685S"/>
    <definition extID="platform.drivers.flexcomm.MIMXRT685S"/>
    <definition extID="platform.drivers.reset.MIMXRT685S"/>
    <definition extID="platform.drivers.clock.MIMXRT685S"/>
    <definition extID="device.MIMXRT685S_CMSIS.MIMXRT685S"/>
    <definition extID="CMSIS_Include_core_cm.MIMXRT685S"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.headers.MIMXRT685S"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MIMXRT685S"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MIMXRT685S"/>
    <definition extID="middleware.eiq.tensorflow_lite_micro.third_party.ruy.MIMXRT685S"/>
    <definition extID="mcuxpresso"/>
    <definition extID="com.nxp.mcuxpresso"/>
  </externalDefinitions>
  <example id="evkmimxrt685_tflm_kws_hifi4" name="tflm_kws_hifi4" device_core="hifi4_MIMXRT685S" dependency="component.usart_adapter.MIMXRT685S platform.drivers.flexcomm_usart.MIMXRT685S utility.debug_console_lite.MIMXRT685S platform.utilities.assert_lite.MIMXRT685S platform.drivers.dmic.MIMXRT685S platform.drivers.dmic_dma.MIMXRT685S platform.drivers.flexcomm_i2s.MIMXRT685S platform.drivers.flexcomm_i2s_dma.MIMXRT685S platform.drivers.inputmux.MIMXRT685S platform.drivers.inputmux_connections.MIMXRT685S platform.drivers.lpc_dma.MIMXRT685S platform.drivers.lpc_gpio.MIMXRT685S platform.drivers.lpc_iopctl.MIMXRT685S middleware.eiq.tensorflow_lite_micro.third_party.fft2d.MIMXRT685S middleware.eiq.tensorflow_lite_micro.binary.MIMXRT685S platform.utilities.misc_utilities.MIMXRT685S platform.drivers.common.MIMXRT685S platform.drivers.flexcomm.MIMXRT685S platform.drivers.reset.MIMXRT685S platform.drivers.clock.MIMXRT685S device.MIMXRT685S_CMSIS.MIMXRT685S CMSIS_Include_core_cm.MIMXRT685S middleware.eiq.tensorflow_lite_micro.headers.MIMXRT685S middleware.eiq.tensorflow_lite_micro.third_party.flatbuffers.MIMXRT685S middleware.eiq.tensorflow_lite_micro.third_party.gemmlowp.MIMXRT685S middleware.eiq.tensorflow_lite_micro.third_party.ruy.MIMXRT685S" category="eiq_examples">
    <projects>
      <project type="com.crt.advproject.projecttype.exe" nature="org.eclipse.cdt.core.ccnature"/>
    </projects>
    <toolchainSettings>
      <toolchainSetting id_refs="com.nxp.mcuxpresso">
        <option id="gnu.c.compiler.option.preprocessor.def.symbols" type="stringList">
          <value>SDK_DEBUGCONSOLE_UART</value>
          <value>XOS_CLOCK_FREQ=594000000</value>
          <value>TF_LITE_STATIC_MEMORY</value>
          <value>CPU_MIMXRT685SFVKB_dsp</value>
          <value>MCUXPRESSO_SDK</value>
        </option>
        <option id="gnu.cpp.compiler.option.preprocessor.def" type="stringList">
          <value>SDK_DEBUGCONSOLE_UART</value>
          <value>TF_LITE_STATIC_MEMORY</value>
          <value>CPU_MIMXRT685SFVKB_dsp</value>
          <value>MCUXPRESSO_SDK</value>
        </option>
        <option id="com.crt.advproject.gcc.exe.debug.option.debugging.level" type="enum">
          <value>gnu.c.debugging.level.default</value>
        </option>
        <option id="com.crt.advproject.gcc.exe.debug.option.optimization.level" type="enum">
          <value>gnu.c.optimization.level.none</value>
        </option>
        <option id="com.crt.advproject.c.misc.dialect" type="enum">
          <value>com.crt.advproject.misc.dialect.gnu99</value>
        </option>
        <option id="com.crt.advproject.gcc.exe.release.option.optimization.level" type="enum">
          <value>gnu.c.optimization.level.size</value>
        </option>
        <option id="com.crt.advproject.gcc.fpu" type="enum">
          <value>com.crt.advproject.gcc.fpu.none</value>
        </option>
        <option id="gnu.c.compiler.option.misc.other" type="string">
          <value>-Wno-array-bounds -Wno-strict-aliasing -fsigned-char -Wno-unused -Wno-missing-braces -fmessage-length=0</value>
        </option>
        <option id="com.crt.advproject.cpp.exe.debug.option.optimization.level" type="enum">
          <value>gnu.cpp.compiler.optimization.level.none</value>
        </option>
        <option id="com.crt.advproject.cpp.misc.dialect" type="enum">
          <value>com.crt.advproject.misc.dialect.cpp11</value>
        </option>
        <option id="com.crt.advproject.cpp.exe.release.option.optimization.level" type="enum">
          <value>gnu.cpp.compiler.optimization.level.size</value>
        </option>
        <option id="com.crt.advproject.cpp.fpu" type="enum">
          <value>com.crt.advproject.cpp.fpu.none</value>
        </option>
        <option id="gnu.cpp.compiler.option.other.other" type="string">
          <value>-fno-rtti -fno-exceptions -Wno-sign-compare -Wno-strict-aliasing -Wno-deprecated-declarations -fsigned-char -Wno-unused -Wno-missing-braces -fmessage-length=0</value>
        </option>
        <option id="gnu.cpp.compiler.option.warnings.toerrors" type="boolean">
          <value>false</value>
        </option>
        <option id="gnu.cpp.link.option.other" type="stringList">
          <value>-no-warn-rwx-segments</value>
        </option>
        <option id="com.crt.advproject.link.cpp.fpu" type="enum">
          <value>com.crt.advproject.link.cpp.fpu.none</value>
        </option>
        <option id="gnu.cpp.link.option.nostdlibs" type="boolean">
          <value>false</value>
        </option>
      </toolchainSetting>
    </toolchainSettings>
    <include_paths>
      <include_path path="source" project_relative_path="source" type="c_include"/>
      <include_path path="source/audio" project_relative_path="source/audio" type="c_include"/>
      <include_path path="source/model" project_relative_path="source/model" type="c_include"/>
      <include_path path="." project_relative_path="board" type="c_include"/>
    </include_paths>
    <source path="source" project_relative_path="source" type="c_include">
      <files mask="demo_info.h"/>
      <files mask="timer.h"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="src">
      <files mask="get_top_n.cpp"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="c_include">
      <files mask="get_top_n.h"/>
      <files mask="model.h"/>
      <files mask="output_postproc.h"/>
    </source>
    <source path="source/audio" project_relative_path="source/audio" type="c_include">
      <files mask="audio.h"/>
    </source>
    <source path="source/audio" project_relative_path="source/audio" type="src">
      <files mask="kws_mfcc.cpp"/>
      <files mask="mfcc.cpp"/>
    </source>
    <source path="source/audio" project_relative_path="source/audio" type="cpp_include">
      <files mask="kws_mfcc.hpp"/>
      <files mask="mfcc.hpp"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="src">
      <files mask="model.cpp"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="src">
      <files mask="output_postproc.cpp"/>
      <files mask="model_ds_cnn_ops_micro.cpp"/>
    </source>
    <source path="source" project_relative_path="source" type="c_include">
      <files mask="audio_data.h"/>
      <files mask="demo_config.h"/>
      <files mask="labels.h"/>
    </source>
    <source path="source" project_relative_path="source" type="src">
      <files mask="demo_info.cpp"/>
    </source>
    <source path="source" project_relative_path="source" type="src">
      <files mask="main.cpp"/>
    </source>
    <source path="doc" project_relative_path="doc" type="doc">
      <files mask="off.wav"/>
      <files mask="right.wav"/>
      <files mask="train.py"/>
      <files mask="ds_cnn_s.tflite"/>
    </source>
    <source path="source/model" project_relative_path="source/model" type="c_include">
      <files mask="model_data.h"/>
    </source>
    <source path="." project_relative_path="board" type="c_include">
      <files mask="core_dsp.h"/>
    </source>
    <source path="gdbio/ldscripts" project_relative_path="board" type="other">
      <files mask="elf32xtensa.x"/>
    </source>
    <source path="gdbio" project_relative_path="board" type="other">
      <files mask="specs"/>
    </source>
    <source path="min-rt/ldscripts" project_relative_path="board" type="other">
      <files mask="elf32xtensa.x"/>
    </source>
    <source path="min-rt" project_relative_path="board" type="other">
      <files mask="specs"/>
    </source>
    <source path="source/audio" project_relative_path="source/audio" type="c_include">
      <files mask="audio_stream.h"/>
    </source>
    <source path="source/audio" project_relative_path="source/audio" type="src">
      <files mask="audio_stream.c"/>
    </source>
    <source path="source/audio" project_relative_path="source/audio" type="src">
      <files mask="audio_capture.cpp"/>
    </source>
    <source path="." project_relative_path="board" type="src">
      <files mask="board_hifi4.c"/>
    </source>
    <source path="." project_relative_path="board" type="c_include">
      <files mask="board_hifi4.h"/>
    </source>
    <source path="." project_relative_path="board" type="src">
      <files mask="board_init.c"/>
    </source>
    <source path="." project_relative_path="board" type="c_include">
      <files mask="board_init.h"/>
    </source>
    <source path="source" project_relative_path="source" type="src">
      <files mask="timer_xtensa.c"/>
    </source>
    <source path="." project_relative_path="doc" type="doc">
      <files mask="readme.md"/>
    </source>
  </example>
</ksdk:examples>
