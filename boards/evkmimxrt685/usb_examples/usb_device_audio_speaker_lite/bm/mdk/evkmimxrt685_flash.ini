
FUNC void FlashInit (void) {

     //Reset external flash
     _WDWORD(0x40004130, 0x130U);   //IOPCTL->PIO[2][12] = 0x130;
     _WDWORD(0x40021044, 0x4U);     //CLKCTL1->PSCCTL1_SET = CLKCTL1_PSCCTL1_SET_HSGPIO2_CLK_SET_MASK;
     _WDWORD(0x40020074, 0x4U);     //RSTCTL1->PRSTCTL1_CLR = RSTCTL1_PRSTCTL1_CLR_HSGPIO2_RST_CLR_MASK;
     _WDWORD(0x40102008, 0x1000U);  // GPIO->DIR[2] = 1 << 12;
     _WDWORD(0x40102288, 0x1000U);  // GPIO->CLR[2] = 1 << 12;
     _sleep_(400);                  // Delay 400us
     _WDWORD(0x40102208, 0x1000U);  // GPIO->SET[2] = 1 << 12;

     //Configure QSPI pin
    _WDWORD(0x400040ac, 0x00000146);
    _WDWORD(0x400040b0, 0x00000146);
    _WDWORD(0x400040b4, 0x00000146);
    _WDWORD(0x400040b8, 0x00000146);
    _WDWORD(0x400040f4, 0x00000145);
    _WDWORD(0x40004144, 0x00000146);
    _WDWORD(0x40004148, 0x00000146);
    _WDWORD(0x4000414c, 0x00000146);
    _WDWORD(0x40004158, 0x00000146);
    _WDWORD(0x4000415c, 0x00000146);

     //Enable FLEXSPI RAM and disable CACHE
    _WDWORD(0x40033800, 0); //CACHE64_CTRL0->CCR = 0;
    _WDWORD(0x4003301C, 0); //CACHE64_POLSEL0->POLSEL = 0;
    _WDWORD(0x40002630, 0x10000);//SYSCTL0->PDRUNCFG0_CLR = SYSCTL0_PDRUNCFG0_FFRO_PD_MASK;
    _WDWORD(0x40002634, 0xC);//Flexspi SRAM APD/PPD
    _WDWORD(0x40002638, 0xFF);//PDRUNCFG2,3 CLR
    _WDWORD(0x4000263C, 0xFF);

     //Set FLEXSPI clock to FFRO
    _WDWORD(0x40001620, 0x3);      // CLKCTL0->FLEXSPIFCLKSEL = 3
    _WDWORD(0x40001040, 0x10000);  // CLKCTL0->PSCCTL0_SET = CLKCTL0_PSCCTL0_SET_FLEXSPI_OTFAD_MASK;
    _WDWORD(0x40000070, 0x10000);  // RSTCTL0->PRSTCTL0_CLR = RSTCTL0_PRSTCTL0_CLR_FLEXSPI_OTFAD_MASK;

    _WDWORD(0x40134000, 0xFFFF3000); // FLEXSPI->MCR0
    _WDWORD(0x40134004, 0xFFFFFFFF); // FLEXSPI->MCR0
    _WDWORD(0x40134008, 0x200001F7); // FLEXSPI->MCR2
    _WDWORD(0x4013400C, 0x00000038); // FLEXSPI->AHBCR
    _WDWORD(0x40134020, 0x80000000); // FELXSPI->AHBRXBUF0CR0
    _WDWORD(0x40134024, 0x80000000); // FELXSPI->AHBRXBUF0CR1
    _WDWORD(0x40134028, 0x80000000); // FELXSPI->AHBRXBUF0CR2
    _WDWORD(0x4013402C, 0x80000000); // FELXSPI->AHBRXBUF0CR3
    _WDWORD(0x40134030, 0x80000000); // FELXSPI->AHBRXBUF0CR4
    _WDWORD(0x40134034, 0x80000000); // FELXSPI->AHBRXBUF0CR5
    _WDWORD(0x40134038, 0x80000000); // FELXSPI->AHBRXBUF0CR6
    _WDWORD(0x4013403C, 0x80000020); // FELXSPI->AHBRXBUF0CR7
    _WDWORD(0x40134060, 0x0); // FELXSPI->FLASHA1CR0
    _WDWORD(0x40134064, 0x0); // FELXSPI->FLASHA2CR0
    _WDWORD(0x40134068, 0x10000); // FELXSPI->FLASHB1CR0
    _WDWORD(0x4013406C, 0x0); // FELXSPI->FLASHB2CR0
    _WDWORD(0x40134078, 0x20063); // FELXSPI->FLASHB1CR1
     //Set AHB Write triggered Command Sequence Number to 9s
    _WDWORD(0x40134080, 0x900); // FELXSPI->FLASHA1CR2
    _WDWORD(0x40134084, 0x900); // FELXSPI->FLASHA2CR2
    _WDWORD(0x40134088, 0x900); // FELXSPI->FLASHB1CR2
    _WDWORD(0x4013408C, 0x900); // FELXSPI->FLASHB2CR2
    _WDWORD(0x40134094, 0xc3); // FELXSPI->FLSHCR4
    _WDWORD(0x401340A0, 0x0); // FELXSPI->IPCR0
    _WDWORD(0x401340A4, 0x0); // FELXSPI->IPCR1
    _WDWORD(0x401340C0, 0x100); // FELXSPI->DLLCRA
    _WDWORD(0x401340C4, 0x100); // FELXSPI->DLLCRB

    // Config look up table
    _WDWORD(0x40134018, 0x5AF05AF0);
    _WDWORD(0x4013401C, 0x2);
    _WDWORD(0x40134200, 0x08200413);
    _WDWORD(0x40134204, 0x00002404);
    _WDWORD(0x40134208, 0x0);
    _WDWORD(0x4013420c, 0x0);
     // Srt AHB Write triggered Command to stop
    _WDWORD(0x40134290, 0x00000000);
    _WDWORD(0x40134018, 0x5AF05AF0);
    _WDWORD(0x4013401C, 0x1);

    _WDWORD(0x40134000, _RDWORD(0x40134000) | 0x1); // Software Reset
     while((_RDWORD(0x40134000) & 0x1) != 0);

}
FUNC void Setup (void) {
    FlashInit();
  SP = _RDWORD(0x08001000);          // Setup Stack Pointer
  PC = _RDWORD(0x08001004);          // Setup Program Counter
  _WDWORD(0xE000ED08, 0x08001000);   // Setup Vector Table Offset Register
}

LOAD %L INCREMENTAL                  // Download

Setup();                             // Setup for Running

//g, main
