/*
 * The Clear BSD License
 * Copyright (c) 2016, NXP Semiconductor
 * All rights reserved.
 *
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted (subject to the limitations in the disclaimer below) provided
 * that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of NXP Semiconductor nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS LICENSE.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
#ifndef NDEF_MESSAGE_H
#define NDEF_MESSAGE_H
/*
 * ndef_message.h
 *
 *  Created on: 13.08.2014
 *      Author: NXP67729
 */

/*Default NDEF message: SmartPoster
 * Title: NTAG I2C Explorer
 * Link: http://www.nxp.com/demoboard/OM5569
 */
static const uint8_t Default_NDEF_Message[] = {
    0x03, 0x63, 0x91, 0x02, 0x35, 0x53, 0x70, 0x91, 0x01, 0x14, 0x54, 0x02, 0x65, 0x6E, 0x4E, 0x54, 0x41,
    0x47, 0x20, 0x49, 0x32, 0x43, 0x20, 0x45, 0x58, 0x50, 0x4C, 0x4F, 0x52, 0x45, 0x52, 0x51, 0x01, 0x19,
    0x55, 0x01, 0x6E, 0x78, 0x70, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x64, 0x65, 0x6D, 0x6F, 0x62, 0x6F, 0x61,
    0x72, 0x64, 0x2F, 0x4F, 0x4D, 0x35, 0x35, 0x36, 0x39, 0x54, 0x0F, 0x17, 0x61, 0x6E, 0x64, 0x72, 0x6F,
    0x69, 0x64, 0x2E, 0x63, 0x6F, 0x6D, 0x3A, 0x70, 0x6B, 0x67, 0x63, 0x6F, 0x6D, 0x2E, 0x6E, 0x78, 0x70,
    0x2E, 0x6E, 0x74, 0x61, 0x67, 0x69, 0x32, 0x63, 0x64, 0x65, 0x6D, 0x6F, 0x5F, 0x64, 0x65, 0x76, 0xFE};

static const uint8_t Default_BeginingOfMemory[] = {
    0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0x10, 0x6D, 0x00, 0x03, 0x5F, 0x91,
    0x02, 0x35, 0x53, 0x70, 0x91, 0x01, 0x14, 0x54, 0x02, 0x65, 0x6E, 0x4E, 0x54, 0x41, 0x47, 0x20, 0x49, 0x32, 0x43,
    0x20, 0x45, 0x58, 0x50, 0x4C, 0x4F, 0x52, 0x45, 0x52, 0x51, 0x01, 0x19, 0x55, 0x01, 0x6E, 0x78, 0x70, 0x2E, 0x63,
    0x6F, 0x6D, 0x2F, 0x64, 0x65, 0x6D, 0x6F, 0x62, 0x6F, 0x61, 0x72, 0x64, 0x2F, 0x4F, 0x4D, 0x35, 0x35, 0x36, 0x39,
    0x54, 0x0F, 0x13, 0x61, 0x6E, 0x64, 0x72, 0x6F, 0x69, 0x64, 0x2E, 0x63, 0x6F, 0x6D, 0x3A, 0x70, 0x6B, 0x67, 0x63,
    0x6F, 0x6D, 0x2E, 0x6E, 0x78, 0x70, 0x2E, 0x6E, 0x74, 0x61, 0x67, 0x69, 0x32, 0x63, 0x64, 0x65, 0x6D, 0x6F, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static const uint8_t Null_Block[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static const uint8_t Default_Page_56[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF};

static const uint8_t Default_Page_57[] = {0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
                                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static const uint8_t Default_Page_58[] = {0x01, 0x00, 0xF8, 0x48, 0x08, 0x01, 0x00, 0x00,
                                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static const uint16_t Default_NDEF_Message_length = sizeof(Default_NDEF_Message);
static const uint16_t Default_BeginingOfMemory_length = sizeof(Default_BeginingOfMemory);
static const uint16_t Null_Block_length = sizeof(Null_Block);
static const uint16_t Default_Page_56_length = sizeof(Default_Page_56);
static const uint16_t Default_Page_57_length = sizeof(Default_Page_57);
static const uint16_t Default_Page_58_length = sizeof(Default_Page_58);

#endif /* NDEF_MESSAGE_H */
