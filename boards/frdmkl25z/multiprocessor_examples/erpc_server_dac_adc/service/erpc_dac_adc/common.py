#
# Generated by erpcgen 1.4.0 on Fri Jan 20 08:45:14 2017.
#
# AUTOGENERATED - DO NOT EDIT
#

import erpc

StringMaxSize = 11

class AdcConfig(object):
    def __init__(self, vref=None, atomicSteps=None):
        self.vref = vref # float
        self.atomicSteps = atomicSteps # float

    def _read(self, codec):
        codec.start_read_struct()
        self.vref = codec.read_float()
        self.atomicSteps = codec.read_float()
        codec.end_read_struct()
        return self

    def _write(self, codec):
        codec.start_write_struct()
        if self.vref is None:
            raise ValueError("vref is None")
        codec.write_float(self.vref)
        if self.atomicSteps is None:
            raise ValueError("atomicSteps is None")
        codec.write_float(self.atomicSteps)
        codec.end_write_struct()

    def __str__(self):
        return "<%s@%x vref=%s atomicSteps=%s>" % (self.__class__.__name__, id(self), self.vref, self.atomicSteps)

    def __repr__(self):
        return self.__str__()

class Vector(object):
    def __init__(self, A_x=None, A_y=None, A_z=None, M_x=None, M_y=None, M_z=None):
        self.A_x = A_x # int16
        self.A_y = A_y # int16
        self.A_z = A_z # int16
        self.M_x = M_x # int16
        self.M_y = M_y # int16
        self.M_z = M_z # int16

    def _read(self, codec):
        codec.start_read_struct()
        self.A_x = codec.read_int16()
        self.A_y = codec.read_int16()
        self.A_z = codec.read_int16()
        self.M_x = codec.read_int16()
        self.M_y = codec.read_int16()
        self.M_z = codec.read_int16()
        codec.end_read_struct()
        return self

    def _write(self, codec):
        codec.start_write_struct()
        if self.A_x is None:
            raise ValueError("A_x is None")
        codec.write_int16(self.A_x)
        if self.A_y is None:
            raise ValueError("A_y is None")
        codec.write_int16(self.A_y)
        if self.A_z is None:
            raise ValueError("A_z is None")
        codec.write_int16(self.A_z)
        if self.M_x is None:
            raise ValueError("M_x is None")
        codec.write_int16(self.M_x)
        if self.M_y is None:
            raise ValueError("M_y is None")
        codec.write_int16(self.M_y)
        if self.M_z is None:
            raise ValueError("M_z is None")
        codec.write_int16(self.M_z)
        codec.end_write_struct()

    def __str__(self):
        return "<%s@%x A_x=%s A_y=%s A_z=%s M_x=%s M_y=%s M_z=%s>" % (self.__class__.__name__, id(self), self.A_x, self.A_y, self.A_z, self.M_x, self.M_y, self.M_z)

    def __repr__(self):
        return self.__str__()


