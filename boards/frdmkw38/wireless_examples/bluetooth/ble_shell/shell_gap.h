/*! *********************************************************************************
 * \defgroup SHELL GAP
 * @{
 ********************************************************************************** */
/*! *********************************************************************************
* Copyright (c) 2015, Freescale Semiconductor, Inc.
* Copyright 2016-2018 NXP
* All rights reserved.
*
* \file
*
* This file is the interface file for the GAP Shell module
*
* SPDX-License-Identifier: BSD-3-Clause
********************************************************************************** */

#ifndef SHELL_GAP_H
#define SHELL_GAP_H

/*************************************************************************************
**************************************************************************************
* Public macros
**************************************************************************************
*************************************************************************************/
#include "l2ca_interface.h"

/************************************************************************************
*************************************************************************************
* Public memory declarations
*************************************************************************************
********************************************************************************** */
#if defined(SHELL_BREAK_KEY) && (SHELL_BREAK_KEY)
extern int8_t (*mpfShellBreak)(uint8_t argc, char *argv[]);
#endif /* SHELL_BREAK_KEY */
/************************************************************************************
*************************************************************************************
* Public prototypes
*************************************************************************************
************************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

/*! *********************************************************************************
 * \brief        Entry point for "gap" shell command.
 *
 * \param[in]    argc           Number of arguments
 * \param[in]    argv           Array of argument's values
 *
 * \return       int8_t         Command status
 ********************************************************************************** */
int8_t ShellGap_Command(uint8_t argc, char * argv[]);

/*! *********************************************************************************
 * \brief        Handles BLE generic callback.
 *
 * \param[in]    pGenericEvent    Pointer to gapGenericEvent_t.
 ********************************************************************************** */
void ShellGap_GenericCallback (gapGenericEvent_t* pGenericEvent);

#ifdef __cplusplus
}
#endif


#endif /* SHELL_GAP_H */

/*! *********************************************************************************
 * @}
 ********************************************************************************** */
