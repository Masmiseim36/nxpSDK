/*
 * Copyright (c) 2016, Freescale Semiconductor, Inc.
 * Copyright 2016-2018 NXP
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PIN_MUX_H_
#define _PIN_MUX_H_

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/

/*! @brief Direction type  */
typedef enum _pin_mux_direction
{
    kPIN_MUX_DirectionInput = 0U,        /* Input direction */
    kPIN_MUX_DirectionOutput = 1U,       /* Output direction */
    kPIN_MUX_DirectionInputOrOutput = 2U /* Input or output direction */
} pin_mux_direction_t;

/*!
 * @addtogroup pin_mux
 * @{
 */

/***********************************************************************************************************************
 * API
 **********************************************************************************************************************/

#if defined(__cplusplus)
extern "C" {
#endif

/*!
 * @brief Calls initialization functions.
 *
 */
void BOARD_InitBootPins(void);

/*! @name PORTA4 (number 54), SW2
  @{ */
#define PINTOOL_MISC_SW2_PERIPHERAL GPIOA                  /*!<@brief Device name: GPIOA */
#define PINTOOL_MISC_SW2_SIGNAL GPIO                       /*!<@brief GPIOA signal: GPIO */
#define PINTOOL_MISC_SW2_GPIO GPIOA                        /*!<@brief GPIO device name: GPIOA */
#define PINTOOL_MISC_SW2_GPIO_PIN 4U                       /*!<@brief PORTA pin index: 4 */
#define PINTOOL_MISC_SW2_PORT PORTA                        /*!<@brief PORT device name: PORTA */
#define PINTOOL_MISC_SW2_PIN 4U                            /*!<@brief PORTA pin index: 4 */
#define PINTOOL_MISC_SW2_CHANNEL 4                         /*!<@brief GPIOA GPIO channel: 4 */
#define PINTOOL_MISC_SW2_PIN_NAME PTA4                     /*!<@brief Pin name */
#define PINTOOL_MISC_SW2_LABEL "SW2"                       /*!<@brief Label */
#define PINTOOL_MISC_SW2_NAME "SW2"                        /*!<@brief Identifier name */
#define PINTOOL_MISC_SW2_DIRECTION kPIN_MUX_DirectionInput /*!<@brief Direction */
                                                           /* @} */

/*! @name PORTE28 (number 49), DRV_EN
  @{ */
#define PINTOOL_MISC_DRV_EN_PERIPHERAL GPIOE /*!<@brief Device name: GPIOE */
#define PINTOOL_MISC_DRV_EN_SIGNAL GPIO      /*!<@brief GPIOE signal: GPIO */
#define PINTOOL_MISC_DRV_EN_GPIO GPIOE       /*!<@brief GPIO device name: GPIOE */
#define PINTOOL_MISC_DRV_EN_GPIO_PIN 28U     /*!<@brief PORTE pin index: 28 */
#define PINTOOL_MISC_DRV_EN_PORT PORTE       /*!<@brief PORT device name: PORTE */
#define PINTOOL_MISC_DRV_EN_PIN 28U          /*!<@brief PORTE pin index: 28 */
#define PINTOOL_MISC_DRV_EN_CHANNEL 28       /*!<@brief GPIOE GPIO channel: 28 */
#define PINTOOL_MISC_DRV_EN_PIN_NAME PTE28   /*!<@brief Pin name */
#define PINTOOL_MISC_DRV_EN_LABEL "DRV_EN"   /*!<@brief Label */
#define PINTOOL_MISC_DRV_EN_NAME "DRV_EN"    /*!<@brief Identifier name */
                                             /* @} */

/*! @name PORTB6 (number 87), USER_LED
  @{ */
#define PINTOOL_MISC_USER_LED_PERIPHERAL GPIOB /*!<@brief Device name: GPIOB */
#define PINTOOL_MISC_USER_LED_SIGNAL GPIO      /*!<@brief GPIOB signal: GPIO */
#define PINTOOL_MISC_USER_LED_GPIO GPIOB       /*!<@brief GPIO device name: GPIOB */
#define PINTOOL_MISC_USER_LED_GPIO_PIN 6U      /*!<@brief PORTB pin index: 6 */
#define PINTOOL_MISC_USER_LED_PORT PORTB       /*!<@brief PORT device name: PORTB */
#define PINTOOL_MISC_USER_LED_PIN 6U           /*!<@brief PORTB pin index: 6 */
#define PINTOOL_MISC_USER_LED_CHANNEL 6        /*!<@brief GPIOB GPIO channel: 6 */
#define PINTOOL_MISC_USER_LED_PIN_NAME PTB6    /*!<@brief Pin name */
#define PINTOOL_MISC_USER_LED_LABEL "USER_LED" /*!<@brief Label */
#define PINTOOL_MISC_USER_LED_NAME "USER_LED"  /*!<@brief Identifier name */
                                               /* @} */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void PinTool_Misc(void);

/*! @name PORTD10 (number 139), PWM_A2
  @{ */
#define PINTOOL_PWM_PWM_A2_PERIPHERAL PWM0      /*!<@brief Device name: PWM0 */
#define PINTOOL_PWM_PWM_A2_SIGNAL A             /*!<@brief PWM0 signal: A */
#define PINTOOL_PWM_PWM_A2_PORT PORTD           /*!<@brief PORT device name: PORTD */
#define PINTOOL_PWM_PWM_A2_PIN 10U              /*!<@brief PORTD pin index: 10 */
#define PINTOOL_PWM_PWM_A2_CHANNEL 2            /*!<@brief PWM0 A channel: 2 */
#define PINTOOL_PWM_PWM_A2_PIN_NAME FLEXPWM0_A2 /*!<@brief Pin name */
#define PINTOOL_PWM_PWM_A2_LABEL "PWM_A2"       /*!<@brief Label */
#define PINTOOL_PWM_PWM_A2_NAME "PWM_A2"        /*!<@brief Identifier name */
                                                /* @} */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void PinTool_PWM(void);

/*! @name HSADC0A_CH2 (number 27), ADC0_PHA_ADC1_PHA
  @{ */
#define PINTOOL_ADC_ADC0_PHA_ADC1_PHA_PERIPHERAL HSADC0         /*!<@brief Device name: HSADC0 */
#define PINTOOL_ADC_ADC0_PHA_ADC1_PHA_SIGNAL ADCA               /*!<@brief HSADC0 signal: ADCA */
#define PINTOOL_ADC_ADC0_PHA_ADC1_PHA_CHANNEL CH2               /*!<@brief HSADC0 ADCA channel: CH2 */
#define PINTOOL_ADC_ADC0_PHA_ADC1_PHA_PIN_NAME HSADC0A_CH2      /*!<@brief Pin name */
#define PINTOOL_ADC_ADC0_PHA_ADC1_PHA_LABEL "ADC0_PHA_ADC1_PHA" /*!<@brief Label */
#define PINTOOL_ADC_ADC0_PHA_ADC1_PHA_NAME "ADC0_PHA_ADC1_PHA"  /*!<@brief Identifier name */
                                                                /* @} */

/*! @name HSADC1A_CH3 (number 28), ADC1_PHB
  @{ */
#define PINTOOL_ADC_ADC1_PHB_PERIPHERAL HSADC1    /*!<@brief Device name: HSADC1 */
#define PINTOOL_ADC_ADC1_PHB_SIGNAL ADCA          /*!<@brief HSADC1 signal: ADCA */
#define PINTOOL_ADC_ADC1_PHB_CHANNEL CH3          /*!<@brief HSADC1 ADCA channel: CH3 */
#define PINTOOL_ADC_ADC1_PHB_PIN_NAME HSADC1A_CH3 /*!<@brief Pin name */
#define PINTOOL_ADC_ADC1_PHB_LABEL "ADC1_PHB"     /*!<@brief Label */
#define PINTOOL_ADC_ADC1_PHB_NAME "ADC1_PHB"      /*!<@brief Identifier name */
                                                  /* @} */

/*! @name HSADC0A_CH7 (number 24), ADC0_PHC
  @{ */
#define PINTOOL_ADC_ADC0_PHC_PERIPHERAL HSADC0    /*!<@brief Device name: HSADC0 */
#define PINTOOL_ADC_ADC0_PHC_SIGNAL ADCA          /*!<@brief HSADC0 signal: ADCA */
#define PINTOOL_ADC_ADC0_PHC_CHANNEL CH7          /*!<@brief HSADC0 ADCA channel: CH7 */
#define PINTOOL_ADC_ADC0_PHC_PIN_NAME HSADC0A_CH7 /*!<@brief Pin name */
#define PINTOOL_ADC_ADC0_PHC_LABEL "ADC0_PHC"     /*!<@brief Label */
#define PINTOOL_ADC_ADC0_PHC_NAME "ADC0_PHC"      /*!<@brief Identifier name */
                                                  /* @} */

/*! @name HSADC0A_CH6 (number 23), ADC0_UDCB
  @{ */
#define PINTOOL_ADC_ADC0_UDCB_PERIPHERAL HSADC0    /*!<@brief Device name: HSADC0 */
#define PINTOOL_ADC_ADC0_UDCB_SIGNAL ADCA          /*!<@brief HSADC0 signal: ADCA */
#define PINTOOL_ADC_ADC0_UDCB_CHANNEL CH6          /*!<@brief HSADC0 ADCA channel: CH6 */
#define PINTOOL_ADC_ADC0_UDCB_PIN_NAME HSADC0A_CH6 /*!<@brief Pin name */
#define PINTOOL_ADC_ADC0_UDCB_LABEL "ADC0_UDCB"    /*!<@brief Label */
#define PINTOOL_ADC_ADC0_UDCB_NAME "ADC0_UDCB"     /*!<@brief Identifier name */
                                                   /* @} */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void PinTool_ADC(void);

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void PinTool_SPI(void);

#define SOPT5_UART0RXSRC_UART_RX 0x00u /*!<@brief UART 0 receive data source select: UART0_RX pin */
#define SOPT5_UART0TXSRC_UART_TX 0x00u /*!<@brief UART 0 transmit data source select: UART0_TX pin */

/*! @name PORTB0 (number 81), DEBUG_UART_RX
  @{ */
#define PINTOOL_UART_DEBUG_UART_RX_PERIPHERAL UART0      /*!<@brief Device name: UART0 */
#define PINTOOL_UART_DEBUG_UART_RX_SIGNAL RX             /*!<@brief UART0 signal: RX */
#define PINTOOL_UART_DEBUG_UART_RX_PORT PORTB            /*!<@brief PORT device name: PORTB */
#define PINTOOL_UART_DEBUG_UART_RX_PIN 0U                /*!<@brief PORTB pin index: 0 */
#define PINTOOL_UART_DEBUG_UART_RX_PIN_NAME UART0_RX     /*!<@brief Pin name */
#define PINTOOL_UART_DEBUG_UART_RX_LABEL "DEBUG_UART_RX" /*!<@brief Label */
#define PINTOOL_UART_DEBUG_UART_RX_NAME "DEBUG_UART_RX"  /*!<@brief Identifier name */
                                                         /* @} */

/*! @name PORTB1 (number 82), DEBUG_UART_TX
  @{ */
#define PINTOOL_UART_DEBUG_UART_TX_PERIPHERAL UART0                   /*!<@brief Device name: UART0 */
#define PINTOOL_UART_DEBUG_UART_TX_SIGNAL TX                          /*!<@brief UART0 signal: TX */
#define PINTOOL_UART_DEBUG_UART_TX_PORT PORTB                         /*!<@brief PORT device name: PORTB */
#define PINTOOL_UART_DEBUG_UART_TX_PIN 1U                             /*!<@brief PORTB pin index: 1 */
#define PINTOOL_UART_DEBUG_UART_TX_PIN_NAME UART0_TX                  /*!<@brief Pin name */
#define PINTOOL_UART_DEBUG_UART_TX_LABEL "DEBUG_UART_TX"              /*!<@brief Label */
#define PINTOOL_UART_DEBUG_UART_TX_NAME "DEBUG_UART_TX"               /*!<@brief Identifier name */
#define PINTOOL_UART_DEBUG_UART_TX_DIRECTION kPIN_MUX_DirectionOutput /*!<@brief Direction */
                                                                      /* @} */

/*!
 * @brief Configures pin routing and optionally pin electrical features.
 *
 */
void PinTool_UART(void);

#if defined(__cplusplus)
}
#endif

/*!
 * @}
 */
#endif /* _PIN_MUX_H_ */

/***********************************************************************************************************************
 * EOF
 **********************************************************************************************************************/
