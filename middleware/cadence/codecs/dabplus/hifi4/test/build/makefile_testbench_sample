#
# Copyright (c) 2008-2022 Cadence Design Systems, Inc.
# 
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
# 
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

# Top-level makefile for binary and source licensees to generate
# an example test program for an AAC decoder library.

# Certain codecs cannot now be built with the native compiler (gcc)
# Note: there's also a copy of this code in makefile_aacmchplus_dec_lib

XTCORE =

ifeq "$(CPU)" "gcc"
CXX = g++ $(XTCORE)
CC = g++ $(XTCORE)
AR = ar $(XTCORE)
RM_R = rm -rf
MKPATH = mkdir -p
else
CC = xt-xcc $(XTCORE)
ISS = xt-run $(XTCORE)
CONFIGDIR := $(shell $(ISS) $(XTCORE) --show-config=config)
include $(CONFIGDIR)/misc/hostenv.mk
endif

ifeq ($(DEBUG), 1)
OPT = -O0 -g
else
OPT = -O2
endif

ifeq "$(CPU)" "gcc"
CFLAGS = $(OPT) -Wall  -D__XTENSA_HIFI2__ $(EXTRA_CFLAGS) -DWAV_HEADER -DCSTUB_HIFI2
CFLAGS += -DCSTUB_HIFI2 -malign-double
else
CFLAGS = $(OPT) -Wall  -mlongcalls -D__XTENSA_HIFI2__ $(EXTRA_CFLAGS) -DWAV_HEADER
endif

LDFLAGS = $(EXTRA_LDFLAGS)

ifeq ($(PROFILE),1)
  CFLAGS += -DPROFILE=1
endif

ifeq ($(WRITE_THROUGH),1)
  LDFLAGS += \
	-Wl,--defsym,_memmap_cacheattr_reset=0 \
	-Wl,--defsym,_memmap_cacheattr_reset=_memmap_cacheattr_wt_trapnull
endif

INCLUDE = -I$(ROOTDIR)/include 

ROOTDIR = ../..
OBJDIR = objs

ifeq "$(CPU)" "gcc"
OBJS_CSTUB = $(OBJDIR)/cstub-DC_330HiFi_syn.o
endif

OBJS = \
	xa_aac_dec_error_handler.o \
	xa_aac_dec_sample_testbench.o

OBJS_OBJS = $(addprefix $(OBJDIR)/,$(OBJS))

AACMCHPLUSV2LIB = $(ROOTDIR)/lib/xa_aacmchplus_v2_dec.a
AACMCHPLUSV2LIBL = $(ROOTDIR)/lib/xa_aacmchplus_v2_loas_dec.a
AACMCHPLUSLIB = $(ROOTDIR)/lib/xa_aacmchplus_dec.a
AACMCHLIB = $(ROOTDIR)/lib/xa_aacmch_dec.a
AACPLUSV2LIB = $(ROOTDIR)/lib/xa_aacplus_v2_dec.a
AACPLUSLIB = $(ROOTDIR)/lib/xa_aacplus_dec.a
AACLIB = $(ROOTDIR)/lib/xa_aac_dec.a
DABPLUSLIB = $(ROOTDIR)/lib/xa_dabplus_dec.a

.PHONY: install all aacmch aacmchplus aacmchplus_v2 aacmchplus_v2_loas aac aacplus aacplus_v2 dabplus clean

all:
	@echo "Please specify target:"
	@echo "    aacmchplus_v2_loas"
	@echo "    aacmchplus_v2"
	@echo "    aacmchplus"
	@echo "    aacmch"
	@echo "    aacplus_v2"
	@echo "    aacplus"
	@echo "    aac"
	@echo "    dabplus"

ifeq "$(CPU)" "gcc"
AACMCHPLUSV2LIB = $(ROOTDIR)/lib/xgcc_aacmchplus_v2_dec.a
aacmchplus_v2: xgcc_aacmchplus_v2_dec_test

AACMCHPLUSV2LIBL = $(ROOTDIR)/lib/xgcc_aacmchplus_v2_loas_dec.a
aacmchplus_v2_loas: xgcc_aacmchplus_v2_loas_dec_test


AACLIB = $(ROOTDIR)/lib/xgcc_aac_dec.a
aac: xgcc_aac_dec_test


DABPLUSLIB = $(ROOTDIR)/lib/xgcc_dabplus_dec.a
dabplus: xgcc_dabplus_dec_test

AACPLUSLIB = $(ROOTDIR)/lib/xgcc_aacplus_dec.a
aacplus: xgcc_aacplus_dec_test

AACPLUSV2LIB = $(ROOTDIR)/lib/xgcc_aacplus_v2_dec.a
aacplus_v2: xgcc_aacplus_v2_dec_test

AACMCHPLUSLIB = $(ROOTDIR)/lib/xgcc_aacmchplus_dec.a
aacmchplus: xgcc_aacmchplus_dec_test

AACMCHLIB = $(ROOTDIR)/lib/xgcc_aacmch_dec.a
aacmch: xgcc_aacmch_dec_test
else
aacmchplus_v2: xa_aacmchplus_v2_dec_test
aacmchplus_v2_loas: xa_aacmchplus_v2_loas_dec_test
aac: xa_aac_dec_test
aacplus: xa_aacplus_dec_test
dabplus: xa_dabplus_dec_test
aacplus_v2: xa_aacplus_v2_dec_test
aacmchplus: xa_aacmchplus_dec_test
aacmch: xa_aacmch_dec_test
endif

# For the following libraries C-stub is NOT supported.






ifeq "$(CPU)" "gcc"
$(OBJS_CSTUB) : $(ROOTDIR)/test/src/cstub-DC_330HiFi_syn.cpp
	$(CC) -c $(OPT) $(INCLUDE) -o $(OBJS_CSTUB) $(ROOTDIR)/test/src/cstub-DC_330HiFi_syn.cpp 

xgcc_aacmchplus_v2_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xgcc_aacmchplus_v2_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACMCHPLUSV2LIB) $(OBJS_CSTUB)
	$(CC) -o $@ $(OBJS_CSTUB) $(OBJS_OBJS) $(AACMCHPLUSV2LIB) $(LDFLAGS)

xgcc_aacmchplus_v2_loas_dec_test: CFLAGS += -DEXTERN_DWNMIX_DVBINFO -DAPPLY_ISO_DRC -DSMALL_INPUT_CHUNK_FEED
xgcc_aacmchplus_v2_loas_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACMCHPLUSV2LIBL) $(OBJS_CSTUB)
	$(CC) -o $@ $(OBJS_CSTUB) $(OBJS_OBJS) $(AACMCHPLUSV2LIBL) $(LDFLAGS)


xgcc_aac_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xgcc_aac_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACLIB) $(OBJS_CSTUB)
	$(CC) -o $@ $(OBJS_CSTUB) $(OBJS_OBJS) $(AACLIB) $(LDFLAGS)

xgcc_aacplus_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xgcc_aacplus_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACPLUSLIB) $(OBJS_CSTUB)
	$(CC) -o $@ $(OBJS_CSTUB) $(OBJS_OBJS) $(AACPLUSLIB) $(LDFLAGS)

xgcc_aacplus_v2_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xgcc_aacplus_v2_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACPLUSV2LIB) $(OBJS_CSTUB) 
	$(CC) -o $@ $(OBJS_CSTUB) $(OBJS_OBJS) $(AACPLUSV2LIB) $(LDFLAGS)

xgcc_dabplus_dec_test: CFLAGS += -DDAB_PLUS
xgcc_dabplus_dec_test: $(OBJDIR) $(OBJS_OBJS) $(DABPLUSLIB) $(OBJS_CSTUB)
	$(CC) -o $@ $(OBJS_CSTUB) $(OBJS_OBJS) $(DABPLUSLIB) $(LDFLAGS)

xgcc_aacmchplus_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xgcc_aacmchplus_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACMCHPLUSLIB) $(OBJS_CSTUB)
	$(CC) -o $@ $(OBJS_CSTUB) $(OBJS_OBJS) $(AACMCHPLUSLIB) $(LDFLAGS)

xgcc_aacmch_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xgcc_aacmch_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACMCHLIB) $(OBJS_CSTUB)
	$(CC) -o $@ $(OBJS_CSTUB) $(OBJS_OBJS) $(AACMCHLIB) $(LDFLAGS)

else
xa_aacmchplus_v2_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xa_aacmchplus_v2_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACMCHPLUSV2LIB)
	$(CC) -o $@ $(OBJS_OBJS) $(AACMCHPLUSV2LIB) $(LDFLAGS)

xa_aacmchplus_v2_loas_dec_test: CFLAGS += -DEXTERN_DWNMIX_DVBINFO -DAPPLY_ISO_DRC -DSMALL_INPUT_CHUNK_FEED
xa_aacmchplus_v2_loas_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACMCHPLUSV2LIBL)
	$(CC) -o $@ $(OBJS_OBJS) $(AACMCHPLUSV2LIBL) $(LDFLAGS)


xa_aac_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xa_aac_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACLIB)
	$(CC) -o $@ $(OBJS_OBJS) $(AACLIB) $(LDFLAGS)

xa_aacplus_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xa_aacplus_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACPLUSLIB)
	$(CC) -o $@ $(OBJS_OBJS) $(AACPLUSLIB) $(LDFLAGS)

xa_aacplus_v2_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xa_aacplus_v2_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACPLUSV2LIB)
	$(CC) -o $@ $(OBJS_OBJS) $(AACPLUSV2LIB) $(LDFLAGS)

xa_dabplus_dec_test: CFLAGS += -DDAB_PLUS
xa_dabplus_dec_test: $(OBJDIR) $(OBJS_OBJS) $(DABPLUSLIB)
	$(CC) -o $@ $(OBJS_OBJS) $(DABPLUSLIB) $(LDFLAGS)

xa_aacmchplus_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xa_aacmchplus_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACMCHPLUSLIB)
	$(CC) -o $@ $(OBJS_OBJS) $(AACMCHPLUSLIB) $(LDFLAGS)

xa_aacmch_dec_test: CFLAGS += -DSMALL_INPUT_CHUNK_FEED
xa_aacmch_dec_test: $(OBJDIR) $(OBJS_OBJS) $(AACMCHLIB)
	$(CC) -o $@ $(OBJS_OBJS) $(AACMCHLIB) $(LDFLAGS)
endif




clean:
	rm -f xa_aacmch_dec_test xgcc_aacmch_dec_test \
	      xa_aacmchplus_dec_test xgcc_aacmchplus_dec_test \
	      aacmchplus_xa_v2_dec_test xgcc_aacmchplus_v2_dec_test \
	      aacmchplus_v2_xa_loas_dec_test xgcc_aacmchplus_v2_loas_dec_test \
	      aac xa_aacplus_dec_test xgcc_aac aacplus_dec_test \
	      aacplus_xa_v2_dec_test xgcc_aacplus_v2_dec_test \
	      xa_dabplus_dec_test xgcc_dabpl_dec_test \
		  xa_aac_dec_test xa_aacmchplus_v2_dec_test xa_aacmchplus_v2_loas_dec_test  xa_aacplus_v2_dec_test
	-$(RM_R) $(OBJDIR)
	@echo "CPU=$(CPU)"

$(OBJDIR):
	-$(MKPATH) $(OBJDIR)

$(OBJS_OBJS): $(OBJDIR)/%.o: $(ROOTDIR)/test/src/%.c
	$(CC) -c $(CFLAGS) $(INCLUDE) -o $@ $<
