/*
 * Generated by erpcgen {$erpcgenVersion} on {$todaysDate}.
 *
 * AUTOGENERATED - DO NOT EDIT
 */

#if !defined({$commonGuardMacro})
#define {$commonGuardMacro}
{% if usedUnionType %}

#if defined(__CC_ARM)
#pragma anon_unions
#endif
{% endif -- usedUnionType %}

{% if not commonTypesFile == "" %}
// Common types header file
#include "{$commonTypesFile}"
{% else %}
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
{% for inc in includes %}
#include "{$inc}"
{% endfor -- includes %}
{% if not empty(enums) %}

// Enumerators data types declarations
{%  for enum in enums %}
{$> enum.mlComment}
{%   if enum.name %}typedef {% endif --enum.name  %}enum{$addIndent(" ", enum.name)}{$enum.ilComment}
{
{%   for enumMember in enum.members %}
{$> addIndent("    ", enumMember.mlComment)}
    {$enumMember.memberDeclaration}{$enumMember.ilComment}
{%   endfor -- enumsMembers %}
}{$addIndent(" ", enum.name)};{$loop.addNewLineIfNotLast}
{%  endfor -- enums %}
{% endif -- enums %}
{% if not empty(aliases) %}

// Aliases data types declarations
{%  for alias in aliases %}
{$> alias.mlComment}
{%   if alias.typenameName == "" %}
typedef {$alias.unnamedType}
{
{%    for mem in alias.unnamed.members %}
    {$mem.memberDeclaration}
{%    endfor -- alias.unnamed.members %}
} {$alias.unnamedName};
{%   else -- alias.typenameName %}
typedef {$alias.typenameName};{$alias.ilComment}
{%   endif -- alias.typenameName %}
{%  endfor -- aliases %}
{% endif -- aliases %}
{% if nonExternalStruct %}

// Structures data types declarations
{%  for st in structs %}
{%   if !st.isExternal %}
{$> st.mlComment}
struct {$st.name}{$st.ilComment}
{
{%    for mem in st.members %}
{$> addIndent("    ", mem.mlComment)}
    {$mem.memberDeclaration}{$mem.ilComment}
{$> addIndent("    ", mem.elementsCount)}
{%    endfor %}
};{$loop.addNewLineIfNotLast}
{%   endif -- st.isExternal %}
{%  endfor -- structs %}
{% endif -- empty(structs) %}
{% if not empty(consts) %}

// Constant variable declarations
{%  for c in consts %}
{$> c.mlComment}
extern const {$c.typeAndName};{$c.ilComment}{$loop.addNewLineIfNotLast}
{%  endfor -- consts %}
{% endif -- consts %}
{% endif -- commonTypesFile %}
{% if not genCommonTypesFile %}
{% for iface in interfaces %}

/*! @brief {$iface.name} identifiers */
enum _{$iface.name}_ids
{
    k{$iface.name}_service_id = {$iface.id},
{%  for fn in iface.functions %}
    k{$iface.name}_{$fn.name}_id = {$fn.id},
{%  endfor %}
};
{% endfor %}

#if defined(__cplusplus)
extern "C" {
#endif
{% for iface in interfaces %}

{$> iface.mlComment}
//! @name {$iface.name}{$iface.ilComment}
//@{
{%  for fn in iface.functions %}
{$> fn.mlComment}
{$fn.prototype};{$fn.ilComment}{$loop.addNewLineIfNotLast}
{%  endfor -- functions %}
//@}
{% endfor -- iface %}

#if defined(__cplusplus)
}
#endif
{% endif -- genCommonTypesFile %}

#endif // {$commonGuardMacro}
