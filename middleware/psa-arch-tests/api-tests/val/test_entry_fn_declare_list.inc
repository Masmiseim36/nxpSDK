#ifdef CRYPTO
void test_entry_c001(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c002(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c003(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c004(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c005(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c006(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c007(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c008(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c009(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c010(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c011(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c012(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c013(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c014(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c015(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c016(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c017(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c018(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c019(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c020(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c021(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c022(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c023(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c024(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c025(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c026(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c027(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c028(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c029(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c030(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c031(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c032(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c033(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c034(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c035(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c036(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c037(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c038(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c039(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c040(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c041(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c042(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c043(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c044(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c045(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c046(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c047(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c048(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c049(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c050(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c051(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c052(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c053(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c054(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c055(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c056(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c057(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c058(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c059(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c060(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_c061(val_api_t *val_api, psa_api_t *psa_api);
#endif
#ifdef INITIAL_ATTESTATION
void test_entry_a001(val_api_t *val_api, psa_api_t *psa_api);
#endif
#if defined(INTERNAL_TRUSTED_STORAGE) || defined(PROTECTED_STORAGE)
void test_entry_s001(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s002(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s003(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s004(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s005(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s006(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s007(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s008(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s009(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s010(val_api_t *val_api, psa_api_t *psa_api);
#endif
#ifdef PROTECTED_STORAGE
void test_entry_s011(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s012(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s013(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s014(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s015(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s016(val_api_t *val_api, psa_api_t *psa_api);
void test_entry_s017(val_api_t *val_api, psa_api_t *psa_api);
#endif
