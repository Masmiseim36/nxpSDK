/* Copyright 2022 NXP
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.4 at Wed Nov 09 16:47:17 2022. */

#ifndef PB_NXP_IOT_PSA_PB_H_INCLUDED
#define PB_NXP_IOT_PSA_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _nxp_iot_KeyDataFormat {
    nxp_iot_KeyDataFormat_UNKNOWN = 0,
    nxp_iot_KeyDataFormat_S50 = 1
} nxp_iot_KeyDataFormat;
#define _nxp_iot_KeyDataFormat_MIN nxp_iot_KeyDataFormat_UNKNOWN
#define _nxp_iot_KeyDataFormat_MAX nxp_iot_KeyDataFormat_S50
#define _nxp_iot_KeyDataFormat_ARRAYSIZE ((nxp_iot_KeyDataFormat)(nxp_iot_KeyDataFormat_S50+1))

typedef enum _nxp_iot_StatusCode {
    nxp_iot_StatusCode_PSA_SUCCESS = 0,
    nxp_iot_StatusCode_PSA_ERROR_GENERIC_ERROR = -132,
    nxp_iot_StatusCode_PSA_ERROR_NOT_SUPPORTED = -134,
    nxp_iot_StatusCode_PSA_ERROR_NOT_PERMITTED = -133,
    nxp_iot_StatusCode_PSA_ERROR_BUFFER_TOO_SMALL = -138,
    nxp_iot_StatusCode_PSA_ERROR_ALREADY_EXISTS = -139,
    nxp_iot_StatusCode_PSA_ERROR_DOES_NOT_EXIST = -140,
    nxp_iot_StatusCode_PSA_ERROR_BAD_STATE = -137,
    nxp_iot_StatusCode_PSA_ERROR_INVALID_ARGUMENT = -135,
    nxp_iot_StatusCode_PSA_ERROR_INSUFFICIENT_MEMORY = -141,
    nxp_iot_StatusCode_PSA_ERROR_INSUFFICIENT_STORAGE = -142,
    nxp_iot_StatusCode_PSA_ERROR_COMMUNICATION_FAILURE = -145,
    nxp_iot_StatusCode_PSA_ERROR_STORAGE_FAILURE = -146,
    nxp_iot_StatusCode_PSA_ERROR_DATA_CORRUPT = -152,
    nxp_iot_StatusCode_PSA_ERROR_DATA_INVALID = -153,
    nxp_iot_StatusCode_PSA_ERROR_HARDWARE_FAILURE = -147,
    nxp_iot_StatusCode_PSA_ERROR_CORRUPTION_DETECTED = -151,
    nxp_iot_StatusCode_PSA_ERROR_INSUFFICIENT_ENTROPY = -148,
    nxp_iot_StatusCode_PSA_ERROR_INVALID_SIGNATURE = -149,
    nxp_iot_StatusCode_PSA_ERROR_INVALID_PADDING = -150,
    nxp_iot_StatusCode_PSA_ERROR_INSUFFICIENT_DATA = -143,
    nxp_iot_StatusCode_PSA_ERROR_INVALID_HANDLE = -136
} nxp_iot_StatusCode;
#define _nxp_iot_StatusCode_MIN nxp_iot_StatusCode_PSA_ERROR_DATA_INVALID
#define _nxp_iot_StatusCode_MAX nxp_iot_StatusCode_PSA_SUCCESS
#define _nxp_iot_StatusCode_ARRAYSIZE ((nxp_iot_StatusCode)(nxp_iot_StatusCode_PSA_SUCCESS+1))

/* Struct definitions */
typedef struct _nxp_iot_GetVersionRequest {
    char dummy_field;
/* @@protoc_insertion_point(struct:nxp_iot_GetVersionRequest) */
} nxp_iot_GetVersionRequest;

typedef struct _nxp_iot_PsaAdditionalData {
    char dummy_field;
/* @@protoc_insertion_point(struct:nxp_iot_PsaAdditionalData) */
} nxp_iot_PsaAdditionalData;

typedef struct _nxp_iot_CreateObjectRequest {
    bool has_identifier;
    uint32_t identifier;
    bool has_create_flags;
    uint32_t create_flags;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:nxp_iot_CreateObjectRequest) */
} nxp_iot_CreateObjectRequest;

typedef struct _nxp_iot_CreateObjectResponse {
    bool has_status;
    nxp_iot_StatusCode status;
/* @@protoc_insertion_point(struct:nxp_iot_CreateObjectResponse) */
} nxp_iot_CreateObjectResponse;

typedef struct _nxp_iot_DestroyKeyRequest {
    bool has_identifier;
    uint32_t identifier;
/* @@protoc_insertion_point(struct:nxp_iot_DestroyKeyRequest) */
} nxp_iot_DestroyKeyRequest;

typedef struct _nxp_iot_DestroyKeyResponse {
    bool has_status;
    nxp_iot_StatusCode status;
/* @@protoc_insertion_point(struct:nxp_iot_DestroyKeyResponse) */
} nxp_iot_DestroyKeyResponse;

typedef struct _nxp_iot_GetVersionResponse {
    bool has_crypto_api_version;
    uint32_t crypto_api_version;
    bool has_storage_api_version;
    uint32_t storage_api_version;
    pb_size_t supported_key_data_formats_count;
    nxp_iot_KeyDataFormat supported_key_data_formats[1];
    bool has_max_raw_key_size;
    uint32_t max_raw_key_size;
/* @@protoc_insertion_point(struct:nxp_iot_GetVersionResponse) */
} nxp_iot_GetVersionResponse;

typedef struct _nxp_iot_ImportKeyRequest {
    bool has_identifier;
    uint32_t identifier;
    bool has_type;
    uint32_t type;
    bool has_usage;
    uint32_t usage;
    bool has_algorithm;
    uint32_t algorithm;
    bool has_lifetime;
    uint32_t lifetime;
    bool has_key_bits;
    uint32_t key_bits;
    pb_bytes_array_t *data;
    bool has_key_data_format;
    nxp_iot_KeyDataFormat key_data_format;
/* @@protoc_insertion_point(struct:nxp_iot_ImportKeyRequest) */
} nxp_iot_ImportKeyRequest;

typedef struct _nxp_iot_ImportKeyResponse {
    bool has_status;
    nxp_iot_StatusCode status;
/* @@protoc_insertion_point(struct:nxp_iot_ImportKeyResponse) */
} nxp_iot_ImportKeyResponse;

typedef struct _nxp_iot_ReadObjectRequest {
    bool has_identifier;
    uint32_t identifier;
    bool has_offset;
    uint32_t offset;
    bool has_length;
    uint32_t length;
/* @@protoc_insertion_point(struct:nxp_iot_ReadObjectRequest) */
} nxp_iot_ReadObjectRequest;

typedef struct _nxp_iot_ReadObjectResponse {
    bool has_status;
    nxp_iot_StatusCode status;
    pb_bytes_array_t *data;
/* @@protoc_insertion_point(struct:nxp_iot_ReadObjectResponse) */
} nxp_iot_ReadObjectResponse;

typedef struct _nxp_iot_RemoveObjectRequest {
    bool has_identifier;
    uint32_t identifier;
/* @@protoc_insertion_point(struct:nxp_iot_RemoveObjectRequest) */
} nxp_iot_RemoveObjectRequest;

typedef struct _nxp_iot_RemoveObjectResponse {
    bool has_status;
    nxp_iot_StatusCode status;
/* @@protoc_insertion_point(struct:nxp_iot_RemoveObjectResponse) */
} nxp_iot_RemoveObjectResponse;

typedef struct _nxp_iot_WriteObjectRequest {
    bool has_identifier;
    uint32_t identifier;
    bool has_offset;
    uint32_t offset;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:nxp_iot_WriteObjectRequest) */
} nxp_iot_WriteObjectRequest;

typedef struct _nxp_iot_WriteObjectResponse {
    bool has_status;
    nxp_iot_StatusCode status;
/* @@protoc_insertion_point(struct:nxp_iot_WriteObjectResponse) */
} nxp_iot_WriteObjectResponse;

typedef struct _nxp_iot_PsaRequest {
    pb_size_t which_command;
    union {
        nxp_iot_GetVersionRequest get_version;
        nxp_iot_DestroyKeyRequest destroy_key;
        nxp_iot_ImportKeyRequest import_key;
        nxp_iot_CreateObjectRequest create_object;
        nxp_iot_WriteObjectRequest write_object;
        nxp_iot_ReadObjectRequest read_object;
        nxp_iot_RemoveObjectRequest remove_object;
    } command;
/* @@protoc_insertion_point(struct:nxp_iot_PsaRequest) */
} nxp_iot_PsaRequest;

typedef struct _nxp_iot_PsaResponse {
    pb_size_t which_response;
    union {
        nxp_iot_GetVersionResponse get_version;
        nxp_iot_DestroyKeyResponse destroy_key;
        nxp_iot_ImportKeyResponse import_key;
        nxp_iot_CreateObjectResponse create_object;
        nxp_iot_WriteObjectResponse write_object;
        nxp_iot_ReadObjectResponse read_object;
        nxp_iot_RemoveObjectResponse remove_object;
    } response;
/* @@protoc_insertion_point(struct:nxp_iot_PsaResponse) */
} nxp_iot_PsaResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define nxp_iot_GetVersionRequest_init_default   {0}
#define nxp_iot_GetVersionResponse_init_default  {false, 0, false, 0, 0, {_nxp_iot_KeyDataFormat_MIN}, false, 0}
#define nxp_iot_DestroyKeyRequest_init_default   {false, 0}
#define nxp_iot_DestroyKeyResponse_init_default  {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_ImportKeyRequest_init_default    {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, NULL, false, _nxp_iot_KeyDataFormat_MIN}
#define nxp_iot_ImportKeyResponse_init_default   {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_CreateObjectRequest_init_default {false, 0, false, 0, {{NULL}, NULL}}
#define nxp_iot_CreateObjectResponse_init_default {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_WriteObjectRequest_init_default  {false, 0, false, 0, {{NULL}, NULL}}
#define nxp_iot_WriteObjectResponse_init_default {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_ReadObjectRequest_init_default   {false, 0, false, 0, false, 0}
#define nxp_iot_ReadObjectResponse_init_default  {false, _nxp_iot_StatusCode_MIN, NULL}
#define nxp_iot_RemoveObjectRequest_init_default {false, 0}
#define nxp_iot_RemoveObjectResponse_init_default {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_PsaAdditionalData_init_default   {0}
#define nxp_iot_PsaRequest_init_default          {0, {nxp_iot_GetVersionRequest_init_default}}
#define nxp_iot_PsaResponse_init_default         {0, {nxp_iot_GetVersionResponse_init_default}}
#define nxp_iot_GetVersionRequest_init_zero      {0}
#define nxp_iot_GetVersionResponse_init_zero     {false, 0, false, 0, 0, {_nxp_iot_KeyDataFormat_MIN}, false, 0}
#define nxp_iot_DestroyKeyRequest_init_zero      {false, 0}
#define nxp_iot_DestroyKeyResponse_init_zero     {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_ImportKeyRequest_init_zero       {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, NULL, false, _nxp_iot_KeyDataFormat_MIN}
#define nxp_iot_ImportKeyResponse_init_zero      {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_CreateObjectRequest_init_zero    {false, 0, false, 0, {{NULL}, NULL}}
#define nxp_iot_CreateObjectResponse_init_zero   {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_WriteObjectRequest_init_zero     {false, 0, false, 0, {{NULL}, NULL}}
#define nxp_iot_WriteObjectResponse_init_zero    {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_ReadObjectRequest_init_zero      {false, 0, false, 0, false, 0}
#define nxp_iot_ReadObjectResponse_init_zero     {false, _nxp_iot_StatusCode_MIN, NULL}
#define nxp_iot_RemoveObjectRequest_init_zero    {false, 0}
#define nxp_iot_RemoveObjectResponse_init_zero   {false, _nxp_iot_StatusCode_MIN}
#define nxp_iot_PsaAdditionalData_init_zero      {0}
#define nxp_iot_PsaRequest_init_zero             {0, {nxp_iot_GetVersionRequest_init_zero}}
#define nxp_iot_PsaResponse_init_zero            {0, {nxp_iot_GetVersionResponse_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define nxp_iot_CreateObjectRequest_identifier_tag 1
#define nxp_iot_CreateObjectRequest_create_flags_tag 2
#define nxp_iot_CreateObjectRequest_data_tag     10
#define nxp_iot_CreateObjectResponse_status_tag  1
#define nxp_iot_DestroyKeyRequest_identifier_tag 1
#define nxp_iot_DestroyKeyResponse_status_tag    1
#define nxp_iot_GetVersionResponse_crypto_api_version_tag 1
#define nxp_iot_GetVersionResponse_storage_api_version_tag 2
#define nxp_iot_GetVersionResponse_supported_key_data_formats_tag 4
#define nxp_iot_GetVersionResponse_max_raw_key_size_tag 5
#define nxp_iot_ImportKeyRequest_identifier_tag  1
#define nxp_iot_ImportKeyRequest_type_tag        2
#define nxp_iot_ImportKeyRequest_usage_tag       3
#define nxp_iot_ImportKeyRequest_algorithm_tag   4
#define nxp_iot_ImportKeyRequest_lifetime_tag    5
#define nxp_iot_ImportKeyRequest_key_bits_tag    6
#define nxp_iot_ImportKeyRequest_data_tag        10
#define nxp_iot_ImportKeyRequest_key_data_format_tag 11
#define nxp_iot_ImportKeyResponse_status_tag     1
#define nxp_iot_ReadObjectRequest_identifier_tag 1
#define nxp_iot_ReadObjectRequest_offset_tag     2
#define nxp_iot_ReadObjectRequest_length_tag     3
#define nxp_iot_ReadObjectResponse_status_tag    1
#define nxp_iot_ReadObjectResponse_data_tag      10
#define nxp_iot_RemoveObjectRequest_identifier_tag 1
#define nxp_iot_RemoveObjectResponse_status_tag  1
#define nxp_iot_WriteObjectRequest_identifier_tag 1
#define nxp_iot_WriteObjectRequest_offset_tag    2
#define nxp_iot_WriteObjectRequest_data_tag      10
#define nxp_iot_WriteObjectResponse_status_tag   1
#define nxp_iot_PsaRequest_get_version_tag       1
#define nxp_iot_PsaRequest_destroy_key_tag       2
#define nxp_iot_PsaRequest_import_key_tag        3
#define nxp_iot_PsaRequest_create_object_tag     4
#define nxp_iot_PsaRequest_write_object_tag      5
#define nxp_iot_PsaRequest_read_object_tag       6
#define nxp_iot_PsaRequest_remove_object_tag     7
#define nxp_iot_PsaResponse_get_version_tag      1
#define nxp_iot_PsaResponse_destroy_key_tag      2
#define nxp_iot_PsaResponse_import_key_tag       3
#define nxp_iot_PsaResponse_create_object_tag    4
#define nxp_iot_PsaResponse_write_object_tag     5
#define nxp_iot_PsaResponse_read_object_tag      6
#define nxp_iot_PsaResponse_remove_object_tag    7

/* Struct field encoding specification for nanopb */
extern const pb_field_t nxp_iot_GetVersionRequest_fields[1];
extern const pb_field_t nxp_iot_GetVersionResponse_fields[5];
extern const pb_field_t nxp_iot_DestroyKeyRequest_fields[2];
extern const pb_field_t nxp_iot_DestroyKeyResponse_fields[2];
extern const pb_field_t nxp_iot_ImportKeyRequest_fields[9];
extern const pb_field_t nxp_iot_ImportKeyResponse_fields[2];
extern const pb_field_t nxp_iot_CreateObjectRequest_fields[4];
extern const pb_field_t nxp_iot_CreateObjectResponse_fields[2];
extern const pb_field_t nxp_iot_WriteObjectRequest_fields[4];
extern const pb_field_t nxp_iot_WriteObjectResponse_fields[2];
extern const pb_field_t nxp_iot_ReadObjectRequest_fields[4];
extern const pb_field_t nxp_iot_ReadObjectResponse_fields[3];
extern const pb_field_t nxp_iot_RemoveObjectRequest_fields[2];
extern const pb_field_t nxp_iot_RemoveObjectResponse_fields[2];
extern const pb_field_t nxp_iot_PsaAdditionalData_fields[1];
extern const pb_field_t nxp_iot_PsaRequest_fields[8];
extern const pb_field_t nxp_iot_PsaResponse_fields[8];

/* Maximum encoded size of messages (where known) */
#define nxp_iot_GetVersionRequest_size           0
#define nxp_iot_GetVersionResponse_size          19
#define nxp_iot_DestroyKeyRequest_size           6
#define nxp_iot_DestroyKeyResponse_size          11
/* nxp_iot_ImportKeyRequest_size depends on runtime parameters */
#define nxp_iot_ImportKeyResponse_size           11
/* nxp_iot_CreateObjectRequest_size depends on runtime parameters */
#define nxp_iot_CreateObjectResponse_size        11
/* nxp_iot_WriteObjectRequest_size depends on runtime parameters */
#define nxp_iot_WriteObjectResponse_size         11
#define nxp_iot_ReadObjectRequest_size           18
/* nxp_iot_ReadObjectResponse_size depends on runtime parameters */
#define nxp_iot_RemoveObjectRequest_size         6
#define nxp_iot_RemoveObjectResponse_size        11
#define nxp_iot_PsaAdditionalData_size           0
/* nxp_iot_PsaRequest_size depends on runtime parameters */
/* nxp_iot_PsaResponse_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define PSA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
